.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_plot_convert_model.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_convert_model.py:


.. _l-rf-iris-example:

Train, convert and predict a model
==================================

Train and deploy a model usually involves the
three following steps:

* train a pipeline with *scikit-learn*,
* convert it into *ONNX* with *sklearn-onnx*,
* predict with *onnxruntime*.

.. contents::
    :local:

Train a model
+++++++++++++

A very basic example using random forest and
the iris dataset.



.. code-block:: python


    from sklearn.datasets import load_iris
    from sklearn.model_selection import train_test_split
    from sklearn.ensemble import RandomForestClassifier
    iris = load_iris()
    X, y = iris.data, iris.target
    X_train, X_test, y_train, y_test = train_test_split(X, y)
    clr = RandomForestClassifier()
    clr.fit(X_train, y_train)
    print(clr)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                max_depth=None, max_features='auto', max_leaf_nodes=None,
                min_impurity_decrease=0.0, min_impurity_split=None,
                min_samples_leaf=1, min_samples_split=2,
                min_weight_fraction_leaf=0.0, n_estimators=10, n_jobs=None,
                oob_score=False, random_state=None, verbose=0,
                warm_start=False)


Convert a model into ONNX
+++++++++++++++++++++++++



.. code-block:: python


    from skl2onnx import convert_sklearn
    from skl2onnx.common.data_types import FloatTensorType
    initial_type = [('float_input', FloatTensorType([1, 4]))]
    onx = convert_sklearn(clr, initial_types=initial_type)

    with open("rf_iris.onnx", "wb") as f:
        f.write(onx.SerializeToString())







Compute the prediction with ONNX Runtime
++++++++++++++++++++++++++++++++++++++++



.. code-block:: python

    import onnxruntime as rt
    import numpy
    sess = rt.InferenceSession("rf_iris.onnx")
    input_name = sess.get_inputs()[0].name
    label_name = sess.get_outputs()[0].name
    pred_onx = sess.run([label_name], {input_name: X_test.astype(numpy.float32)})[0]
    print(pred_onx)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [1 0 1 1 2 1 1 0 1 2 0 2 0 0 1 0 2 2 0 1 2 0 2 0 2 1 0 0 1 2 2 0 1 1 1 1 2
     1]


Full example with a logistic regression



.. code-block:: python


    from sklearn.linear_model import LogisticRegression
    clr = LogisticRegression()
    clr.fit(X_train, y_train)
    initial_type = [('float_input', FloatTensorType([1, X_train.shape[1]]))]
    onx = convert_sklearn(clr, initial_types=initial_type)
    with open("logreg_iris.onnx", "wb") as f:
        f.write(onx.SerializeToString())

    sess = rt.InferenceSession("logreg_iris.onnx")
    input_name = sess.get_inputs()[0].name
    label_name = sess.get_outputs()[0].name
    pred_onx = sess.run([label_name], {input_name: X_test.astype(numpy.float32)})[0]
    print(pred_onx)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [2 0 2 1 2 1 1 0 1 2 0 2 0 0 1 0 2 2 0 1 2 0 2 0 2 1 0 0 1 2 2 0 1 1 1 1 2
     1]


**Versions used for this example**



.. code-block:: python


    import numpy, sklearn
    print("numpy:", numpy.__version__)
    print("scikit-learn:", sklearn.__version__)
    import onnx, onnxruntime, skl2onnx
    print("onnx: ", onnx.__version__)
    print("onnxruntime: ", onnxruntime.__version__)
    print("skl2onnx: ", skl2onnx.__version__)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    numpy: 1.16.1
    scikit-learn: 0.20.2
    onnx:  1.4.1
    onnxruntime:  0.2.1
    skl2onnx:  1.4.2


**Total running time of the script:** ( 0 minutes  0.258 seconds)


.. _sphx_glr_download_auto_examples_plot_convert_model.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_convert_model.py <plot_convert_model.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_convert_model.ipynb <plot_convert_model.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
