
:orphan:

|rss_image|  **2019-06 - 1/1** :ref:`Blog <ap-main-0>` :ref:`onnx (8) <ap-cat-onnx-0>` :ref:`runtime (3) <ap-cat-runtime-0>`

.. |rss_image| image:: feed-icon-16x16.png
    :target: ../_downloads/rss.xml
    :alt: RSS

----


.. index:: 2019-06


.. _ap-month-2019-06-0:

2019-06 - 1/1
+++++++++++++

.. blogpostagg::
    :title: ONNX, runtime
    :date: 2019-06-25
    :keywords: onnx,onnxrt
    :categories: onnx
    :rawfile: 2019/2019-06-25_runtime.rst

    Somebody asked me one day if it would be difficult to
    write a runtime for :epkg:`ONNX` in :epkg:`Rust`.
    I just replied that it should not take that long
    but it would require to implement a way to goes
    through the nodes of the :epkg:`ONNX` graph
    and to have an implementation for every
    :epkg:`ONNX Operators`...
    

    ...




.. blogpostagg::
    :title: ONNX, runtime, converters
    :date: 2019-06-15
    :keywords: onnx,onnxrt
    :categories: onnx
    :rawfile: 2019/2019-06-15_onnxrt.rst

    I have been recently working on :epkg:`sklearn-onnx`
    to write converter from :epkg:`scikit-learn` operators
    to :epkg:`ONNX` serialization format. I was talking
    about that a month ago and somebody asked me if there
    was a runtime implemented in `RUST <https://www.rust-lang.org/>`_.
    Not that I know of but I said it would not be too complex
    to implement one.
    

    ...





----

|rss_image|  **2019-06 - 1/1** :ref:`2020-11 (1) <ap-month-2020-11-0>` :ref:`2021-05 (2) <ap-month-2021-05-0>` :ref:`2021-07 (2) <ap-month-2021-07-0>` :ref:`2021-08 (3) <ap-month-2021-08-0>` :ref:`2022-02 (1) <ap-month-2022-02-0>`