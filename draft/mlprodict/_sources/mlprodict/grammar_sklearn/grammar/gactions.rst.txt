
.. _f-gactions:

module ``grammar_sklearn.grammar.gactions``
===========================================





.. inheritance-diagram:: mlprodict.grammar_sklearn.grammar.gactions


Short summary
+++++++++++++

module ``mlprodict.grammar_sklearn.grammar.gactions``

Action definition.


:githublink:`%|py|0`




Classes
+++++++

+-------------------------------------------------------------------------------------------------+-------------------------------------------------------------------+
| class                                                                                           | truncated documentation                                           |
+=================================================================================================+===================================================================+
| :class:`MLAction <mlprodict.grammar_sklearn.grammar.gactions.MLAction>`                         | Base class for every action.                                      |
+-------------------------------------------------------------------------------------------------+-------------------------------------------------------------------+
| :class:`MLActionBinary <mlprodict.grammar_sklearn.grammar.gactions.MLActionBinary>`             | Any binary operation.                                             |
+-------------------------------------------------------------------------------------------------+-------------------------------------------------------------------+
| :class:`MLActionCast <mlprodict.grammar_sklearn.grammar.gactions.MLActionCast>`                 | Cast into another type.                                           |
+-------------------------------------------------------------------------------------------------+-------------------------------------------------------------------+
| :class:`MLActionConcat <mlprodict.grammar_sklearn.grammar.gactions.MLActionConcat>`             | Concatenate number of arrays into an array.                       |
+-------------------------------------------------------------------------------------------------+-------------------------------------------------------------------+
| :class:`MLActionCst <mlprodict.grammar_sklearn.grammar.gactions.MLActionCst>`                   | Constant                                                          |
+-------------------------------------------------------------------------------------------------+-------------------------------------------------------------------+
| :class:`MLActionFunction <mlprodict.grammar_sklearn.grammar.gactions.MLActionFunction>`         | A function.                                                       |
+-------------------------------------------------------------------------------------------------+-------------------------------------------------------------------+
| :class:`MLActionFunctionCall <mlprodict.grammar_sklearn.grammar.gactions.MLActionFunctionCall>` | Any function call.                                                |
+-------------------------------------------------------------------------------------------------+-------------------------------------------------------------------+
| :class:`MLActionIfElse <mlprodict.grammar_sklearn.grammar.gactions.MLActionIfElse>`             | Addition                                                          |
+-------------------------------------------------------------------------------------------------+-------------------------------------------------------------------+
| :class:`MLActionReturn <mlprodict.grammar_sklearn.grammar.gactions.MLActionReturn>`             | Returns a results.                                                |
+-------------------------------------------------------------------------------------------------+-------------------------------------------------------------------+
| :class:`MLActionUnary <mlprodict.grammar_sklearn.grammar.gactions.MLActionUnary>`               | Any binary operation.                                             |
+-------------------------------------------------------------------------------------------------+-------------------------------------------------------------------+
| :class:`MLActionVar <mlprodict.grammar_sklearn.grammar.gactions.MLActionVar>`                   | Variable. The constant is only needed to guess the variable type. |
+-------------------------------------------------------------------------------------------------+-------------------------------------------------------------------+






Properties
++++++++++

+-----------------------------------------------------------------------------------------------------------+------------------------------------+
| property                                                                                                  | truncated documentation            |
+===========================================================================================================+====================================+
| :meth:`ChildrenResults <mlprodict.grammar_sklearn.grammar.gactions.MLAction.ChildrenResults>`             | Return the last execution results. |
+-----------------------------------------------------------------------------------------------------------+------------------------------------+
| :meth:`ChildrenResults <mlprodict.grammar_sklearn.grammar.gactions.MLActionBinary.ChildrenResults>`       | Return the last execution results. |
+-----------------------------------------------------------------------------------------------------------+------------------------------------+
| :meth:`ChildrenResults <mlprodict.grammar_sklearn.grammar.gactions.MLActionCast.ChildrenResults>`         | Return the last execution results. |
+-----------------------------------------------------------------------------------------------------------+------------------------------------+
| :meth:`ChildrenResults <mlprodict.grammar_sklearn.grammar.gactions.MLActionConcat.ChildrenResults>`       | Return the last execution results. |
+-----------------------------------------------------------------------------------------------------------+------------------------------------+
| :meth:`ChildrenResults <mlprodict.grammar_sklearn.grammar.gactions.MLActionCst.ChildrenResults>`          | Return the last execution results. |
+-----------------------------------------------------------------------------------------------------------+------------------------------------+
| :meth:`ChildrenResults <mlprodict.grammar_sklearn.grammar.gactions.MLActionFunction.ChildrenResults>`     | Return the last execution results. |
+-----------------------------------------------------------------------------------------------------------+------------------------------------+
| :meth:`ChildrenResults <mlprodict.grammar_sklearn.grammar.gactions.MLActionFunctionCall.ChildrenResults>` | Return the last execution results. |
+-----------------------------------------------------------------------------------------------------------+------------------------------------+
| :meth:`ChildrenResults <mlprodict.grammar_sklearn.grammar.gactions.MLActionIfElse.ChildrenResults>`       | Return the last execution results. |
+-----------------------------------------------------------------------------------------------------------+------------------------------------+
| :meth:`ChildrenResults <mlprodict.grammar_sklearn.grammar.gactions.MLActionReturn.ChildrenResults>`       | Return the last execution results. |
+-----------------------------------------------------------------------------------------------------------+------------------------------------+
| :meth:`ChildrenResults <mlprodict.grammar_sklearn.grammar.gactions.MLActionUnary.ChildrenResults>`        | Return the last execution results. |
+-----------------------------------------------------------------------------------------------------------+------------------------------------+
| :meth:`ChildrenResults <mlprodict.grammar_sklearn.grammar.gactions.MLActionVar.ChildrenResults>`          | Return the last execution results. |
+-----------------------------------------------------------------------------------------------------------+------------------------------------+




Static Methods
++++++++++++++

+----------------------------------------------------------------------------------------+-------------------------------+
| staticmethod                                                                           | truncated documentation       |
+========================================================================================+===============================+
| :meth:`guess_type <mlprodict.grammar_sklearn.grammar.gactions.MLActionCst.guess_type>` | Guesses a type given a value. |
+----------------------------------------------------------------------------------------+-------------------------------+
| :meth:`guess_type <mlprodict.grammar_sklearn.grammar.gactions.MLActionVar.guess_type>` | Guesses a type given a value. |
+----------------------------------------------------------------------------------------+-------------------------------+




Methods
+++++++

+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| method                                                                                                                 | truncated documentation                                 |
+========================================================================================================================+=========================================================+
| :py:meth:`__init__ <mlprodict.grammar_sklearn.grammar.gactions.MLAction.__init__>`                                     |                                                         |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :py:meth:`__init__ <mlprodict.grammar_sklearn.grammar.gactions.MLActionBinary.__init__>`                               |                                                         |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :py:meth:`__init__ <mlprodict.grammar_sklearn.grammar.gactions.MLActionCast.__init__>`                                 |                                                         |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :py:meth:`__init__ <mlprodict.grammar_sklearn.grammar.gactions.MLActionConcat.__init__>`                               |                                                         |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :py:meth:`__init__ <mlprodict.grammar_sklearn.grammar.gactions.MLActionCst.__init__>`                                  |                                                         |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :py:meth:`__init__ <mlprodict.grammar_sklearn.grammar.gactions.MLActionFunction.__init__>`                             |                                                         |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :py:meth:`__init__ <mlprodict.grammar_sklearn.grammar.gactions.MLActionFunctionCall.__init__>`                         |                                                         |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :py:meth:`__init__ <mlprodict.grammar_sklearn.grammar.gactions.MLActionIfElse.__init__>`                               |                                                         |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :py:meth:`__init__ <mlprodict.grammar_sklearn.grammar.gactions.MLActionReturn.__init__>`                               |                                                         |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :py:meth:`__init__ <mlprodict.grammar_sklearn.grammar.gactions.MLActionUnary.__init__>`                                |                                                         |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :py:meth:`__init__ <mlprodict.grammar_sklearn.grammar.gactions.MLActionVar.__init__>`                                  |                                                         |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :py:meth:`_optional_parameters <mlprodict.grammar_sklearn.grammar.gactions.MLActionConcat._optional_parameters>`       | Returns additional parameters to add the function call. |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :py:meth:`_optional_parameters <mlprodict.grammar_sklearn.grammar.gactions.MLActionFunctionCall._optional_parameters>` | Returns additional parameters to add the function call. |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`enumerate_variables <mlprodict.grammar_sklearn.grammar.gactions.MLAction.enumerate_variables>`                  | Enumerates all variables.                               |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`enumerate_variables <mlprodict.grammar_sklearn.grammar.gactions.MLActionBinary.enumerate_variables>`            | Enumerates all variables.                               |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`enumerate_variables <mlprodict.grammar_sklearn.grammar.gactions.MLActionCast.enumerate_variables>`              | Enumerates all variables.                               |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`enumerate_variables <mlprodict.grammar_sklearn.grammar.gactions.MLActionConcat.enumerate_variables>`            | Enumerates all variables.                               |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`enumerate_variables <mlprodict.grammar_sklearn.grammar.gactions.MLActionCst.enumerate_variables>`               | Enumerates all variables.                               |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`enumerate_variables <mlprodict.grammar_sklearn.grammar.gactions.MLActionFunction.enumerate_variables>`          | Enumerates all variables.                               |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`enumerate_variables <mlprodict.grammar_sklearn.grammar.gactions.MLActionFunctionCall.enumerate_variables>`      | Enumerates all variables.                               |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`enumerate_variables <mlprodict.grammar_sklearn.grammar.gactions.MLActionIfElse.enumerate_variables>`            | Enumerates all variables.                               |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`enumerate_variables <mlprodict.grammar_sklearn.grammar.gactions.MLActionReturn.enumerate_variables>`            | Enumerates all variables.                               |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`enumerate_variables <mlprodict.grammar_sklearn.grammar.gactions.MLActionUnary.enumerate_variables>`             | Enumerates all variables.                               |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`enumerate_variables <mlprodict.grammar_sklearn.grammar.gactions.MLActionVar.enumerate_variables>`               | Enumerates itself.                                      |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`execute <mlprodict.grammar_sklearn.grammar.gactions.MLAction.execute>`                                          | Computes the action. Returns the output.                |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`execute <mlprodict.grammar_sklearn.grammar.gactions.MLActionBinary.execute>`                                    | Computes the action. Returns the output.                |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`execute <mlprodict.grammar_sklearn.grammar.gactions.MLActionCast.execute>`                                      |                                                         |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`execute <mlprodict.grammar_sklearn.grammar.gactions.MLActionConcat.execute>`                                    | Concatenation                                           |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`execute <mlprodict.grammar_sklearn.grammar.gactions.MLActionCst.execute>`                                       |                                                         |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`execute <mlprodict.grammar_sklearn.grammar.gactions.MLActionFunction.execute>`                                  |                                                         |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`execute <mlprodict.grammar_sklearn.grammar.gactions.MLActionFunctionCall.execute>`                              | Computes the action. Returns the output.                |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`execute <mlprodict.grammar_sklearn.grammar.gactions.MLActionIfElse.execute>`                                    |                                                         |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`execute <mlprodict.grammar_sklearn.grammar.gactions.MLActionReturn.execute>`                                    |                                                         |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`execute <mlprodict.grammar_sklearn.grammar.gactions.MLActionUnary.execute>`                                     | Computes the action. Returns the output.                |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`execute <mlprodict.grammar_sklearn.grammar.gactions.MLActionVar.execute>`                                       |                                                         |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`graph_execution <mlprodict.grammar_sklearn.grammar.gactions.MLAction.graph_execution>`                          | Returns a formated string which retruns the outputs.    |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`graph_execution <mlprodict.grammar_sklearn.grammar.gactions.MLActionBinary.graph_execution>`                    | Returns a formated string which retruns the outputs.    |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`graph_execution <mlprodict.grammar_sklearn.grammar.gactions.MLActionCast.graph_execution>`                      | Returns a formated string which retruns the outputs.    |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`graph_execution <mlprodict.grammar_sklearn.grammar.gactions.MLActionConcat.graph_execution>`                    | Returns a formated string which retruns the outputs.    |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`graph_execution <mlprodict.grammar_sklearn.grammar.gactions.MLActionCst.graph_execution>`                       |                                                         |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`graph_execution <mlprodict.grammar_sklearn.grammar.gactions.MLActionFunction.graph_execution>`                  | Returns a formated string which retruns the outputs.    |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`graph_execution <mlprodict.grammar_sklearn.grammar.gactions.MLActionFunctionCall.graph_execution>`              | Returns a formated string which retruns the outputs.    |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`graph_execution <mlprodict.grammar_sklearn.grammar.gactions.MLActionIfElse.graph_execution>`                    | Returns a formated string which retruns the outputs.    |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`graph_execution <mlprodict.grammar_sklearn.grammar.gactions.MLActionReturn.graph_execution>`                    | Returns a formated string which retruns the outputs.    |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`graph_execution <mlprodict.grammar_sklearn.grammar.gactions.MLActionUnary.graph_execution>`                     | Returns a formated string which retruns the outputs.    |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+
| :meth:`graph_execution <mlprodict.grammar_sklearn.grammar.gactions.MLActionVar.graph_execution>`                       |                                                         |
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+


Documentation
+++++++++++++

.. automodule:: mlprodict.grammar_sklearn.grammar.gactions
    :members:
    :special-members: __init__
    :show-inheritance:



