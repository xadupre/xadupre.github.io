
.. _f-optreeensembleregressorpcpython-39-x8664-linux-gnu:

module ``onnxrt.ops_cpu.op_tree_ensemble_regressor_p_``
=======================================================







Short summary
+++++++++++++

module ``mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_``

Implements runtime for operator TreeEnsembleRegressor. The code is inspired from
`tree_ensemble_regressor.cc <https://github.com/microsoft/onnxruntime/blob/master/
onnxruntime/core/providers/cpu/ml/tree_ensemble_Regressor.cc>`_
in :epkg:`onnxruntime`.

:githublink:`%|py|0`




Classes
+++++++

+-------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| class                                                                                                                                     | truncated documentation                                                                                                                                                                                                                        |
+===========================================================================================================================================+================================================================================================================================================================================================================================================+
| :class:`RuntimeTreeEnsembleRegressorPDouble <mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_.RuntimeTreeEnsembleRegressorPDouble>` | Implements double runtime for operator TreeEnsembleRegressor. The code is inspired from `tree_ensemble_regressor.cc <https://github.com/microsoft/onnxruntime/blob/master/onnxruntime/ core/providers/cpu/ml/tree_ensemble_Regressor.cc>`_ ... |
+-------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`RuntimeTreeEnsembleRegressorPFloat <mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_.RuntimeTreeEnsembleRegressorPFloat>`   | Implements float runtime for operator TreeEnsembleRegressor. The code is inspired from `tree_ensemble_regressor.cc <https://github.com/microsoft/onnxruntime/blob/master/onnxruntime/ core/providers/cpu/ml/tree_ensemble_Regressor.cc>`_ ...  |
+-------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+






Properties
++++++++++

+----------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------+
| property                                                                                                                                     | truncated documentation                                                          |
+==============================================================================================================================================+==================================================================================+
| :meth:`base_values_ <mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_.RuntimeTreeEnsembleRegressorPDouble.base_values_>`               | See :ref:`lpyort-TreeEnsembleRegressorDouble`.                                   |
+----------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------+
| :meth:`base_values_ <mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_.RuntimeTreeEnsembleRegressorPFloat.base_values_>`                | See :ref:`lpyort-TreeEnsembleRegressor`.                                         |
+----------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------+
| :meth:`has_missing_tracks_ <mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_.RuntimeTreeEnsembleRegressorPDouble.has_missing_tracks_>` | Tells if the model handles missing values.                                       |
+----------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------+
| :meth:`has_missing_tracks_ <mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_.RuntimeTreeEnsembleRegressorPFloat.has_missing_tracks_>`  | Tells if the model handles missing values.                                       |
+----------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------+
| :meth:`n_targets_ <mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_.RuntimeTreeEnsembleRegressorPDouble.n_targets_>`                   | See :ref:`lpyort-TreeEnsembleRegressorDouble`.                                   |
+----------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------+
| :meth:`n_targets_ <mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_.RuntimeTreeEnsembleRegressorPFloat.n_targets_>`                    | See :ref:`lpyort-TreeEnsembleRegressor`.                                         |
+----------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------+
| :meth:`nodes_modes_ <mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_.RuntimeTreeEnsembleRegressorPDouble.nodes_modes_>`               | Returns the mode for every node.                                                 |
+----------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------+
| :meth:`nodes_modes_ <mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_.RuntimeTreeEnsembleRegressorPFloat.nodes_modes_>`                | Returns the mode for every node.                                                 |
+----------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------+
| :meth:`omp_N_ <mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_.RuntimeTreeEnsembleRegressorPDouble.omp_N_>`                           | Number of observations above which the computation is parallelized.              |
+----------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------+
| :meth:`omp_N_ <mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_.RuntimeTreeEnsembleRegressorPFloat.omp_N_>`                            | Number of observations above which the computation is parallelized.              |
+----------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------+
| :meth:`omp_tree_ <mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_.RuntimeTreeEnsembleRegressorPDouble.omp_tree_>`                     | Number of trees above which the computation is parallelized for one observation. |
+----------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------+
| :meth:`omp_tree_ <mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_.RuntimeTreeEnsembleRegressorPFloat.omp_tree_>`                      | Number of trees above which the computation is parallelized for one observation. |
+----------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------+
| :meth:`post_transform_ <mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_.RuntimeTreeEnsembleRegressorPDouble.post_transform_>`         | See :ref:`lpyort-TreeEnsembleRegressorDouble`.                                   |
+----------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------+
| :meth:`post_transform_ <mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_.RuntimeTreeEnsembleRegressorPFloat.post_transform_>`          | See :ref:`lpyort-TreeEnsembleRegressor`.                                         |
+----------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------+
| :meth:`roots_ <mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_.RuntimeTreeEnsembleRegressorPDouble.roots_>`                           | Returns the roots indices.                                                       |
+----------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------+
| :meth:`roots_ <mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_.RuntimeTreeEnsembleRegressorPFloat.roots_>`                            | Returns the roots indices.                                                       |
+----------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------+
| :meth:`same_mode_ <mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_.RuntimeTreeEnsembleRegressorPDouble.same_mode_>`                   | Tells if all nodes applies the same rule for thresholds.                         |
+----------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------+
| :meth:`same_mode_ <mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_.RuntimeTreeEnsembleRegressorPFloat.same_mode_>`                    | Tells if all nodes applies the same rule for thresholds.                         |
+----------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------+






Documentation
+++++++++++++

.. automodule:: mlprodict.onnxrt.ops_cpu.op_tree_ensemble_regressor_p_
    :members:
    :special-members: __init__
    :show-inheritance:



