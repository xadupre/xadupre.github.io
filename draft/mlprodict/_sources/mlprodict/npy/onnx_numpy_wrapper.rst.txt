
.. _f-onnxnumpywrapper:

module ``npy.onnx_numpy_wrapper``
=================================





.. inheritance-diagram:: mlprodict.npy.onnx_numpy_wrapper


Short summary
+++++++++++++

module ``mlprodict.npy.onnx_numpy_wrapper``

Wraps :epkg:`numpy` functions into :epkg:`onnx`.





Classes
+++++++

+---------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| class                                                                                 | truncated documentation                                                                                                        |
+=======================================================================================+================================================================================================================================+
| :class:`_created_classes <mlprodict.npy.onnx_numpy_wrapper._created_classes>`         | Class to store all dynamic classes created by wrappers.                                                                        |
+---------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| :class:`wrapper_onnxnumpy <mlprodict.npy.onnx_numpy_wrapper.wrapper_onnxnumpy>`       | Intermediate wrapper to store a pointer on the compiler (type: :class:`OnnxNumpyCompiler`).                                    |
+---------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| :class:`wrapper_onnxnumpy_np <mlprodict.npy.onnx_numpy_wrapper.wrapper_onnxnumpy_np>` | Intermediate wrapper to store a pointer on the compiler (type: :class:`OnnxNumpyCompiler`) supporting multiple signatures. ... |
+---------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------+




Functions
+++++++++

+--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------+
| function                                                                       | truncated documentation                                                                                                |
+================================================================================+========================================================================================================================+
| :func:`onnxnumpy <mlprodict.npy.onnx_numpy_wrapper.onnxnumpy>`                 | Decorator to declare a function implemented using :epkg:`numpy` syntax but executed with :epkg:`ONNX` operators. ...   |
+--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :func:`onnxnumpy_default <mlprodict.npy.onnx_numpy_wrapper.onnxnumpy_default>` | Decorator with options to declare a function implemented using :epkg:`numpy` syntax but executed with :epkg:`ONNX` ... |
+--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :func:`onnxnumpy_np <mlprodict.npy.onnx_numpy_wrapper.onnxnumpy_np>`           | Decorator to declare a function implemented using :epkg:`numpy` syntax but executed with :epkg:`ONNX` operators. ...   |
+--------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------+








Methods
+++++++

+------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
| method                                                                                                     | truncated documentation                                                                                                    |
+============================================================================================================+============================================================================================================================+
| :py:meth:`__call__ <mlprodict.npy.onnx_numpy_wrapper.wrapper_onnxnumpy.__call__>`                          | Calls the compiled function with arguments `args`.                                                                         |
+------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`__call__ <mlprodict.npy.onnx_numpy_wrapper.wrapper_onnxnumpy_np.__call__>`                       | Calls the compiled function assuming the type of the first tensor in *args* defines the templated version of the ...       |
+------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`__getitem__ <mlprodict.npy.onnx_numpy_wrapper.wrapper_onnxnumpy_np.__getitem__>`                 | Returns the instance of :class:`wrapper_onnxnumpy` mapped to *dtype*.                                                      |
+------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`__getstate__ <mlprodict.npy.onnx_numpy_wrapper.wrapper_onnxnumpy.__getstate__>`                  | Serializes everything but the function which generates the ONNX graph, not needed anymore.                                 |
+------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`__getstate__ <mlprodict.npy.onnx_numpy_wrapper.wrapper_onnxnumpy_np.__getstate__>`               | Serializes everything but the function which generates the ONNX graph, not needed anymore.                                 |
+------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`__init__ <mlprodict.npy.onnx_numpy_wrapper._created_classes.__init__>`                           |                                                                                                                            |
+------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`__init__ <mlprodict.npy.onnx_numpy_wrapper.wrapper_onnxnumpy.__init__>`                          |                                                                                                                            |
+------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`__init__ <mlprodict.npy.onnx_numpy_wrapper.wrapper_onnxnumpy_np.__init__>`                       |                                                                                                                            |
+------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`__setstate__ <mlprodict.npy.onnx_numpy_wrapper.wrapper_onnxnumpy.__setstate__>`                  | Serializes everything but the function which generates the ONNX graph, not needed anymore.                                 |
+------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`__setstate__ <mlprodict.npy.onnx_numpy_wrapper.wrapper_onnxnumpy_np.__setstate__>`               | Restores serialized data.                                                                                                  |
+------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_populate <mlprodict.npy.onnx_numpy_wrapper.wrapper_onnxnumpy_np._populate>`                     | Creates the appropriate runtime for function *fct*                                                                         |
+------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_validate_onnx_data <mlprodict.npy.onnx_numpy_wrapper.wrapper_onnxnumpy_np._validate_onnx_data>` |                                                                                                                            |
+------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
| :meth:`append <mlprodict.npy.onnx_numpy_wrapper._created_classes.append>`                                  | Adds a class into `globals()` to enable pickling on dynamic classes.                                                       |
+------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
| :meth:`to_onnx <mlprodict.npy.onnx_numpy_wrapper.wrapper_onnxnumpy.to_onnx>`                               | Returns the ONNX graph for the wrapped function. It takes additional arguments to distinguish between multiple graphs. ... |
+------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
| :meth:`to_onnx <mlprodict.npy.onnx_numpy_wrapper.wrapper_onnxnumpy_np.to_onnx>`                            | Returns the ONNX graph for the wrapped function. It takes additional arguments to distinguish between multiple graphs. ... |
+------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+


Documentation
+++++++++++++

.. automodule:: mlprodict.npy.onnx_numpy_wrapper
    :members:
    :special-members: __init__
    :show-inheritance:



