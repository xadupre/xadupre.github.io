
.. _f-onnxsklearnwrapper:

module ``npy.onnx_sklearn_wrapper``
===================================







Short summary
+++++++++++++

module ``mlprodict.npy.onnx_sklearn_wrapper``

Helpers to use numpy API to easily write converters
for :epkg:`scikit-learn` classes for :epkg:`onnx`.







Functions
+++++++++

+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| function                                                                                                     | truncated documentation                                                                                                      |
+==============================================================================================================+==============================================================================================================================+
| :func:`_call_validate <mlprodict.npy.onnx_sklearn_wrapper._call_validate>`                                   |                                                                                                                              |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`_common_converter_begin <mlprodict.npy.onnx_sklearn_wrapper._common_converter_begin>`                 |                                                                                                                              |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`_common_converter_int_t <mlprodict.npy.onnx_sklearn_wrapper._common_converter_int_t>`                 |                                                                                                                              |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`_common_converter_t <mlprodict.npy.onnx_sklearn_wrapper._common_converter_t>`                         |                                                                                                                              |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`_common_shape_calculator_int_t <mlprodict.npy.onnx_sklearn_wrapper._common_shape_calculator_int_t>`   |                                                                                                                              |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`_common_shape_calculator_t <mlprodict.npy.onnx_sklearn_wrapper._common_shape_calculator_t>`           |                                                                                                                              |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`_converter_classifier <mlprodict.npy.onnx_sklearn_wrapper._converter_classifier>`                     | Default converter for a classifier with one input and two outputs, label and probabilities of the same input type. ...       |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`_converter_cluster <mlprodict.npy.onnx_sklearn_wrapper._converter_cluster>`                           | Default converter for a clustering with one input and two outputs, label and distances of the same input type. It ...        |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`_converter_regressor <mlprodict.npy.onnx_sklearn_wrapper._converter_regressor>`                       | Default converter for a regressor with one input and one output of the same type. It assumes instance *operator* ...         |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`_converter_transformer <mlprodict.npy.onnx_sklearn_wrapper._converter_transformer>`                   | Default converter for a transformer with one input and one output of the same type. It assumes instance *operator* ...       |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`_internal_decorator <mlprodict.npy.onnx_sklearn_wrapper._internal_decorator>`                         |                                                                                                                              |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`_internal_method_decorator <mlprodict.npy.onnx_sklearn_wrapper._internal_method_decorator>`           |                                                                                                                              |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`_shape_calculator_classifier <mlprodict.npy.onnx_sklearn_wrapper._shape_calculator_classifier>`       | Default shape calculator for a classifier with one input and two outputs, label (int64) and probabilites of the same ...     |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`_shape_calculator_cluster <mlprodict.npy.onnx_sklearn_wrapper._shape_calculator_cluster>`             | Default shape calculator for a clustering with one input and two outputs, label (int64) and distances of the same type. ...  |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`_shape_calculator_regressor <mlprodict.npy.onnx_sklearn_wrapper._shape_calculator_regressor>`         | Default shape calculator for a regressor with one input and one output of the same type.                                     |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`_shape_calculator_transformer <mlprodict.npy.onnx_sklearn_wrapper._shape_calculator_transformer>`     | Default shape calculator for a transformer with one input and one output of the same type.                                   |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`_skl2onnx_add_to_container <mlprodict.npy.onnx_sklearn_wrapper._skl2onnx_add_to_container>`           | Adds ONNX graph to :epkg:`skl2onnx` container and scope.                                                                     |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`onnxsklearn_class <mlprodict.npy.onnx_sklearn_wrapper.onnxsklearn_class>`                             | Decorator to declare a converter for a class derivated from :epkg:`scikit-learn`, implementing inference method ...          |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`onnxsklearn_classifier <mlprodict.npy.onnx_sklearn_wrapper.onnxsklearn_classifier>`                   | Decorator to declare a converter for a classifier implemented using :epkg:`numpy` syntax but executed with :epkg:`ONNX` ...  |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`onnxsklearn_cluster <mlprodict.npy.onnx_sklearn_wrapper.onnxsklearn_cluster>`                         | Decorator to declare a converter for a cluster implemented using :epkg:`numpy` syntax but executed with :epkg:`ONNX` ...     |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`onnxsklearn_regressor <mlprodict.npy.onnx_sklearn_wrapper.onnxsklearn_regressor>`                     | Decorator to declare a converter for a regressor implemented using :epkg:`numpy` syntax but executed with :epkg:`ONNX` ...   |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`onnxsklearn_transformer <mlprodict.npy.onnx_sklearn_wrapper.onnxsklearn_transformer>`                 | Decorator to declare a converter for a transformer implemented using :epkg:`numpy` syntax but executed with :epkg:`ONNX` ... |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+
| :func:`update_registered_converter_npy <mlprodict.npy.onnx_sklearn_wrapper.update_registered_converter_npy>` | Registers or updates a converter for a new model so that it can be converted when inserted in a *scikit-learn* pipeline. ... |
+--------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+








Documentation
+++++++++++++

.. automodule:: mlprodict.npy.onnx_sklearn_wrapper
    :members:
    :special-members: __init__
    :show-inheritance:



