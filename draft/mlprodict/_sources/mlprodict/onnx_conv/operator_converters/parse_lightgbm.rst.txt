
.. _f-parselightgbm:

module ``onnx_conv.operator_converters.parse_lightgbm``
=======================================================





.. inheritance-diagram:: mlprodict.onnx_conv.operator_converters.parse_lightgbm


Short summary
+++++++++++++

module ``mlprodict.onnx_conv.operator_converters.parse_lightgbm``

Parsers for LightGBM booster.


:githublink:`%|py|5`




Classes
+++++++

+---------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
| class                                                                                                                                       | truncated documentation                                                             |
+=============================================================================================================================================+=====================================================================================+
| :class:`MockWrappedLightGbmBoosterClassifier <mlprodict.onnx_conv.operator_converters.parse_lightgbm.MockWrappedLightGbmBoosterClassifier>` | Mocked lightgbm.                                                                    |
+---------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :class:`WrappedLightGbmBooster <mlprodict.onnx_conv.operator_converters.parse_lightgbm.WrappedLightGbmBooster>`                             | A booster can be a classifier, a regressor. Trick to wrap it in a minimal function. |
+---------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
| :class:`WrappedLightGbmBoosterClassifier <mlprodict.onnx_conv.operator_converters.parse_lightgbm.WrappedLightGbmBoosterClassifier>`         | Trick to wrap a LGBMClassifier into a class.                                        |
+---------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+




Functions
+++++++++

+------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------+
| function                                                                                                                           | truncated documentation                         |
+====================================================================================================================================+=================================================+
| :func:`converter_lightgbm_concat <mlprodict.onnx_conv.operator_converters.parse_lightgbm.converter_lightgbm_concat>`               | Converter for operator *LightGBMConcat*.        |
+------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------+
| :func:`lightgbm_parser <mlprodict.onnx_conv.operator_converters.parse_lightgbm.lightgbm_parser>`                                   | Agnostic parser for LightGBM Booster.           |
+------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------+
| :func:`shape_calculator_lightgbm_concat <mlprodict.onnx_conv.operator_converters.parse_lightgbm.shape_calculator_lightgbm_concat>` | Shape calculator for operator *LightGBMConcat*. |
+------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------+






Static Methods
++++++++++++++

+--------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| staticmethod                                                                                                                   | truncated documentation |
+================================================================================================================================+=========================+
| :py:meth:`_generate_classes <mlprodict.onnx_conv.operator_converters.parse_lightgbm.WrappedLightGbmBooster._generate_classes>` |                         |
+--------------------------------------------------------------------------------------------------------------------------------+-------------------------+




Methods
+++++++

+---------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------+
| method                                                                                                                          | truncated documentation                       |
+=================================================================================================================================+===============================================+
| :py:meth:`__init__ <mlprodict.onnx_conv.operator_converters.parse_lightgbm.MockWrappedLightGbmBoosterClassifier.__init__>`      |                                               |
+---------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------+
| :py:meth:`__init__ <mlprodict.onnx_conv.operator_converters.parse_lightgbm.WrappedLightGbmBooster.__init__>`                    |                                               |
+---------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------+
| :py:meth:`__init__ <mlprodict.onnx_conv.operator_converters.parse_lightgbm.WrappedLightGbmBoosterClassifier.__init__>`          |                                               |
+---------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------+
| :meth:`attr <mlprodict.onnx_conv.operator_converters.parse_lightgbm.MockWrappedLightGbmBoosterClassifier.attr>`                 | Returns default values for common attributes. |
+---------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------+
| :meth:`dump_model <mlprodict.onnx_conv.operator_converters.parse_lightgbm.MockWrappedLightGbmBoosterClassifier.dump_model>`     | mock dump_model method                        |
+---------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------+
| :meth:`feature_name <mlprodict.onnx_conv.operator_converters.parse_lightgbm.MockWrappedLightGbmBoosterClassifier.feature_name>` | Returns binary features names.                |
+---------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------+
| :meth:`get_objective <mlprodict.onnx_conv.operator_converters.parse_lightgbm.WrappedLightGbmBooster.get_objective>`             | Returns the objective.                        |
+---------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------+


Documentation
+++++++++++++

.. automodule:: mlprodict.onnx_conv.operator_converters.parse_lightgbm
    :members:
    :special-members: __init__
    :show-inheritance:



