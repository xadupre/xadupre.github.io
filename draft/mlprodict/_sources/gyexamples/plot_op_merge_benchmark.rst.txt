
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gyexamples/plot_op_merge_benchmark.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gyexamples_plot_op_merge_benchmark.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gyexamples_plot_op_merge_benchmark.py:


.. _l-op-merge:

Merges benchmarks
=================

This script merges benchmark from :ref:`l-b-reducesummax`,
:ref:`l-b-reducesummean`, :ref:`l-b-reducesum`.

.. contents::
    :local:

Reads data
++++++++++

One file looks like this:

.. GENERATED FROM PYTHON SOURCE LINES 18-25

.. code-block:: default

    import os
    import pandas
    import matplotlib.pyplot as plt

    df = pandas.read_excel("keep_plot_reducesum_master.xlsx")
    df.head(n=4).T






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>0</th>
          <th>1</th>
          <th>2</th>
          <th>3</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>average</th>
          <td>0.00245</td>
          <td>0.001515</td>
          <td>0.001128</td>
          <td>0.012992</td>
        </tr>
        <tr>
          <th>deviation</th>
          <td>0.000288</td>
          <td>0.000208</td>
          <td>0.000203</td>
          <td>0.014079</td>
        </tr>
        <tr>
          <th>min_exec</th>
          <td>0.00218</td>
          <td>0.0013</td>
          <td>0.000893</td>
          <td>0.00505</td>
        </tr>
        <tr>
          <th>max_exec</th>
          <td>0.002985</td>
          <td>0.001908</td>
          <td>0.001505</td>
          <td>0.041095</td>
        </tr>
        <tr>
          <th>repeat</th>
          <td>5</td>
          <td>5</td>
          <td>5</td>
          <td>5</td>
        </tr>
        <tr>
          <th>number</th>
          <td>5</td>
          <td>5</td>
          <td>5</td>
          <td>5</td>
        </tr>
        <tr>
          <th>context_size</th>
          <td>232</td>
          <td>232</td>
          <td>232</td>
          <td>232</td>
        </tr>
        <tr>
          <th>N</th>
          <td>8</td>
          <td>8</td>
          <td>8</td>
          <td>8</td>
        </tr>
        <tr>
          <th>fct</th>
          <td>numpy</td>
          <td>ort</td>
          <td>tf</td>
          <td>torch</td>
        </tr>
        <tr>
          <th>axes</th>
          <td>(3,)</td>
          <td>(3,)</td>
          <td>(3,)</td>
          <td>(3,)</td>
        </tr>
        <tr>
          <th>shape</th>
          <td>(8, 24, 48, 8)</td>
          <td>(8, 24, 48, 8)</td>
          <td>(8, 24, 48, 8)</td>
          <td>(8, 24, 48, 8)</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 26-27

The other files.

.. GENERATED FROM PYTHON SOURCE LINES 27-53

.. code-block:: default


    index = ['fct', 'axes', 'N', 'shape']
    value = ['average']
    files = [
        ('ReduceSum', 'keep_plot_reducesum_master.xlsx', 'keep_plot_reducesum.xlsx'),
        ('ReduceMax', 'plot_reducemax_master.xlsx', 'plot_reducemax.xlsx'),
        ('ReduceMean', 'plot_reducemean_master.xlsx', 'plot_reducemean.xlsx'),
    ]

    merged = []
    for title, ref, impl in files:
        if not os.path.exists(ref) or not os.path.exists(impl):
            continue
        df1 = pandas.read_excel(ref)
        df2 = pandas.read_excel(impl)
        df1 = df1[index + value]
        df2 = df2[index + value]
        merge = df1.merge(df2, on=index, suffixes=('_ref', '_new'))
        merge['op'] = title
        merge['SpeedUp'] = merge[value[0] + "_ref"] / merge[value[0] + "_new"]
        merged.append(merge)

    all_merged = pandas.concat(merged)
    all_merged = all_merged.sort_values(['op'] + index)
    all_merged.head()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>fct</th>
          <th>axes</th>
          <th>N</th>
          <th>shape</th>
          <th>average_ref</th>
          <th>average_new</th>
          <th>op</th>
          <th>SpeedUp</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>220</th>
          <td>numpy</td>
          <td>(0, 2)</td>
          <td>8</td>
          <td>(8, 24, 48, 8)</td>
          <td>0.001230</td>
          <td>0.001571</td>
          <td>ReduceSum</td>
          <td>0.783275</td>
        </tr>
        <tr>
          <th>224</th>
          <td>numpy</td>
          <td>(0, 2)</td>
          <td>16</td>
          <td>(8, 24, 48, 16)</td>
          <td>0.002844</td>
          <td>0.002704</td>
          <td>ReduceSum</td>
          <td>1.051685</td>
        </tr>
        <tr>
          <th>228</th>
          <td>numpy</td>
          <td>(0, 2)</td>
          <td>32</td>
          <td>(8, 24, 48, 32)</td>
          <td>0.006076</td>
          <td>0.005119</td>
          <td>ReduceSum</td>
          <td>1.186992</td>
        </tr>
        <tr>
          <th>232</th>
          <td>numpy</td>
          <td>(0, 2)</td>
          <td>64</td>
          <td>(8, 24, 48, 64)</td>
          <td>0.010574</td>
          <td>0.009804</td>
          <td>ReduceSum</td>
          <td>1.078504</td>
        </tr>
        <tr>
          <th>236</th>
          <td>numpy</td>
          <td>(0, 2)</td>
          <td>100</td>
          <td>(8, 24, 48, 100)</td>
          <td>0.014287</td>
          <td>0.014141</td>
          <td>ReduceSum</td>
          <td>1.010320</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 54-56

Markdown
++++++++

.. GENERATED FROM PYTHON SOURCE LINES 56-62

.. code-block:: default


    piv = all_merged.pivot_table(values=['SpeedUp'], index=index, columns=['op'])
    piv = piv.reset_index(drop=False).sort_values(index)
    piv.columns = index + [_[1] for _ in piv.columns[4:]]
    #print(piv.to_markdown(index=False, floatfmt=".2f"))








.. GENERATED FROM PYTHON SOURCE LINES 63-65

Graphs
++++++

.. GENERATED FROM PYTHON SOURCE LINES 65-91

.. code-block:: default


    df = all_merged
    graph_col = ['op', 'axes']
    set_val = set(tuple(_[1:]) for _ in df[graph_col].itertuples())

    axes = list(sorted(set(df['axes'])))
    op = list(sorted(set(df['op'])))

    for suffix in ['_ref', '_new']:
        fig, ax = plt.subplots(len(axes), len(op), figsize=(14, 14))
        for i, a in enumerate(axes):
            for j, o in enumerate(op):
                sub = df[(df['op'] == o) & (df['axes'] == a)]
                piv = sub.pivot("N", "fct", "average" + suffix)
                ref = piv['numpy'].copy()
                for c in piv.columns:
                    piv[c] = ref / piv[c]
                piv.plot(ax=ax[i, j], logx=True)
                shape = list(sub['shape'])[0]
                ax[i, j].set_title("%s - %s - %s" % (o, a, shape), fontsize=5)
                ax[i, j].legend(fontsize=5)
                plt.setp(ax[i, j].get_xticklabels(), fontsize=5)
                plt.setp(ax[i, j].get_yticklabels(), fontsize=5)
        fig.suptitle(suffix)

    plt.show()


.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "/var/lib/jenkins/workspace/mlprodict/mlprodict_UT_39_std/_doc/examples/plot_op_merge_benchmark.py", line 82, in <module>
        piv.plot(ax=ax[i, j], logx=True)
    IndexError: too many indices for array: array is 1-dimensional, but 2 were indexed





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.784 seconds)


.. _sphx_glr_download_gyexamples_plot_op_merge_benchmark.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_op_merge_benchmark.py <plot_op_merge_benchmark.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_op_merge_benchmark.ipynb <plot_op_merge_benchmark.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
