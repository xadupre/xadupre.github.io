
.. _l-staticmethods:

Static Methods
==============

.. contents::
    :local:
    :depth: 1


Summary
+++++++

+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| staticmethod                                                                                                                                                 | class parent                      | truncated documentation                                                                                                |
+==============================================================================================================================================================+===================================+========================================================================================================================+
| :py:meth:`__class_getitem__ <mlprodict.npy.onnx_numpy_annotation.NDArray.__class_getitem__>`                                                                 | NDArray                           | Overwrites this method.                                                                                                |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`__class_getitem__ <mlprodict.npy.xop.OnnxOperator.__class_getitem__>`                                                                              | OnnxOperator                      | Enables expression `cls[opset]`. It returns the appropriate class `cls_opset`. Parameter *op_version* should be ...    |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`__class_getitem__ <mlprodict.npy.xop.OnnxOperatorFunction.__class_getitem__>`                                                                      | OnnxOperatorFunction              | Enables expression `cls[opset]`. It returns the appropriate class `cls_opset`. Parameter *op_version* should be ...    |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_add_node <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBClassifierConverter._add_node>`                                                 | XGBClassifierConverter            |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_add_node <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBConverter._add_node>`                                                           | XGBConverter                      |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_add_node <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBRegressorConverter._add_node>`                                                  | XGBRegressorConverter             |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_create_model <mlprodict.sklapi.onnx_tokenizer.GPT2TokenizerTransformer._create_model>`                                                            | GPT2TokenizerTransformer          |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_create_model <mlprodict.sklapi.onnx_tokenizer.SentencePieceTokenizerTransformer._create_model>`                                                   | SentencePieceTokenizerTransformer |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_fill_node_attributes <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBClassifierConverter._fill_node_attributes>`                         | XGBClassifierConverter            |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_fill_node_attributes <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBConverter._fill_node_attributes>`                                   | XGBConverter                      |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_fill_node_attributes <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBRegressorConverter._fill_node_attributes>`                          | XGBRegressorConverter             |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_find_static_inputs <mlprodict.onnxrt.onnx_inference_node.OnnxInferenceNode._find_static_inputs>`                                                  | OnnxInferenceNode                 | Determines the loop inputs. It is any defined inputs by the subgraphs + any results used as a constant in ...          |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_fmatmul00 <mlprodict.onnxrt.ops_cpu.op_fused_matmul.FusedMatMul._fmatmul00>`                                                                      | FusedMatMul                       |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_fmatmul01 <mlprodict.onnxrt.ops_cpu.op_fused_matmul.FusedMatMul._fmatmul01>`                                                                      | FusedMatMul                       |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_fmatmul10 <mlprodict.onnxrt.ops_cpu.op_fused_matmul.FusedMatMul._fmatmul10>`                                                                      | FusedMatMul                       |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_fmatmul11 <mlprodict.onnxrt.ops_cpu.op_fused_matmul.FusedMatMul._fmatmul11>`                                                                      | FusedMatMul                       |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_gemm00 <mlprodict.onnxrt.ops_cpu.op_gemm.Gemm._gemm00>`                                                                                           | Gemm                              |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_gemm01 <mlprodict.onnxrt.ops_cpu.op_gemm.Gemm._gemm01>`                                                                                           | Gemm                              |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_gemm10 <mlprodict.onnxrt.ops_cpu.op_gemm.Gemm._gemm10>`                                                                                           | Gemm                              |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_gemm11 <mlprodict.onnxrt.ops_cpu.op_gemm.Gemm._gemm11>`                                                                                           | Gemm                              |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_generate_classes <mlprodict.onnx_conv.operator_converters.parse_lightgbm.WrappedLightGbmBooster._generate_classes>`                               | WrappedLightGbmBooster            |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_get_default_tree_attribute_pairs <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBClassifierConverter._get_default_tree_attribute_pairs>` | XGBClassifierConverter            |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_get_default_tree_attribute_pairs <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBConverter._get_default_tree_attribute_pairs>`           | XGBConverter                      |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_get_default_tree_attribute_pairs <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBRegressorConverter._get_default_tree_attribute_pairs>`  | XGBRegressorConverter             |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_get_shape <mlprodict.onnxrt.onnx_shape_inference.OnnxShapeInference._get_shape>`                                                                  | OnnxShapeInference                |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_get_type_property <mlprodict.onnxrt.onnx_inference.OnnxInference._get_type_property>`                                                             | OnnxInference                     |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_infer_merged_type <mlprodict.onnxrt.shape_object.ShapeObject._infer_merged_type>`                                                                 | ShapeObject                       |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_infer_merged_type <mlprodict.onnxrt.shape_object.ShapeObjectFct._infer_merged_type>`                                                              | ShapeObjectFct                    |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_load <mlprodict.testing.onnx_backend.OnnxBackendTest._load>`                                                                                      | OnnxBackendTest                   |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_make_tuple <mlprodict.onnx_tools.exports.numpy_helper.NumpyCode._make_tuple>`                                                                     | NumpyCode                         |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_merge_op_version <mlprodict.npy.xop.OnnxOperator._merge_op_version>`                                                                              | OnnxOperator                      |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_merge_op_version <mlprodict.npy.xop.OnnxOperatorFunction._merge_op_version>`                                                                      | OnnxOperatorFunction              |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_node_to_graph_get_type <mlprodict.npy.xop.OnnxOperator._node_to_graph_get_type>`                                                                  | OnnxOperator                      |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_node_to_graph_get_type <mlprodict.npy.xop.OnnxOperatorFunction._node_to_graph_get_type>`                                                          | OnnxOperatorFunction              |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_node_to_graph_preprocess_list <mlprodict.npy.xop.OnnxOperator._node_to_graph_preprocess_list>`                                                    | OnnxOperator                      |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_node_to_graph_preprocess_list <mlprodict.npy.xop.OnnxOperatorFunction._node_to_graph_preprocess_list>`                                            | OnnxOperatorFunction              |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_node_to_graph_process_input <mlprodict.npy.xop.OnnxOperator._node_to_graph_process_input>`                                                        | OnnxOperator                      |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_node_to_graph_process_input <mlprodict.npy.xop.OnnxOperatorFunction._node_to_graph_process_input>`                                                | OnnxOperatorFunction              |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_node_to_graph_reorder_by_name <mlprodict.npy.xop.OnnxOperator._node_to_graph_reorder_by_name>`                                                    | OnnxOperator                      |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_node_to_graph_reorder_by_name <mlprodict.npy.xop.OnnxOperatorFunction._node_to_graph_reorder_by_name>`                                            | OnnxOperatorFunction              |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_norm_L1_inplace <mlprodict.onnxrt.ops_cpu.op_normalizer.Normalizer._norm_L1_inplace>`                                                             | Normalizer                        |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_norm_max_inplace <mlprodict.onnxrt.ops_cpu.op_normalizer.Normalizer._norm_max_inplace>`                                                           | Normalizer                        |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_onnx2bigraph_basic <mlprodict.tools.graphs.BiGraph._onnx2bigraph_basic>`                                                                          | BiGraph                           | Implements graph type `'basic'` for function :func:`onnx2bigraph`.                                                     |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_onnx2bigraph_simplified <mlprodict.tools.graphs.BiGraph._onnx2bigraph_simplified>`                                                                | BiGraph                           | Implements graph type `'simplified'` for function :func:`onnx2bigraph`.                                                |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_process_type <mlprodict.npy.onnx_numpy_annotation.NDArraySameType._process_type>`                                                                 | NDArraySameType                   | Nicknames such as `floats`, `int`, `ints`, `all` can be used to describe multiple inputs for a signature. ...          |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_process_type <mlprodict.npy.onnx_numpy_annotation.NDArraySameTypeSameShape._process_type>`                                                        | NDArraySameTypeSameShape          | Nicknames such as `floats`, `int`, `ints`, `all` can be used to describe multiple inputs for a signature. ...          |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_process_type <mlprodict.npy.onnx_numpy_annotation.NDArrayType._process_type>`                                                                     | NDArrayType                       | Nicknames such as `floats`, `int`, `ints`, `all` can be used to describe multiple inputs for a signature. ...          |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_process_type <mlprodict.npy.onnx_numpy_annotation.NDArrayTypeSameShape._process_type>`                                                            | NDArrayTypeSameShape              | Nicknames such as `floats`, `int`, `ints`, `all` can be used to describe multiple inputs for a signature. ...          |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_process_type <mlprodict.npy.onnx_numpy_annotation._NDArrayAlias._process_type>`                                                                   | _NDArrayAlias                     | Nicknames such as `floats`, `int`, `ints`, `all` can be used to describe multiple inputs for a signature. ...          |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_read_proto_from_file <mlprodict.testing.onnx_backend.OnnxBackendTest._read_proto_from_file>`                                                      | OnnxBackendTest                   |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_remap_nodeid <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBClassifierConverter._remap_nodeid>`                                         | XGBClassifierConverter            |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_remap_nodeid <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBConverter._remap_nodeid>`                                                   | XGBConverter                      |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_remap_nodeid <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBRegressorConverter._remap_nodeid>`                                          | XGBRegressorConverter             |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_same_ <mlprodict.onnxrt.shape_object.DimensionObject._same_>`                                                                                     | DimensionObject                   | Returns *obj* if *obj* is :class:`DimensionObject` otherwise converts it.                                              |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_sort <mlprodict.testing.onnx_backend.OnnxBackendTest._sort>`                                                                                      | OnnxBackendTest                   |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_to_onnx <mlprodict.npy.xop_convert.OnnxSubEstimator._to_onnx>`                                                                                    | OnnxSubEstimator                  | Converts a model into ONNX and inserts it into an ONNX graph.                                                          |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :py:meth:`_to_onnx_sklearn <mlprodict.npy.xop_convert.OnnxSubEstimator._to_onnx_sklearn>`                                                                    | OnnxSubEstimator                  | Converts a :epkg:`scikit-learn` model into ONNX and inserts it into an ONNX graph. The library relies on ...           |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`attribute_to_value <mlprodict.npy.xop.OnnxOperatorFunction.attribute_to_value>`                                                                       | OnnxOperatorFunction              | Converts an attribute into a value using python structures.                                                            |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`broadcast <mlprodict.onnxrt.ops_shape.shape_result.ShapeResult.broadcast>`                                                                            | ShapeResult                       | Broadcasts dimensions for an element wise operator.                                                                    |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`build_einsum <mlprodict.testing.einsum.einsum_fct.CachedEinsum.build_einsum>`                                                                         | CachedEinsum                      | Creates an instance of *CachedEinsum*.                                                                                 |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`build_rev_keys <mlprodict.onnxrt.ops_cpu.op_zipmap.ZipMapDictionary.build_rev_keys>`                                                                  | ZipMapDictionary                  |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`cache <mlprodict.grammar.grammar_sklearn.grammar.api_extension.AutoAction.cache>`                                                                     | AutoAction                        | Caches the result of a function.                                                                                       |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`common_members <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBClassifierConverter.common_members>`                                          | XGBClassifierConverter            | common to regresssor and classifier                                                                                    |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`common_members <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBConverter.common_members>`                                                    | XGBConverter                      | common to regresssor and classifier                                                                                    |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`common_members <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBRegressorConverter.common_members>`                                           | XGBRegressorConverter             | common to regresssor and classifier                                                                                    |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`convert <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBClassifierConverter.convert>`                                                        | XGBClassifierConverter            | convert method                                                                                                         |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`convert <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBRegressorConverter.convert>`                                                         | XGBRegressorConverter             | converter method                                                                                                       |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`create_inference_session <mlprodict.onnxrt.backend.OnnxInferenceBackend.create_inference_session>`                                                    | OnnxInferenceBackend              | Instantiates an instance of class @see cl OnnxInference. This method should be overwritten to change the runtime ...   |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`create_inference_session <mlprodict.onnxrt.backend.OnnxInferenceBackendMicro.create_inference_session>`                                               | OnnxInferenceBackendMicro         |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`create_inference_session <mlprodict.onnxrt.backend.OnnxInferenceBackendOrt.create_inference_session>`                                                 | OnnxInferenceBackendOrt           |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`create_inference_session <mlprodict.onnxrt.backend.OnnxInferenceBackendPyC.create_inference_session>`                                                 | OnnxInferenceBackendPyC           |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`create_inference_session <mlprodict.onnxrt.backend.OnnxInferenceBackendPyEval.create_inference_session>`                                              | OnnxInferenceBackendPyEval        |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`create_inference_session <mlprodict.onnxrt.backend.OnnxInferenceBackendShape.create_inference_session>`                                               | OnnxInferenceBackendShape         |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`einsum_shape <mlprodict.onnxrt.shape_object.ShapeObject.einsum_shape>`                                                                                | ShapeObject                       | Computes :epkg:`einsum` shapes. Not the most efficient one as it creates variables of the given shapes.                |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`einsum_shape <mlprodict.onnxrt.shape_object.ShapeObjectFct.einsum_shape>`                                                                             | ShapeObjectFct                    | Computes :epkg:`einsum` shapes. Not the most efficient one as it creates variables of the given shapes.                |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`enumerate_create <mlprodict.sklapi.onnx_transformer.OnnxTransformer.enumerate_create>`                                                                | OnnxTransformer                   | Creates multiple *OnnxTransformer*, one for each requested intermediate node. onnx_bytes : bytes ...                   |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`fill_tree_attributes <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBClassifierConverter.fill_tree_attributes>`                              | XGBClassifierConverter            | fills tree attributes                                                                                                  |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`fill_tree_attributes <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBConverter.fill_tree_attributes>`                                        | XGBConverter                      | fills tree attributes                                                                                                  |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`fill_tree_attributes <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBRegressorConverter.fill_tree_attributes>`                               | XGBRegressorConverter             | fills tree attributes                                                                                                  |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`from_pb <mlprodict.npy.xop_variable.Variable.from_pb>`                                                                                                | Variable                          | Creates a Variable from a protobuf object.                                                                             |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`from_skl2onnx <mlprodict.npy.xop_variable.Variable.from_skl2onnx>`                                                                                    | Variable                          | Converts var from :epkg:`sklearn-onnx` into this class.                                                                |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`gather_shape <mlprodict.onnxrt.shape_object.ShapeObject.gather_shape>`                                                                                | ShapeObject                       | Computes Gather shapes.                                                                                                |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`gather_shape <mlprodict.onnxrt.shape_object.ShapeObjectFct.gather_shape>`                                                                             | ShapeObjectFct                    | Computes Gather shapes.                                                                                                |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`get_xgb_params <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBClassifierConverter.get_xgb_params>`                                          | XGBClassifierConverter            | Retrieves parameters of a model.                                                                                       |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`get_xgb_params <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBConverter.get_xgb_params>`                                                    | XGBConverter                      | Retrieves parameters of a model.                                                                                       |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`get_xgb_params <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBRegressorConverter.get_xgb_params>`                                           | XGBRegressorConverter             | Retrieves parameters of a model.                                                                                       |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`guess_type <mlprodict.grammar.grammar_sklearn.grammar.gactions.MLActionCst.guess_type>`                                                               | MLActionCst                       | Guesses a type given a value.                                                                                          |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`guess_type <mlprodict.grammar.grammar_sklearn.grammar.gactions.MLActionVar.guess_type>`                                                               | MLActionVar                       | Guesses a type given a value.                                                                                          |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`is_compatible <mlprodict.onnxrt.backend.OnnxInferenceBackend.is_compatible>`                                                                          | OnnxInferenceBackend              | Returns whether the model is compatible with the backend.                                                              |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`is_compatible <mlprodict.onnxrt.backend.OnnxInferenceBackendMicro.is_compatible>`                                                                     | OnnxInferenceBackendMicro         | Returns whether the model is compatible with the backend.                                                              |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`is_compatible <mlprodict.onnxrt.backend.OnnxInferenceBackendOrt.is_compatible>`                                                                       | OnnxInferenceBackendOrt           | Returns whether the model is compatible with the backend.                                                              |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`is_compatible <mlprodict.onnxrt.backend.OnnxInferenceBackendPyC.is_compatible>`                                                                       | OnnxInferenceBackendPyC           | Returns whether the model is compatible with the backend.                                                              |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`is_compatible <mlprodict.onnxrt.backend.OnnxInferenceBackendPyEval.is_compatible>`                                                                    | OnnxInferenceBackendPyEval        | Returns whether the model is compatible with the backend.                                                              |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`is_compatible <mlprodict.onnxrt.backend.OnnxInferenceBackendShape.is_compatible>`                                                                     | OnnxInferenceBackendShape         | Returns whether the model is compatible with the backend.                                                              |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`is_opset_supported <mlprodict.onnxrt.backend.OnnxInferenceBackend.is_opset_supported>`                                                                | OnnxInferenceBackend              | Returns whether the opset for the model is supported by the backend.                                                   |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`is_opset_supported <mlprodict.onnxrt.backend.OnnxInferenceBackendMicro.is_opset_supported>`                                                           | OnnxInferenceBackendMicro         | Returns whether the opset for the model is supported by the backend.                                                   |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`is_opset_supported <mlprodict.onnxrt.backend.OnnxInferenceBackendOrt.is_opset_supported>`                                                             | OnnxInferenceBackendOrt           | Returns whether the opset for the model is supported by the backend.                                                   |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`is_opset_supported <mlprodict.onnxrt.backend.OnnxInferenceBackendPyC.is_opset_supported>`                                                             | OnnxInferenceBackendPyC           | Returns whether the opset for the model is supported by the backend.                                                   |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`is_opset_supported <mlprodict.onnxrt.backend.OnnxInferenceBackendPyEval.is_opset_supported>`                                                          | OnnxInferenceBackendPyEval        | Returns whether the opset for the model is supported by the backend.                                                   |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`is_opset_supported <mlprodict.onnxrt.backend.OnnxInferenceBackendShape.is_opset_supported>`                                                           | OnnxInferenceBackendShape         | Returns whether the opset for the model is supported by the backend.                                                   |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`norm_l1 <mlprodict.onnxrt.ops_cpu.op_normalizer.Normalizer.norm_l1>`                                                                                  | Normalizer                        | L1 normalization                                                                                                       |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`norm_l2 <mlprodict.onnxrt.ops_cpu.op_normalizer.Normalizer.norm_l2>`                                                                                  | Normalizer                        | L2 normalization                                                                                                       |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`norm_max <mlprodict.onnxrt.ops_cpu.op_normalizer.Normalizer.norm_max>`                                                                                | Normalizer                        | max normalization                                                                                                      |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`number2alpha <mlprodict.npy.xop._GraphBuilder.number2alpha>`                                                                                          | _GraphBuilder                     | Converts a numbers into a string keeping the same alphabetical order.                                                  |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`onnx_graph_distance <mlprodict.tools.graphs.BiGraph.onnx_graph_distance>`                                                                             | BiGraph                           | Computes a distance between two ONNX graphs. They must not be too big otherwise this function might take for ever. ... |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`prepare <mlprodict.onnxrt.backend.OnnxInferenceBackend.prepare>`                                                                                      | OnnxInferenceBackend              | Loads the model and creates @see cl OnnxInference.                                                                     |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`prepare <mlprodict.onnxrt.backend.OnnxInferenceBackendMicro.prepare>`                                                                                 | OnnxInferenceBackendMicro         | Loads the model and creates @see cl OnnxInference.                                                                     |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`prepare <mlprodict.onnxrt.backend.OnnxInferenceBackendOrt.prepare>`                                                                                   | OnnxInferenceBackendOrt           | Loads the model and creates @see cl OnnxInference.                                                                     |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`prepare <mlprodict.onnxrt.backend.OnnxInferenceBackendPyC.prepare>`                                                                                   | OnnxInferenceBackendPyC           | Loads the model and creates @see cl OnnxInference.                                                                     |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`prepare <mlprodict.onnxrt.backend.OnnxInferenceBackendPyEval.prepare>`                                                                                | OnnxInferenceBackendPyEval        | Loads the model and creates @see cl OnnxInference.                                                                     |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`prepare <mlprodict.onnxrt.backend.OnnxInferenceBackendShape.prepare>`                                                                                 | OnnxInferenceBackendShape         | Loads the model and creates @see cl OnnxInference.                                                                     |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`print_node <mlprodict.onnx_tools.onnx_grammar.node_visitor_translator.CodeNodeVisitor.print_node>`                                                    | CodeNodeVisitor                   | Debugging purpose.                                                                                                     |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`print_node <mlprodict.testing.verify_code.CodeNodeVisitor.print_node>`                                                                                | CodeNodeVisitor                   | Debugging purpose.                                                                                                     |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`process_profiling <mlprodict.onnxrt.ops_whole.session.OnnxWholeSession.process_profiling>`                                                            | OnnxWholeSession                  | Flattens json returned by onnxruntime profiling.                                                                       |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`run_model <mlprodict.onnxrt.backend.OnnxInferenceBackend.run_model>`                                                                                  | OnnxInferenceBackend              | Computes the prediction.                                                                                               |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`run_model <mlprodict.onnxrt.backend.OnnxInferenceBackendMicro.run_model>`                                                                             | OnnxInferenceBackendMicro         | Computes the prediction.                                                                                               |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`run_model <mlprodict.onnxrt.backend.OnnxInferenceBackendOrt.run_model>`                                                                               | OnnxInferenceBackendOrt           | Computes the prediction.                                                                                               |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`run_model <mlprodict.onnxrt.backend.OnnxInferenceBackendPyC.run_model>`                                                                               | OnnxInferenceBackendPyC           | Computes the prediction.                                                                                               |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`run_model <mlprodict.onnxrt.backend.OnnxInferenceBackendPyEval.run_model>`                                                                            | OnnxInferenceBackendPyEval        | Computes the prediction.                                                                                               |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`run_model <mlprodict.onnxrt.backend.OnnxInferenceBackendShape.run_model>`                                                                             | OnnxInferenceBackendShape         | Computes the prediction.                                                                                               |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`run_node <mlprodict.onnxrt.backend.OnnxInferenceBackend.run_node>`                                                                                    | OnnxInferenceBackend              | This method is not implemented as it is much more efficient to run a whole model than every node independently.        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`run_node <mlprodict.onnxrt.backend.OnnxInferenceBackendMicro.run_node>`                                                                               | OnnxInferenceBackendMicro         | This method is not implemented as it is much more efficient to run a whole model than every node independently.        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`run_node <mlprodict.onnxrt.backend.OnnxInferenceBackendOrt.run_node>`                                                                                 | OnnxInferenceBackendOrt           | This method is not implemented as it is much more efficient to run a whole model than every node independently.        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`run_node <mlprodict.onnxrt.backend.OnnxInferenceBackendPyC.run_node>`                                                                                 | OnnxInferenceBackendPyC           | This method is not implemented as it is much more efficient to run a whole model than every node independently.        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`run_node <mlprodict.onnxrt.backend.OnnxInferenceBackendPyEval.run_node>`                                                                              | OnnxInferenceBackendPyEval        | This method is not implemented as it is much more efficient to run a whole model than every node independently.        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`run_node <mlprodict.onnxrt.backend.OnnxInferenceBackendShape.run_node>`                                                                               | OnnxInferenceBackendShape         | This method is not implemented as it is much more efficient to run a whole model than every node independently.        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`supports_device <mlprodict.onnxrt.backend.OnnxInferenceBackend.supports_device>`                                                                      | OnnxInferenceBackend              | Checks whether the backend is compiled with particular device support.                                                 |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`supports_device <mlprodict.onnxrt.backend.OnnxInferenceBackendMicro.supports_device>`                                                                 | OnnxInferenceBackendMicro         | Checks whether the backend is compiled with particular device support.                                                 |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`supports_device <mlprodict.onnxrt.backend.OnnxInferenceBackendOrt.supports_device>`                                                                   | OnnxInferenceBackendOrt           | Checks whether the backend is compiled with particular device support.                                                 |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`supports_device <mlprodict.onnxrt.backend.OnnxInferenceBackendPyC.supports_device>`                                                                   | OnnxInferenceBackendPyC           | Checks whether the backend is compiled with particular device support.                                                 |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`supports_device <mlprodict.onnxrt.backend.OnnxInferenceBackendPyEval.supports_device>`                                                                | OnnxInferenceBackendPyEval        | Checks whether the backend is compiled with particular device support.                                                 |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`supports_device <mlprodict.onnxrt.backend.OnnxInferenceBackendShape.supports_device>`                                                                 | OnnxInferenceBackendShape         | Checks whether the backend is compiled with particular device support.                                                 |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`validate <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBClassifierConverter.validate>`                                                      | XGBClassifierConverter            |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`validate <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBConverter.validate>`                                                                | XGBConverter                      | validates the model                                                                                                    |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :meth:`validate <mlprodict.onnx_conv.operator_converters.conv_xgboost.XGBRegressorConverter.validate>`                                                       | XGBRegressorConverter             |                                                                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------------------------------------------------+
