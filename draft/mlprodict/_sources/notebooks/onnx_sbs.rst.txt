
.. _onnxsbsrst:

=================
ONNX side by side
=================


.. only:: html

    **Links:** :download:`notebook <onnx_sbs.ipynb>`, :downloadlink:`html <onnx_sbs2html.html>`, :download:`PDF <onnx_sbs.pdf>`, :download:`python <onnx_sbs.py>`, :downloadlink:`slides <onnx_sbs.slides.html>`, :githublink:`GitHub|_doc/notebooks/onnx_sbs.ipynb|*`


The notebook compares two runtimes for the same ONNX and looks into
differences at each step of the graph.

.. code:: ipython3

    from jyquickhelper import add_notebook_menu
    add_notebook_menu()






.. contents::
    :local:





.. code:: ipython3

    %load_ext mlprodict


.. parsed-literal::
    The mlprodict extension is already loaded. To reload it, use:
      %reload_ext mlprodict


.. code:: ipython3

    %matplotlib inline

The ONNX model
--------------

We convert kernel function used in
`GaussianProcessRegressor <https://scikit-learn.org/stable/modules/generated/sklearn.gaussian_process.GaussianProcessRegressor.html>`__.
First some values to use for testing.

.. code:: ipython3

    import numpy
    import pandas
    from io import StringIO
    
    Xtest = pandas.read_csv(StringIO("""
    1.000000000000000000e+02,1.061277971307766705e+02,1.472195004809226493e+00,2.307125069497626552e-02,4.539948095743629591e-02,2.855191098141335870e-01
    1.000000000000000000e+02,9.417031896832908444e+01,1.249743892709246573e+00,2.370416174339620707e-02,2.613847280316268853e-02,5.097165413593484073e-01
    1.000000000000000000e+02,9.305231488674536422e+01,1.795726729335217264e+00,2.473274733802270642e-02,1.349765645107412620e-02,9.410288840541443378e-02
    1.000000000000000000e+02,7.411264142156210255e+01,1.747723020195752319e+00,1.559695663417645997e-02,4.230394035515055301e-02,2.225492746314280956e-01
    1.000000000000000000e+02,9.326006195761877393e+01,1.738860294343326229e+00,2.280160135767652502e-02,4.883335335161764074e-02,2.806808409247734115e-01
    1.000000000000000000e+02,8.341529291866362428e+01,5.119682123742423929e-01,2.488795768635816003e-02,4.887573336092913834e-02,1.673462179673477768e-01
    1.000000000000000000e+02,1.182436477919874562e+02,1.733516391831658954e+00,1.533520930349476820e-02,3.131213519485807895e-02,1.955345358785769427e-01
    1.000000000000000000e+02,1.228982583299257101e+02,1.115599996405831629e+00,1.929354155079938959e-02,3.056996308544096715e-03,1.197052763998271013e-01
    1.000000000000000000e+02,1.160303269386108838e+02,1.018627021014927303e+00,2.248784981616459844e-02,2.688111547114307651e-02,3.326105131778724355e-01
    1.000000000000000000e+02,1.163414374640396005e+02,6.644299545804077667e-01,1.508088417713602906e-02,4.451836657613789106e-02,3.245643044204808425e-01
    """.strip("\n\r ")), header=None).values

Then the kernel.

.. code:: ipython3

    from sklearn.gaussian_process.kernels import RBF, ConstantKernel as CK, Sum
    
    ker = Sum(
        CK(0.1, (1e-3, 1e3)) * RBF(length_scale=10,
                                   length_scale_bounds=(1e-3, 1e3)),
        CK(0.1, (1e-3, 1e3)) * RBF(length_scale=1,
                                   length_scale_bounds=(1e-3, 1e3))
    )
    
    ker




.. parsed-literal::
    0.316**2 * RBF(length_scale=10) + 0.316**2 * RBF(length_scale=1)



.. code:: ipython3

    ker(Xtest)




.. parsed-literal::
    array([[2.00000000e-01, 4.88993040e-02, 4.25048140e-02, 5.94472678e-04,
            4.36813578e-02, 7.54738292e-03, 4.79816083e-02, 2.44870899e-02,
            6.11804858e-02, 5.91636643e-02],
           [4.88993040e-02, 2.00000000e-01, 1.41439850e-01, 1.33559792e-02,
            1.56539930e-01, 5.58967934e-02, 5.50622994e-03, 1.61259456e-03,
            9.16550083e-03, 8.54623880e-03],
           [4.25048140e-02, 1.41439850e-01, 2.00000000e-01, 1.66351088e-02,
            1.95919797e-01, 6.23358040e-02, 4.18740453e-03, 1.16061688e-03,
            7.11297248e-03, 6.59679571e-03],
           [5.94472678e-04, 1.33559792e-02, 1.66351088e-02, 2.00000000e-01,
            1.59911246e-02, 6.43812362e-02, 5.90141166e-06, 6.77520700e-07,
            1.52525053e-05, 1.33384349e-05],
           [4.36813578e-02, 1.56539930e-01, 1.95919797e-01, 1.59911246e-02,
            2.00000000e-01, 6.11287461e-02, 4.41158561e-03, 1.23488073e-03,
            7.46433076e-03, 6.92846776e-03],
           [7.54738292e-03, 5.58967934e-02, 6.23358040e-02, 6.43812362e-02,
            6.11287461e-02, 2.00000000e-01, 2.30531400e-04, 4.11226399e-05,
            4.89214341e-04, 4.42318453e-04],
           [4.79816083e-02, 5.50622994e-03, 4.18740453e-03, 5.90141166e-06,
            4.41158561e-03, 2.30531400e-04, 2.00000000e-01, 8.95609518e-02,
            1.03946894e-01, 1.06810568e-01],
           [2.44870899e-02, 1.61259456e-03, 1.16061688e-03, 6.77520700e-07,
            1.23488073e-03, 4.11226399e-05, 8.95609518e-02, 2.00000000e-01,
            7.89686728e-02, 8.05577562e-02],
           [6.11804858e-02, 9.16550083e-03, 7.11297248e-03, 1.52525053e-05,
            7.46433076e-03, 4.89214341e-04, 1.03946894e-01, 7.89686728e-02,
            2.00000000e-01, 1.89352355e-01],
           [5.91636643e-02, 8.54623880e-03, 6.59679571e-03, 1.33384349e-05,
            6.92846776e-03, 4.42318453e-04, 1.06810568e-01, 8.05577562e-02,
            1.89352355e-01, 2.00000000e-01]])



Conversion to ONNX
------------------

The function is not an operator, the function to use is specific to this
usage.

.. code:: ipython3

    from skl2onnx.operator_converters.gaussian_process import convert_kernel
    from skl2onnx.common.data_types import FloatTensorType, DoubleTensorType
    from skl2onnx.algebra.onnx_ops import OnnxIdentity
    onnx_op = convert_kernel(ker, 'X', output_names=['final_after_op_Add'],
                             dtype=numpy.float32, op_version=12)
    onnx_op = OnnxIdentity(onnx_op, output_names=['Y'], op_version=12)
    model_onnx = model_onnx = onnx_op.to_onnx(
                    inputs=[('X', FloatTensorType([None, None]))],
                    target_opset=12)
    
    with open("model_onnx.onnx", "wb") as f:
        f.write(model_onnx.SerializeToString())

``[('X', FloatTensorType([None, None]))]`` means the function applies on
every tensor whatever its dimension is.

.. code:: ipython3

    %onnxview model_onnx






.. raw:: html

    <div id="M7a9433f222df459099afaa0766f35141-cont"><div id="M7a9433f222df459099afaa0766f35141" style="width:100%;height:100%;"></div></div>
    <script>

    require(['http://www.xavierdupre.fr/js/vizjs/viz.js'], function() { var svgGraph = Viz("digraph{\n  orientation=portrait;\n  ranksep=0.25;\n  nodesep=0.05;\n\n  X [shape=box color=red label=\"X\nfloat((0, 0))\" fontsize=10];\n\n  Y [shape=box color=green label=\"Y\nfloat((0, 0))\" fontsize=10];\n\n  Ad_Addcst [shape=box label=\"Ad_Addcst\nfloat32((1,))\n[0.1]\" fontsize=10];\n\n  Sh_shape0 [shape=box label=\"Sh_shape0\" fontsize=10];\n  Sh_Shape [shape=box style=\"filled,rounded\" color=orange label=\"Shape\n(Sh_Shape)\" fontsize=10];\n  X -> Sh_Shape;\n  Sh_Shape -> Sh_shape0;\n\n  Co_output0 [shape=box label=\"Co_output0\" fontsize=10];\n  Co_ConstantOfShape [shape=box style=\"filled,rounded\" color=orange label=\"ConstantOfShape\n(Co_ConstantOfShape)\" fontsize=10];\n  Sh_shape0 -> Co_ConstantOfShape;\n  Co_ConstantOfShape -> Co_output0;\n\n  Re_reduced0 [shape=box label=\"Re_reduced0\" fontsize=10];\n  Re_ReduceSum [shape=box style=\"filled,rounded\" color=orange label=\"ReduceSum\n(Re_ReduceSum)\naxes=[1]\nkeepdims=1\" fontsize=10];\n  Co_output0 -> Re_ReduceSum;\n  Re_ReduceSum -> Re_reduced0;\n\n  Tr_transposed0 [shape=box label=\"Tr_transposed0\" fontsize=10];\n  Tr_Transpose [shape=box style=\"filled,rounded\" color=orange label=\"Transpose\n(Tr_Transpose)\nperm=[1 0]\" fontsize=10];\n  Re_reduced0 -> Tr_Transpose;\n  Tr_Transpose -> Tr_transposed0;\n\n  Ma_Y0 [shape=box label=\"Ma_Y0\" fontsize=10];\n  Ma_MatMul [shape=box style=\"filled,rounded\" color=orange label=\"MatMul\n(Ma_MatMul)\" fontsize=10];\n  Re_reduced0 -> Ma_MatMul;\n  Tr_transposed0 -> Ma_MatMul;\n  Ma_MatMul -> Ma_Y0;\n\n  Ad_C0 [shape=box label=\"Ad_C0\" fontsize=10];\n  Ad_Add [shape=box style=\"filled,rounded\" color=orange label=\"Add\n(Ad_Add)\" fontsize=10];\n  Ma_Y0 -> Ad_Add;\n  Ad_Addcst -> Ad_Add;\n  Ad_Add -> Ad_C0;\n\n  Sh_shape02 [shape=box label=\"Sh_shape02\" fontsize=10];\n  Sh_Shape1 [shape=box style=\"filled,rounded\" color=orange label=\"Shape\n(Sh_Shape1)\" fontsize=10];\n  X -> Sh_Shape1;\n  Sh_Shape1 -> Sh_shape02;\n\n  Co_output02 [shape=box label=\"Co_output02\" fontsize=10];\n  Co_ConstantOfShape1 [shape=box style=\"filled,rounded\" color=orange label=\"ConstantOfShape\n(Co_ConstantOfShape1)\" fontsize=10];\n  Sh_shape02 -> Co_ConstantOfShape1;\n  Co_ConstantOfShape1 -> Co_output02;\n\n  Re_reduced01 [shape=box label=\"Re_reduced01\" fontsize=10];\n  Re_ReduceSum1 [shape=box style=\"filled,rounded\" color=orange label=\"ReduceSum\n(Re_ReduceSum1)\naxes=[0]\nkeepdims=0\" fontsize=10];\n  Co_output02 -> Re_ReduceSum1;\n  Re_ReduceSum1 -> Re_reduced01;\n\n  Sh_shape01 [shape=box label=\"Sh_shape01\" fontsize=10];\n  Sh_Shape2 [shape=box style=\"filled,rounded\" color=orange label=\"Shape\n(Sh_Shape2)\" fontsize=10];\n  Re_reduced01 -> Sh_Shape2;\n  Sh_Shape2 -> Sh_shape01;\n\n  Co_output01 [shape=box label=\"Co_output01\" fontsize=10];\n  Co_ConstantOfShape2 [shape=box style=\"filled,rounded\" color=orange label=\"ConstantOfShape\n(Co_ConstantOfShape2)\nvalue=[10.]\" fontsize=10];\n  Sh_shape01 -> Co_ConstantOfShape2;\n  Co_ConstantOfShape2 -> Co_output01;\n\n  Di_C0 [shape=box label=\"Di_C0\" fontsize=10];\n  Di_Div [shape=box style=\"filled,rounded\" color=orange label=\"Div\n(Di_Div)\" fontsize=10];\n  X -> Di_Div;\n  Co_output01 -> Di_Div;\n  Di_Div -> Di_C0;\n\n  scan0 [shape=box label=\"scan0\" fontsize=10];\n  scan1 [shape=box label=\"scan1\" fontsize=10];\n  Sc_Scan [shape=box style=\"filled,rounded\" color=orange label=\"Scan\n(Sc_Scan)\nbody=node {\n  input: 'next_in'...\nnum_scan_inputs=1\" fontsize=10];\n  Di_C0 -> Sc_Scan;\n  Di_C0 -> Sc_Scan;\n  Sc_Scan -> scan0;\n  Sc_Scan -> scan1;\n\n  Sh_shape04 [shape=box label=\"Sh_shape04\" fontsize=10];\n  Sh_Shape3 [shape=box style=\"filled,rounded\" color=orange label=\"Shape\n(Sh_Shape3)\" fontsize=10];\n  X -> Sh_Shape3;\n  Sh_Shape3 -> Sh_shape04;\n\n  Co_output04 [shape=box label=\"Co_output04\" fontsize=10];\n  Co_ConstantOfShape3 [shape=box style=\"filled,rounded\" color=orange label=\"ConstantOfShape\n(Co_ConstantOfShape3)\" fontsize=10];\n  Sh_shape04 -> Co_ConstantOfShape3;\n  Co_ConstantOfShape3 -> Co_output04;\n\n  Re_reduced02 [shape=box label=\"Re_reduced02\" fontsize=10];\n  Re_ReduceSum2 [shape=box style=\"filled,rounded\" color=orange label=\"ReduceSum\n(Re_ReduceSum2)\naxes=[1]\nkeepdims=1\" fontsize=10];\n  Co_output04 -> Re_ReduceSum2;\n  Re_ReduceSum2 -> Re_reduced02;\n\n  Sh_shape03 [shape=box label=\"Sh_shape03\" fontsize=10];\n  Sh_Shape4 [shape=box style=\"filled,rounded\" color=orange label=\"Shape\n(Sh_Shape4)\" fontsize=10];\n  Re_reduced02 -> Sh_Shape4;\n  Sh_Shape4 -> Sh_shape03;\n\n  Co_output03 [shape=box label=\"Co_output03\" fontsize=10];\n  Co_ConstantOfShape4 [shape=box style=\"filled,rounded\" color=orange label=\"ConstantOfShape\n(Co_ConstantOfShape4)\nvalue=[-0.5]\" fontsize=10];\n  Sh_shape03 -> Co_ConstantOfShape4;\n  Co_ConstantOfShape4 -> Co_output03;\n\n  Mu_C01 [shape=box label=\"Mu_C01\" fontsize=10];\n  Mu_Mul [shape=box style=\"filled,rounded\" color=orange label=\"Mul\n(Mu_Mul)\" fontsize=10];\n  scan1 -> Mu_Mul;\n  Co_output03 -> Mu_Mul;\n  Mu_Mul -> Mu_C01;\n\n  Ex_output0 [shape=box label=\"Ex_output0\" fontsize=10];\n  Ex_Exp [shape=box style=\"filled,rounded\" color=orange label=\"Exp\n(Ex_Exp)\" fontsize=10];\n  Mu_C01 -> Ex_Exp;\n  Ex_Exp -> Ex_output0;\n\n  Mu_C0 [shape=box label=\"Mu_C0\" fontsize=10];\n  Mu_Mul1 [shape=box style=\"filled,rounded\" color=orange label=\"Mul\n(Mu_Mul1)\" fontsize=10];\n  Ad_C0 -> Mu_Mul1;\n  Ex_output0 -> Mu_Mul1;\n  Mu_Mul1 -> Mu_C0;\n\n  Sh_shape05 [shape=box label=\"Sh_shape05\" fontsize=10];\n  Sh_Shape5 [shape=box style=\"filled,rounded\" color=orange label=\"Shape\n(Sh_Shape5)\" fontsize=10];\n  X -> Sh_Shape5;\n  Sh_Shape5 -> Sh_shape05;\n\n  Co_output05 [shape=box label=\"Co_output05\" fontsize=10];\n  Co_ConstantOfShape5 [shape=box style=\"filled,rounded\" color=orange label=\"ConstantOfShape\n(Co_ConstantOfShape5)\" fontsize=10];\n  Sh_shape05 -> Co_ConstantOfShape5;\n  Co_ConstantOfShape5 -> Co_output05;\n\n  Re_reduced03 [shape=box label=\"Re_reduced03\" fontsize=10];\n  Re_ReduceSum3 [shape=box style=\"filled,rounded\" color=orange label=\"ReduceSum\n(Re_ReduceSum3)\naxes=[1]\nkeepdims=1\" fontsize=10];\n  Co_output05 -> Re_ReduceSum3;\n  Re_ReduceSum3 -> Re_reduced03;\n\n  Tr_transposed01 [shape=box label=\"Tr_transposed01\" fontsize=10];\n  Tr_Transpose1 [shape=box style=\"filled,rounded\" color=orange label=\"Transpose\n(Tr_Transpose1)\nperm=[1 0]\" fontsize=10];\n  Re_reduced03 -> Tr_Transpose1;\n  Tr_Transpose1 -> Tr_transposed01;\n\n  Ma_Y01 [shape=box label=\"Ma_Y01\" fontsize=10];\n  Ma_MatMul1 [shape=box style=\"filled,rounded\" color=orange label=\"MatMul\n(Ma_MatMul1)\" fontsize=10];\n  Re_reduced03 -> Ma_MatMul1;\n  Tr_transposed01 -> Ma_MatMul1;\n  Ma_MatMul1 -> Ma_Y01;\n\n  Ad_Addcst1 [shape=box label=\"Ad_Addcst1\" fontsize=10];\n  Ad_Addcst1_op [shape=box style=\"filled,rounded\" color=orange label=\"Identity\n(Ad_Addcst1_op)\" fontsize=10];\n  Ad_Addcst -> Ad_Addcst1_op;\n  Ad_Addcst1_op -> Ad_Addcst1;\n\n  Ad_C01 [shape=box label=\"Ad_C01\" fontsize=10];\n  Ad_Add1 [shape=box style=\"filled,rounded\" color=orange label=\"Add\n(Ad_Add1)\" fontsize=10];\n  Ma_Y01 -> Ad_Add1;\n  Ad_Addcst1 -> Ad_Add1;\n  Ad_Add1 -> Ad_C01;\n\n  Sh_shape07 [shape=box label=\"Sh_shape07\" fontsize=10];\n  Sh_Shape6 [shape=box style=\"filled,rounded\" color=orange label=\"Shape\n(Sh_Shape6)\" fontsize=10];\n  X -> Sh_Shape6;\n  Sh_Shape6 -> Sh_shape07;\n\n  Co_output07 [shape=box label=\"Co_output07\" fontsize=10];\n  Co_ConstantOfShape6 [shape=box style=\"filled,rounded\" color=orange label=\"ConstantOfShape\n(Co_ConstantOfShape6)\" fontsize=10];\n  Sh_shape07 -> Co_ConstantOfShape6;\n  Co_ConstantOfShape6 -> Co_output07;\n\n  Re_reduced04 [shape=box label=\"Re_reduced04\" fontsize=10];\n  Re_ReduceSum4 [shape=box style=\"filled,rounded\" color=orange label=\"ReduceSum\n(Re_ReduceSum4)\naxes=[0]\nkeepdims=0\" fontsize=10];\n  Co_output07 -> Re_ReduceSum4;\n  Re_ReduceSum4 -> Re_reduced04;\n\n  Sh_shape06 [shape=box label=\"Sh_shape06\" fontsize=10];\n  Sh_Shape7 [shape=box style=\"filled,rounded\" color=orange label=\"Shape\n(Sh_Shape7)\" fontsize=10];\n  Re_reduced04 -> Sh_Shape7;\n  Sh_Shape7 -> Sh_shape06;\n\n  Co_output06 [shape=box label=\"Co_output06\" fontsize=10];\n  Co_ConstantOfShape7 [shape=box style=\"filled,rounded\" color=orange label=\"ConstantOfShape\n(Co_ConstantOfShape7)\nvalue=[1.]\" fontsize=10];\n  Sh_shape06 -> Co_ConstantOfShape7;\n  Co_ConstantOfShape7 -> Co_output06;\n\n  Di_C01 [shape=box label=\"Di_C01\" fontsize=10];\n  Di_Div1 [shape=box style=\"filled,rounded\" color=orange label=\"Div\n(Di_Div1)\" fontsize=10];\n  X -> Di_Div1;\n  Co_output06 -> Di_Div1;\n  Di_Div1 -> Di_C01;\n\n  scan01 [shape=box label=\"scan01\" fontsize=10];\n  scan11 [shape=box label=\"scan11\" fontsize=10];\n  Sc_Scan1 [shape=box style=\"filled,rounded\" color=orange label=\"Scan\n(Sc_Scan1)\nbody=node {\n  input: 'next_in'...\nnum_scan_inputs=1\" fontsize=10];\n  Di_C01 -> Sc_Scan1;\n  Di_C01 -> Sc_Scan1;\n  Sc_Scan1 -> scan01;\n  Sc_Scan1 -> scan11;\n\n  Sh_shape09 [shape=box label=\"Sh_shape09\" fontsize=10];\n  Sh_Shape8 [shape=box style=\"filled,rounded\" color=orange label=\"Shape\n(Sh_Shape8)\" fontsize=10];\n  X -> Sh_Shape8;\n  Sh_Shape8 -> Sh_shape09;\n\n  Co_output09 [shape=box label=\"Co_output09\" fontsize=10];\n  Co_ConstantOfShape8 [shape=box style=\"filled,rounded\" color=orange label=\"ConstantOfShape\n(Co_ConstantOfShape8)\" fontsize=10];\n  Sh_shape09 -> Co_ConstantOfShape8;\n  Co_ConstantOfShape8 -> Co_output09;\n\n  Re_reduced05 [shape=box label=\"Re_reduced05\" fontsize=10];\n  Re_ReduceSum5 [shape=box style=\"filled,rounded\" color=orange label=\"ReduceSum\n(Re_ReduceSum5)\naxes=[1]\nkeepdims=1\" fontsize=10];\n  Co_output09 -> Re_ReduceSum5;\n  Re_ReduceSum5 -> Re_reduced05;\n\n  Sh_shape08 [shape=box label=\"Sh_shape08\" fontsize=10];\n  Sh_Shape9 [shape=box style=\"filled,rounded\" color=orange label=\"Shape\n(Sh_Shape9)\" fontsize=10];\n  Re_reduced05 -> Sh_Shape9;\n  Sh_Shape9 -> Sh_shape08;\n\n  Co_output08 [shape=box label=\"Co_output08\" fontsize=10];\n  Co_ConstantOfShape9 [shape=box style=\"filled,rounded\" color=orange label=\"ConstantOfShape\n(Co_ConstantOfShape9)\nvalue=[-0.5]\" fontsize=10];\n  Sh_shape08 -> Co_ConstantOfShape9;\n  Co_ConstantOfShape9 -> Co_output08;\n\n  Mu_C03 [shape=box label=\"Mu_C03\" fontsize=10];\n  Mu_Mul2 [shape=box style=\"filled,rounded\" color=orange label=\"Mul\n(Mu_Mul2)\" fontsize=10];\n  scan11 -> Mu_Mul2;\n  Co_output08 -> Mu_Mul2;\n  Mu_Mul2 -> Mu_C03;\n\n  Ex_output01 [shape=box label=\"Ex_output01\" fontsize=10];\n  Ex_Exp1 [shape=box style=\"filled,rounded\" color=orange label=\"Exp\n(Ex_Exp1)\" fontsize=10];\n  Mu_C03 -> Ex_Exp1;\n  Ex_Exp1 -> Ex_output01;\n\n  Mu_C02 [shape=box label=\"Mu_C02\" fontsize=10];\n  Mu_Mul3 [shape=box style=\"filled,rounded\" color=orange label=\"Mul\n(Mu_Mul3)\" fontsize=10];\n  Ad_C01 -> Mu_Mul3;\n  Ex_output01 -> Mu_Mul3;\n  Mu_Mul3 -> Mu_C02;\n\n  final_after_op_Add [shape=box label=\"final_after_op_Add\" fontsize=10];\n  Ad_Add2 [shape=box style=\"filled,rounded\" color=orange label=\"Add\n(Ad_Add2)\" fontsize=10];\n  Mu_C0 -> Ad_Add2;\n  Mu_C02 -> Ad_Add2;\n  Ad_Add2 -> final_after_op_Add;\n\n  Id_Identity [shape=box style=\"filled,rounded\" color=orange label=\"Identity\n(Id_Identity)\" fontsize=10];\n  final_after_op_Add -> Id_Identity;\n  Id_Identity -> Y;\n}");
    document.getElementById('M7a9433f222df459099afaa0766f35141').innerHTML = svgGraph; });

    </script>



.. code:: ipython3

    from mlprodict.onnxrt import OnnxInference
    from mlprodict.tools.asv_options_helper import get_ir_version_from_onnx
    # line needed when onnx is more recent than onnxruntime
    model_onnx.ir_version = get_ir_version_from_onnx()
    pyrun = OnnxInference(model_onnx, inplace=False)
    rtrun = OnnxInference(model_onnx, runtime="onnxruntime1")

.. code:: ipython3

    pyres = pyrun.run({'X': Xtest.astype(numpy.float32)})
    pyres




.. parsed-literal::
    {'Y': array([[2.00000003e-01, 4.88993339e-02, 4.25047986e-02, 5.94472338e-04,
             4.36813496e-02, 7.54737947e-03, 4.79816124e-02, 2.44870633e-02,
             6.11804537e-02, 5.91636561e-02],
            [4.88993339e-02, 2.00000003e-01, 1.41439855e-01, 1.33559676e-02,
             1.56540006e-01, 5.58967553e-02, 5.50623611e-03, 1.61259342e-03,
             9.16550029e-03, 8.54624342e-03],
            [4.25047986e-02, 1.41439855e-01, 2.00000003e-01, 1.66351143e-02,
             1.95919767e-01, 6.23358004e-02, 4.18740092e-03, 1.16061396e-03,
             7.11296080e-03, 6.59678876e-03],
            [5.94472338e-04, 1.33559676e-02, 1.66351143e-02, 2.00000003e-01,
             1.59911271e-02, 6.43812567e-02, 5.90140644e-06, 6.77518699e-07,
             1.52524681e-05, 1.33384119e-05],
            [4.36813496e-02, 1.56540006e-01, 1.95919767e-01, 1.59911271e-02,
             2.00000003e-01, 6.11287355e-02, 4.41158377e-03, 1.23487751e-03,
             7.46431900e-03, 6.92846393e-03],
            [7.54737947e-03, 5.58967553e-02, 6.23358004e-02, 6.43812567e-02,
             6.11287355e-02, 2.00000003e-01, 2.30531194e-04, 4.11224828e-05,
             4.89213213e-04, 4.42317745e-04],
            [4.79816124e-02, 5.50623611e-03, 4.18740092e-03, 5.90140644e-06,
             4.41158377e-03, 2.30531194e-04, 2.00000003e-01, 8.95609260e-02,
             1.03946947e-01, 1.06810644e-01],
            [2.44870633e-02, 1.61259342e-03, 1.16061396e-03, 6.77518699e-07,
             1.23487751e-03, 4.11224828e-05, 8.95609260e-02, 2.00000003e-01,
             7.89686665e-02, 8.05577263e-02],
            [6.11804537e-02, 9.16550029e-03, 7.11296080e-03, 1.52524681e-05,
             7.46431900e-03, 4.89213213e-04, 1.03946947e-01, 7.89686665e-02,
             2.00000003e-01, 1.89352334e-01],
            [5.91636561e-02, 8.54624342e-03, 6.59678876e-03, 1.33384119e-05,
             6.92846393e-03, 4.42317745e-04, 1.06810644e-01, 8.05577263e-02,
             1.89352334e-01, 2.00000003e-01]], dtype=float32)}



.. code:: ipython3

    rtres = rtrun.run({'X': Xtest.astype(numpy.float32)})
    rtres




.. parsed-literal::
    {'Y': array([[2.00000003e-01, 4.88993339e-02, 4.25047986e-02, 5.94472338e-04,
             4.36813496e-02, 7.54737947e-03, 4.79816124e-02, 2.44870633e-02,
             6.11804537e-02, 5.91636561e-02],
            [4.88993339e-02, 2.00000003e-01, 1.41439855e-01, 1.33559657e-02,
             1.56540006e-01, 5.58967553e-02, 5.50623611e-03, 1.61259342e-03,
             9.16550029e-03, 8.54624342e-03],
            [4.25047986e-02, 1.41439855e-01, 2.00000003e-01, 1.66351143e-02,
             1.95919767e-01, 6.23358078e-02, 4.18740092e-03, 1.16061396e-03,
             7.11296080e-03, 6.59678876e-03],
            [5.94472338e-04, 1.33559657e-02, 1.66351143e-02, 2.00000003e-01,
             1.59911271e-02, 6.43812567e-02, 5.90140644e-06, 6.77518699e-07,
             1.52524681e-05, 1.33384119e-05],
            [4.36813496e-02, 1.56540006e-01, 1.95919767e-01, 1.59911271e-02,
             2.00000003e-01, 6.11287355e-02, 4.41158377e-03, 1.23487751e-03,
             7.46431900e-03, 6.92846393e-03],
            [7.54737947e-03, 5.58967553e-02, 6.23358078e-02, 6.43812567e-02,
             6.11287355e-02, 2.00000003e-01, 2.30531194e-04, 4.11224828e-05,
             4.89213213e-04, 4.42317745e-04],
            [4.79816124e-02, 5.50623611e-03, 4.18740092e-03, 5.90140644e-06,
             4.41158377e-03, 2.30531194e-04, 2.00000003e-01, 8.95609260e-02,
             1.03946947e-01, 1.06810644e-01],
            [2.44870633e-02, 1.61259342e-03, 1.16061396e-03, 6.77518699e-07,
             1.23487751e-03, 4.11224828e-05, 8.95609260e-02, 2.00000003e-01,
             7.89686665e-02, 8.05577263e-02],
            [6.11804537e-02, 9.16550029e-03, 7.11296080e-03, 1.52524681e-05,
             7.46431900e-03, 4.89213213e-04, 1.03946947e-01, 7.89686665e-02,
             2.00000003e-01, 1.89352334e-01],
            [5.91636561e-02, 8.54624342e-03, 6.59678876e-03, 1.33384119e-05,
             6.92846393e-03, 4.42317745e-04, 1.06810644e-01, 8.05577263e-02,
             1.89352334e-01, 2.00000003e-01]], dtype=float32)}



.. code:: ipython3

    from mlprodict.onnxrt.validate.validate_difference import measure_relative_difference
    measure_relative_difference(pyres['Y'], rtres['Y'])




.. parsed-literal::
    9.059079e-08



The last runtime uses the same runtime but with double instead of
floats.

.. code:: ipython3

    onnx_op_64 = convert_kernel(ker, 'X', output_names=['final_after_op_Add'],
                                dtype=numpy.float64, op_version=12)
    onnx_op_64 = OnnxIdentity(onnx_op_64, output_names=['Y'], op_version=12)
    model_onnx_64 = onnx_op_64.to_onnx(
                        inputs=[('X', DoubleTensorType([None, None]))],
                        target_opset=12)

.. code:: ipython3

    pyrun64 = OnnxInference(model_onnx_64, runtime="python", inplace=False)
    pyres64 = pyrun64.run({'X': Xtest.astype(numpy.float64)})
    measure_relative_difference(pyres['Y'], pyres64['Y'])




.. parsed-literal::
    7.106326595962827e-07



Side by side
------------

We run every node independently and we compare the output at each step.

.. code:: ipython3

    %matplotlib inline

.. code:: ipython3

    from mlprodict.onnxrt.validate.side_by_side import side_by_side_by_values
    from pandas import DataFrame
    
    def run_sbs(r1, r2, r3, x):
        sbs = side_by_side_by_values([r1, r2, r3], 
                                     inputs=[
                                         {'X': x.astype(numpy.float32)},
                                         {'X': x.astype(numpy.float32)},
                                         {'X': x.astype(numpy.float64)},
                                     ])
        df = DataFrame(sbs)
        dfd = df.drop(['value[0]', 'value[1]', 'value[2]'], axis=1).copy()
        dfd.loc[dfd.cmp == 'ERROR->=inf', 'v[1]'] = 10
        return dfd, sbs
    
    dfd, _ = run_sbs(pyrun, rtrun, pyrun64, Xtest)
    dfd






.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>metric</th>
          <th>step</th>
          <th>v[0]</th>
          <th>v[1]</th>
          <th>v[2]</th>
          <th>cmp</th>
          <th>name</th>
          <th>shape[0]</th>
          <th>shape[1]</th>
          <th>shape[2]</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>nb_results</td>
          <td>-1</td>
          <td>49</td>
          <td>4.900000e+01</td>
          <td>4.900000e+01</td>
          <td>OK</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>1</th>
          <td>abs-diff</td>
          <td>0</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>3.250289e-08</td>
          <td>OK</td>
          <td>X</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
        </tr>
        <tr>
          <th>2</th>
          <td>abs-diff</td>
          <td>1</td>
          <td>0</td>
          <td>9.059079e-08</td>
          <td>7.106327e-07</td>
          <td>OK</td>
          <td>Y</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
        </tr>
        <tr>
          <th>3</th>
          <td>abs-diff</td>
          <td>2</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>1.490116e-08</td>
          <td>OK</td>
          <td>Ad_Addcst</td>
          <td>(1,)</td>
          <td>(1,)</td>
          <td>(1,)</td>
        </tr>
        <tr>
          <th>4</th>
          <td>abs-diff</td>
          <td>3</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Sh_shape0</td>
          <td>(2,)</td>
          <td>(2,)</td>
          <td>(2,)</td>
        </tr>
        <tr>
          <th>5</th>
          <td>abs-diff</td>
          <td>4</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Co_output0</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
        </tr>
        <tr>
          <th>6</th>
          <td>abs-diff</td>
          <td>5</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Re_reduced0</td>
          <td>(10, 1)</td>
          <td>(10, 1)</td>
          <td>(10, 1)</td>
        </tr>
        <tr>
          <th>7</th>
          <td>abs-diff</td>
          <td>6</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Tr_transposed0</td>
          <td>(1, 10)</td>
          <td>(1, 10)</td>
          <td>(1, 10)</td>
        </tr>
        <tr>
          <th>8</th>
          <td>abs-diff</td>
          <td>7</td>
          <td>0</td>
          <td>1.000000e+00</td>
          <td>7.106327e-07</td>
          <td>ERROR-&gt;=1.0</td>
          <td>Ma_Y0</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
        </tr>
        <tr>
          <th>9</th>
          <td>abs-diff</td>
          <td>8</td>
          <td>0</td>
          <td>4.863269e+00</td>
          <td>7.106327e-07</td>
          <td>ERROR-&gt;=4.9</td>
          <td>Ad_C0</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
        </tr>
        <tr>
          <th>10</th>
          <td>abs-diff</td>
          <td>9</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Sh_shape02</td>
          <td>(2,)</td>
          <td>(2,)</td>
          <td>(2,)</td>
        </tr>
        <tr>
          <th>11</th>
          <td>abs-diff</td>
          <td>10</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Co_output02</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
        </tr>
        <tr>
          <th>12</th>
          <td>abs-diff</td>
          <td>11</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Re_reduced01</td>
          <td>(6,)</td>
          <td>(6,)</td>
          <td>(6,)</td>
        </tr>
        <tr>
          <th>13</th>
          <td>abs-diff</td>
          <td>12</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Sh_shape01</td>
          <td>(1,)</td>
          <td>(1,)</td>
          <td>(1,)</td>
        </tr>
        <tr>
          <th>14</th>
          <td>abs-diff</td>
          <td>13</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Co_output01</td>
          <td>(6,)</td>
          <td>(6,)</td>
          <td>(6,)</td>
        </tr>
        <tr>
          <th>15</th>
          <td>abs-diff</td>
          <td>14</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>4.969472e-08</td>
          <td>OK</td>
          <td>Di_C0</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
        </tr>
        <tr>
          <th>16</th>
          <td>abs-diff</td>
          <td>15</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>4.969472e-08</td>
          <td>OK</td>
          <td>scan0</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
        </tr>
        <tr>
          <th>17</th>
          <td>abs-diff</td>
          <td>16</td>
          <td>0</td>
          <td>9.471974e+01</td>
          <td>7.215496e-07</td>
          <td>ERROR-&gt;=94.7</td>
          <td>scan1</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
        </tr>
        <tr>
          <th>18</th>
          <td>abs-diff</td>
          <td>17</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Sh_shape04</td>
          <td>(2,)</td>
          <td>(2,)</td>
          <td>(2,)</td>
        </tr>
        <tr>
          <th>19</th>
          <td>abs-diff</td>
          <td>18</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Co_output04</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
        </tr>
        <tr>
          <th>20</th>
          <td>abs-diff</td>
          <td>19</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Re_reduced02</td>
          <td>(10, 1)</td>
          <td>(10, 1)</td>
          <td>(10, 1)</td>
        </tr>
        <tr>
          <th>21</th>
          <td>abs-diff</td>
          <td>20</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Sh_shape03</td>
          <td>(2,)</td>
          <td>(2,)</td>
          <td>(2,)</td>
        </tr>
        <tr>
          <th>22</th>
          <td>abs-diff</td>
          <td>21</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Co_output03</td>
          <td>(10, 1)</td>
          <td>(10, 1)</td>
          <td>(10, 1)</td>
        </tr>
        <tr>
          <th>23</th>
          <td>abs-diff</td>
          <td>22</td>
          <td>0</td>
          <td>4.736030e+01</td>
          <td>7.215496e-07</td>
          <td>ERROR-&gt;=47.4</td>
          <td>Mu_C01</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
        </tr>
        <tr>
          <th>24</th>
          <td>abs-diff</td>
          <td>23</td>
          <td>0</td>
          <td>7.247263e-08</td>
          <td>7.215496e-07</td>
          <td>OK</td>
          <td>Ex_output0</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
        </tr>
        <tr>
          <th>25</th>
          <td>abs-diff</td>
          <td>24</td>
          <td>0</td>
          <td>5.000000e-01</td>
          <td>7.106327e-07</td>
          <td>ERROR-&gt;=0.5</td>
          <td>Mu_C0</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
        </tr>
        <tr>
          <th>26</th>
          <td>abs-diff</td>
          <td>25</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Sh_shape05</td>
          <td>(2,)</td>
          <td>(2,)</td>
          <td>(2,)</td>
        </tr>
        <tr>
          <th>27</th>
          <td>abs-diff</td>
          <td>26</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Co_output05</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
        </tr>
        <tr>
          <th>28</th>
          <td>abs-diff</td>
          <td>27</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Re_reduced03</td>
          <td>(10, 1)</td>
          <td>(10, 1)</td>
          <td>(10, 1)</td>
        </tr>
        <tr>
          <th>29</th>
          <td>abs-diff</td>
          <td>28</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Tr_transposed01</td>
          <td>(1, 10)</td>
          <td>(1, 10)</td>
          <td>(1, 10)</td>
        </tr>
        <tr>
          <th>30</th>
          <td>abs-diff</td>
          <td>29</td>
          <td>0</td>
          <td>1.000000e+00</td>
          <td>6.830406e-07</td>
          <td>ERROR-&gt;=1.0</td>
          <td>Ma_Y01</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
        </tr>
        <tr>
          <th>31</th>
          <td>abs-diff</td>
          <td>30</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>1.490116e-08</td>
          <td>OK</td>
          <td>Ad_Addcst1</td>
          <td>(1,)</td>
          <td>(1,)</td>
          <td>(1,)</td>
        </tr>
        <tr>
          <th>32</th>
          <td>abs-diff</td>
          <td>31</td>
          <td>0</td>
          <td>1.000000e+00</td>
          <td>6.830406e-07</td>
          <td>ERROR-&gt;=1.0</td>
          <td>Ad_C01</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
        </tr>
        <tr>
          <th>33</th>
          <td>abs-diff</td>
          <td>32</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Sh_shape07</td>
          <td>(2,)</td>
          <td>(2,)</td>
          <td>(2,)</td>
        </tr>
        <tr>
          <th>34</th>
          <td>abs-diff</td>
          <td>33</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Co_output07</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
        </tr>
        <tr>
          <th>35</th>
          <td>abs-diff</td>
          <td>34</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Re_reduced04</td>
          <td>(6,)</td>
          <td>(6,)</td>
          <td>(6,)</td>
        </tr>
        <tr>
          <th>36</th>
          <td>abs-diff</td>
          <td>35</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Sh_shape06</td>
          <td>(1,)</td>
          <td>(1,)</td>
          <td>(1,)</td>
        </tr>
        <tr>
          <th>37</th>
          <td>abs-diff</td>
          <td>36</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Co_output06</td>
          <td>(6,)</td>
          <td>(6,)</td>
          <td>(6,)</td>
        </tr>
        <tr>
          <th>38</th>
          <td>abs-diff</td>
          <td>37</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>3.250289e-08</td>
          <td>OK</td>
          <td>Di_C01</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
        </tr>
        <tr>
          <th>39</th>
          <td>abs-diff</td>
          <td>38</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>3.250289e-08</td>
          <td>OK</td>
          <td>scan01</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
        </tr>
        <tr>
          <th>40</th>
          <td>abs-diff</td>
          <td>39</td>
          <td>0</td>
          <td>1.947547e+03</td>
          <td>6.849032e-07</td>
          <td>ERROR-&gt;=1947.5</td>
          <td>scan11</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
        </tr>
        <tr>
          <th>41</th>
          <td>abs-diff</td>
          <td>40</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Sh_shape09</td>
          <td>(2,)</td>
          <td>(2,)</td>
          <td>(2,)</td>
        </tr>
        <tr>
          <th>42</th>
          <td>abs-diff</td>
          <td>41</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Co_output09</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
          <td>(10, 6)</td>
        </tr>
        <tr>
          <th>43</th>
          <td>abs-diff</td>
          <td>42</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Re_reduced05</td>
          <td>(10, 1)</td>
          <td>(10, 1)</td>
          <td>(10, 1)</td>
        </tr>
        <tr>
          <th>44</th>
          <td>abs-diff</td>
          <td>43</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Sh_shape08</td>
          <td>(2,)</td>
          <td>(2,)</td>
          <td>(2,)</td>
        </tr>
        <tr>
          <th>45</th>
          <td>abs-diff</td>
          <td>44</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>Co_output08</td>
          <td>(10, 1)</td>
          <td>(10, 1)</td>
          <td>(10, 1)</td>
        </tr>
        <tr>
          <th>46</th>
          <td>abs-diff</td>
          <td>45</td>
          <td>0</td>
          <td>9.737733e+02</td>
          <td>6.849032e-07</td>
          <td>ERROR-&gt;=973.8</td>
          <td>Mu_C03</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
        </tr>
        <tr>
          <th>47</th>
          <td>abs-diff</td>
          <td>46</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>6.849032e-07</td>
          <td>OK</td>
          <td>Ex_output01</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
        </tr>
        <tr>
          <th>48</th>
          <td>abs-diff</td>
          <td>47</td>
          <td>0</td>
          <td>0.000000e+00</td>
          <td>6.830406e-07</td>
          <td>OK</td>
          <td>Mu_C02</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
        </tr>
        <tr>
          <th>49</th>
          <td>abs-diff</td>
          <td>48</td>
          <td>0</td>
          <td>9.059079e-08</td>
          <td>7.106327e-07</td>
          <td>OK</td>
          <td>final_after_op_Add</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
          <td>(10, 10)</td>
        </tr>
      </tbody>
    </table>
    </div>



.. code:: ipython3

    ax = dfd[['name', 'v[2]']].iloc[1:].set_index('name').plot(kind='bar', figsize=(14,4), logy=True)
    ax.set_title("relative difference for each output between python and onnxruntime");



.. image:: onnx_sbs_23_0.png


Let’s try for other inputs.

.. code:: ipython3

    import warnings
    from matplotlib.cbook.deprecation import MatplotlibDeprecationWarning
    import matplotlib.pyplot as plt
    
    with warnings.catch_warnings():
        warnings.simplefilter("ignore", MatplotlibDeprecationWarning)
        values = [4, 6, 8, 12]
        fig, ax = plt.subplots(len(values), 2, figsize=(14, len(values) * 4))
    
        for i, d in enumerate(values):
            for j, dim in enumerate([3, 8]):
                mat = numpy.random.rand(d, dim)
                dfd, _ = run_sbs(pyrun, rtrun, pyrun64, mat)
                dfd[['name', 'v[1]']].iloc[1:].set_index('name').plot(
                    kind='bar', figsize=(14,4), logy=True, ax=ax[i, j])
                ax[i, j].set_title("abs diff input shape {}".format(mat.shape))
                if i < len(values) - 1:
                    for xlabel_i in ax[i, j].get_xticklabels():
                        xlabel_i.set_visible(False)



.. image:: onnx_sbs_25_0.png


Further analysis
----------------

If there is one issue, we can create a simple graph to test. We consider
``Y = A + B`` where *A* and *B* have the following name in the *ONNX*
graph:

.. code:: ipython3

    node = pyrun.sequence_[-2].onnx_node
    final_inputs = list(node.input)
    final_inputs




.. parsed-literal::
    ['Mu_C0', 'Mu_C02']



.. code:: ipython3

    _, sbs = run_sbs(pyrun, rtrun, pyrun64, Xtest)
    
    names = final_inputs + ['Y']
    values = {}
    for row in sbs:
        if row.get('name', '#') not in names:
            continue
        name = row['name']
        values[name] = [row["value[%d]" % i] for i in range(3)]
    
    list(values.keys())




.. parsed-literal::
    ['Y', 'Mu_C0', 'Mu_C02']



Let’s check.

.. code:: ipython3

    for name in names:
        if name not in values:
            raise Exception("Unable to find '{}' in\n{}".format(
                name, [_.get('name', "?") for _ in sbs]))
    
    a, b, c = names
    for i in [0, 1, 2]:
        A = values[a][i]
        B = values[b][i]
        Y = values[c][i]
        diff = Y - (A + B)
        dabs = numpy.max(numpy.abs(diff))
        print(i, diff.dtype, dabs)


.. parsed-literal::
    0 float32 0.10000001
    1 float32 0.0
    2 float64 0.10000000000000003


If the second runtime has issue, we can create a single node to check
something.

.. code:: ipython3

    from skl2onnx.algebra.onnx_ops import OnnxAdd
    onnx_add = OnnxAdd('X1', 'X2', output_names=['Y'], op_version=12)
    add_onnx = onnx_add.to_onnx({'X1': A, 'X2': B}, target_opset=12)

.. code:: ipython3

    add_onnx.ir_version = get_ir_version_from_onnx()
    pyrun_add = OnnxInference(add_onnx, inplace=False)
    rtrun_add = OnnxInference(add_onnx, runtime="onnxruntime1")

.. code:: ipython3

    res1 = pyrun_add.run({'X1': A, 'X2': B})
    res2 = rtrun_add.run({'X1': A, 'X2': B})

.. code:: ipython3

    measure_relative_difference(res1['Y'], res2['Y'])




.. parsed-literal::
    0.0



No mistake here.

onnxruntime
-----------

.. code:: ipython3

    from onnxruntime import InferenceSession, RunOptions, SessionOptions
    opt = SessionOptions()
    opt.enable_mem_pattern = True
    opt.enable_cpu_mem_arena = True
    sess = InferenceSession(model_onnx.SerializeToString(), opt)
    sess




.. parsed-literal::
    <onnxruntime.capi.session.InferenceSession at 0x22d1e846278>



.. code:: ipython3

    res = sess.run(None, {'X': Xtest.astype(numpy.float32)})[0]
    measure_relative_difference(pyres['Y'], res)




.. parsed-literal::
    9.059079e-08



.. code:: ipython3

    res = sess.run(None, {'X': Xtest.astype(numpy.float32)})[0]
    measure_relative_difference(pyres['Y'], res)




.. parsed-literal::
    9.059079e-08



Side by side for MLPRegressor
-----------------------------

.. code:: ipython3

    from sklearn.datasets import load_iris
    from sklearn.model_selection import train_test_split
    from sklearn.neural_network import MLPRegressor
    iris = load_iris()
    X, y = iris.data, iris.target
    X_train, X_test, y_train, y_test = train_test_split(X, y)
    clr = MLPRegressor()
    clr.fit(X_train, y_train)




.. parsed-literal::
    MLPRegressor()



.. code:: ipython3

    from mlprodict.onnx_conv import to_onnx
    onx = to_onnx(clr, X_train.astype(numpy.float32), target_opset=12)

.. code:: ipython3

    onx.ir_version = get_ir_version_from_onnx()
    pyrun = OnnxInference(onx, runtime="python", inplace=False)
    rtrun = OnnxInference(onx, runtime="onnxruntime1")
    rt_partial_run = OnnxInference(onx, runtime="onnxruntime2")
    dfd, _ = run_sbs(rtrun, rt_partial_run, pyrun, X_test)
    dfd






.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>metric</th>
          <th>step</th>
          <th>v[0]</th>
          <th>v[1]</th>
          <th>v[2]</th>
          <th>cmp</th>
          <th>name</th>
          <th>shape[0]</th>
          <th>shape[1]</th>
          <th>shape[2]</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>nb_results</td>
          <td>-1</td>
          <td>13</td>
          <td>13.0</td>
          <td>1.300000e+01</td>
          <td>OK</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>1</th>
          <td>abs-diff</td>
          <td>0</td>
          <td>0</td>
          <td>0.0</td>
          <td>3.973643e-08</td>
          <td>OK</td>
          <td>X</td>
          <td>(38, 4)</td>
          <td>(38, 4)</td>
          <td>(38, 4)</td>
        </tr>
        <tr>
          <th>2</th>
          <td>abs-diff</td>
          <td>1</td>
          <td>0</td>
          <td>0.0</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>coefficient</td>
          <td>(4, 100)</td>
          <td>(4, 100)</td>
          <td>(4, 100)</td>
        </tr>
        <tr>
          <th>3</th>
          <td>abs-diff</td>
          <td>2</td>
          <td>0</td>
          <td>0.0</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>intercepts</td>
          <td>(1, 100)</td>
          <td>(1, 100)</td>
          <td>(1, 100)</td>
        </tr>
        <tr>
          <th>4</th>
          <td>abs-diff</td>
          <td>3</td>
          <td>0</td>
          <td>0.0</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>coefficient1</td>
          <td>(100, 1)</td>
          <td>(100, 1)</td>
          <td>(100, 1)</td>
        </tr>
        <tr>
          <th>5</th>
          <td>abs-diff</td>
          <td>4</td>
          <td>0</td>
          <td>0.0</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>intercepts1</td>
          <td>(1, 1)</td>
          <td>(1, 1)</td>
          <td>(1, 1)</td>
        </tr>
        <tr>
          <th>6</th>
          <td>abs-diff</td>
          <td>5</td>
          <td>0</td>
          <td>0.0</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>shape_tensor</td>
          <td>(2,)</td>
          <td>(2,)</td>
          <td>(2,)</td>
        </tr>
        <tr>
          <th>7</th>
          <td>abs-diff</td>
          <td>6</td>
          <td>0</td>
          <td>0.0</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>cast_input</td>
          <td>(38, 4)</td>
          <td>(38, 4)</td>
          <td>(38, 4)</td>
        </tr>
        <tr>
          <th>8</th>
          <td>abs-diff</td>
          <td>7</td>
          <td>0</td>
          <td>0.0</td>
          <td>1.000000e+00</td>
          <td>ERROR-&gt;=1.0</td>
          <td>mul_result</td>
          <td>(38, 100)</td>
          <td>(38, 100)</td>
          <td>(38, 100)</td>
        </tr>
        <tr>
          <th>9</th>
          <td>abs-diff</td>
          <td>8</td>
          <td>0</td>
          <td>0.0</td>
          <td>1.000000e+00</td>
          <td>ERROR-&gt;=1.0</td>
          <td>add_result</td>
          <td>(38, 100)</td>
          <td>(38, 100)</td>
          <td>(38, 100)</td>
        </tr>
        <tr>
          <th>10</th>
          <td>abs-diff</td>
          <td>9</td>
          <td>0</td>
          <td>0.0</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>next_activations</td>
          <td>(38, 100)</td>
          <td>(38, 100)</td>
          <td>(38, 100)</td>
        </tr>
        <tr>
          <th>11</th>
          <td>abs-diff</td>
          <td>10</td>
          <td>0</td>
          <td>0.0</td>
          <td>2.311237e-02</td>
          <td>e&lt;0.1</td>
          <td>mul_result1</td>
          <td>(38, 1)</td>
          <td>(38, 1)</td>
          <td>(38, 1)</td>
        </tr>
        <tr>
          <th>12</th>
          <td>abs-diff</td>
          <td>11</td>
          <td>0</td>
          <td>0.0</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>add_result1</td>
          <td>(38, 1)</td>
          <td>(38, 1)</td>
          <td>(38, 1)</td>
        </tr>
        <tr>
          <th>13</th>
          <td>abs-diff</td>
          <td>12</td>
          <td>0</td>
          <td>0.0</td>
          <td>0.000000e+00</td>
          <td>OK</td>
          <td>variable</td>
          <td>(38, 1)</td>
          <td>(38, 1)</td>
          <td>(38, 1)</td>
        </tr>
      </tbody>
    </table>
    </div>



.. code:: ipython3

    %onnxview onx






.. raw:: html

    <div id="M402b891477ad4c4d964f2ff94e747eff-cont"><div id="M402b891477ad4c4d964f2ff94e747eff" style="width:100%;height:100%;"></div></div>
    <script>

    require(['http://www.xavierdupre.fr/js/vizjs/viz.js'], function() { var svgGraph = Viz("digraph{\n  orientation=portrait;\n  ranksep=0.25;\n  nodesep=0.05;\n\n  X [shape=box color=red label=\"X\nfloat((0, 4))\" fontsize=10];\n\n  variable [shape=box color=green label=\"variable\nfloat((0, 1))\" fontsize=10];\n\n  coefficient [shape=box label=\"coefficient\nfloat32((4, 100))\n[[ 1.17567964e-01 -2.86232475e-02 -2.16399878e-01 ...\" fontsize=10];\n  intercepts [shape=box label=\"intercepts\nfloat32((1, 100))\n[[-0.02944667 -0.15185878 -0.15710892 -0.14411172 ...\" fontsize=10];\n  coefficient1 [shape=box label=\"coefficient1\nfloat32((100, 1))\n[[-0.21722284]\n [-0.05512699]\n [-0.15377302]\n [-0....\" fontsize=10];\n  intercepts1 [shape=box label=\"intercepts1\nfloat32((1, 1))\n[[0.03666157]]\" fontsize=10];\n  shape_tensor [shape=box label=\"shape_tensor\nint64((2,))\n[-1  1]\" fontsize=10];\n\n  cast_input [shape=box label=\"cast_input\" fontsize=10];\n  Cast [shape=box style=\"filled,rounded\" color=orange label=\"Cast\n(Cast)\nto=1\" fontsize=10];\n  X -> Cast;\n  Cast -> cast_input;\n\n  mul_result [shape=box label=\"mul_result\" fontsize=10];\n  MatMul [shape=box style=\"filled,rounded\" color=orange label=\"MatMul\n(MatMul)\" fontsize=10];\n  cast_input -> MatMul;\n  coefficient -> MatMul;\n  MatMul -> mul_result;\n\n  add_result [shape=box label=\"add_result\" fontsize=10];\n  Add [shape=box style=\"filled,rounded\" color=orange label=\"Add\n(Add)\" fontsize=10];\n  mul_result -> Add;\n  intercepts -> Add;\n  Add -> add_result;\n\n  next_activations [shape=box label=\"next_activations\" fontsize=10];\n  Relu [shape=box style=\"filled,rounded\" color=orange label=\"Relu\n(Relu)\" fontsize=10];\n  add_result -> Relu;\n  Relu -> next_activations;\n\n  mul_result1 [shape=box label=\"mul_result1\" fontsize=10];\n  MatMul1 [shape=box style=\"filled,rounded\" color=orange label=\"MatMul\n(MatMul1)\" fontsize=10];\n  next_activations -> MatMul1;\n  coefficient1 -> MatMul1;\n  MatMul1 -> mul_result1;\n\n  add_result1 [shape=box label=\"add_result1\" fontsize=10];\n  Add1 [shape=box style=\"filled,rounded\" color=orange label=\"Add\n(Add1)\" fontsize=10];\n  mul_result1 -> Add1;\n  intercepts1 -> Add1;\n  Add1 -> add_result1;\n\n  Reshape [shape=box style=\"filled,rounded\" color=orange label=\"Reshape\n(Reshape)\" fontsize=10];\n  add_result1 -> Reshape;\n  shape_tensor -> Reshape;\n  Reshape -> variable;\n}");
    document.getElementById('M402b891477ad4c4d964f2ff94e747eff').innerHTML = svgGraph; });

    </script>
