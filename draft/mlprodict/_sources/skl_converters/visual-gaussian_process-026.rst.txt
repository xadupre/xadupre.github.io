

.. _l-GaussianProcessRegressor-b-reg-dotproduct--o15:

GaussianProcessRegressor - b-reg - dotproduct - 
================================================

Fitted on a problem type *b-reg*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `predict` matches output .


::

        GaussianProcessRegressor(alpha=100.0, kernel=DotProduct(sigma_0=1),
                             random_state=0)

+----------------------+------------+
| index                | 0          |
+======================+============+
| skl_nop              | 1          |
+----------------------+------------+
| onx_size             | 2782       |
+----------------------+------------+
| onx_nnodes           | 5          |
+----------------------+------------+
| onx_ninits           | 5          |
+----------------------+------------+
| onx_doc_string       |            |
+----------------------+------------+
| onx_ir_version       | 8          |
+----------------------+------------+
| onx_domain           | ai.onnx    |
+----------------------+------------+
| onx_model_version    | 0          |
+----------------------+------------+
| onx_producer_name    | skl2onnx   |
+----------------------+------------+
| onx_producer_version | 1.11       |
+----------------------+------------+
| onx_                 | 15         |
+----------------------+------------+
| onx_op_Reshape       | 1          |
+----------------------+------------+
| onx_size_optim       | 2782       |
+----------------------+------------+
| onx_nnodes_optim     | 5          |
+----------------------+------------+
| onx_ninits_optim     | 5          |
+----------------------+------------+
| fit_X_train_.shape   | (112, 4)   |
+----------------------+------------+
| fit_y_train_.shape   | 112        |
+----------------------+------------+
| fit_L_.shape         | (112, 112) |
+----------------------+------------+
| fit_alpha_.shape     | 112        |
+----------------------+------------+


.. gdot::

        digraph{
      nodesep=0.05;
      ranksep=0.25;
      size=7;
      orientation=portrait;

      X [shape=box color=red label="X\nfloat((0, 4))" fontsize=10];

      GPmean [shape=box color=green label="GPmean\nfloat((0, 1))" fontsize=10];

      kgpd_MatMulcst [shape=box label="kgpd_MatMulcst\nfloat32((4, 112))\n[[ 4.3017502e+00  5.1691985e+00  5.9683514e+00  5...." fontsize=10];
      kgpd_Addcst [shape=box label="kgpd_Addcst\nfloat32((1,))\n[0.00282427]" fontsize=10];
      gpr_MatMulcst [shape=box label="gpr_MatMulcst\nfloat32((112,))\n[-0.00250089 -0.00240354  0.01185893 -0.00383051 -..." fontsize=10];
      gpr_Addcst [shape=box label="gpr_Addcst\nfloat32((1, 1))\n[[0.]]" fontsize=10];
      Re_Reshapecst [shape=box label="Re_Reshapecst\nint64((2,))\n[-1  1]" fontsize=10];

      kgpd_Y0 [shape=box label="kgpd_Y0" fontsize=10];
      kgpd_MatMul [shape=box style="filled,rounded" color=orange label="MatMul\n(kgpd_MatMul)" fontsize=10];
      X -> kgpd_MatMul;
      kgpd_MatMulcst -> kgpd_MatMul;
      kgpd_MatMul -> kgpd_Y0;

      kgpd_C0 [shape=box label="kgpd_C0" fontsize=10];
      kgpd_Add [shape=box style="filled,rounded" color=orange label="Add\n(kgpd_Add)" fontsize=10];
      kgpd_Y0 -> kgpd_Add;
      kgpd_Addcst -> kgpd_Add;
      kgpd_Add -> kgpd_C0;

      gpr_Y0 [shape=box label="gpr_Y0" fontsize=10];
      gpr_MatMul [shape=box style="filled,rounded" color=orange label="MatMul\n(gpr_MatMul)" fontsize=10];
      kgpd_C0 -> gpr_MatMul;
      gpr_MatMulcst -> gpr_MatMul;
      gpr_MatMul -> gpr_Y0;

      gpr_C0 [shape=box label="gpr_C0" fontsize=10];
      gpr_Add [shape=box style="filled,rounded" color=orange label="Add\n(gpr_Add)" fontsize=10];
      gpr_Y0 -> gpr_Add;
      gpr_Addcst -> gpr_Add;
      gpr_Add -> gpr_C0;

      Re_Reshape [shape=box style="filled,rounded" color=orange label="Reshape\n(Re_Reshape)\nallowzero=0" fontsize=10];
      gpr_C0 -> Re_Reshape;
      Re_Reshapecst -> Re_Reshape;
      Re_Reshape -> GPmean;
    }