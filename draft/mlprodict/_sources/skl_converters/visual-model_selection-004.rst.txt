

.. _l-GridSearchCV-~b-cl-64-cl-zipmap:False-o15:

GridSearchCV - ~b-cl-64 - cl - {'zipmap': False}
================================================

Fitted on a problem type *~b-cl-64*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `predict_proba` matches output .
Model was converted with additional parameter: ``<class 'sklearn.model_selection._search.GridSearchCV'>={'zipmap': False}``.

::

        GridSearchCV(estimator=LogisticRegression(random_state=0, solver='liblinear'),
                 n_jobs=1, param_grid={'fit_intercept': [False, True]})

+-----------------------+----------+
| index                 | 0        |
+=======================+==========+
| skl_nop               | 1        |
+-----------------------+----------+
| onx_size              | 1093     |
+-----------------------+----------+
| onx_nnodes            | 13       |
+-----------------------+----------+
| onx_ninits            | 5        |
+-----------------------+----------+
| onx_doc_string        |          |
+-----------------------+----------+
| onx_ir_version        | 8        |
+-----------------------+----------+
| onx_domain            | ai.onnx  |
+-----------------------+----------+
| onx_model_version     | 0        |
+-----------------------+----------+
| onx_producer_name     | skl2onnx |
+-----------------------+----------+
| onx_producer_version  | 1.11     |
+-----------------------+----------+
| onx_ai.onnx.ml        | 1        |
+-----------------------+----------+
| onx_                  | 14       |
+-----------------------+----------+
| onx_op_Cast           | 2        |
+-----------------------+----------+
| onx_op_Identity       | 2        |
+-----------------------+----------+
| onx_op_Reshape        | 1        |
+-----------------------+----------+
| onx_size_optim        | 996      |
+-----------------------+----------+
| onx_nnodes_optim      | 11       |
+-----------------------+----------+
| onx_ninits_optim      | 5        |
+-----------------------+----------+
| fit_best_score_.shape | 1        |
+-----------------------+----------+


.. gdot::

        digraph{
      nodesep=0.05;
      ranksep=0.25;
      size=7;
      orientation=portrait;

      X [shape=box color=red label="X\ndouble((0, 4))" fontsize=10];

      label [shape=box color=green label="label\nint64((0,))" fontsize=10];
      probabilities [shape=box color=green label="probabilities\ndouble((0, 2))" fontsize=10];

      coef [shape=box label="coef\nfloat64((4, 2))\n[[ 0.49765062 -0.49765062]\n [ 1.31840369 -1.31840369]\n [-2.30954617  2.30954617]\n [-0.69495593  0.69495593]]" fontsize=10];
      intercept [shape=box label="intercept\nfloat64((1, 2))\n[[-0.  0.]]" fontsize=10];
      classes [shape=box label="classes\nint32((2,))\n[0 1]" fontsize=10];
      shape_tensor [shape=box label="shape_tensor\nint64((1,))\n[-1]" fontsize=10];
      axis [shape=box label="axis\nint64((1,))\n[1]" fontsize=10];

      multiplied [shape=box label="multiplied" fontsize=10];
      MatMul [shape=box style="filled,rounded" color=orange label="MatMul\n(MatMul)" fontsize=10];
      X -> MatMul;
      coef -> MatMul;
      MatMul -> multiplied;

      raw_scores [shape=box label="raw_scores" fontsize=10];
      Add [shape=box style="filled,rounded" color=orange label="Add\n(Add)" fontsize=10];
      multiplied -> Add;
      intercept -> Add;
      Add -> raw_scores;

      raw_scoressig [shape=box label="raw_scoressig" fontsize=10];
      Sigmoid [shape=box style="filled,rounded" color=orange label="Sigmoid\n(Sigmoid)" fontsize=10];
      raw_scores -> Sigmoid;
      Sigmoid -> raw_scoressig;

      label2 [shape=box label="label2" fontsize=10];
      ArgMax [shape=box style="filled,rounded" color=orange label="ArgMax\n(ArgMax)\naxis=1" fontsize=10];
      raw_scores -> ArgMax;
      ArgMax -> label2;

      array_feature_extractor_result [shape=box label="array_feature_extractor_result" fontsize=10];
      ArrayFeatureExtractor [shape=box style="filled,rounded" color=orange label="ArrayFeatureExtractor\n(ArrayFeatureExtractor)" fontsize=10];
      classes -> ArrayFeatureExtractor;
      label2 -> ArrayFeatureExtractor;
      ArrayFeatureExtractor -> array_feature_extractor_result;

      norm_abs [shape=box label="norm_abs" fontsize=10];
      Abs [shape=box style="filled,rounded" color=orange label="Abs\n(Abs)" fontsize=10];
      raw_scoressig -> Abs;
      Abs -> norm_abs;

      norm [shape=box label="norm" fontsize=10];
      ReduceSum [shape=box style="filled,rounded" color=orange label="ReduceSum\n(ReduceSum)\nkeepdims=1" fontsize=10];
      norm_abs -> ReduceSum;
      axis -> ReduceSum;
      ReduceSum -> norm;

      cast2_result [shape=box label="cast2_result" fontsize=10];
      Cast [shape=box style="filled,rounded" color=orange label="Cast\n(Cast)\nto=11" fontsize=10];
      array_feature_extractor_result -> Cast;
      Cast -> cast2_result;

      reshaped_result [shape=box label="reshaped_result" fontsize=10];
      Reshape [shape=box style="filled,rounded" color=orange label="Reshape\n(Reshape)" fontsize=10];
      cast2_result -> Reshape;
      shape_tensor -> Reshape;
      Reshape -> reshaped_result;

      probabilities1 [shape=box label="probabilities1" fontsize=10];
      NormalizerNorm [shape=box style="filled,rounded" color=orange label="Div\n(NormalizerNorm)" fontsize=10];
      raw_scoressig -> NormalizerNorm;
      norm -> NormalizerNorm;
      NormalizerNorm -> probabilities1;

      label1 [shape=box label="label1" fontsize=10];
      Cast1 [shape=box style="filled,rounded" color=orange label="Cast\n(Cast1)\nto=7" fontsize=10];
      reshaped_result -> Cast1;
      Cast1 -> label1;

      Identity1 [shape=box style="filled,rounded" color=orange label="Identity\n(Identity1)" fontsize=10];
      probabilities1 -> Identity1;
      Identity1 -> probabilities;

      Identity [shape=box style="filled,rounded" color=orange label="Identity\n(Identity)" fontsize=10];
      label1 -> Identity;
      Identity -> label;
    }