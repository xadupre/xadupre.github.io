

.. _l-MinMaxScaler-num-tr-default--o15:

MinMaxScaler - num-tr - default - 
==================================

Fitted on a problem type *num-tr*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `transform` matches output .


::

        MinMaxScaler()

+-----------------------+----------+
| index                 | 0        |
+=======================+==========+
| skl_nop               | 1        |
+-----------------------+----------+
| onx_size              | 322      |
+-----------------------+----------+
| onx_nnodes            | 3        |
+-----------------------+----------+
| onx_ninits            | 2        |
+-----------------------+----------+
| onx_doc_string        |          |
+-----------------------+----------+
| onx_ir_version        | 8        |
+-----------------------+----------+
| onx_domain            | ai.onnx  |
+-----------------------+----------+
| onx_model_version     | 0        |
+-----------------------+----------+
| onx_producer_name     | skl2onnx |
+-----------------------+----------+
| onx_producer_version  | 1.11     |
+-----------------------+----------+
| onx_                  | 14       |
+-----------------------+----------+
| onx_op_Cast           | 1        |
+-----------------------+----------+
| onx_size_optim        | 322      |
+-----------------------+----------+
| onx_nnodes_optim      | 3        |
+-----------------------+----------+
| onx_ninits_optim      | 2        |
+-----------------------+----------+
| fit_scale_.shape      | 4        |
+-----------------------+----------+
| fit_min_.shape        | 4        |
+-----------------------+----------+
| fit_data_min_.shape   | 4        |
+-----------------------+----------+
| fit_data_max_.shape   | 4        |
+-----------------------+----------+
| fit_data_range_.shape | 4        |
+-----------------------+----------+


.. gdot::

        digraph{
      nodesep=0.05;
      ranksep=0.25;
      size=7;
      orientation=portrait;

      X [shape=box color=red label="X\nfloat((0, 4))" fontsize=10];

      variable [shape=box color=green label="variable\nfloat((0, 4))" fontsize=10];

      Mu_Mulcst [shape=box label="Mu_Mulcst\nfloat32((4,))\n[0.25243747 0.39867863 0.16360633 0.3745827 ]" fontsize=10];
      Ad_Addcst [shape=box label="Ad_Addcst\nfloat32((4,))\n[-1.0637522  -0.6790878  -0.09216903  0.04826326]" fontsize=10];

      Ca_output0 [shape=box label="Ca_output0" fontsize=10];
      Ca_Cast [shape=box style="filled,rounded" color=orange label="Cast\n(Ca_Cast)\nto=1" fontsize=10];
      X -> Ca_Cast;
      Ca_Cast -> Ca_output0;

      Mu_C0 [shape=box label="Mu_C0" fontsize=10];
      Mu_Mul [shape=box style="filled,rounded" color=orange label="Mul\n(Mu_Mul)" fontsize=10];
      Ca_output0 -> Mu_Mul;
      Mu_Mulcst -> Mu_Mul;
      Mu_Mul -> Mu_C0;

      Ad_Add [shape=box style="filled,rounded" color=orange label="Add\n(Ad_Add)" fontsize=10];
      Mu_C0 -> Ad_Add;
      Ad_Addcst -> Ad_Add;
      Ad_Add -> variable;
    }