

.. _l-PowerTransformer-num-tr-pos-box-cox--o15:

PowerTransformer - num-tr-pos - box-cox - 
==========================================

Fitted on a problem type *num-tr-pos*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `transform` matches output .


::

        PowerTransformer(method='box-cox')

+----------------------+----------+
| index                | 0        |
+======================+==========+
| skl_nop              | 1        |
+----------------------+----------+
| onx_size             | 979      |
+----------------------+----------+
| onx_nnodes           | 11       |
+----------------------+----------+
| onx_ninits           | 3        |
+----------------------+----------+
| onx_doc_string       |          |
+----------------------+----------+
| onx_ir_version       | 8        |
+----------------------+----------+
| onx_domain           | ai.onnx  |
+----------------------+----------+
| onx_model_version    | 0        |
+----------------------+----------+
| onx_producer_name    | skl2onnx |
+----------------------+----------+
| onx_producer_version | 1.11     |
+----------------------+----------+
| onx_ai.onnx.ml       | 1        |
+----------------------+----------+
| onx_                 | 15       |
+----------------------+----------+
| onx_size_optim       | 979      |
+----------------------+----------+
| onx_nnodes_optim     | 11       |
+----------------------+----------+
| onx_ninits_optim     | 3        |
+----------------------+----------+
| fit_lambdas_.shape   | 4        |
+----------------------+----------+


.. gdot::

        digraph{
      nodesep=0.05;
      ranksep=0.25;
      size=7;
      orientation=portrait;

      X [shape=box color=red label="X\nfloat((0, 4))" fontsize=10];

      variable [shape=box color=green label="variable\nfloat((0, 4))" fontsize=10];

      pref_Powcst [shape=box label="pref_Powcst\nfloat32((4,))\n[0.05830866 0.7694006  1.0492013  0.69704276]" fontsize=10];
      pref_Mulcst [shape=box label="pref_Mulcst\nfloat32((4,))\n[1. 1. 1. 1.]" fontsize=10];
      pref_Mulcst1 [shape=box label="pref_Mulcst1\nfloat32((4,))\n[0. 0. 0. 0.]" fontsize=10];

      pref_output0 [shape=box label="pref_output0" fontsize=10];
      pref_Log [shape=box style="filled,rounded" color=orange label="Log\n(pref_Log)" fontsize=10];
      X -> pref_Log;
      pref_Log -> pref_output0;

      pref_Z0 [shape=box label="pref_Z0" fontsize=10];
      pref_Pow [shape=box style="filled,rounded" color=orange label="Pow\n(pref_Pow)" fontsize=10];
      X -> pref_Pow;
      pref_Powcst -> pref_Pow;
      pref_Pow -> pref_Z0;

      pref_C04 [shape=box label="pref_C04" fontsize=10];
      pref_Div [shape=box style="filled,rounded" color=orange label="Div\n(pref_Div)" fontsize=10];
      X -> pref_Div;
      X -> pref_Div;
      pref_Div -> pref_C04;

      pref_Y02 [shape=box label="pref_Y02" fontsize=10];
      pref_Imputer1 [shape=box style="filled,rounded" color=orange label="Imputer\n(pref_Imputer1)\nimputed_value_floats=[0.]\nreplaced_value_float=nan" fontsize=10];
      pref_output0 -> pref_Imputer1;
      pref_Imputer1 -> pref_Y02;

      pref_C03 [shape=box label="pref_C03" fontsize=10];
      pref_Sub [shape=box style="filled,rounded" color=orange label="Sub\n(pref_Sub)" fontsize=10];
      pref_Z0 -> pref_Sub;
      pref_C04 -> pref_Sub;
      pref_Sub -> pref_C03;

      pref_C05 [shape=box label="pref_C05" fontsize=10];
      pref_Mul1 [shape=box style="filled,rounded" color=orange label="Mul\n(pref_Mul1)" fontsize=10];
      pref_Y02 -> pref_Mul1;
      pref_Mulcst1 -> pref_Mul1;
      pref_Mul1 -> pref_C05;

      pref_C02 [shape=box label="pref_C02" fontsize=10];
      pref_Div1 [shape=box style="filled,rounded" color=orange label="Div\n(pref_Div1)" fontsize=10];
      pref_C03 -> pref_Div1;
      pref_Powcst -> pref_Div1;
      pref_Div1 -> pref_C02;

      pref_Y0 [shape=box label="pref_Y0" fontsize=10];
      pref_Imputer [shape=box style="filled,rounded" color=orange label="Imputer\n(pref_Imputer)\nimputed_value_floats=[0.]\nreplaced_value_float=inf" fontsize=10];
      pref_C02 -> pref_Imputer;
      pref_Imputer -> pref_Y0;

      pref_C01 [shape=box label="pref_C01" fontsize=10];
      pref_Mul [shape=box style="filled,rounded" color=orange label="Mul\n(pref_Mul)" fontsize=10];
      pref_Y0 -> pref_Mul;
      pref_Mulcst -> pref_Mul;
      pref_Mul -> pref_C01;

      pref_C0 [shape=box label="pref_C0" fontsize=10];
      pref_Add [shape=box style="filled,rounded" color=orange label="Add\n(pref_Add)" fontsize=10];
      pref_C01 -> pref_Add;
      pref_C05 -> pref_Add;
      pref_Add -> pref_C0;

      Sc_Scaler [shape=box style="filled,rounded" color=orange label="Scaler\n(Sc_Scaler)\noffset=[1.8520246  1.7167706  2...\nscale=[6.3414598 2.4379492 0.53..." fontsize=10];
      pref_C0 -> Sc_Scaler;
      Sc_Scaler -> variable;
    }