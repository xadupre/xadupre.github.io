

.. _l-AdaBoostClassifier-m-cl-default-zipmap:False-o15:

AdaBoostClassifier - m-cl - default - {'zipmap': False}
=======================================================

Fitted on a problem type *m-cl*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `predict_proba` matches output .
Model was converted with additional parameter: ``<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>={'zipmap': False}``.

::

        AdaBoostClassifier(n_estimators=10, random_state=0)

+---------------------------------------+----------+
| index                                 | 0        |
+=======================================+==========+
| skl_nop                               | 11       |
+---------------------------------------+----------+
| skl_nnodes                            | 30       |
+---------------------------------------+----------+
| skl_ntrees                            | 10       |
+---------------------------------------+----------+
| skl_max_depth                         | 1        |
+---------------------------------------+----------+
| onx_size                              | 11613    |
+---------------------------------------+----------+
| onx_nnodes                            | 95       |
+---------------------------------------+----------+
| onx_ninits                            | 10       |
+---------------------------------------+----------+
| onx_doc_string                        |          |
+---------------------------------------+----------+
| onx_ir_version                        | 8        |
+---------------------------------------+----------+
| onx_domain                            | ai.onnx  |
+---------------------------------------+----------+
| onx_model_version                     | 0        |
+---------------------------------------+----------+
| onx_producer_name                     | skl2onnx |
+---------------------------------------+----------+
| onx_producer_version                  | 1.11.1   |
+---------------------------------------+----------+
| onx_                                  | 15       |
+---------------------------------------+----------+
| onx_ai.onnx.ml                        | 1        |
+---------------------------------------+----------+
| onx_op_Cast                           | 3        |
+---------------------------------------+----------+
| onx_op_Reshape                        | 12       |
+---------------------------------------+----------+
| onx_size_optim                        | 8578     |
+---------------------------------------+----------+
| onx_nnodes_optim                      | 71       |
+---------------------------------------+----------+
| onx_ninits_optim                      | 10       |
+---------------------------------------+----------+
| fit_estimator_weights_.shape          | 10       |
+---------------------------------------+----------+
| fit_estimator_errors_.shape           | 10       |
+---------------------------------------+----------+
| fit_classes_.shape                    | 3        |
+---------------------------------------+----------+
| fit_n_classes_                        | 3        |
+---------------------------------------+----------+
| fit_estimators_.size                  | 10       |
+---------------------------------------+----------+
| fit_estimators_.n_classes_            | 3        |
+---------------------------------------+----------+
| fit_estimators_.sum|tree_.node_count  | 30       |
+---------------------------------------+----------+
| fit_estimators_.classes_.shape        | 3        |
+---------------------------------------+----------+
| fit_estimators_.sum|tree_.leave_count | 20       |
+---------------------------------------+----------+
| fit_estimators_.n_features_           | 4        |
+---------------------------------------+----------+
| fit_estimators_.max|tree_.max_depth   | 1        |
+---------------------------------------+----------+


.. gdot::

        digraph{
      ranksep=0.25;
      nodesep=0.05;
      orientation=portrait;
      size=7;

      X [shape=box color=red label="X\nfloat((0, 4))" fontsize=10];

      label [shape=box color=green label="label\nint64((0,))" fontsize=10];
      probabilities [shape=box color=green label="probabilities\nfloat((0, 3))" fontsize=10];

      classes [shape=box label="classes\nint32((3,))\n[0 1 2]" fontsize=10];
      inverted_n_classes [shape=box label="inverted_n_classes\nfloat32(())\n0.33333334" fontsize=10];
      n_classes_minus_one [shape=box label="n_classes_minus_one\nfloat32(())\n2.0" fontsize=10];
      clip_min [shape=box label="clip_min\nfloat32(())\n2.220446e-16" fontsize=10];
      axis [shape=box label="axis\nint64((1,))\n[1]" fontsize=10];
      shape_tensor [shape=box label="shape_tensor\nint64((2,))\n[-1  1]" fontsize=10];
      est_weights_sum [shape=box label="est_weights_sum\nfloat32(())\n10.0" fontsize=10];
      mul_operand [shape=box label="mul_operand\nfloat32(())\n0.5" fontsize=10];
      zero_scalar [shape=box label="zero_scalar\nint32(())\n0" fontsize=10];
      shape_tensor11 [shape=box label="shape_tensor11\nint64((1,))\n[-1]" fontsize=10];

      elab_name_0 [shape=box label="elab_name_0" fontsize=10];
      eprob_name_0 [shape=box label="eprob_name_0" fontsize=10];
      TreeEnsembleClassifier [shape=box style="filled,rounded" color=orange label="TreeEnsembleClassifier\n(TreeEnsembleClassifier)\nclass_ids=[0 1 2 0 1 2]\nclass_nodeids=[1 1 1 2 2 2]\nclass_treeids=[0 0 0 0 0 0]\nclass_weights=[1.        0.    ...\nclasslabels_int64s=[0 1 2]\nnodes_falsenodeids=[2 0 0]\nnodes_featureids=[2 0 0]\nnodes_hitrates=[1. 1. 1.]\nnodes_missing_value_tracks_true=[0 0 0]\nnodes_modes=[b'BRANCH_LEQ' b'LE...\nnodes_nodeids=[0 1 2]\nnodes_treeids=[0 0 0]\nnodes_truenodeids=[1 0 0]\nnodes_values=[2.5489838 0.     ...\npost_transform=b'NONE'" fontsize=10];
      X -> TreeEnsembleClassifier;
      TreeEnsembleClassifier -> elab_name_0;
      TreeEnsembleClassifier -> eprob_name_0;

      elab_name_1 [shape=box label="elab_name_1" fontsize=10];
      eprob_name_1 [shape=box label="eprob_name_1" fontsize=10];
      TreeEnsembleClassifier1 [shape=box style="filled,rounded" color=orange label="TreeEnsembleClassifier\n(TreeEnsembleClassifier1)\nclass_ids=[0 1 2 0 1 2]\nclass_nodeids=[1 1 1 2 2 2]\nclass_treeids=[0 0 0 0 0 0]\nclass_weights=[4.35775337e-06 8...\nclasslabels_int64s=[0 1 2]\nnodes_falsenodeids=[2 0 0]\nnodes_featureids=[2 0 0]\nnodes_hitrates=[1. 1. 1.]\nnodes_missing_value_tracks_true=[0 0 0]\nnodes_modes=[b'BRANCH_LEQ' b'LE...\nnodes_nodeids=[0 1 2]\nnodes_treeids=[0 0 0]\nnodes_truenodeids=[1 0 0]\nnodes_values=[4.851396 0.      ...\npost_transform=b'NONE'" fontsize=10];
      X -> TreeEnsembleClassifier1;
      TreeEnsembleClassifier1 -> elab_name_1;
      TreeEnsembleClassifier1 -> eprob_name_1;

      elab_name_2 [shape=box label="elab_name_2" fontsize=10];
      eprob_name_2 [shape=box label="eprob_name_2" fontsize=10];
      TreeEnsembleClassifier2 [shape=box style="filled,rounded" color=orange label="TreeEnsembleClassifier\n(TreeEnsembleClassifier2)\nclass_ids=[0 1 2 0 1 2]\nclass_nodeids=[1 1 1 2 2 2]\nclass_treeids=[0 0 0 0 0 0]\nclass_weights=[1.  0.  0.  0.  ...\nclasslabels_int64s=[0 1 2]\nnodes_falsenodeids=[2 0 0]\nnodes_featureids=[2 0 0]\nnodes_hitrates=[1. 1. 1.]\nnodes_missing_value_tracks_true=[0 0 0]\nnodes_modes=[b'BRANCH_LEQ' b'LE...\nnodes_nodeids=[0 1 2]\nnodes_treeids=[0 0 0]\nnodes_truenodeids=[1 0 0]\nnodes_values=[2.5489838 0.     ...\npost_transform=b'NONE'" fontsize=10];
      X -> TreeEnsembleClassifier2;
      TreeEnsembleClassifier2 -> elab_name_2;
      TreeEnsembleClassifier2 -> eprob_name_2;

      elab_name_3 [shape=box label="elab_name_3" fontsize=10];
      eprob_name_3 [shape=box label="eprob_name_3" fontsize=10];
      TreeEnsembleClassifier3 [shape=box style="filled,rounded" color=orange label="TreeEnsembleClassifier\n(TreeEnsembleClassifier3)\nclass_ids=[0 1 2 0 1 2]\nclass_nodeids=[1 1 1 2 2 2]\nclass_treeids=[0 0 0 0 0 0]\nclass_weights=[5.7989137e-06 9....\nclasslabels_int64s=[0 1 2]\nnodes_falsenodeids=[2 0 0]\nnodes_featureids=[3 0 0]\nnodes_hitrates=[1. 1. 1.]\nnodes_missing_value_tracks_true=[0 0 0]\nnodes_modes=[b'BRANCH_LEQ' b'LE...\nnodes_nodeids=[0 1 2]\nnodes_treeids=[0 0 0]\nnodes_truenodeids=[1 0 0]\nnodes_values=[1.5370959 0.     ...\npost_transform=b'NONE'" fontsize=10];
      X -> TreeEnsembleClassifier3;
      TreeEnsembleClassifier3 -> elab_name_3;
      TreeEnsembleClassifier3 -> eprob_name_3;

      elab_name_4 [shape=box label="elab_name_4" fontsize=10];
      eprob_name_4 [shape=box label="eprob_name_4" fontsize=10];
      TreeEnsembleClassifier4 [shape=box style="filled,rounded" color=orange label="TreeEnsembleClassifier\n(TreeEnsembleClassifier4)\nclass_ids=[0 1 2 0 1 2]\nclass_nodeids=[1 1 1 2 2 2]\nclass_treeids=[0 0 0 0 0 0]\nclass_weights=[1.  0.  0.  0.  ...\nclasslabels_int64s=[0 1 2]\nnodes_falsenodeids=[2 0 0]\nnodes_featureids=[2 0 0]\nnodes_hitrates=[1. 1. 1.]\nnodes_missing_value_tracks_true=[0 0 0]\nnodes_modes=[b'BRANCH_LEQ' b'LE...\nnodes_nodeids=[0 1 2]\nnodes_treeids=[0 0 0]\nnodes_truenodeids=[1 0 0]\nnodes_values=[2.5489838 0.     ...\npost_transform=b'NONE'" fontsize=10];
      X -> TreeEnsembleClassifier4;
      TreeEnsembleClassifier4 -> elab_name_4;
      TreeEnsembleClassifier4 -> eprob_name_4;

      elab_name_5 [shape=box label="elab_name_5" fontsize=10];
      eprob_name_5 [shape=box label="eprob_name_5" fontsize=10];
      TreeEnsembleClassifier5 [shape=box style="filled,rounded" color=orange label="TreeEnsembleClassifier\n(TreeEnsembleClassifier5)\nclass_ids=[0 1 2 0 1 2]\nclass_nodeids=[1 1 1 2 2 2]\nclass_treeids=[0 0 0 0 0 0]\nclass_weights=[4.7509780e-06 9....\nclasslabels_int64s=[0 1 2]\nnodes_falsenodeids=[2 0 0]\nnodes_featureids=[2 0 0]\nnodes_hitrates=[1. 1. 1.]\nnodes_missing_value_tracks_true=[0 0 0]\nnodes_modes=[b'BRANCH_LEQ' b'LE...\nnodes_nodeids=[0 1 2]\nnodes_treeids=[0 0 0]\nnodes_truenodeids=[1 0 0]\nnodes_values=[4.851396 0.      ...\npost_transform=b'NONE'" fontsize=10];
      X -> TreeEnsembleClassifier5;
      TreeEnsembleClassifier5 -> elab_name_5;
      TreeEnsembleClassifier5 -> eprob_name_5;

      elab_name_6 [shape=box label="elab_name_6" fontsize=10];
      eprob_name_6 [shape=box label="eprob_name_6" fontsize=10];
      TreeEnsembleClassifier6 [shape=box style="filled,rounded" color=orange label="TreeEnsembleClassifier\n(TreeEnsembleClassifier6)\nclass_ids=[0 1 2 0 1 2]\nclass_nodeids=[1 1 1 2 2 2]\nclass_treeids=[0 0 0 0 0 0]\nclass_weights=[1.  0.  0.  0.  ...\nclasslabels_int64s=[0 1 2]\nnodes_falsenodeids=[2 0 0]\nnodes_featureids=[2 0 0]\nnodes_hitrates=[1. 1. 1.]\nnodes_missing_value_tracks_true=[0 0 0]\nnodes_modes=[b'BRANCH_LEQ' b'LE...\nnodes_nodeids=[0 1 2]\nnodes_treeids=[0 0 0]\nnodes_truenodeids=[1 0 0]\nnodes_values=[2.5489838 0.     ...\npost_transform=b'NONE'" fontsize=10];
      X -> TreeEnsembleClassifier6;
      TreeEnsembleClassifier6 -> elab_name_6;
      TreeEnsembleClassifier6 -> eprob_name_6;

      elab_name_7 [shape=box label="elab_name_7" fontsize=10];
      eprob_name_7 [shape=box label="eprob_name_7" fontsize=10];
      TreeEnsembleClassifier7 [shape=box style="filled,rounded" color=orange label="TreeEnsembleClassifier\n(TreeEnsembleClassifier7)\nclass_ids=[0 1 2 0 1 2]\nclass_nodeids=[1 1 1 2 2 2]\nclass_treeids=[0 0 0 0 0 0]\nclass_weights=[4.8334914e-06 9....\nclasslabels_int64s=[0 1 2]\nnodes_falsenodeids=[2 0 0]\nnodes_featureids=[3 0 0]\nnodes_hitrates=[1. 1. 1.]\nnodes_missing_value_tracks_true=[0 0 0]\nnodes_modes=[b'BRANCH_LEQ' b'LE...\nnodes_nodeids=[0 1 2]\nnodes_treeids=[0 0 0]\nnodes_truenodeids=[1 0 0]\nnodes_values=[1.5370959 0.     ...\npost_transform=b'NONE'" fontsize=10];
      X -> TreeEnsembleClassifier7;
      TreeEnsembleClassifier7 -> elab_name_7;
      TreeEnsembleClassifier7 -> eprob_name_7;

      elab_name_8 [shape=box label="elab_name_8" fontsize=10];
      eprob_name_8 [shape=box label="eprob_name_8" fontsize=10];
      TreeEnsembleClassifier8 [shape=box style="filled,rounded" color=orange label="TreeEnsembleClassifier\n(TreeEnsembleClassifier8)\nclass_ids=[0 1 2 0 1 2]\nclass_nodeids=[1 1 1 2 2 2]\nclass_treeids=[0 0 0 0 0 0]\nclass_weights=[1.  0.  0.  0.  ...\nclasslabels_int64s=[0 1 2]\nnodes_falsenodeids=[2 0 0]\nnodes_featureids=[2 0 0]\nnodes_hitrates=[1. 1. 1.]\nnodes_missing_value_tracks_true=[0 0 0]\nnodes_modes=[b'BRANCH_LEQ' b'LE...\nnodes_nodeids=[0 1 2]\nnodes_treeids=[0 0 0]\nnodes_truenodeids=[1 0 0]\nnodes_values=[2.5489838 0.     ...\npost_transform=b'NONE'" fontsize=10];
      X -> TreeEnsembleClassifier8;
      TreeEnsembleClassifier8 -> elab_name_8;
      TreeEnsembleClassifier8 -> eprob_name_8;

      elab_name_9 [shape=box label="elab_name_9" fontsize=10];
      eprob_name_9 [shape=box label="eprob_name_9" fontsize=10];
      TreeEnsembleClassifier9 [shape=box style="filled,rounded" color=orange label="TreeEnsembleClassifier\n(TreeEnsembleClassifier9)\nclass_ids=[0 1 2 0 1 2]\nclass_nodeids=[1 1 1 2 2 2]\nclass_treeids=[0 0 0 0 0 0]\nclass_weights=[4.7941480e-06 9....\nclasslabels_int64s=[0 1 2]\nnodes_falsenodeids=[2 0 0]\nnodes_featureids=[2 0 0]\nnodes_hitrates=[1. 1. 1.]\nnodes_missing_value_tracks_true=[0 0 0]\nnodes_modes=[b'BRANCH_LEQ' b'LE...\nnodes_nodeids=[0 1 2]\nnodes_treeids=[0 0 0]\nnodes_truenodeids=[1 0 0]\nnodes_values=[4.851396 0.      ...\npost_transform=b'NONE'" fontsize=10];
      X -> TreeEnsembleClassifier9;
      TreeEnsembleClassifier9 -> elab_name_9;
      TreeEnsembleClassifier9 -> eprob_name_9;

      clipped_proba7 [shape=box label="clipped_proba7" fontsize=10];
      ClipAda7 [shape=box style="filled,rounded" color=orange label="Clip\n(ClipAda7)" fontsize=10];
      eprob_name_7 -> ClipAda7;
      clip_min -> ClipAda7;
      ClipAda7 -> clipped_proba7;

      clipped_proba1 [shape=box label="clipped_proba1" fontsize=10];
      ClipAda1 [shape=box style="filled,rounded" color=orange label="Clip\n(ClipAda1)" fontsize=10];
      eprob_name_1 -> ClipAda1;
      clip_min -> ClipAda1;
      ClipAda1 -> clipped_proba1;

      clipped_proba2 [shape=box label="clipped_proba2" fontsize=10];
      ClipAda2 [shape=box style="filled,rounded" color=orange label="Clip\n(ClipAda2)" fontsize=10];
      eprob_name_2 -> ClipAda2;
      clip_min -> ClipAda2;
      ClipAda2 -> clipped_proba2;

      clipped_proba [shape=box label="clipped_proba" fontsize=10];
      ClipAda [shape=box style="filled,rounded" color=orange label="Clip\n(ClipAda)" fontsize=10];
      eprob_name_0 -> ClipAda;
      clip_min -> ClipAda;
      ClipAda -> clipped_proba;

      clipped_proba9 [shape=box label="clipped_proba9" fontsize=10];
      ClipAda9 [shape=box style="filled,rounded" color=orange label="Clip\n(ClipAda9)" fontsize=10];
      eprob_name_9 -> ClipAda9;
      clip_min -> ClipAda9;
      ClipAda9 -> clipped_proba9;

      clipped_proba8 [shape=box label="clipped_proba8" fontsize=10];
      ClipAda8 [shape=box style="filled,rounded" color=orange label="Clip\n(ClipAda8)" fontsize=10];
      eprob_name_8 -> ClipAda8;
      clip_min -> ClipAda8;
      ClipAda8 -> clipped_proba8;

      clipped_proba3 [shape=box label="clipped_proba3" fontsize=10];
      ClipAda3 [shape=box style="filled,rounded" color=orange label="Clip\n(ClipAda3)" fontsize=10];
      eprob_name_3 -> ClipAda3;
      clip_min -> ClipAda3;
      ClipAda3 -> clipped_proba3;

      clipped_proba6 [shape=box label="clipped_proba6" fontsize=10];
      ClipAda6 [shape=box style="filled,rounded" color=orange label="Clip\n(ClipAda6)" fontsize=10];
      eprob_name_6 -> ClipAda6;
      clip_min -> ClipAda6;
      ClipAda6 -> clipped_proba6;

      clipped_proba5 [shape=box label="clipped_proba5" fontsize=10];
      ClipAda5 [shape=box style="filled,rounded" color=orange label="Clip\n(ClipAda5)" fontsize=10];
      eprob_name_5 -> ClipAda5;
      clip_min -> ClipAda5;
      ClipAda5 -> clipped_proba5;

      clipped_proba4 [shape=box label="clipped_proba4" fontsize=10];
      ClipAda4 [shape=box style="filled,rounded" color=orange label="Clip\n(ClipAda4)" fontsize=10];
      eprob_name_4 -> ClipAda4;
      clip_min -> ClipAda4;
      ClipAda4 -> clipped_proba4;

      log_proba7 [shape=box label="log_proba7" fontsize=10];
      Log7 [shape=box style="filled,rounded" color=orange label="Log\n(Log7)" fontsize=10];
      clipped_proba7 -> Log7;
      Log7 -> log_proba7;

      log_proba2 [shape=box label="log_proba2" fontsize=10];
      Log2 [shape=box style="filled,rounded" color=orange label="Log\n(Log2)" fontsize=10];
      clipped_proba2 -> Log2;
      Log2 -> log_proba2;

      log_proba1 [shape=box label="log_proba1" fontsize=10];
      Log1 [shape=box style="filled,rounded" color=orange label="Log\n(Log1)" fontsize=10];
      clipped_proba1 -> Log1;
      Log1 -> log_proba1;

      log_proba [shape=box label="log_proba" fontsize=10];
      Log [shape=box style="filled,rounded" color=orange label="Log\n(Log)" fontsize=10];
      clipped_proba -> Log;
      Log -> log_proba;

      log_proba8 [shape=box label="log_proba8" fontsize=10];
      Log8 [shape=box style="filled,rounded" color=orange label="Log\n(Log8)" fontsize=10];
      clipped_proba8 -> Log8;
      Log8 -> log_proba8;

      log_proba9 [shape=box label="log_proba9" fontsize=10];
      Log9 [shape=box style="filled,rounded" color=orange label="Log\n(Log9)" fontsize=10];
      clipped_proba9 -> Log9;
      Log9 -> log_proba9;

      log_proba3 [shape=box label="log_proba3" fontsize=10];
      Log3 [shape=box style="filled,rounded" color=orange label="Log\n(Log3)" fontsize=10];
      clipped_proba3 -> Log3;
      Log3 -> log_proba3;

      log_proba4 [shape=box label="log_proba4" fontsize=10];
      Log4 [shape=box style="filled,rounded" color=orange label="Log\n(Log4)" fontsize=10];
      clipped_proba4 -> Log4;
      Log4 -> log_proba4;

      log_proba6 [shape=box label="log_proba6" fontsize=10];
      Log6 [shape=box style="filled,rounded" color=orange label="Log\n(Log6)" fontsize=10];
      clipped_proba6 -> Log6;
      Log6 -> log_proba6;

      log_proba5 [shape=box label="log_proba5" fontsize=10];
      Log5 [shape=box style="filled,rounded" color=orange label="Log\n(Log5)" fontsize=10];
      clipped_proba5 -> Log5;
      Log5 -> log_proba5;

      reduced_proba6 [shape=box label="reduced_proba6" fontsize=10];
      ReduceSum6 [shape=box style="filled,rounded" color=orange label="ReduceSum\n(ReduceSum6)" fontsize=10];
      log_proba6 -> ReduceSum6;
      axis -> ReduceSum6;
      ReduceSum6 -> reduced_proba6;

      reduced_proba1 [shape=box label="reduced_proba1" fontsize=10];
      ReduceSum1 [shape=box style="filled,rounded" color=orange label="ReduceSum\n(ReduceSum1)" fontsize=10];
      log_proba1 -> ReduceSum1;
      axis -> ReduceSum1;
      ReduceSum1 -> reduced_proba1;

      reduced_proba [shape=box label="reduced_proba" fontsize=10];
      ReduceSum [shape=box style="filled,rounded" color=orange label="ReduceSum\n(ReduceSum)" fontsize=10];
      log_proba -> ReduceSum;
      axis -> ReduceSum;
      ReduceSum -> reduced_proba;

      reduced_proba2 [shape=box label="reduced_proba2" fontsize=10];
      ReduceSum2 [shape=box style="filled,rounded" color=orange label="ReduceSum\n(ReduceSum2)" fontsize=10];
      log_proba2 -> ReduceSum2;
      axis -> ReduceSum2;
      ReduceSum2 -> reduced_proba2;

      reduced_proba9 [shape=box label="reduced_proba9" fontsize=10];
      ReduceSum9 [shape=box style="filled,rounded" color=orange label="ReduceSum\n(ReduceSum9)" fontsize=10];
      log_proba9 -> ReduceSum9;
      axis -> ReduceSum9;
      ReduceSum9 -> reduced_proba9;

      reduced_proba7 [shape=box label="reduced_proba7" fontsize=10];
      ReduceSum7 [shape=box style="filled,rounded" color=orange label="ReduceSum\n(ReduceSum7)" fontsize=10];
      log_proba7 -> ReduceSum7;
      axis -> ReduceSum7;
      ReduceSum7 -> reduced_proba7;

      reduced_proba8 [shape=box label="reduced_proba8" fontsize=10];
      ReduceSum8 [shape=box style="filled,rounded" color=orange label="ReduceSum\n(ReduceSum8)" fontsize=10];
      log_proba8 -> ReduceSum8;
      axis -> ReduceSum8;
      ReduceSum8 -> reduced_proba8;

      reduced_proba3 [shape=box label="reduced_proba3" fontsize=10];
      ReduceSum3 [shape=box style="filled,rounded" color=orange label="ReduceSum\n(ReduceSum3)" fontsize=10];
      log_proba3 -> ReduceSum3;
      axis -> ReduceSum3;
      ReduceSum3 -> reduced_proba3;

      reduced_proba4 [shape=box label="reduced_proba4" fontsize=10];
      ReduceSum4 [shape=box style="filled,rounded" color=orange label="ReduceSum\n(ReduceSum4)" fontsize=10];
      log_proba4 -> ReduceSum4;
      axis -> ReduceSum4;
      ReduceSum4 -> reduced_proba4;

      reduced_proba5 [shape=box label="reduced_proba5" fontsize=10];
      ReduceSum5 [shape=box style="filled,rounded" color=orange label="ReduceSum\n(ReduceSum5)" fontsize=10];
      log_proba5 -> ReduceSum5;
      axis -> ReduceSum5;
      ReduceSum5 -> reduced_proba5;

      reshaped_result6 [shape=box label="reshaped_result6" fontsize=10];
      Reshape6 [shape=box style="filled,rounded" color=orange label="Reshape\n(Reshape6)" fontsize=10];
      reduced_proba6 -> Reshape6;
      shape_tensor -> Reshape6;
      Reshape6 -> reshaped_result6;

      reshaped_result1 [shape=box label="reshaped_result1" fontsize=10];
      Reshape1 [shape=box style="filled,rounded" color=orange label="Reshape\n(Reshape1)" fontsize=10];
      reduced_proba1 -> Reshape1;
      shape_tensor -> Reshape1;
      Reshape1 -> reshaped_result1;

      reshaped_result [shape=box label="reshaped_result" fontsize=10];
      Reshape [shape=box style="filled,rounded" color=orange label="Reshape\n(Reshape)" fontsize=10];
      reduced_proba -> Reshape;
      shape_tensor -> Reshape;
      Reshape -> reshaped_result;

      reshaped_result2 [shape=box label="reshaped_result2" fontsize=10];
      Reshape2 [shape=box style="filled,rounded" color=orange label="Reshape\n(Reshape2)" fontsize=10];
      reduced_proba2 -> Reshape2;
      shape_tensor -> Reshape2;
      Reshape2 -> reshaped_result2;

      reshaped_result8 [shape=box label="reshaped_result8" fontsize=10];
      Reshape8 [shape=box style="filled,rounded" color=orange label="Reshape\n(Reshape8)" fontsize=10];
      reduced_proba8 -> Reshape8;
      shape_tensor -> Reshape8;
      Reshape8 -> reshaped_result8;

      reshaped_result7 [shape=box label="reshaped_result7" fontsize=10];
      Reshape7 [shape=box style="filled,rounded" color=orange label="Reshape\n(Reshape7)" fontsize=10];
      reduced_proba7 -> Reshape7;
      shape_tensor -> Reshape7;
      Reshape7 -> reshaped_result7;

      reshaped_result9 [shape=box label="reshaped_result9" fontsize=10];
      Reshape9 [shape=box style="filled,rounded" color=orange label="Reshape\n(Reshape9)" fontsize=10];
      reduced_proba9 -> Reshape9;
      shape_tensor -> Reshape9;
      Reshape9 -> reshaped_result9;

      reshaped_result3 [shape=box label="reshaped_result3" fontsize=10];
      Reshape3 [shape=box style="filled,rounded" color=orange label="Reshape\n(Reshape3)" fontsize=10];
      reduced_proba3 -> Reshape3;
      shape_tensor -> Reshape3;
      Reshape3 -> reshaped_result3;

      reshaped_result4 [shape=box label="reshaped_result4" fontsize=10];
      Reshape4 [shape=box style="filled,rounded" color=orange label="Reshape\n(Reshape4)" fontsize=10];
      reduced_proba4 -> Reshape4;
      shape_tensor -> Reshape4;
      Reshape4 -> reshaped_result4;

      reshaped_result5 [shape=box label="reshaped_result5" fontsize=10];
      Reshape5 [shape=box style="filled,rounded" color=orange label="Reshape\n(Reshape5)" fontsize=10];
      reduced_proba5 -> Reshape5;
      shape_tensor -> Reshape5;
      Reshape5 -> reshaped_result5;

      prod_result6 [shape=box label="prod_result6" fontsize=10];
      Mul12 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul12)" fontsize=10];
      reshaped_result6 -> Mul12;
      inverted_n_classes -> Mul12;
      Mul12 -> prod_result6;

      prod_result [shape=box label="prod_result" fontsize=10];
      Mul [shape=box style="filled,rounded" color=orange label="Mul\n(Mul)" fontsize=10];
      reshaped_result -> Mul;
      inverted_n_classes -> Mul;
      Mul -> prod_result;

      prod_result1 [shape=box label="prod_result1" fontsize=10];
      Mul2 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul2)" fontsize=10];
      reshaped_result1 -> Mul2;
      inverted_n_classes -> Mul2;
      Mul2 -> prod_result1;

      prod_result2 [shape=box label="prod_result2" fontsize=10];
      Mul4 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul4)" fontsize=10];
      reshaped_result2 -> Mul4;
      inverted_n_classes -> Mul4;
      Mul4 -> prod_result2;

      prod_result8 [shape=box label="prod_result8" fontsize=10];
      Mul16 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul16)" fontsize=10];
      reshaped_result8 -> Mul16;
      inverted_n_classes -> Mul16;
      Mul16 -> prod_result8;

      prod_result7 [shape=box label="prod_result7" fontsize=10];
      Mul14 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul14)" fontsize=10];
      reshaped_result7 -> Mul14;
      inverted_n_classes -> Mul14;
      Mul14 -> prod_result7;

      prod_result9 [shape=box label="prod_result9" fontsize=10];
      Mul18 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul18)" fontsize=10];
      reshaped_result9 -> Mul18;
      inverted_n_classes -> Mul18;
      Mul18 -> prod_result9;

      prod_result4 [shape=box label="prod_result4" fontsize=10];
      Mul8 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul8)" fontsize=10];
      reshaped_result4 -> Mul8;
      inverted_n_classes -> Mul8;
      Mul8 -> prod_result4;

      prod_result3 [shape=box label="prod_result3" fontsize=10];
      Mul6 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul6)" fontsize=10];
      reshaped_result3 -> Mul6;
      inverted_n_classes -> Mul6;
      Mul6 -> prod_result3;

      prod_result5 [shape=box label="prod_result5" fontsize=10];
      Mul10 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul10)" fontsize=10];
      reshaped_result5 -> Mul10;
      inverted_n_classes -> Mul10;
      Mul10 -> prod_result5;

      sub_result6 [shape=box label="sub_result6" fontsize=10];
      Sub6 [shape=box style="filled,rounded" color=orange label="Sub\n(Sub6)" fontsize=10];
      log_proba6 -> Sub6;
      prod_result6 -> Sub6;
      Sub6 -> sub_result6;

      sub_result1 [shape=box label="sub_result1" fontsize=10];
      Sub1 [shape=box style="filled,rounded" color=orange label="Sub\n(Sub1)" fontsize=10];
      log_proba1 -> Sub1;
      prod_result1 -> Sub1;
      Sub1 -> sub_result1;

      sub_result [shape=box label="sub_result" fontsize=10];
      Sub [shape=box style="filled,rounded" color=orange label="Sub\n(Sub)" fontsize=10];
      log_proba -> Sub;
      prod_result -> Sub;
      Sub -> sub_result;

      sub_result8 [shape=box label="sub_result8" fontsize=10];
      Sub8 [shape=box style="filled,rounded" color=orange label="Sub\n(Sub8)" fontsize=10];
      log_proba8 -> Sub8;
      prod_result8 -> Sub8;
      Sub8 -> sub_result8;

      sub_result9 [shape=box label="sub_result9" fontsize=10];
      Sub9 [shape=box style="filled,rounded" color=orange label="Sub\n(Sub9)" fontsize=10];
      log_proba9 -> Sub9;
      prod_result9 -> Sub9;
      Sub9 -> sub_result9;

      sub_result7 [shape=box label="sub_result7" fontsize=10];
      Sub7 [shape=box style="filled,rounded" color=orange label="Sub\n(Sub7)" fontsize=10];
      log_proba7 -> Sub7;
      prod_result7 -> Sub7;
      Sub7 -> sub_result7;

      sub_result5 [shape=box label="sub_result5" fontsize=10];
      Sub5 [shape=box style="filled,rounded" color=orange label="Sub\n(Sub5)" fontsize=10];
      log_proba5 -> Sub5;
      prod_result5 -> Sub5;
      Sub5 -> sub_result5;

      sub_result2 [shape=box label="sub_result2" fontsize=10];
      Sub2 [shape=box style="filled,rounded" color=orange label="Sub\n(Sub2)" fontsize=10];
      log_proba2 -> Sub2;
      prod_result2 -> Sub2;
      Sub2 -> sub_result2;

      sub_result4 [shape=box label="sub_result4" fontsize=10];
      Sub4 [shape=box style="filled,rounded" color=orange label="Sub\n(Sub4)" fontsize=10];
      log_proba4 -> Sub4;
      prod_result4 -> Sub4;
      Sub4 -> sub_result4;

      sub_result3 [shape=box label="sub_result3" fontsize=10];
      Sub3 [shape=box style="filled,rounded" color=orange label="Sub\n(Sub3)" fontsize=10];
      log_proba3 -> Sub3;
      prod_result3 -> Sub3;
      Sub3 -> sub_result3;

      samme_proba6 [shape=box label="samme_proba6" fontsize=10];
      Mul13 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul13)" fontsize=10];
      sub_result6 -> Mul13;
      n_classes_minus_one -> Mul13;
      Mul13 -> samme_proba6;

      samme_proba [shape=box label="samme_proba" fontsize=10];
      Mul1 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul1)" fontsize=10];
      sub_result -> Mul1;
      n_classes_minus_one -> Mul1;
      Mul1 -> samme_proba;

      samme_proba1 [shape=box label="samme_proba1" fontsize=10];
      Mul3 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul3)" fontsize=10];
      sub_result1 -> Mul3;
      n_classes_minus_one -> Mul3;
      Mul3 -> samme_proba1;

      samme_proba8 [shape=box label="samme_proba8" fontsize=10];
      Mul17 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul17)" fontsize=10];
      sub_result8 -> Mul17;
      n_classes_minus_one -> Mul17;
      Mul17 -> samme_proba8;

      samme_proba9 [shape=box label="samme_proba9" fontsize=10];
      Mul19 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul19)" fontsize=10];
      sub_result9 -> Mul19;
      n_classes_minus_one -> Mul19;
      Mul19 -> samme_proba9;

      samme_proba7 [shape=box label="samme_proba7" fontsize=10];
      Mul15 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul15)" fontsize=10];
      sub_result7 -> Mul15;
      n_classes_minus_one -> Mul15;
      Mul15 -> samme_proba7;

      samme_proba3 [shape=box label="samme_proba3" fontsize=10];
      Mul7 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul7)" fontsize=10];
      sub_result3 -> Mul7;
      n_classes_minus_one -> Mul7;
      Mul7 -> samme_proba3;

      samme_proba2 [shape=box label="samme_proba2" fontsize=10];
      Mul5 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul5)" fontsize=10];
      sub_result2 -> Mul5;
      n_classes_minus_one -> Mul5;
      Mul5 -> samme_proba2;

      samme_proba4 [shape=box label="samme_proba4" fontsize=10];
      Mul9 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul9)" fontsize=10];
      sub_result4 -> Mul9;
      n_classes_minus_one -> Mul9;
      Mul9 -> samme_proba4;

      samme_proba5 [shape=box label="samme_proba5" fontsize=10];
      Mul11 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul11)" fontsize=10];
      sub_result5 -> Mul11;
      n_classes_minus_one -> Mul11;
      Mul11 -> samme_proba5;

      summation_prob [shape=box label="summation_prob" fontsize=10];
      Sum [shape=box style="filled,rounded" color=orange label="Sum\n(Sum)" fontsize=10];
      samme_proba -> Sum;
      samme_proba1 -> Sum;
      samme_proba2 -> Sum;
      samme_proba3 -> Sum;
      samme_proba4 -> Sum;
      samme_proba5 -> Sum;
      samme_proba6 -> Sum;
      samme_proba7 -> Sum;
      samme_proba8 -> Sum;
      samme_proba9 -> Sum;
      Sum -> summation_prob;

      div_result [shape=box label="div_result" fontsize=10];
      Div [shape=box style="filled,rounded" color=orange label="Div\n(Div)" fontsize=10];
      summation_prob -> Div;
      est_weights_sum -> Div;
      Div -> div_result;

      exp_operand [shape=box label="exp_operand" fontsize=10];
      Mul20 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul20)" fontsize=10];
      div_result -> Mul20;
      mul_operand -> Mul20;
      Mul20 -> exp_operand;

      exp_result [shape=box label="exp_result" fontsize=10];
      Exp [shape=box style="filled,rounded" color=orange label="Exp\n(Exp)" fontsize=10];
      exp_operand -> Exp;
      Exp -> exp_result;

      reduced_exp_result [shape=box label="reduced_exp_result" fontsize=10];
      ReduceSum10 [shape=box style="filled,rounded" color=orange label="ReduceSum\n(ReduceSum10)" fontsize=10];
      exp_result -> ReduceSum10;
      axis -> ReduceSum10;
      ReduceSum10 -> reduced_exp_result;

      normaliser [shape=box label="normaliser" fontsize=10];
      Reshape10 [shape=box style="filled,rounded" color=orange label="Reshape\n(Reshape10)" fontsize=10];
      reduced_exp_result -> Reshape10;
      shape_tensor -> Reshape10;
      Reshape10 -> normaliser;

      cast_normaliser [shape=box label="cast_normaliser" fontsize=10];
      Cast [shape=box style="filled,rounded" color=orange label="Cast\n(Cast)\nto=6" fontsize=10];
      normaliser -> Cast;
      Cast -> cast_normaliser;

      comparison_result [shape=box label="comparison_result" fontsize=10];
      Equal [shape=box style="filled,rounded" color=orange label="Equal\n(Equal)" fontsize=10];
      cast_normaliser -> Equal;
      zero_scalar -> Equal;
      Equal -> comparison_result;

      cast_output [shape=box label="cast_output" fontsize=10];
      Cast1 [shape=box style="filled,rounded" color=orange label="Cast\n(Cast1)\nto=1" fontsize=10];
      comparison_result -> Cast1;
      Cast1 -> cast_output;

      zero_filtered_normaliser [shape=box label="zero_filtered_normaliser" fontsize=10];
      Add [shape=box style="filled,rounded" color=orange label="Add\n(Add)" fontsize=10];
      normaliser -> Add;
      cast_output -> Add;
      Add -> zero_filtered_normaliser;

      Div1 [shape=box style="filled,rounded" color=orange label="Div\n(Div1)" fontsize=10];
      exp_result -> Div1;
      zero_filtered_normaliser -> Div1;
      Div1 -> probabilities;

      argmax_output [shape=box label="argmax_output" fontsize=10];
      ArgMax [shape=box style="filled,rounded" color=orange label="ArgMax\n(ArgMax)\naxis=1" fontsize=10];
      probabilities -> ArgMax;
      ArgMax -> argmax_output;

      array_feature_extractor_result [shape=box label="array_feature_extractor_result" fontsize=10];
      ArrayFeatureExtractor [shape=box style="filled,rounded" color=orange label="ArrayFeatureExtractor\n(ArrayFeatureExtractor)" fontsize=10];
      classes -> ArrayFeatureExtractor;
      argmax_output -> ArrayFeatureExtractor;
      ArrayFeatureExtractor -> array_feature_extractor_result;

      reshaped_result10 [shape=box label="reshaped_result10" fontsize=10];
      Reshape11 [shape=box style="filled,rounded" color=orange label="Reshape\n(Reshape11)" fontsize=10];
      array_feature_extractor_result -> Reshape11;
      shape_tensor11 -> Reshape11;
      Reshape11 -> reshaped_result10;

      Cast2 [shape=box style="filled,rounded" color=orange label="Cast\n(Cast2)\nto=7" fontsize=10];
      reshaped_result10 -> Cast2;
      Cast2 -> label;
    }