

.. _l-LGBMRegressor-~b-reg-64-default--o15:

LGBMRegressor - ~b-reg-64 - default - 
======================================

Fitted on a problem type *~b-reg-64*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `predict` matches output .


::

        LGBMRegressor(n_jobs=8, random_state=0)

+----------------------+------------+
| index                | 0          |
+======================+============+
| skl_nop              | 1          |
+----------------------+------------+
| onx_size             | 28077      |
+----------------------+------------+
| onx_nnodes           | 2          |
+----------------------+------------+
| onx_ninits           | 0          |
+----------------------+------------+
| onx_doc_string       |            |
+----------------------+------------+
| onx_ir_version       | 8          |
+----------------------+------------+
| onx_domain           | ai.onnx    |
+----------------------+------------+
| onx_model_version    | 0          |
+----------------------+------------+
| onx_producer_name    | skl2onnx   |
+----------------------+------------+
| onx_producer_version | 1.11       |
+----------------------+------------+
| onx_                 | 14         |
+----------------------+------------+
| onx_mlprodict        | 1          |
+----------------------+------------+
| onx_op_Identity      | 1          |
+----------------------+------------+
| onx_size_optim       | 28037      |
+----------------------+------------+
| onx_nnodes_optim     | 1          |
+----------------------+------------+
| onx_ninits_optim     | 0          |
+----------------------+------------+
| fit_n_features_      | 4          |
+----------------------+------------+
| fit_objective        | regression |
+----------------------+------------+
| fit_n_targets        | 1          |
+----------------------+------------+
| fit_estimators_.size | 100        |
+----------------------+------------+
| fit_node_count       | 746        |
+----------------------+------------+
| fit_ntrees           | 100        |
+----------------------+------------+
| fit_leave_count      | 423        |
+----------------------+------------+
| fit_mode_count       | 2          |
+----------------------+------------+


.. gdot::

        digraph{
      nodesep=0.05;
      ranksep=0.25;
      size=7;
      orientation=portrait;

      X [shape=box color=red label="X\ndouble((0, 4))" fontsize=10];

      variable [shape=box color=green label="variable\ndouble((0, 1))" fontsize=10];


      output [shape=box label="output" fontsize=10];
      LightGbmLGBMRegressor [shape=box style="filled,rounded" color=orange label="TreeEnsembleRegressorDouble\n(LightGbmLGBMRegressor)\nn_targets=1\nnodes_falsenodeids=[2 0 4 0 0 2...\nnodes_featureids=[2 0 2 0 0 2 0...\nnodes_hitrates=[1. 1. 1. 1. 1. ...\nnodes_missing_value_tracks_true=[1 0 1 0 0...\nnodes_modes=[b'BRANCH_LEQ' b'LE...\nnodes_nodeids=[0 1 2 3 4 0 1 2 ...\nnodes_treeids=[ 0  0  0  0  0  ...\nnodes_truenodeids=[1 0 3 0 0 1 ...\nnodes_values=[3.106216  0.     ...\npost_transform=b'NONE'\ntarget_ids=[0 0 0 0 0 0 0 0 0 0...\ntarget_nodeids=[1 3 4 1 3 4 1 3...\ntarget_treeids=[ 0  0  0  1  1 ...\ntarget_weights=[ 1.63793349e+00..." fontsize=10];
      X -> LightGbmLGBMRegressor;
      LightGbmLGBMRegressor -> output;

      Identity [shape=box style="filled,rounded" color=orange label="Identity\n(Identity)" fontsize=10];
      output -> Identity;
      Identity -> variable;
    }