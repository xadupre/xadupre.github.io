

.. _l-LarsCV-b-reg-default--o15:

LarsCV - b-reg - default - 
===========================

Fitted on a problem type *b-reg*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `predict` matches output .


::

        LarsCV(n_jobs=8)

+----------------------+----------+
| index                | 0        |
+======================+==========+
| skl_nop              | 1        |
+----------------------+----------+
| skl_ncoef            | 4        |
+----------------------+----------+
| skl_nlin             | 1        |
+----------------------+----------+
| onx_size             | 247      |
+----------------------+----------+
| onx_nnodes           | 1        |
+----------------------+----------+
| onx_ninits           | 0        |
+----------------------+----------+
| onx_doc_string       |          |
+----------------------+----------+
| onx_ir_version       | 8        |
+----------------------+----------+
| onx_domain           | ai.onnx  |
+----------------------+----------+
| onx_model_version    | 0        |
+----------------------+----------+
| onx_producer_name    | skl2onnx |
+----------------------+----------+
| onx_producer_version | 1.11     |
+----------------------+----------+
| onx_ai.onnx.ml       | 1        |
+----------------------+----------+
| onx_                 | 15       |
+----------------------+----------+
| onx_size_optim       | 247      |
+----------------------+----------+
| onx_nnodes_optim     | 1        |
+----------------------+----------+
| onx_ninits_optim     | 0        |
+----------------------+----------+
| fit_cv_alphas_.shape | 21       |
+----------------------+----------+
| fit_mse_path_.shape  | (21, 5)  |
+----------------------+----------+
| fit_alphas_.shape    | 4        |
+----------------------+----------+
| fit_coef_.shape      | 4        |
+----------------------+----------+
| fit_coef_path_.shape | (4, 4)   |
+----------------------+----------+


.. gdot::

        digraph{
      nodesep=0.05;
      ranksep=0.25;
      size=7;
      orientation=portrait;

      X [shape=box color=red label="X\nfloat((0, 4))" fontsize=10];

      variable [shape=box color=green label="variable\nfloat((0, 1))" fontsize=10];


      LinearRegressor [shape=box style="filled,rounded" color=orange label="LinearRegressor\n(LinearRegressor)\ncoefficients=[-0.12881494  0.  ...\nintercepts=[0.06464553]" fontsize=10];
      X -> LinearRegressor;
      LinearRegressor -> variable;
    }