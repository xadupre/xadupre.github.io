

.. _l-TfidfTransformer-bow-default--o15:

TfidfTransformer - bow - default - 
===================================

Fitted on a problem type *bow*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `transform` matches output .


::

        TfidfTransformer()

+----------------------+----------+
| index                | 0        |
+======================+==========+
| skl_nop              | 1        |
+----------------------+----------+
| onx_size             | 409      |
+----------------------+----------+
| onx_nnodes           | 3        |
+----------------------+----------+
| onx_ninits           | 1        |
+----------------------+----------+
| onx_doc_string       |          |
+----------------------+----------+
| onx_ir_version       | 8        |
+----------------------+----------+
| onx_domain           | ai.onnx  |
+----------------------+----------+
| onx_model_version    | 0        |
+----------------------+----------+
| onx_producer_name    | skl2onnx |
+----------------------+----------+
| onx_producer_version | 1.11     |
+----------------------+----------+
| onx_ai.onnx.ml       | 1        |
+----------------------+----------+
| onx_                 | 14       |
+----------------------+----------+
| onx_op_Identity      | 1        |
+----------------------+----------+
| onx_size_optim       | 357      |
+----------------------+----------+
| onx_nnodes_optim     | 2        |
+----------------------+----------+
| onx_ninits_optim     | 1        |
+----------------------+----------+


.. gdot::

        digraph{
      nodesep=0.05;
      ranksep=0.25;
      size=7;
      orientation=portrait;

      X [shape=box color=red label="X\nfloat((0, 21))" fontsize=10];

      variable [shape=box color=green label="variable\nfloat((1, 21))" fontsize=10];

      idfcst [shape=box label="idfcst\nfloat32((21,))\n[3.442347  4.135494  3.442347  3.442347  4.135494 ..." fontsize=10];

      tfidftr_output [shape=box label="tfidftr_output" fontsize=10];
      Mul [shape=box style="filled,rounded" color=orange label="Mul\n(Mul)" fontsize=10];
      X -> Mul;
      idfcst -> Mul;
      Mul -> tfidftr_output;

      tfidftr_norm [shape=box label="tfidftr_norm" fontsize=10];
      Normalizer [shape=box style="filled,rounded" color=orange label="Normalizer\n(Normalizer)\nnorm=b'L2'" fontsize=10];
      tfidftr_output -> Normalizer;
      Normalizer -> tfidftr_norm;

      Identity [shape=box style="filled,rounded" color=orange label="Identity\n(Identity)" fontsize=10];
      tfidftr_norm -> Identity;
      Identity -> variable;
    }