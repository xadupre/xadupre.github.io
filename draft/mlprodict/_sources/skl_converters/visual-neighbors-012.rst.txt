

.. _l-KNeighborsRegressor-~b-reg-64-default_k3-cdist-o15:

KNeighborsRegressor - ~b-reg-64 - default_k3 - cdist
====================================================

Fitted on a problem type *~b-reg-64*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `predict` matches output .
Model was converted with additional parameter: ``<class 'sklearn.neighbors._regression.KNeighborsRegressor'>={'optim': 'cdist'}``.

::

        KNeighborsRegressor(algorithm='brute', n_jobs=8, n_neighbors=3)

+----------------------+----------+
| index                | 0        |
+======================+==========+
| skl_nop              | 1        |
+----------------------+----------+
| onx_size             | 5342     |
+----------------------+----------+
| onx_nnodes           | 7        |
+----------------------+----------+
| onx_ninits           | 4        |
+----------------------+----------+
| onx_doc_string       |          |
+----------------------+----------+
| onx_ir_version       | 8        |
+----------------------+----------+
| onx_domain           | ai.onnx  |
+----------------------+----------+
| onx_model_version    | 0        |
+----------------------+----------+
| onx_producer_name    | skl2onnx |
+----------------------+----------+
| onx_producer_version | 1.11.1   |
+----------------------+----------+
| onx_                 | 14       |
+----------------------+----------+
| onx_ai.onnx.ml       | 1        |
+----------------------+----------+
| onx_com.microsoft    | 1        |
+----------------------+----------+
| onx_op_Cast          | 1        |
+----------------------+----------+
| onx_op_Reshape       | 1        |
+----------------------+----------+
| onx_size_optim       | 5342     |
+----------------------+----------+
| onx_nnodes_optim     | 7        |
+----------------------+----------+
| onx_ninits_optim     | 4        |
+----------------------+----------+
| fit__fit_X.shape     | (112, 4) |
+----------------------+----------+


.. gdot::

        digraph{
      ranksep=0.25;
      nodesep=0.05;
      orientation=portrait;
      size=7;

      X [shape=box color=red label="X\ndouble((0, 4))" fontsize=10];

      variable [shape=box color=green label="variable\ndouble((0, 1))" fontsize=10];

      knny_ArrayFeatureExtractorcst [shape=box label="knny_ArrayFeatureExtractorcst\nfloat64((112,))\n[0.04 0.32 3.42 1.85 1.86 0.16 0.1  1.81 3.33 3.37..." fontsize=10];
      CD_CDistcst [shape=box label="CD_CDistcst\nfloat64((112, 4))\n[[ 4.30175021e+00  3.94531870e+00  9.21953113e-01 ..." fontsize=10];
      To_TopKcst [shape=box label="To_TopKcst\nint64((1,))\n[3]" fontsize=10];
      knny_Reshapecst [shape=box label="knny_Reshapecst\nint64((2,))\n[-1  3]" fontsize=10];

      CD_dist [shape=box label="CD_dist" fontsize=10];
      CD_CDist [shape=box style="filled,rounded" color=orange label="CDist\n(CD_CDist)\nmetric=b'euclidean'" fontsize=10];
      X -> CD_CDist;
      CD_CDistcst -> CD_CDist;
      CD_CDist -> CD_dist;

      To_Values0 [shape=box label="To_Values0" fontsize=10];
      To_Indices1 [shape=box label="To_Indices1" fontsize=10];
      To_TopK [shape=box style="filled,rounded" color=orange label="TopK\n(To_TopK)\nlargest=0\nsorted=1" fontsize=10];
      CD_dist -> To_TopK;
      To_TopKcst -> To_TopK;
      To_TopK -> To_Values0;
      To_TopK -> To_Indices1;

      knny_output0 [shape=box label="knny_output0" fontsize=10];
      knny_Flatten [shape=box style="filled,rounded" color=orange label="Flatten\n(knny_Flatten)" fontsize=10];
      To_Indices1 -> knny_Flatten;
      knny_Flatten -> knny_output0;

      knny_Z0 [shape=box label="knny_Z0" fontsize=10];
      knny_ArrayFeatureExtractor [shape=box style="filled,rounded" color=orange label="ArrayFeatureExtractor\n(knny_ArrayFeatureExtractor)" fontsize=10];
      knny_ArrayFeatureExtractorcst -> knny_ArrayFeatureExtractor;
      knny_output0 -> knny_ArrayFeatureExtractor;
      knny_ArrayFeatureExtractor -> knny_Z0;

      knny_reshaped0 [shape=box label="knny_reshaped0" fontsize=10];
      knny_Reshape [shape=box style="filled,rounded" color=orange label="Reshape\n(knny_Reshape)\nallowzero=0" fontsize=10];
      knny_Z0 -> knny_Reshape;
      knny_Reshapecst -> knny_Reshape;
      knny_Reshape -> knny_reshaped0;

      Ca_output0 [shape=box label="Ca_output0" fontsize=10];
      Ca_Cast [shape=box style="filled,rounded" color=orange label="Cast\n(Ca_Cast)\nto=11" fontsize=10];
      knny_reshaped0 -> Ca_Cast;
      Ca_Cast -> Ca_output0;

      Re_ReduceMean [shape=box style="filled,rounded" color=orange label="ReduceMean\n(Re_ReduceMean)\naxes=[1]\nkeepdims=1" fontsize=10];
      Ca_output0 -> Re_ReduceMean;
      Re_ReduceMean -> variable;
    }