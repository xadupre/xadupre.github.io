

.. _l-SVC-m-cl-poly-zipmap:False-o15:

SVC - m-cl - poly - {'zipmap': False}
=====================================

Fitted on a problem type *m-cl*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `predict_proba` matches output .
Model was converted with additional parameter: ``<class 'sklearn.svm._classes.SVC'>={'zipmap': False}``.

::

        SVC(kernel='poly', probability=True, random_state=0)

+----------------------------+----------+
| index                      | 0        |
+============================+==========+
| skl_nop                    | 1        |
+----------------------------+----------+
| onx_size                   | 1327     |
+----------------------------+----------+
| onx_nnodes                 | 2        |
+----------------------------+----------+
| onx_ninits                 | 0        |
+----------------------------+----------+
| onx_doc_string             |          |
+----------------------------+----------+
| onx_ir_version             | 8        |
+----------------------------+----------+
| onx_domain                 | ai.onnx  |
+----------------------------+----------+
| onx_model_version          | 0        |
+----------------------------+----------+
| onx_producer_name          | skl2onnx |
+----------------------------+----------+
| onx_producer_version       | 1.11     |
+----------------------------+----------+
| onx_ai.onnx.ml             | 1        |
+----------------------------+----------+
| onx_                       | 9        |
+----------------------------+----------+
| onx_op_Cast                | 1        |
+----------------------------+----------+
| onx_size_optim             | 1327     |
+----------------------------+----------+
| onx_nnodes_optim           | 2        |
+----------------------------+----------+
| onx_ninits_optim           | 0        |
+----------------------------+----------+
| fit_class_weight_.shape    | 3        |
+----------------------------+----------+
| fit_classes_.shape         | 3        |
+----------------------------+----------+
| fit_support_.shape         | 27       |
+----------------------------+----------+
| fit_support_vectors_.shape | (27, 4)  |
+----------------------------+----------+
| fit_dual_coef_.shape       | (2, 27)  |
+----------------------------+----------+
| fit_intercept_.shape       | 3        |
+----------------------------+----------+


.. gdot::

        digraph{
      nodesep=0.05;
      ranksep=0.25;
      size=7;
      orientation=portrait;

      X [shape=box color=red label="X\nfloat((0, 4))" fontsize=10];

      label [shape=box color=green label="label\nint64((0,))" fontsize=10];
      probabilities [shape=box color=green label="probabilities\nfloat((0, 3))" fontsize=10];


      SVM02 [shape=box label="SVM02" fontsize=10];
      SVMc [shape=box style="filled,rounded" color=orange label="SVMClassifier\n(SVMc)\nclasslabels_ints=[0 1 2]\ncoefficients=[ 0.          0.  ...\nkernel_params=[0.06311981 0.   ...\nkernel_type=b'POLY'\npost_transform=b'NONE'\nprob_a=[-1.4990234 -1.9346553 -...\nprob_b=[-0.2240358  -0.59328383...\nrho=[1.2798856 1.9933845 4.3914...\nsupport_vectors=[5.402252   3.5...\nvectors_per_class=[ 3 13 11]" fontsize=10];
      X -> SVMc;
      SVMc -> label;
      SVMc -> SVM02;

      Cast [shape=box style="filled,rounded" color=orange label="Cast\n(Cast)\nto=1" fontsize=10];
      SVM02 -> Cast;
      Cast -> probabilities;
    }