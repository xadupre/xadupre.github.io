

.. _l-StackingRegressor-b-reg-linreg--o15:

StackingRegressor - b-reg - linreg - 
=====================================

Fitted on a problem type *b-reg*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `predict` matches output .


::

        StackingRegressor(estimators=[('lr1', LinearRegression()),
                                  ('lr2', LinearRegression(fit_intercept=False))],
                      n_jobs=8)

+---------------------------------+----------+
| index                           | 0        |
+=================================+==========+
| skl_nop                         | 3        |
+---------------------------------+----------+
| skl_ncoef                       | 8        |
+---------------------------------+----------+
| skl_nlin                        | 2        |
+---------------------------------+----------+
| onx_size                        | 842      |
+---------------------------------+----------+
| onx_nnodes                      | 8        |
+---------------------------------+----------+
| onx_ninits                      | 0        |
+---------------------------------+----------+
| onx_doc_string                  |          |
+---------------------------------+----------+
| onx_ir_version                  | 8        |
+---------------------------------+----------+
| onx_domain                      | ai.onnx  |
+---------------------------------+----------+
| onx_model_version               | 0        |
+---------------------------------+----------+
| onx_producer_name               | skl2onnx |
+---------------------------------+----------+
| onx_producer_version            | 1.11.1   |
+---------------------------------+----------+
| onx_ai.onnx.ml                  | 1        |
+---------------------------------+----------+
| onx_                            | 14       |
+---------------------------------+----------+
| onx_op_Cast                     | 3        |
+---------------------------------+----------+
| onx_op_Identity                 | 1        |
+---------------------------------+----------+
| onx_size_optim                  | 782      |
+---------------------------------+----------+
| onx_nnodes_optim                | 7        |
+---------------------------------+----------+
| onx_ninits_optim                | 0        |
+---------------------------------+----------+
| fit_estimators_.size            | 2        |
+---------------------------------+----------+
| fit_estimators_.singular_.shape | 4        |
+---------------------------------+----------+
| fit_estimators_.coef_.shape     | 4        |
+---------------------------------+----------+


.. gdot::

        digraph{
      ranksep=0.25;
      nodesep=0.05;
      orientation=portrait;
      size=7;

      X [shape=box color=red label="X\nfloat((0, 4))" fontsize=10];

      variable [shape=box color=green label="variable\nfloat((0, 1))" fontsize=10];


      variable1 [shape=box label="variable1" fontsize=10];
      LinearRegressor [shape=box style="filled,rounded" color=orange label="LinearRegressor\n(LinearRegressor)\ncoefficients=[-0.19476996  0.04...\nintercepts=[0.17583406]" fontsize=10];
      X -> LinearRegressor;
      LinearRegressor -> variable1;

      variable2 [shape=box label="variable2" fontsize=10];
      LinearRegressor1 [shape=box style="filled,rounded" color=orange label="LinearRegressor\n(LinearRegressor1)\ncoefficients=[-0.16883491  0.06...\nintercepts=[0.]" fontsize=10];
      X -> LinearRegressor1;
      LinearRegressor1 -> variable2;

      variable2_castio [shape=box label="variable2_castio" fontsize=10];
      Cast1 [shape=box style="filled,rounded" color=orange label="Cast\n(Cast1)\nto=1" fontsize=10];
      variable2 -> Cast1;
      Cast1 -> variable2_castio;

      variable1_castio [shape=box label="variable1_castio" fontsize=10];
      Cast [shape=box style="filled,rounded" color=orange label="Cast\n(Cast)\nto=1" fontsize=10];
      variable1 -> Cast;
      Cast -> variable1_castio;

      merged_probability_tensor [shape=box label="merged_probability_tensor" fontsize=10];
      Concat [shape=box style="filled,rounded" color=orange label="Concat\n(Concat)\naxis=1" fontsize=10];
      variable1_castio -> Concat;
      variable2_castio -> Concat;
      Concat -> merged_probability_tensor;

      variable3 [shape=box label="variable3" fontsize=10];
      LinearRegressor2 [shape=box style="filled,rounded" color=orange label="LinearRegressor\n(LinearRegressor2)\ncoefficients=[0.09499621 0.8980...\nintercepts=[0.01630316]" fontsize=10];
      merged_probability_tensor -> LinearRegressor2;
      LinearRegressor2 -> variable3;

      variable3_castio [shape=box label="variable3_castio" fontsize=10];
      Cast2 [shape=box style="filled,rounded" color=orange label="Cast\n(Cast2)\nto=1" fontsize=10];
      variable3 -> Cast2;
      Cast2 -> variable3_castio;

      Identity [shape=box style="filled,rounded" color=orange label="Identity\n(Identity)" fontsize=10];
      variable3_castio -> Identity;
      Identity -> variable;
    }