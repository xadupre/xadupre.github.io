

.. _l-SVC-~b-cl-64-poly-zipmap:False-o15:

SVC - ~b-cl-64 - poly - {'zipmap': False}
=========================================

Fitted on a problem type *~b-cl-64*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `predict_proba` matches output .
Model was converted with additional parameter: ``<class 'sklearn.svm._classes.SVC'>={'zipmap': False}``.

::

        SVC(kernel='poly', probability=True, random_state=0)

+----------------------------+----------+
| index                      | 0        |
+============================+==========+
| skl_nop                    | 1        |
+----------------------------+----------+
| onx_size                   | 587      |
+----------------------------+----------+
| onx_nnodes                 | 2        |
+----------------------------+----------+
| onx_ninits                 | 0        |
+----------------------------+----------+
| onx_doc_string             |          |
+----------------------------+----------+
| onx_ir_version             | 8        |
+----------------------------+----------+
| onx_domain                 | ai.onnx  |
+----------------------------+----------+
| onx_model_version          | 0        |
+----------------------------+----------+
| onx_producer_name          | skl2onnx |
+----------------------------+----------+
| onx_producer_version       | 1.11.1   |
+----------------------------+----------+
| onx_                       | 9        |
+----------------------------+----------+
| onx_mlprodict              | 1        |
+----------------------------+----------+
| onx_op_Cast                | 1        |
+----------------------------+----------+
| onx_size_optim             | 587      |
+----------------------------+----------+
| onx_nnodes_optim           | 2        |
+----------------------------+----------+
| onx_ninits_optim           | 0        |
+----------------------------+----------+
| fit_class_weight_.shape    | 2        |
+----------------------------+----------+
| fit_classes_.shape         | 2        |
+----------------------------+----------+
| fit_support_.shape         | 4        |
+----------------------------+----------+
| fit_support_vectors_.shape | (4, 4)   |
+----------------------------+----------+
| fit_dual_coef_.shape       | (1, 4)   |
+----------------------------+----------+
| fit_intercept_.shape       | 1        |
+----------------------------+----------+


.. gdot::

        digraph{
      ranksep=0.25;
      nodesep=0.05;
      orientation=portrait;
      size=7;

      X [shape=box color=red label="X\ndouble((0, 4))" fontsize=10];

      label [shape=box color=green label="label\nint64((0,))" fontsize=10];
      probabilities [shape=box color=green label="probabilities\ndouble((0, 2))" fontsize=10];


      SVM02 [shape=box label="SVM02" fontsize=10];
      SVMc [shape=box style="filled,rounded" color=orange label="SVMClassifierDouble\n(SVMc)\nclasslabels_ints=[0 1]\ncoefficients=[ 0.8456437  -0.19...\nkernel_params=[0.06311981 0.   ...\nkernel_type=b'POLY'\npost_transform=b'NONE'\nprob_a=[-1.2859961]\nprob_b=[-0.13210051]\nrho=[1.279884]\nsupport_vectors=[5.0724845  3.0...\nvectors_per_class=[1 3]" fontsize=10];
      X -> SVMc;
      SVMc -> label;
      SVMc -> SVM02;

      Cast [shape=box style="filled,rounded" color=orange label="Cast\n(Cast)\nto=11" fontsize=10];
      SVM02 -> Cast;
      Cast -> probabilities;
    }