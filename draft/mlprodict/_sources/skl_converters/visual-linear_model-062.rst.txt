

.. _l-PassiveAggressiveClassifier-~b-cl-nop-logreg-zipmap:False-o15:

PassiveAggressiveClassifier - ~b-cl-nop - logreg - {'zipmap': False}
====================================================================

Fitted on a problem type *~b-cl-nop*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `predict` matches output .
Model was converted with additional parameter: ``<class 'sklearn.linear_model._passive_aggressive.PassiveAggressiveClassifier'>={'zipmap': False}``.

::

        PassiveAggressiveClassifier(n_jobs=8, random_state=0)

+----------------------+----------+
| index                | 0        |
+======================+==========+
| skl_nop              | 1        |
+----------------------+----------+
| skl_ncoef            | 1        |
+----------------------+----------+
| skl_nlin             | 1        |
+----------------------+----------+
| onx_size             | 792      |
+----------------------+----------+
| onx_nnodes           | 8        |
+----------------------+----------+
| onx_ninits           | 5        |
+----------------------+----------+
| onx_doc_string       |          |
+----------------------+----------+
| onx_ir_version       | 8        |
+----------------------+----------+
| onx_domain           | ai.onnx  |
+----------------------+----------+
| onx_model_version    | 0        |
+----------------------+----------+
| onx_producer_name    | skl2onnx |
+----------------------+----------+
| onx_producer_version | 1.11     |
+----------------------+----------+
| onx_ai.onnx.ml       | 1        |
+----------------------+----------+
| onx_                 | 13       |
+----------------------+----------+
| onx_op_Cast          | 1        |
+----------------------+----------+
| onx_op_Reshape       | 1        |
+----------------------+----------+
| onx_size_optim       | 792      |
+----------------------+----------+
| onx_nnodes_optim     | 8        |
+----------------------+----------+
| onx_ninits_optim     | 5        |
+----------------------+----------+
| fit_coef_.shape      | (1, 4)   |
+----------------------+----------+
| fit_intercept_.shape | 1        |
+----------------------+----------+
| fit_classes_.shape   | 2        |
+----------------------+----------+


.. gdot::

        digraph{
      nodesep=0.05;
      ranksep=0.25;
      size=7;
      orientation=portrait;

      X [shape=box color=red label="X\nfloat((0, 4))" fontsize=10];

      label [shape=box color=green label="label\nint64((0,))" fontsize=10];
      probabilities [shape=box color=green label="probabilities\nfloat((0, 2))" fontsize=10];

      classes [shape=box label="classes\nint32((2,))\n[0 1]" fontsize=10];
      coef [shape=box label="coef\nfloat32((4, 1))\n[[-0.30215952]\n [-0.61436856]\n [ 1.1848546 ]\n [ 0.38240063]]" fontsize=10];
      intercept [shape=box label="intercept\nfloat32((1,))\n[-0.14957143]" fontsize=10];
      negate [shape=box label="negate\nfloat32(())\n-1.0" fontsize=10];
      shape_tensor [shape=box label="shape_tensor\nint64((1,))\n[-1]" fontsize=10];

      matmul_result [shape=box label="matmul_result" fontsize=10];
      MatMul [shape=box style="filled,rounded" color=orange label="MatMul\n(MatMul)" fontsize=10];
      X -> MatMul;
      coef -> MatMul;
      MatMul -> matmul_result;

      score [shape=box label="score" fontsize=10];
      Add [shape=box style="filled,rounded" color=orange label="Add\n(Add)" fontsize=10];
      matmul_result -> Add;
      intercept -> Add;
      Add -> score;

      negated_scores [shape=box label="negated_scores" fontsize=10];
      Mul [shape=box style="filled,rounded" color=orange label="Mul\n(Mul)" fontsize=10];
      score -> Mul;
      negate -> Mul;
      Mul -> negated_scores;

      Concat [shape=box style="filled,rounded" color=orange label="Concat\n(Concat)\naxis=1" fontsize=10];
      negated_scores -> Concat;
      score -> Concat;
      Concat -> probabilities;

      predicted_label [shape=box label="predicted_label" fontsize=10];
      ArgMax [shape=box style="filled,rounded" color=orange label="ArgMax\n(ArgMax)\naxis=1" fontsize=10];
      probabilities -> ArgMax;
      ArgMax -> predicted_label;

      final_label [shape=box label="final_label" fontsize=10];
      ArrayFeatureExtractor [shape=box style="filled,rounded" color=orange label="ArrayFeatureExtractor\n(ArrayFeatureExtractor)" fontsize=10];
      classes -> ArrayFeatureExtractor;
      predicted_label -> ArrayFeatureExtractor;
      ArrayFeatureExtractor -> final_label;

      reshaped_final_label [shape=box label="reshaped_final_label" fontsize=10];
      Reshape [shape=box style="filled,rounded" color=orange label="Reshape\n(Reshape)" fontsize=10];
      final_label -> Reshape;
      shape_tensor -> Reshape;
      Reshape -> reshaped_final_label;

      Cast [shape=box style="filled,rounded" color=orange label="Cast\n(Cast)\nto=7" fontsize=10];
      reshaped_final_label -> Cast;
      Cast -> label;
    }