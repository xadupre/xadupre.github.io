

.. _l-AdaBoostRegressor-b-reg-default--o15:

AdaBoostRegressor - b-reg - default - 
======================================

Fitted on a problem type *b-reg*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `predict` matches output .


::

        AdaBoostRegressor(n_estimators=10, random_state=0)

+---------------------------------------+----------+
| index                                 | 0        |
+=======================================+==========+
| skl_nop                               | 11       |
+---------------------------------------+----------+
| skl_nnodes                            | 146      |
+---------------------------------------+----------+
| skl_ntrees                            | 10       |
+---------------------------------------+----------+
| skl_max_depth                         | 3        |
+---------------------------------------+----------+
| onx_size                              | 10903    |
+---------------------------------------+----------+
| onx_nnodes                            | 23       |
+---------------------------------------+----------+
| onx_ninits                            | 7        |
+---------------------------------------+----------+
| onx_doc_string                        |          |
+---------------------------------------+----------+
| onx_ir_version                        | 8        |
+---------------------------------------+----------+
| onx_domain                            | ai.onnx  |
+---------------------------------------+----------+
| onx_model_version                     | 0        |
+---------------------------------------+----------+
| onx_producer_name                     | skl2onnx |
+---------------------------------------+----------+
| onx_producer_version                  | 1.11.1   |
+---------------------------------------+----------+
| onx_                                  | 15       |
+---------------------------------------+----------+
| onx_ai.onnx.ml                        | 1        |
+---------------------------------------+----------+
| onx_op_Cast                           | 1        |
+---------------------------------------+----------+
| onx_op_Reshape                        | 1        |
+---------------------------------------+----------+
| onx_size_optim                        | 10903    |
+---------------------------------------+----------+
| onx_nnodes_optim                      | 23       |
+---------------------------------------+----------+
| onx_ninits_optim                      | 7        |
+---------------------------------------+----------+
| fit_estimator_weights_.shape          | 10       |
+---------------------------------------+----------+
| fit_estimator_errors_.shape           | 10       |
+---------------------------------------+----------+
| fit_estimators_.size                  | 10       |
+---------------------------------------+----------+
| fit_estimators_.sum|tree_.node_count  | 146      |
+---------------------------------------+----------+
| fit_estimators_.sum|tree_.leave_count | 78       |
+---------------------------------------+----------+
| fit_estimators_.n_features_           | 4        |
+---------------------------------------+----------+
| fit_estimators_.max|tree_.max_depth   | 3        |
+---------------------------------------+----------+


.. gdot::

        digraph{
      ranksep=0.25;
      nodesep=0.05;
      orientation=portrait;
      size=7;

      X [shape=box color=red label="X\nfloat((0, 4))" fontsize=10];

      variable [shape=box color=green label="variable\nfloat((0, 1))" fontsize=10];

      negate [shape=box label="negate\nfloat32(())\n-1.0" fontsize=10];
      estimators_weights [shape=box label="estimators_weights\nfloat32((10,))\n[1.4365486  1.5002506  1.3294014  0.54848987 1.219..." fontsize=10];
      half_scalar [shape=box label="half_scalar\nfloat32(())\n0.5" fontsize=10];
      last_index [shape=box label="last_index\nint64(())\n9" fontsize=10];
      k_value [shape=box label="k_value\nint64((1,))\n[10]" fontsize=10];
      shape_tensor [shape=box label="shape_tensor\nint64((2,))\n[-1 10]" fontsize=10];
      axis_name [shape=box label="axis_name\nint32(())\n1" fontsize=10];

      est_label_4 [shape=box label="est_label_4" fontsize=10];
      TreeEnsembleRegressor4 [shape=box style="filled,rounded" color=orange label="TreeEnsembleRegressor\n(TreeEnsembleRegressor4)\nn_targets=1\nnodes_falsenodeids=[ 8  5  4  0...\nnodes_featureids=[3 1 2 0 0 0 0...\nnodes_hitrates=[1. 1. 1. 1. 1. ...\nnodes_missing_value_tracks_true=[0 0 0 0 0...\nnodes_modes=[b'BRANCH_LEQ' b'BR...\nnodes_nodeids=[ 0  1  2  3  4  ...\nnodes_treeids=[0 0 0 0 0 0 0 0 ...\nnodes_truenodeids=[ 1  2  3  0 ...\nnodes_values=[1.1216526 2.97020...\npost_transform=b'NONE'\ntarget_ids=[0 0 0 0 0 0 0 0]\ntarget_nodeids=[ 3  4  6  7 10 ...\ntarget_treeids=[0 0 0 0 0 0 0 0...\ntarget_weights=[1.93       1.75..." fontsize=10];
      X -> TreeEnsembleRegressor4;
      TreeEnsembleRegressor4 -> est_label_4;

      est_label_1 [shape=box label="est_label_1" fontsize=10];
      TreeEnsembleRegressor1 [shape=box style="filled,rounded" color=orange label="TreeEnsembleRegressor\n(TreeEnsembleRegressor1)\nn_targets=1\nnodes_falsenodeids=[ 8  5  4  0...\nnodes_featureids=[2 2 2 0 0 0 0...\nnodes_hitrates=[1. 1. 1. 1. 1. ...\nnodes_missing_value_tracks_true=[0 0 0 0 0...\nnodes_modes=[b'BRANCH_LEQ' b'BR...\nnodes_nodeids=[ 0  1  2  3  4  ...\nnodes_treeids=[0 0 0 0 0 0 0 0 ...\nnodes_truenodeids=[ 1  2  3  0 ...\nnodes_values=[2.5489838 1.52457...\npost_transform=b'NONE'\ntarget_ids=[0 0 0 0 0 0 0 0]\ntarget_nodeids=[ 3  4  6  7 10 ...\ntarget_treeids=[0 0 0 0 0 0 0 0...\ntarget_weights=[0.39999998 0.16..." fontsize=10];
      X -> TreeEnsembleRegressor1;
      TreeEnsembleRegressor1 -> est_label_1;

      est_label_8 [shape=box label="est_label_8" fontsize=10];
      TreeEnsembleRegressor8 [shape=box style="filled,rounded" color=orange label="TreeEnsembleRegressor\n(TreeEnsembleRegressor8)\nn_targets=1\nnodes_falsenodeids=[ 8  5  4  0...\nnodes_featureids=[2 0 3 0 0 2 0...\nnodes_hitrates=[1. 1. 1. 1. 1. ...\nnodes_missing_value_tracks_true=[0 0 0 0 0...\nnodes_modes=[b'BRANCH_LEQ' b'BR...\nnodes_nodeids=[ 0  1  2  3  4  ...\nnodes_treeids=[0 0 0 0 0 0 0 0 ...\nnodes_truenodeids=[ 1  2  3  0 ...\nnodes_values=[2.5489838 4.87456...\npost_transform=b'NONE'\ntarget_ids=[0 0 0 0 0 0 0 0]\ntarget_nodeids=[ 3  4  6  7 10 ...\ntarget_treeids=[0 0 0 0 0 0 0 0...\ntarget_weights=[0.01666667 0.03..." fontsize=10];
      X -> TreeEnsembleRegressor8;
      TreeEnsembleRegressor8 -> est_label_8;

      est_label_6 [shape=box label="est_label_6" fontsize=10];
      TreeEnsembleRegressor6 [shape=box style="filled,rounded" color=orange label="TreeEnsembleRegressor\n(TreeEnsembleRegressor6)\nn_targets=1\nnodes_falsenodeids=[ 8  5  4  0...\nnodes_featureids=[2 2 1 0 0 2 0...\nnodes_hitrates=[1. 1. 1. 1. 1. ...\nnodes_missing_value_tracks_true=[0 0 0 0 0...\nnodes_modes=[b'BRANCH_LEQ' b'BR...\nnodes_nodeids=[ 0  1  2  3  4  ...\nnodes_treeids=[0 0 0 0 0 0 0 0 ...\nnodes_truenodeids=[ 1  2  3  0 ...\nnodes_values=[2.4861827 1.58091...\npost_transform=b'NONE'\ntarget_ids=[0 0 0 0 0 0 0 0]\ntarget_nodeids=[ 3  4  6  7 10 ...\ntarget_treeids=[0 0 0 0 0 0 0 0...\ntarget_weights=[0.41       0.09..." fontsize=10];
      X -> TreeEnsembleRegressor6;
      TreeEnsembleRegressor6 -> est_label_6;

      est_label_7 [shape=box label="est_label_7" fontsize=10];
      TreeEnsembleRegressor7 [shape=box style="filled,rounded" color=orange label="TreeEnsembleRegressor\n(TreeEnsembleRegressor7)\nn_targets=1\nnodes_falsenodeids=[ 8  5  4  0...\nnodes_featureids=[2 0 0 0 0 0 0...\nnodes_hitrates=[1. 1. 1. 1. 1. ...\nnodes_missing_value_tracks_true=[0 0 0 0 0...\nnodes_modes=[b'BRANCH_LEQ' b'BR...\nnodes_nodeids=[ 0  1  2  3  4  ...\nnodes_treeids=[0 0 0 0 0 0 0 0 ...\nnodes_truenodeids=[ 1  2  3  0 ...\nnodes_values=[2.5489838 4.42612...\npost_transform=b'NONE'\ntarget_ids=[0 0 0 0 0 0 0 0]\ntarget_nodeids=[ 3  4  6  7 10 ...\ntarget_treeids=[0 0 0 0 0 0 0 0...\ntarget_weights=[0.04       0.03..." fontsize=10];
      X -> TreeEnsembleRegressor7;
      TreeEnsembleRegressor7 -> est_label_7;

      est_label_3 [shape=box label="est_label_3" fontsize=10];
      TreeEnsembleRegressor3 [shape=box style="filled,rounded" color=orange label="TreeEnsembleRegressor\n(TreeEnsembleRegressor3)\nn_targets=1\nnodes_falsenodeids=[ 8  5  4  0...\nnodes_featureids=[2 3 2 0 0 0 0...\nnodes_hitrates=[1. 1. 1. 1. 1. ...\nnodes_missing_value_tracks_true=[0 0 0 0 0...\nnodes_modes=[b'BRANCH_LEQ' b'BR...\nnodes_nodeids=[ 0  1  2  3  4  ...\nnodes_treeids=[0 0 0 0 0 0 0 0 ...\nnodes_truenodeids=[ 1  2  3  0 ...\nnodes_values=[2.5489838  0.4727...\npost_transform=b'NONE'\ntarget_ids=[0 0 0 0 0 0 0 0]\ntarget_nodeids=[ 3  4  6  7 10 ...\ntarget_treeids=[0 0 0 0 0 0 0 0...\ntarget_weights=[0.02666667 0.19..." fontsize=10];
      X -> TreeEnsembleRegressor3;
      TreeEnsembleRegressor3 -> est_label_3;

      est_label_2 [shape=box label="est_label_2" fontsize=10];
      TreeEnsembleRegressor2 [shape=box style="filled,rounded" color=orange label="TreeEnsembleRegressor\n(TreeEnsembleRegressor2)\nn_targets=1\nnodes_falsenodeids=[ 8  5  4  0...\nnodes_featureids=[2 1 2 0 0 1 0...\nnodes_hitrates=[1. 1. 1. 1. 1. ...\nnodes_missing_value_tracks_true=[0 0 0 0 0...\nnodes_modes=[b'BRANCH_LEQ' b'BR...\nnodes_nodeids=[ 0  1  2  3  4  ...\nnodes_treeids=[0 0 0 0 0 0 0 0 ...\nnodes_truenodeids=[ 1  2  3  0 ...\nnodes_values=[2.4079013 3.05844...\npost_transform=b'NONE'\ntarget_ids=[0 0 0 0 0 0 0 0]\ntarget_nodeids=[ 3  4  6  7 10 ...\ntarget_treeids=[0 0 0 0 0 0 0 0...\ntarget_weights=[0.13       0.05..." fontsize=10];
      X -> TreeEnsembleRegressor2;
      TreeEnsembleRegressor2 -> est_label_2;

      est_label_9 [shape=box label="est_label_9" fontsize=10];
      TreeEnsembleRegressor9 [shape=box style="filled,rounded" color=orange label="TreeEnsembleRegressor\n(TreeEnsembleRegressor9)\nn_targets=1\nnodes_falsenodeids=[ 6  3  0  5...\nnodes_featureids=[2 0 0 0 0 0 0...\nnodes_hitrates=[1. 1. 1. 1. 1. ...\nnodes_missing_value_tracks_true=[0 0 0 0 0...\nnodes_modes=[b'BRANCH_LEQ' b'BR...\nnodes_nodeids=[ 0  1  2  3  4  ...\nnodes_treeids=[0 0 0 0 0 0 0 0 ...\nnodes_truenodeids=[ 1  2  0  4 ...\nnodes_values=[2.5645442 4.46456...\npost_transform=b'NONE'\ntarget_ids=[0 0 0 0 0 0 0]\ntarget_nodeids=[ 2  4  5  8  9 ...\ntarget_treeids=[0 0 0 0 0 0 0]\ntarget_weights=[0.04      0.44 ..." fontsize=10];
      X -> TreeEnsembleRegressor9;
      TreeEnsembleRegressor9 -> est_label_9;

      est_label_5 [shape=box label="est_label_5" fontsize=10];
      TreeEnsembleRegressor5 [shape=box style="filled,rounded" color=orange label="TreeEnsembleRegressor\n(TreeEnsembleRegressor5)\nn_targets=1\nnodes_falsenodeids=[ 8  5  4  0...\nnodes_featureids=[2 2 1 0 0 3 0...\nnodes_hitrates=[1. 1. 1. 1. 1. ...\nnodes_missing_value_tracks_true=[0 0 0 0 0...\nnodes_modes=[b'BRANCH_LEQ' b'BR...\nnodes_nodeids=[ 0  1  2  3  4  ...\nnodes_treeids=[0 0 0 0 0 0 0 0 ...\nnodes_truenodeids=[ 1  2  3  0 ...\nnodes_values=[4.816925  2.81091...\npost_transform=b'NONE'\ntarget_ids=[0 0 0 0 0 0 0]\ntarget_nodeids=[ 3  4  6  7  9 ...\ntarget_treeids=[0 0 0 0 0 0 0]\ntarget_weights=[0.2       0.465..." fontsize=10];
      X -> TreeEnsembleRegressor5;
      TreeEnsembleRegressor5 -> est_label_5;

      est_label_0 [shape=box label="est_label_0" fontsize=10];
      TreeEnsembleRegressor [shape=box style="filled,rounded" color=orange label="TreeEnsembleRegressor\n(TreeEnsembleRegressor)\nn_targets=1\nnodes_falsenodeids=[ 8  5  4  0...\nnodes_featureids=[2 0 2 0 0 1 0...\nnodes_hitrates=[1. 1. 1. 1. 1. ...\nnodes_missing_value_tracks_true=[0 0 0 0 0...\nnodes_modes=[b'BRANCH_LEQ' b'BR...\nnodes_nodeids=[ 0  1  2  3  4  ...\nnodes_treeids=[0 0 0 0 0 0 0 0 ...\nnodes_truenodeids=[ 1  2  3  0 ...\nnodes_values=[2.6928241 5.41864...\npost_transform=b'NONE'\ntarget_ids=[0 0 0 0 0 0 0 0]\ntarget_nodeids=[ 3  4  6  7 10 ...\ntarget_treeids=[0 0 0 0 0 0 0 0...\ntarget_weights=[0.0375     0.34..." fontsize=10];
      X -> TreeEnsembleRegressor;
      TreeEnsembleRegressor -> est_label_0;

      concatenated_labels [shape=box label="concatenated_labels" fontsize=10];
      Concat [shape=box style="filled,rounded" color=orange label="Concat\n(Concat)\naxis=1" fontsize=10];
      est_label_0 -> Concat;
      est_label_1 -> Concat;
      est_label_2 -> Concat;
      est_label_3 -> Concat;
      est_label_4 -> Concat;
      est_label_5 -> Concat;
      est_label_6 -> Concat;
      est_label_7 -> Concat;
      est_label_8 -> Concat;
      est_label_9 -> Concat;
      Concat -> concatenated_labels;

      negated_labels [shape=box label="negated_labels" fontsize=10];
      Mul [shape=box style="filled,rounded" color=orange label="Mul\n(Mul)" fontsize=10];
      concatenated_labels -> Mul;
      negate -> Mul;
      Mul -> negated_labels;

      sorted_values [shape=box label="sorted_values" fontsize=10];
      sorted_indices [shape=box label="sorted_indices" fontsize=10];
      TopK1 [shape=box style="filled,rounded" color=orange label="TopK\n(TopK1)" fontsize=10];
      negated_labels -> TopK1;
      k_value -> TopK1;
      TopK1 -> sorted_values;
      TopK1 -> sorted_indices;

      array_feat_extractor_output [shape=box label="array_feat_extractor_output" fontsize=10];
      ArrayFeatureExtractor [shape=box style="filled,rounded" color=orange label="ArrayFeatureExtractor\n(ArrayFeatureExtractor)" fontsize=10];
      estimators_weights -> ArrayFeatureExtractor;
      sorted_indices -> ArrayFeatureExtractor;
      ArrayFeatureExtractor -> array_feat_extractor_output;

      reshaped_weights [shape=box label="reshaped_weights" fontsize=10];
      Reshape [shape=box style="filled,rounded" color=orange label="Reshape\n(Reshape)" fontsize=10];
      array_feat_extractor_output -> Reshape;
      shape_tensor -> Reshape;
      Reshape -> reshaped_weights;

      weights_cdf [shape=box label="weights_cdf" fontsize=10];
      CumSum [shape=box style="filled,rounded" color=orange label="CumSum\n(CumSum)" fontsize=10];
      reshaped_weights -> CumSum;
      axis_name -> CumSum;
      CumSum -> weights_cdf;

      median_value [shape=box label="median_value" fontsize=10];
      ArrayFeatureExtractor1 [shape=box style="filled,rounded" color=orange label="ArrayFeatureExtractor\n(ArrayFeatureExtractor1)" fontsize=10];
      weights_cdf -> ArrayFeatureExtractor1;
      last_index -> ArrayFeatureExtractor1;
      ArrayFeatureExtractor1 -> median_value;

      comp_value [shape=box label="comp_value" fontsize=10];
      Mul1 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul1)" fontsize=10];
      median_value -> Mul1;
      half_scalar -> Mul1;
      Mul1 -> comp_value;

      median_or_above [shape=box label="median_or_above" fontsize=10];
      Less [shape=box style="filled,rounded" color=orange label="Less\n(Less)" fontsize=10];
      weights_cdf -> Less;
      comp_value -> Less;
      Less -> median_or_above;

      cast_result [shape=box label="cast_result" fontsize=10];
      Cast [shape=box style="filled,rounded" color=orange label="Cast\n(Cast)\nto=1" fontsize=10];
      median_or_above -> Cast;
      Cast -> cast_result;

      median_idx [shape=box label="median_idx" fontsize=10];
      ArgMin [shape=box style="filled,rounded" color=orange label="ArgMin\n(ArgMin)\naxis=1" fontsize=10];
      cast_result -> ArgMin;
      ArgMin -> median_idx;

      median_estimators [shape=box label="median_estimators" fontsize=10];
      GatElsA [shape=box style="filled,rounded" color=orange label="GatherElements\n(GatElsA)\naxis=1" fontsize=10];
      sorted_indices -> GatElsA;
      median_idx -> GatElsA;
      GatElsA -> median_estimators;

      GatElsB [shape=box style="filled,rounded" color=orange label="GatherElements\n(GatElsB)\naxis=1" fontsize=10];
      concatenated_labels -> GatElsB;
      median_estimators -> GatElsB;
      GatElsB -> variable;
    }