

.. _l-MLPRegressor-~b-reg-64-default--o15:

MLPRegressor - ~b-reg-64 - default - 
=====================================

Fitted on a problem type *~b-reg-64*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `predict` matches output .


::

        MLPRegressor(random_state=0)

+----------------------+----------+
| index                | 0        |
+======================+==========+
| skl_nop              | 1        |
+----------------------+----------+
| onx_size             | 5430     |
+----------------------+----------+
| onx_nnodes           | 7        |
+----------------------+----------+
| onx_ninits           | 5        |
+----------------------+----------+
| onx_doc_string       |          |
+----------------------+----------+
| onx_ir_version       | 8        |
+----------------------+----------+
| onx_domain           | ai.onnx  |
+----------------------+----------+
| onx_model_version    | 0        |
+----------------------+----------+
| onx_producer_name    | skl2onnx |
+----------------------+----------+
| onx_producer_version | 1.11.1   |
+----------------------+----------+
| onx_                 | 14       |
+----------------------+----------+
| onx_op_Cast          | 1        |
+----------------------+----------+
| onx_op_Reshape       | 1        |
+----------------------+----------+
| onx_size_optim       | 5430     |
+----------------------+----------+
| onx_nnodes_optim     | 7        |
+----------------------+----------+
| onx_ninits_optim     | 5        |
+----------------------+----------+
| fit_best_loss_.shape | 1        |
+----------------------+----------+
| fit_loss_.shape      | 1        |
+----------------------+----------+


.. gdot::

        digraph{
      ranksep=0.25;
      nodesep=0.05;
      orientation=portrait;
      size=7;

      X [shape=box color=red label="X\ndouble((0, 4))" fontsize=10];

      variable [shape=box color=green label="variable\ndouble((0, 1))" fontsize=10];

      coefficient [shape=box label="coefficient\nfloat64((4, 100))\n[[ 2.22727398e-02  9.08410175e-02  6.74837793e-02 ..." fontsize=10];
      intercepts [shape=box label="intercepts\nfloat64((1, 100))\n[[-0.0421473   0.19814535 -0.17549944  0.17815945 ..." fontsize=10];
      coefficient1 [shape=box label="coefficient1\nfloat64((100, 1))\n[[-1.12573181e-01]\n [-3.59173321e-02]\n [-3.3781410..." fontsize=10];
      intercepts1 [shape=box label="intercepts1\nfloat64((1, 1))\n[[-0.15396145]]" fontsize=10];
      shape_tensor [shape=box label="shape_tensor\nint64((2,))\n[-1  1]" fontsize=10];

      cast_input [shape=box label="cast_input" fontsize=10];
      Cast [shape=box style="filled,rounded" color=orange label="Cast\n(Cast)\nto=11" fontsize=10];
      X -> Cast;
      Cast -> cast_input;

      mul_result [shape=box label="mul_result" fontsize=10];
      MatMul [shape=box style="filled,rounded" color=orange label="MatMul\n(MatMul)" fontsize=10];
      cast_input -> MatMul;
      coefficient -> MatMul;
      MatMul -> mul_result;

      add_result [shape=box label="add_result" fontsize=10];
      Add [shape=box style="filled,rounded" color=orange label="Add\n(Add)" fontsize=10];
      mul_result -> Add;
      intercepts -> Add;
      Add -> add_result;

      next_activations [shape=box label="next_activations" fontsize=10];
      Relu [shape=box style="filled,rounded" color=orange label="Relu\n(Relu)" fontsize=10];
      add_result -> Relu;
      Relu -> next_activations;

      mul_result1 [shape=box label="mul_result1" fontsize=10];
      MatMul1 [shape=box style="filled,rounded" color=orange label="MatMul\n(MatMul1)" fontsize=10];
      next_activations -> MatMul1;
      coefficient1 -> MatMul1;
      MatMul1 -> mul_result1;

      add_result1 [shape=box label="add_result1" fontsize=10];
      Add1 [shape=box style="filled,rounded" color=orange label="Add\n(Add1)" fontsize=10];
      mul_result1 -> Add1;
      intercepts1 -> Add1;
      Add1 -> add_result1;

      Reshape [shape=box style="filled,rounded" color=orange label="Reshape\n(Reshape)" fontsize=10];
      add_result1 -> Reshape;
      shape_tensor -> Reshape;
      Reshape -> variable;
    }