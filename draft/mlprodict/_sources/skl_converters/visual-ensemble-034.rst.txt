

.. _l-VotingRegressor-b-reg-linreg--o15:

VotingRegressor - b-reg - linreg - 
===================================

Fitted on a problem type *b-reg*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `predict` matches output .


::

        VotingRegressor(estimators=[('lr1', LinearRegression()),
                                ('lr2', LinearRegression(fit_intercept=False))],
                    n_jobs=8)

+---------------------------------+----------+
| index                           | 0        |
+=================================+==========+
| skl_nop                         | 3        |
+---------------------------------+----------+
| skl_ncoef                       | 8        |
+---------------------------------+----------+
| skl_nlin                        | 2        |
+---------------------------------+----------+
| onx_size                        | 564      |
+---------------------------------+----------+
| onx_nnodes                      | 7        |
+---------------------------------+----------+
| onx_ninits                      | 1        |
+---------------------------------+----------+
| onx_doc_string                  |          |
+---------------------------------+----------+
| onx_ir_version                  | 8        |
+---------------------------------+----------+
| onx_domain                      | ai.onnx  |
+---------------------------------+----------+
| onx_model_version               | 0        |
+---------------------------------+----------+
| onx_producer_name               | skl2onnx |
+---------------------------------+----------+
| onx_producer_version            | 1.11.1   |
+---------------------------------+----------+
| onx_                            | 15       |
+---------------------------------+----------+
| onx_ai.onnx.ml                  | 1        |
+---------------------------------+----------+
| onx_size_optim                  | 564      |
+---------------------------------+----------+
| onx_nnodes_optim                | 7        |
+---------------------------------+----------+
| onx_ninits_optim                | 1        |
+---------------------------------+----------+
| fit_estimators_.size            | 2        |
+---------------------------------+----------+
| fit_estimators_.singular_.shape | 4        |
+---------------------------------+----------+
| fit_estimators_.coef_.shape     | 4        |
+---------------------------------+----------+


.. gdot::

        digraph{
      ranksep=0.25;
      nodesep=0.05;
      orientation=portrait;
      size=7;

      X [shape=box color=red label="X\nfloat((0, 4))" fontsize=10];

      variable [shape=box color=green label="variable\nfloat((0, 1))" fontsize=10];

      w0 [shape=box label="w0\nfloat32((1,))\n[0.5]" fontsize=10];

      var_1 [shape=box label="var_1" fontsize=10];
      LinearRegressor1 [shape=box style="filled,rounded" color=orange label="LinearRegressor\n(LinearRegressor1)\ncoefficients=[-0.16883491  0.06...\nintercepts=[0.]" fontsize=10];
      X -> LinearRegressor1;
      LinearRegressor1 -> var_1;

      var_0 [shape=box label="var_0" fontsize=10];
      LinearRegressor [shape=box style="filled,rounded" color=orange label="LinearRegressor\n(LinearRegressor)\ncoefficients=[-0.19476996  0.04...\nintercepts=[0.17583406]" fontsize=10];
      X -> LinearRegressor;
      LinearRegressor -> var_0;

      wvar_0 [shape=box label="wvar_0" fontsize=10];
      Mul [shape=box style="filled,rounded" color=orange label="Mul\n(Mul)" fontsize=10];
      var_0 -> Mul;
      w0 -> Mul;
      Mul -> wvar_0;

      wvar_1 [shape=box label="wvar_1" fontsize=10];
      Mul1 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul1)" fontsize=10];
      var_1 -> Mul1;
      w0 -> Mul1;
      Mul1 -> wvar_1;

      fvar_1 [shape=box label="fvar_1" fontsize=10];
      N4 [shape=box style="filled,rounded" color=orange label="Flatten\n(N4)" fontsize=10];
      wvar_1 -> N4;
      N4 -> fvar_1;

      fvar_0 [shape=box label="fvar_0" fontsize=10];
      N1 [shape=box style="filled,rounded" color=orange label="Flatten\n(N1)" fontsize=10];
      wvar_0 -> N1;
      N1 -> fvar_0;

      Sum [shape=box style="filled,rounded" color=orange label="Sum\n(Sum)" fontsize=10];
      fvar_0 -> Sum;
      fvar_1 -> Sum;
      Sum -> variable;
    }