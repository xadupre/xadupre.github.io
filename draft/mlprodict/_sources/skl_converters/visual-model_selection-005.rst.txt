

.. _l-GridSearchCV-cluster-reg--o15:

GridSearchCV - cluster - reg - 
===============================

Fitted on a problem type *cluster*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `predict` matches output .


::

        GridSearchCV(estimator=KMeans(random_state=0), n_jobs=1,
                 param_grid={'n_clusters': [2, 3]})

+-----------------------+----------+
| index                 | 0        |
+=======================+==========+
| skl_nop               | 1        |
+-----------------------+----------+
| onx_size              | 746      |
+-----------------------+----------+
| onx_nnodes            | 9        |
+-----------------------+----------+
| onx_ninits            | 3        |
+-----------------------+----------+
| onx_doc_string        |          |
+-----------------------+----------+
| onx_ir_version        | 8        |
+-----------------------+----------+
| onx_domain            | ai.onnx  |
+-----------------------+----------+
| onx_model_version     | 0        |
+-----------------------+----------+
| onx_producer_name     | skl2onnx |
+-----------------------+----------+
| onx_producer_version  | 1.11.1   |
+-----------------------+----------+
| onx_                  | 14       |
+-----------------------+----------+
| onx_op_Identity       | 2        |
+-----------------------+----------+
| onx_size_optim        | 663      |
+-----------------------+----------+
| onx_nnodes_optim      | 7        |
+-----------------------+----------+
| onx_ninits_optim      | 3        |
+-----------------------+----------+
| fit_best_score_.shape | 1        |
+-----------------------+----------+


.. gdot::

        digraph{
      ranksep=0.25;
      nodesep=0.05;
      orientation=portrait;
      size=7;

      X [shape=box color=red label="X\nfloat((0, 4))" fontsize=10];

      label [shape=box color=green label="label\nint64((0,))" fontsize=10];
      scores [shape=box color=green label="scores\nfloat((0, 3))" fontsize=10];

      Ad_Addcst [shape=box label="Ad_Addcst\nfloat32((3,))\n[84.52504  39.141666 56.832886]" fontsize=10];
      Ge_Gemmcst [shape=box label="Ge_Gemmcst\nfloat32((3, 4))\n[[6.6014256  2.9432645  5.3828583  1.8188599 ]\n [5..." fontsize=10];
      Mu_Mulcst [shape=box label="Mu_Mulcst\nfloat32((1,))\n[0.]" fontsize=10];

      Re_reduced0 [shape=box label="Re_reduced0" fontsize=10];
      Re_ReduceSumSquare [shape=box style="filled,rounded" color=orange label="ReduceSumSquare\n(Re_ReduceSumSquare)\naxes=[1]\nkeepdims=1" fontsize=10];
      X -> Re_ReduceSumSquare;
      Re_ReduceSumSquare -> Re_reduced0;

      Mu_C0 [shape=box label="Mu_C0" fontsize=10];
      Mu_Mul [shape=box style="filled,rounded" color=orange label="Mul\n(Mu_Mul)" fontsize=10];
      Re_reduced0 -> Mu_Mul;
      Mu_Mulcst -> Mu_Mul;
      Mu_Mul -> Mu_C0;

      Ge_Y0 [shape=box label="Ge_Y0" fontsize=10];
      Ge_Gemm [shape=box style="filled,rounded" color=orange label="Gemm\n(Ge_Gemm)\nalpha=-2.0\ntransB=1" fontsize=10];
      X -> Ge_Gemm;
      Ge_Gemmcst -> Ge_Gemm;
      Mu_C0 -> Ge_Gemm;
      Ge_Gemm -> Ge_Y0;

      Ad_C01 [shape=box label="Ad_C01" fontsize=10];
      Ad_Add [shape=box style="filled,rounded" color=orange label="Add\n(Ad_Add)" fontsize=10];
      Re_reduced0 -> Ad_Add;
      Ge_Y0 -> Ad_Add;
      Ad_Add -> Ad_C01;

      Ad_C0 [shape=box label="Ad_C0" fontsize=10];
      Ad_Add1 [shape=box style="filled,rounded" color=orange label="Add\n(Ad_Add1)" fontsize=10];
      Ad_Addcst -> Ad_Add1;
      Ad_C01 -> Ad_Add1;
      Ad_Add1 -> Ad_C0;

      scores1 [shape=box label="scores1" fontsize=10];
      Sq_Sqrt [shape=box style="filled,rounded" color=orange label="Sqrt\n(Sq_Sqrt)" fontsize=10];
      Ad_C0 -> Sq_Sqrt;
      Sq_Sqrt -> scores1;

      label1 [shape=box label="label1" fontsize=10];
      Ar_ArgMin [shape=box style="filled,rounded" color=orange label="ArgMin\n(Ar_ArgMin)\naxis=1\nkeepdims=0" fontsize=10];
      Ad_C0 -> Ar_ArgMin;
      Ar_ArgMin -> label1;

      Identity1 [shape=box style="filled,rounded" color=orange label="Identity\n(Identity1)" fontsize=10];
      scores1 -> Identity1;
      Identity1 -> scores;

      Identity [shape=box style="filled,rounded" color=orange label="Identity\n(Identity)" fontsize=10];
      label1 -> Identity;
      Identity -> label;
    }