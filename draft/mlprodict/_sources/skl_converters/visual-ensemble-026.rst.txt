

.. _l-GradientBoostingRegressor-~b-reg-64-default--o15:

GradientBoostingRegressor - ~b-reg-64 - default - 
==================================================

Fitted on a problem type *~b-reg-64*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `predict` matches output .


::

        GradientBoostingRegressor(n_estimators=200, random_state=0)

+--------------------------------------------+----------+
| index                                      | 0        |
+============================================+==========+
| skl_nop                                    | 201      |
+--------------------------------------------+----------+
| skl_nnodes                                 | 2766     |
+--------------------------------------------+----------+
| skl_ntrees                                 | 200      |
+--------------------------------------------+----------+
| skl_max_depth                              | 3        |
+--------------------------------------------+----------+
| onx_size                                   | 124739   |
+--------------------------------------------+----------+
| onx_nnodes                                 | 1        |
+--------------------------------------------+----------+
| onx_ninits                                 | 0        |
+--------------------------------------------+----------+
| onx_doc_string                             |          |
+--------------------------------------------+----------+
| onx_ir_version                             | 8        |
+--------------------------------------------+----------+
| onx_domain                                 | ai.onnx  |
+--------------------------------------------+----------+
| onx_model_version                          | 0        |
+--------------------------------------------+----------+
| onx_producer_name                          | skl2onnx |
+--------------------------------------------+----------+
| onx_producer_version                       | 1.11.1   |
+--------------------------------------------+----------+
| onx_mlprodict                              | 1        |
+--------------------------------------------+----------+
| onx_                                       | 15       |
+--------------------------------------------+----------+
| onx_size_optim                             | 124739   |
+--------------------------------------------+----------+
| onx_nnodes_optim                           | 1        |
+--------------------------------------------+----------+
| onx_ninits_optim                           | 0        |
+--------------------------------------------+----------+
| fit_estimators_.shape                      | 1        |
+--------------------------------------------+----------+
| fit_train_score_.shape                     | 200      |
+--------------------------------------------+----------+
| fit_n_classes_                             | 1        |
+--------------------------------------------+----------+
| fit_n_features_                            | 4        |
+--------------------------------------------+----------+
| fit_estimators_.size                       | 200      |
+--------------------------------------------+----------+
| fit_estimators_.sum|.sum|tree_.leave_count | 1483     |
+--------------------------------------------+----------+
| fit_estimators_.sum|.sum|tree_.node_count  | 2766     |
+--------------------------------------------+----------+
| fit_estimators_..n_features_               | 4        |
+--------------------------------------------+----------+
| fit_estimators_.max|.max|tree_.max_depth   | 3        |
+--------------------------------------------+----------+


.. gdot::

        digraph{
      ranksep=0.25;
      nodesep=0.05;
      orientation=portrait;
      size=7;

      X [shape=box color=red label="X\ndouble((0, 4))" fontsize=10];

      variable [shape=box color=green label="variable\ndouble((0, 1))" fontsize=10];


      TreeEnsembleRegressorDouble [shape=box style="filled,rounded" color=orange label="TreeEnsembleRegressorDouble\n(TreeEnsembleRegressorDouble)\nbase_values=[1.78866071]\nn_targets=1\nnodes_falsenodeids=[ 8  5  4 .....\nnodes_featureids=[2 0 0 ... 0 0...\nnodes_hitrates=[1. 1. 1. ... 1....\nnodes_missing_value_tracks_true=[0 0 0 ......\nnodes_modes=[b'BRANCH_LEQ' b'BR...\nnodes_nodeids=[ 0  1  2 ... 10 ...\nnodes_treeids=[  0   0   0 ... ...\nnodes_truenodeids=[ 1  2  3 ......\nnodes_values=[2.54898393 4.4532...\npost_transform=b'NONE'\ntarget_ids=[0 0 0 ... 0 0 0]\ntarget_nodeids=[ 3  4  6 ...  9...\ntarget_treeids=[  0   0   0 ......\ntarget_weights=[-0.16586607 -0...." fontsize=10];
      X -> TreeEnsembleRegressorDouble;
      TreeEnsembleRegressorDouble -> variable;
    }