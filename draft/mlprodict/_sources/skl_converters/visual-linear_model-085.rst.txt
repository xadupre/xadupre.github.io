

.. _l-SGDClassifier-m-cl-log-zipmap:False-o15:

SGDClassifier - m-cl - log - {'zipmap': False}
==============================================

Fitted on a problem type *m-cl*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `predict_proba` matches output .
Model was converted with additional parameter: ``<class 'sklearn.linear_model._stochastic_gradient.SGDClassifier'>={'zipmap': False}``.

::

        SGDClassifier(loss='log', n_jobs=8, random_state=0)

+----------------------+----------+
| index                | 0        |
+======================+==========+
| skl_nop              | 1        |
+----------------------+----------+
| skl_ncoef            | 3        |
+----------------------+----------+
| skl_nlin             | 1        |
+----------------------+----------+
| onx_size             | 1421     |
+----------------------+----------+
| onx_nnodes           | 18       |
+----------------------+----------+
| onx_ninits           | 8        |
+----------------------+----------+
| onx_doc_string       |          |
+----------------------+----------+
| onx_ir_version       | 8        |
+----------------------+----------+
| onx_domain           | ai.onnx  |
+----------------------+----------+
| onx_model_version    | 0        |
+----------------------+----------+
| onx_producer_name    | skl2onnx |
+----------------------+----------+
| onx_producer_version | 1.11.1   |
+----------------------+----------+
| onx_                 | 13       |
+----------------------+----------+
| onx_ai.onnx.ml       | 1        |
+----------------------+----------+
| onx_op_Cast          | 3        |
+----------------------+----------+
| onx_op_Reshape       | 1        |
+----------------------+----------+
| onx_size_optim       | 1421     |
+----------------------+----------+
| onx_nnodes_optim     | 18       |
+----------------------+----------+
| onx_ninits_optim     | 8        |
+----------------------+----------+
| fit_coef_.shape      | (3, 4)   |
+----------------------+----------+
| fit_intercept_.shape | 3        |
+----------------------+----------+
| fit_classes_.shape   | 3        |
+----------------------+----------+


.. gdot::

        digraph{
      ranksep=0.25;
      nodesep=0.05;
      orientation=portrait;
      size=7;

      X [shape=box color=red label="X\nfloat((0, 4))" fontsize=10];

      label [shape=box color=green label="label\nint64((0,))" fontsize=10];
      probabilities [shape=box color=green label="probabilities\nfloat((0, 3))" fontsize=10];

      classes [shape=box label="classes\nint32((3,))\n[0 1 2]" fontsize=10];
      coef [shape=box label="coef\nfloat32((4, 3))\n[[  3.41621    -3.2010055 -91.58158  ]\n [ 20.75054..." fontsize=10];
      intercept [shape=box label="intercept\nfloat32((3,))\n[   5.0744696  125.14089   -190.15077  ]" fontsize=10];
      negate [shape=box label="negate\nfloat32(())\n-1.0" fontsize=10];
      unity [shape=box label="unity\nfloat32(())\n1.0" fontsize=10];
      axis [shape=box label="axis\nint64((1,))\n[1]" fontsize=10];
      num_classes [shape=box label="num_classes\nfloat32(())\n3.0" fontsize=10];
      shape_tensor [shape=box label="shape_tensor\nint64((1,))\n[-1]" fontsize=10];

      matmul_result [shape=box label="matmul_result" fontsize=10];
      MatMul [shape=box style="filled,rounded" color=orange label="MatMul\n(MatMul)" fontsize=10];
      X -> MatMul;
      coef -> MatMul;
      MatMul -> matmul_result;

      score [shape=box label="score" fontsize=10];
      Add [shape=box style="filled,rounded" color=orange label="Add\n(Add)" fontsize=10];
      matmul_result -> Add;
      intercept -> Add;
      Add -> score;

      negated_scores [shape=box label="negated_scores" fontsize=10];
      Mul [shape=box style="filled,rounded" color=orange label="Mul\n(Mul)" fontsize=10];
      score -> Mul;
      negate -> Mul;
      Mul -> negated_scores;

      exp_result [shape=box label="exp_result" fontsize=10];
      Exp [shape=box style="filled,rounded" color=orange label="Exp\n(Exp)" fontsize=10];
      negated_scores -> Exp;
      Exp -> exp_result;

      add_result [shape=box label="add_result" fontsize=10];
      Add1 [shape=box style="filled,rounded" color=orange label="Add\n(Add1)" fontsize=10];
      exp_result -> Add1;
      unity -> Add1;
      Add1 -> add_result;

      proba [shape=box label="proba" fontsize=10];
      Reciprocal [shape=box style="filled,rounded" color=orange label="Reciprocal\n(Reciprocal)" fontsize=10];
      add_result -> Reciprocal;
      Reciprocal -> proba;

      reduced_proba [shape=box label="reduced_proba" fontsize=10];
      ReduceSum [shape=box style="filled,rounded" color=orange label="ReduceSum\n(ReduceSum)" fontsize=10];
      proba -> ReduceSum;
      axis -> ReduceSum;
      ReduceSum -> reduced_proba;

      bool_reduced_proba [shape=box label="bool_reduced_proba" fontsize=10];
      Cast [shape=box style="filled,rounded" color=orange label="Cast\n(Cast)\nto=9" fontsize=10];
      reduced_proba -> Cast;
      Cast -> bool_reduced_proba;

      bool_not_reduced_proba [shape=box label="bool_not_reduced_proba" fontsize=10];
      Not [shape=box style="filled,rounded" color=orange label="Not\n(Not)" fontsize=10];
      bool_reduced_proba -> Not;
      Not -> bool_not_reduced_proba;

      not_reduced_proba [shape=box label="not_reduced_proba" fontsize=10];
      Cast1 [shape=box style="filled,rounded" color=orange label="Cast\n(Cast1)\nto=1" fontsize=10];
      bool_not_reduced_proba -> Cast1;
      Cast1 -> not_reduced_proba;

      mask [shape=box label="mask" fontsize=10];
      Mul1 [shape=box style="filled,rounded" color=orange label="Mul\n(Mul1)" fontsize=10];
      not_reduced_proba -> Mul1;
      num_classes -> Mul1;
      Mul1 -> mask;

      proba_updated [shape=box label="proba_updated" fontsize=10];
      Add2 [shape=box style="filled,rounded" color=orange label="Add\n(Add2)" fontsize=10];
      proba -> Add2;
      not_reduced_proba -> Add2;
      Add2 -> proba_updated;

      reduced_proba_updated [shape=box label="reduced_proba_updated" fontsize=10];
      Add3 [shape=box style="filled,rounded" color=orange label="Add\n(Add3)" fontsize=10];
      reduced_proba -> Add3;
      mask -> Add3;
      Add3 -> reduced_proba_updated;

      Div [shape=box style="filled,rounded" color=orange label="Div\n(Div)" fontsize=10];
      proba_updated -> Div;
      reduced_proba_updated -> Div;
      Div -> probabilities;

      predicted_label [shape=box label="predicted_label" fontsize=10];
      ArgMax [shape=box style="filled,rounded" color=orange label="ArgMax\n(ArgMax)\naxis=1" fontsize=10];
      probabilities -> ArgMax;
      ArgMax -> predicted_label;

      final_label [shape=box label="final_label" fontsize=10];
      ArrayFeatureExtractor [shape=box style="filled,rounded" color=orange label="ArrayFeatureExtractor\n(ArrayFeatureExtractor)" fontsize=10];
      classes -> ArrayFeatureExtractor;
      predicted_label -> ArrayFeatureExtractor;
      ArrayFeatureExtractor -> final_label;

      reshaped_final_label [shape=box label="reshaped_final_label" fontsize=10];
      Reshape [shape=box style="filled,rounded" color=orange label="Reshape\n(Reshape)" fontsize=10];
      final_label -> Reshape;
      shape_tensor -> Reshape;
      Reshape -> reshaped_final_label;

      Cast2 [shape=box style="filled,rounded" color=orange label="Cast\n(Cast2)\nto=7" fontsize=10];
      reshaped_final_label -> Cast2;
      Cast2 -> label;
    }