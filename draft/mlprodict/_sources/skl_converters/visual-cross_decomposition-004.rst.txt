

.. _l-PLSRegression-~m-reg-64-default--o15:

PLSRegression - ~m-reg-64 - default - 
======================================

Fitted on a problem type *~m-reg-64*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `predict` matches output .


::

        PLSRegression()

+------------------------+----------+
| index                  | 0        |
+========================+==========+
| skl_nop                | 1        |
+------------------------+----------+
| skl_ncoef              | 4        |
+------------------------+----------+
| skl_nlin               | 1        |
+------------------------+----------+
| onx_size               | 517      |
+------------------------+----------+
| onx_nnodes             | 4        |
+------------------------+----------+
| onx_ninits             | 4        |
+------------------------+----------+
| onx_doc_string         |          |
+------------------------+----------+
| onx_ir_version         | 8        |
+------------------------+----------+
| onx_domain             | ai.onnx  |
+------------------------+----------+
| onx_model_version      | 0        |
+------------------------+----------+
| onx_producer_name      | skl2onnx |
+------------------------+----------+
| onx_producer_version   | 1.11     |
+------------------------+----------+
| onx_                   | 14       |
+------------------------+----------+
| onx_size_optim         | 517      |
+------------------------+----------+
| onx_nnodes_optim       | 4        |
+------------------------+----------+
| onx_ninits_optim       | 4        |
+------------------------+----------+
| fit_x_weights_.shape   | (4, 2)   |
+------------------------+----------+
| fit_y_weights_.shape   | (2, 2)   |
+------------------------+----------+
| fit_x_loadings_.shape  | (4, 2)   |
+------------------------+----------+
| fit_y_loadings_.shape  | (2, 2)   |
+------------------------+----------+
| fit_x_rotations_.shape | (4, 2)   |
+------------------------+----------+
| fit_y_rotations_.shape | (2, 2)   |
+------------------------+----------+
| fit_coef_.shape        | (4, 2)   |
+------------------------+----------+


.. gdot::

        digraph{
      nodesep=0.05;
      ranksep=0.25;
      size=7;
      orientation=portrait;

      X [shape=box color=red label="X\ndouble((0, 4))" fontsize=10];

      variable [shape=box color=green label="variable\ndouble((0, 2))" fontsize=10];

      Su_Subcst [shape=box label="Su_Subcst\nfloat64((4,))\n[5.86033924 2.99788182 3.75989191 1.18838401]" fontsize=10];
      Di_Divcst [shape=box label="Di_Divcst\nfloat64((4,))\n[0.83825724 0.52938169 1.78026067 0.71215553]" fontsize=10];
      Ma_MatMulcst [shape=box label="Ma_MatMulcst\nfloat64((4, 2))\n[[-0.06400424 -0.06400424]\n [-0.0238454  -0.0238454 ]\n [ 0.60557162  0.60557162]\n [ 0.62353582  0.62353582]]" fontsize=10];
      Ad_Addcst [shape=box label="Ad_Addcst\nfloat64((2,))\n[1.78866071 2.28866071]" fontsize=10];

      Su_C0 [shape=box label="Su_C0" fontsize=10];
      Su_Sub [shape=box style="filled,rounded" color=orange label="Sub\n(Su_Sub)" fontsize=10];
      X -> Su_Sub;
      Su_Subcst -> Su_Sub;
      Su_Sub -> Su_C0;

      Di_C0 [shape=box label="Di_C0" fontsize=10];
      Di_Div [shape=box style="filled,rounded" color=orange label="Div\n(Di_Div)" fontsize=10];
      Su_C0 -> Di_Div;
      Di_Divcst -> Di_Div;
      Di_Div -> Di_C0;

      Ma_Y0 [shape=box label="Ma_Y0" fontsize=10];
      Ma_MatMul [shape=box style="filled,rounded" color=orange label="MatMul\n(Ma_MatMul)" fontsize=10];
      Di_C0 -> Ma_MatMul;
      Ma_MatMulcst -> Ma_MatMul;
      Ma_MatMul -> Ma_Y0;

      Ad_Add [shape=box style="filled,rounded" color=orange label="Add\n(Ad_Add)" fontsize=10];
      Ma_Y0 -> Ad_Add;
      Ad_Addcst -> Ad_Add;
      Ad_Add -> variable;
    }