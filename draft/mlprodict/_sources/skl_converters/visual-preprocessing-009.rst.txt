

.. _l-OneHotEncoder-one-hot-default--o15:

OneHotEncoder - one-hot - default - 
====================================

Fitted on a problem type *one-hot*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `transform` matches output .


::

        OneHotEncoder()

+----------------------+----------+
| index                | 0        |
+======================+==========+
| skl_nop              | 1        |
+----------------------+----------+
| onx_size             | 509      |
+----------------------+----------+
| onx_nnodes           | 5        |
+----------------------+----------+
| onx_ninits           | 2        |
+----------------------+----------+
| onx_doc_string       |          |
+----------------------+----------+
| onx_ir_version       | 8        |
+----------------------+----------+
| onx_domain           | ai.onnx  |
+----------------------+----------+
| onx_model_version    | 0        |
+----------------------+----------+
| onx_producer_name    | skl2onnx |
+----------------------+----------+
| onx_producer_version | 1.11     |
+----------------------+----------+
| onx_ai.onnx.ml       | 1        |
+----------------------+----------+
| onx_                 | 11       |
+----------------------+----------+
| onx_op_Cast          | 1        |
+----------------------+----------+
| onx_op_Reshape       | 1        |
+----------------------+----------+
| onx_size_optim       | 509      |
+----------------------+----------+
| onx_nnodes_optim     | 5        |
+----------------------+----------+
| onx_ninits_optim     | 2        |
+----------------------+----------+


.. gdot::

        digraph{
      nodesep=0.05;
      ranksep=0.25;
      size=7;
      orientation=portrait;

      X [shape=box color=red label="X\nfloat((0, 4))" fontsize=10];

      variable [shape=box color=green label="variable\nfloat((0, 5))" fontsize=10];

      X0 [shape=box label="X0\nint64(())\n0" fontsize=10];
      shape_tensor [shape=box label="shape_tensor\nint64((2,))\n[-1  5]" fontsize=10];

      X01 [shape=box label="X01" fontsize=10];
      ArrayFeatureExtractor [shape=box style="filled,rounded" color=orange label="ArrayFeatureExtractor\n(ArrayFeatureExtractor)" fontsize=10];
      X -> ArrayFeatureExtractor;
      X0 -> ArrayFeatureExtractor;
      ArrayFeatureExtractor -> X01;

      X01cast [shape=box label="X01cast" fontsize=10];
      Cast [shape=box style="filled,rounded" color=orange label="Cast\n(Cast)\nto=7" fontsize=10];
      X01 -> Cast;
      Cast -> X01cast;

      X01out [shape=box label="X01out" fontsize=10];
      OneHotEncoder [shape=box style="filled,rounded" color=orange label="OneHotEncoder\n(OneHotEncoder)\ncats_int64s=[4 5 6 7 8]\nzeros=0" fontsize=10];
      X01cast -> OneHotEncoder;
      OneHotEncoder -> X01out;

      concat_result [shape=box label="concat_result" fontsize=10];
      Concat [shape=box style="filled,rounded" color=orange label="Concat\n(Concat)\naxis=2" fontsize=10];
      X01out -> Concat;
      Concat -> concat_result;

      Reshape [shape=box style="filled,rounded" color=orange label="Reshape\n(Reshape)" fontsize=10];
      concat_result -> Reshape;
      shape_tensor -> Reshape;
      Reshape -> variable;
    }