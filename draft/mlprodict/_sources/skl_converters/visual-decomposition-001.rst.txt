

.. _l-KernelPCA-num-tr-default--o15:

KernelPCA - num-tr - default - 
===============================

Fitted on a problem type *num-tr*
(see :func:`find_suitable_problem
<mlprodict.onnxrt.validate.validate_problems.find_suitable_problem>`),
method `transform` matches output .


::

        KernelPCA(n_jobs=8, random_state=0)

+-------------------------+----------+
| index                   | 0        |
+=========================+==========+
| skl_nop                 | 1        |
+-------------------------+----------+
| onx_size                | 5633     |
+-------------------------+----------+
| onx_nnodes              | 8        |
+-------------------------+----------+
| onx_ninits              | 6        |
+-------------------------+----------+
| onx_doc_string          |          |
+-------------------------+----------+
| onx_ir_version          | 8        |
+-------------------------+----------+
| onx_domain              | ai.onnx  |
+-------------------------+----------+
| onx_model_version       | 0        |
+-------------------------+----------+
| onx_producer_name       | skl2onnx |
+-------------------------+----------+
| onx_producer_version    | 1.11     |
+-------------------------+----------+
| onx_                    | 14       |
+-------------------------+----------+
| onx_size_optim          | 5633     |
+-------------------------+----------+
| onx_nnodes_optim        | 8        |
+-------------------------+----------+
| onx_ninits_optim        | 6        |
+-------------------------+----------+
| fit_eigenvalues_.shape  | 6        |
+-------------------------+----------+
| fit_eigenvectors_.shape | (112, 6) |
+-------------------------+----------+
| fit_X_fit_.shape        | (112, 4) |
+-------------------------+----------+


.. gdot::

        digraph{
      nodesep=0.05;
      ranksep=0.25;
      size=7;
      orientation=portrait;

      X [shape=box color=red label="X\nfloat((0, 4))" fontsize=10];

      variable [shape=box color=green label="variable\nfloat((0, 6))" fontsize=10];

      Tr_Transposecst [shape=box label="Tr_Transposecst\nfloat32((112, 4))\n[[ 4.3017502e+00  3.9453187e+00  9.2195314e-01  1...." fontsize=10];
      Ma_MatMulcst [shape=box label="Ma_MatMulcst\nfloat32((112, 6))\n[[ 7.68882781e-03  6.05129730e-03  2.94732433e-02 ..." fontsize=10];
      Su_Subcst [shape=box label="Su_Subcst\nfloat32((112,))\n[40.631226 47.21314  62.212955 63.447144 64.46168 ..." fontsize=10];
      Re_ReduceSumcst [shape=box label="Re_ReduceSumcst\nint64((1,))\n[1]" fontsize=10];
      Di_Divcst [shape=box label="Di_Divcst\nfloat32((1,))\n[112.]" fontsize=10];
      Ad_Addcst [shape=box label="Ad_Addcst\nfloat32((1,))\n[58.879913]" fontsize=10];

      Tr_transposed0 [shape=box label="Tr_transposed0" fontsize=10];
      Tr_Transpose [shape=box style="filled,rounded" color=orange label="Transpose\n(Tr_Transpose)\nperm=[1 0]" fontsize=10];
      Tr_Transposecst -> Tr_Transpose;
      Tr_Transpose -> Tr_transposed0;

      Ma_Y0 [shape=box label="Ma_Y0" fontsize=10];
      Ma_MatMul [shape=box style="filled,rounded" color=orange label="MatMul\n(Ma_MatMul)" fontsize=10];
      X -> Ma_MatMul;
      Tr_transposed0 -> Ma_MatMul;
      Ma_MatMul -> Ma_Y0;

      Re_reduced0 [shape=box label="Re_reduced0" fontsize=10];
      Re_ReduceSum [shape=box style="filled,rounded" color=orange label="ReduceSum\n(Re_ReduceSum)\nkeepdims=1" fontsize=10];
      Ma_Y0 -> Re_ReduceSum;
      Re_ReduceSumcst -> Re_ReduceSum;
      Re_ReduceSum -> Re_reduced0;

      Su_C01 [shape=box label="Su_C01" fontsize=10];
      Su_Sub [shape=box style="filled,rounded" color=orange label="Sub\n(Su_Sub)" fontsize=10];
      Ma_Y0 -> Su_Sub;
      Su_Subcst -> Su_Sub;
      Su_Sub -> Su_C01;

      Di_C0 [shape=box label="Di_C0" fontsize=10];
      Di_Div [shape=box style="filled,rounded" color=orange label="Div\n(Di_Div)" fontsize=10];
      Re_reduced0 -> Di_Div;
      Di_Divcst -> Di_Div;
      Di_Div -> Di_C0;

      Su_C0 [shape=box label="Su_C0" fontsize=10];
      Su_Sub1 [shape=box style="filled,rounded" color=orange label="Sub\n(Su_Sub1)" fontsize=10];
      Su_C01 -> Su_Sub1;
      Di_C0 -> Su_Sub1;
      Su_Sub1 -> Su_C0;

      variable1 [shape=box label="variable1" fontsize=10];
      Ad_Add [shape=box style="filled,rounded" color=orange label="Add\n(Ad_Add)" fontsize=10];
      Su_C0 -> Ad_Add;
      Ad_Addcst -> Ad_Add;
      Ad_Add -> variable1;

      Ma_MatMul1 [shape=box style="filled,rounded" color=orange label="MatMul\n(Ma_MatMul1)" fontsize=10];
      variable1 -> Ma_MatMul1;
      Ma_MatMulcst -> Ma_MatMul1;
      Ma_MatMul1 -> variable;
    }