
.. _l-onnx-doc-OptionalHasElement:

==================
OptionalHasElement
==================

.. contents::
    :local:


.. _l-onnx-op-optionalhaselement-15:

OptionalHasElement - 15
=======================

**Version**

* **name**: `OptionalHasElement (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#OptionalHasElement>`_
* **domain**: **main**
* **since_version**: **15**
* **function**:
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 15**.

**Summary**

**Inputs**

* **input** (heterogeneous) - **O**:

**Outputs**

* **output** (heterogeneous) - **B**:

**Type Constraints**

* **O** in (
  optional(seq(tensor(bool))),
  optional(seq(tensor(complex128))),
  optional(seq(tensor(complex64))),
  optional(seq(tensor(double))),
  optional(seq(tensor(float))),
  optional(seq(tensor(float16))),
  optional(seq(tensor(int16))),
  optional(seq(tensor(int32))),
  optional(seq(tensor(int64))),
  optional(seq(tensor(int8))),
  optional(seq(tensor(string))),
  optional(seq(tensor(uint16))),
  optional(seq(tensor(uint32))),
  optional(seq(tensor(uint64))),
  optional(seq(tensor(uint8))),
  optional(tensor(bool)),
  optional(tensor(complex128)),
  optional(tensor(complex64)),
  optional(tensor(double)),
  optional(tensor(float)),
  optional(tensor(float16)),
  optional(tensor(int16)),
  optional(tensor(int32)),
  optional(tensor(int64)),
  optional(tensor(int8)),
  optional(tensor(string)),
  optional(tensor(uint16)),
  optional(tensor(uint32)),
  optional(tensor(uint64)),
  optional(tensor(uint8))
  ):
  Constrain input type to optional tensor and optional sequence types.
* **B** in (
  tensor(bool)
  ):
  Constrain output to a boolean tensor.
