
.. _l-onnx-doc-MaxUnpool:

=========
MaxUnpool
=========

.. contents::
    :local:


.. _l-onnx-op-maxunpool-9:

MaxUnpool - 9
=============

**Version**

* **name**: `MaxUnpool (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#MaxUnpool>`_
* **domain**: **main**
* **since_version**: **9**
* **function**:
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 9**.

**Summary**

**Attributes**

* **kernel_shape - INTS** (required) :   The size of the kernel along each axis.
* **pads - INTS** :   Padding for the beginning and ending along each spatial axis, it can
  take any value greater than or equal to 0. The value represent the
  number of pixels added to the beginning and end part of the
  corresponding axis. `pads` format should be as follow [x1_begin,
  x2_begin...x1_end, x2_end,...], where xi_begin the number of pixels
  added at the beginning of axis `i` and xi_end, the number of pixels
  added at the end of axis `i`. This attribute cannot be used
  simultaneously with auto_pad attribute. If not present, the padding
  defaults to 0 along start and end of each spatial axis.
* **strides - INTS** :   Stride along each spatial axis.

**Inputs**

Between 2 and 3 inputs.

* **X** (heterogeneous) - **T1**:

* **I** (heterogeneous) - **T2**:

* **output_shape** (optional, heterogeneous) - **T2**:

**Outputs**

* **output** (heterogeneous) - **T1**:

**Type Constraints**

* **T1** in (
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain input and output types to float tensors.
* **T2** in (
  tensor(int64)
  ):
  Constrain index tensor to int64
