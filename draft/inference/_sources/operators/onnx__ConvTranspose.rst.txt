
.. _l-onnx-doc-ConvTranspose:

=============
ConvTranspose
=============

.. contents::
    :local:


.. _l-onnx-op-convtranspose-1:

ConvTranspose - 1
=================

**Version**

* **name**: `ConvTranspose (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#ConvTranspose>`_
* **domain**: **main**
* **since_version**: **1**
* **function**:
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 1**.

**Summary**

**Attributes**

* **auto_pad - STRING** :   auto_pad must be either NOTSET, SAME_UPPER, SAME_LOWER or VALID.
  Where default value is NOTSET, which means explicit padding is used.
  SAME_UPPER or SAME_LOWER mean pad the input so that the output
  spatial size match the input.In case of odd number add the extra
  padding at the end for SAME_UPPER and at the beginning for
  SAME_LOWER. VALID mean no padding.
* **dilations - INTS** :   dilation value along each spatial axis of the filter.
* **group - INT** :   number of groups input channels and output channels are divided
  into.
* **kernel_shape - INTS** :   The shape of the convolution kernel. If not present, should be
  inferred from input W.
* **output_padding - INTS** :   The zero-padding added to one side of the output. This is also
  called adjs/adjustment in some frameworks.
* **output_shape - INTS** :   The shape of the output can be explicitly set which will cause pads
  values to be auto generated. If output_shape is specified pads
  values are ignored. See doc for details for equations to generate
  pads
* **pads - INTS** :   Padding for the beginning and ending along each spatial axis, it can
  take any value greater than or equal to 0. The value represent the
  number of pixels added to the beginning and end part of the
  corresponding axis. `pads` format should be as follow [x1_begin,
  x2_begin...x1_end, x2_end,...], where xi_begin the number of pixels
  added at the beginning of axis `i` and xi_end, the number of pixels
  added at the end of axis `i`. This attribute cannot be used
  simultaneously with auto_pad attribute. If not present, the padding
  defaults to 0 along start and end of each spatial axis.
* **strides - INTS** :   Stride along each spatial axis.

**Inputs**

Between 2 and 3 inputs.

* **X** (heterogeneous) - **T**:

* **W** (heterogeneous) - **T**:

* **B** (optional, heterogeneous) - **T**:

**Outputs**

* **Y** (heterogeneous) - **T**:

**Type Constraints**

* **T** in (
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain input and output types to float tensors.
