
.. _l-onnx-docai-onnx-ml-DictVectorizer:

===========================
ai.onnx.ml - DictVectorizer
===========================


.. _l-onnx-opai-onnx-ml-dictvectorizer-1:

DictVectorizer - 1
==================

**Version**

* **name**: `DictVectorizer (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators-ml.md#ai.onnx.ml.DictVectorizer>`_
* **domain**: **ai.onnx.ml**
* **since_version**: **1**
* **function**:
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 1 of domain ai.onnx.ml**.

**Summary**

**Attributes**

* **int64_vocabulary - INTS** :   An integer vocabulary array.<br>One and only one of the vocabularies
  must be defined.
* **string_vocabulary - STRINGS** :   A string vocabulary array.<br>One and only one of the vocabularies
  must be defined.

**Inputs**

* **X** (heterogeneous) - **T1**:

**Outputs**

* **Y** (heterogeneous) - **T2**:

**Type Constraints**

* **T1** in (
  map(int64, double),
  map(int64, float),
  map(int64, string),
  map(string, double),
  map(string, float),
  map(string, int64)
  ):
  The input must be a map from strings or integers to either strings
  or a numeric type. The key and value types cannot be the same.
* **T2** in (
  tensor(double),
  tensor(float),
  tensor(int64),
  tensor(string)
  ):
  The output will be a tensor of the value type of the input map. It's
  shape will be [1,C], where C is the length of the input dictionary.

**Examples**
