
.. _l-onnx-doc-MemcpyToHost:

============
MemcpyToHost
============


.. _l-onnx-op-memcpytohost-1:

MemcpyToHost - 1
================

**Version**

* **name**: `MemcpyToHost (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#MemcpyToHost>`_
* **domain**: **main**
* **since_version**: **1**
* **function**:
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 1**.

**Summary**

**Inputs**

* **X** (heterogeneous) - **T**:

**Outputs**

* **Y** (heterogeneous) - **T**:

**Type Constraints**

* **T** in (
  seq(tensor(bfloat16)),
  seq(tensor(bool)),
  seq(tensor(complex128)),
  seq(tensor(complex64)),
  seq(tensor(double)),
  seq(tensor(float)),
  seq(tensor(float16)),
  seq(tensor(int16)),
  seq(tensor(int32)),
  seq(tensor(int64)),
  seq(tensor(int8)),
  seq(tensor(uint16)),
  seq(tensor(uint32)),
  seq(tensor(uint64)),
  seq(tensor(uint8)),
  tensor(bfloat16),
  tensor(bool),
  tensor(complex128),
  tensor(complex64),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain to all fixed size tensor and sequence types. If the dtype
  attribute is not provided this must be a valid output type.

**Examples**
