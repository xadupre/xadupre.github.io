
.. _l-onnx-doc-RandomUniformLike:

=================
RandomUniformLike
=================


.. _l-onnx-op-randomuniformlike-1:

RandomUniformLike - 1
=====================

**Version**

* **name**: `RandomUniformLike (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#RandomUniformLike>`_
* **domain**: **main**
* **since_version**: **1**
* **function**:
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 1**.

**Summary**

**Attributes**

* **dtype - INT** :   (Optional) The data type for the elements of the output tensor, if
  not specified, we will use the data type of the input tensor.
* **high - FLOAT** :   Upper boundary of the output values.
* **low - FLOAT** :   Lower boundary of the output values.
* **seed - FLOAT** :   (Optional) Seed to the random generator, if not specified we will
  auto generate one.

**Inputs**

* **input** (heterogeneous) - **T1**:

**Outputs**

* **output** (heterogeneous) - **T2**:

**Type Constraints**

* **T1** in (
  tensor(bool),
  tensor(complex128),
  tensor(complex64),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain to any tensor type. If the dtype attribute is not provided
  this must be a valid output type.
* **T2** in (
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain output types to float tensors.

**Examples**
