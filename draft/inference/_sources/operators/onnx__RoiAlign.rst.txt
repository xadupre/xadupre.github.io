
.. _l-onnx-doc-RoiAlign:

========
RoiAlign
========

.. contents::
    :local:


.. _l-onnx-op-roialign-10:

RoiAlign - 10
=============

**Version**

* **name**: `RoiAlign (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#RoiAlign>`_
* **domain**: **main**
* **since_version**: **10**
* **function**:
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 10**.

**Summary**

**Attributes**

* **mode - STRING** :   The pooling method. Two modes are supported: 'avg' and 'max'.
  Default is 'avg'.
* **output_height - INT** :   default 1; Pooled output Y's height.
* **output_width - INT** :   default 1; Pooled output Y's width.
* **sampling_ratio - INT** :   Number of sampling points in the interpolation grid used to compute
  the output value of each pooled output bin. If > 0, then exactly
  sampling_ratio x sampling_ratio grid points are used. If == 0, then
  an adaptive number of grid points are used (computed as
  ceil(roi_width / output_width), and likewise for height). Default is
  0.
* **spatial_scale - FLOAT** :   Multiplicative spatial scale factor to translate ROI coordinates
  from their input spatial scale to the scale used when pooling, i.e.,
  spatial scale of the input feature map X relative to the input
  image. E.g.; default is 1.0f.

**Inputs**

* **X** (heterogeneous) - **T1**:

* **rois** (heterogeneous) - **T1**:

* **batch_indices** (heterogeneous) - **T2**:

**Outputs**

* **Y** (heterogeneous) - **T1**:

**Type Constraints**

* **T1** in (
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain types to float tensors.
* **T2** in (
  tensor(int64)
  ):
  Constrain types to int tensors.
