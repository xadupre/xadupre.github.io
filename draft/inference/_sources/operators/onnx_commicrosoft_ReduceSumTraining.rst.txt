
.. _l-onnx-doccom-microsoft-ReduceSumTraining:

=================================
com.microsoft - ReduceSumTraining
=================================

.. contents::
    :local:


.. _l-onnx-opcom-microsoft-reducesumtraining-1:

ReduceSumTraining - 1
=====================

**Version**

* **name**: `ReduceSumTraining (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#com.microsoft.ReduceSumTraining>`_
* **domain**: **com.microsoft**
* **since_version**: **1**
* **function**:
* **support_level**: SupportType.EXPERIMENTAL
* **shape inference**: True

This version of the operator has been available
**since version 1 of domain com.microsoft**.

**Summary**

**Attributes**

* **keepdims - INT** :   Keep the reduced dimension or not, default 1 mean keep reduced
  dimension.
* **noop_with_empty_axes - INT** :   Perform reduction or not when axes is empty, default false mean
  perform reduction.when axes is empty and this attribute is set to
  true, input tensor will not be reduced,thus output tensor would be
  equivalent to input tensor.

**Inputs**

* **data** (heterogeneous) - **T**:

* **axes** (heterogeneous) - **tensor(int64)**:

**Outputs**

* **reduced** (heterogeneous) - **T**:

**Type Constraints**

* **T** in (
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int32),
  tensor(int64),
  tensor(uint32),
  tensor(uint64)
  ):
  Constrain input and output types to high-precision numeric tensors.

**Examples**
