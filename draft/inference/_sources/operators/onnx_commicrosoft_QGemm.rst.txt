
.. _l-onnx-doccom-microsoft-QGemm:

=====================
com.microsoft - QGemm
=====================

.. contents::
    :local:


.. _l-onnx-opcom-microsoft-qgemm-1:

QGemm - 1
=========

**Version**

* **name**: `QGemm (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#com.microsoft.QGemm>`_
* **domain**: **com.microsoft**
* **since_version**: **1**
* **function**:
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 1 of domain com.microsoft**.

**Summary**

**Attributes**

* **alpha - FLOAT** :   Scalar multiplier for the product of input tensors A * B.
* **transA - INT** :   Whether A should be transposed
* **transB - INT** :   Whether B should be transposed

**Inputs**

Between 6 and 9 inputs.

* **A** (heterogeneous) - **TA**:

* **a_scale** (heterogeneous) - **T**:

* **a_zero_point** (heterogeneous) - **TA**:

* **B** (heterogeneous) - **TB**:

* **b_scale** (heterogeneous) - **T**:

* **b_zero_point** (heterogeneous) - **TB**:

* **C** (optional, heterogeneous) - **TC**:

* **y_scale** (optional, heterogeneous) - **T**:

* **y_zero_point** (optional, heterogeneous) - **TYZ**:

**Outputs**

* **Y** (heterogeneous) - **TY**:

**Type Constraints**

* **T** in (
  tensor(float)
  ):
  Constrain scale types to float tensors.
* **TA** in (
  tensor(int8),
  tensor(uint8)
  ):
  Constrain input A and its zero point types to 8 bit tensors.
* **TB** in (
  tensor(int8),
  tensor(uint8)
  ):
  Constrain input B and its zero point types to 8 bit tensors.
* **TC** in (
  tensor(int32)
  ):
  Constrain input C to 32 bit integer tensors.
* **TYZ** in (
  tensor(int8),
  tensor(uint8)
  ):
  Constrain output zero point types to 8 bit tensors.
* **TY** in (
  tensor(float),
  tensor(int8),
  tensor(uint8)
  ):
  Constrain output type to float32 or 8 bit tensors.

**Examples**
