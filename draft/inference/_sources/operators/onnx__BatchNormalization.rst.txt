
.. _l-onnx-doc-BatchNormalization:

==================
BatchNormalization
==================

.. contents::
    :local:


.. _l-onnx-op-batchnormalization-1:

BatchNormalization - 1
======================

**Version**

* **name**: `BatchNormalization (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#BatchNormalization>`_
* **domain**: **main**
* **since_version**: **1**
* **function**:
* **support_level**: SupportType.COMMON
* **shape inference**: False

This version of the operator has been available
**since version 1**.

**Summary**

**Attributes**

* **consumed_inputs - INTS** (required) :   legacy optimization attribute.
* **epsilon - FLOAT** :   The epsilon value to use to avoid division by zero, default is
  1e-5f.
* **is_test - INT** :   If set to nonzero, run spatial batch normalization in test mode,
  default is 0.
* **momentum - FLOAT** :   Factor used in computing the running mean and variance.e.g.,
  running_mean = running_mean * momentum + mean * (1 - momentum),
  default is 0.9f.
* **spatial - INT** :   If true, compute the mean and variance across all spatial elements
  If false, compute the mean and variance across per feature.Default
  is 1.

**Inputs**

* **X** (heterogeneous) - **T**:

* **scale** (heterogeneous) - **T**:

* **B** (heterogeneous) - **T**:

* **mean** (heterogeneous) - **T**:

* **var** (heterogeneous) - **T**:

**Outputs**

Between 1 and 5 outputs.

* **Y** (heterogeneous) - **T**:

* **mean** (optional, heterogeneous) - **T**:

* **var** (optional, heterogeneous) - **T**:

* **saved_mean** (optional, heterogeneous) - **T**:

* **saved_var** (optional, heterogeneous) - **T**:

**Type Constraints**

* **T** in (
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain input and output types to float tensors.
