
.. _l-onnx-doccom-microsoft-BatchNormInternal:

=================================
com.microsoft - BatchNormInternal
=================================

.. contents::
    :local:


.. _l-onnx-opcom-microsoft-batchnorminternal-1:

BatchNormInternal - 1
=====================

**Version**

* **name**: `BatchNormInternal (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#com.microsoft.BatchNormInternal>`_
* **domain**: **com.microsoft**
* **since_version**: **1**
* **function**:
* **support_level**: SupportType.EXPERIMENTAL
* **shape inference**: True

This version of the operator has been available
**since version 1 of domain com.microsoft**.

**Summary**

**Attributes**

* **epsilon - FLOAT** :   epsilon value
* **momentum - FLOAT** :   momentum value
* **training_mode - INT** :   true if training

**Inputs**

* **X** (heterogeneous) - **T**:

* **scale** (heterogeneous) - **T1**:

* **B** (heterogeneous) - **T1**:

* **input_mean** (heterogeneous) - **T2**:

* **input_var** (heterogeneous) - **T2**:

**Outputs**

Between 1 and 5 outputs.

* **Y** (heterogeneous) - **T**:

* **running_mean** (optional, heterogeneous) - **T2**:

* **running_var** (optional, heterogeneous) - **T2**:

* **saved_mean** (optional, heterogeneous) - **T2**:

* **saved_inv_std** (optional, heterogeneous) - **T2**:

**Type Constraints**

* **T** in (
  tensor(bfloat16),
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain input and output types to float tensors.
* **T1** in (
  tensor(bfloat16),
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain scale and bias types to float tensors.
* **T2** in (
  tensor(bfloat16),
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain mean and variance types to float tensors.

**Examples**
