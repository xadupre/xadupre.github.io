Search.setIndex({"docnames": ["api_summary", "auto_examples/index", "auto_examples/plot_backend", "auto_examples/plot_common_errors", "auto_examples/plot_convert_pipeline_vectorizer", "auto_examples/plot_load_and_predict", "auto_examples/plot_metadata", "auto_examples/plot_pipeline", "auto_examples/plot_profiling", "auto_examples/plot_train_convert_predict", "auto_examples/sg_execution_times", "examples_md", "index", "operators/index", "operators/onnx__Abs", "operators/onnx__Acos", "operators/onnx__Acosh", "operators/onnx__Add", "operators/onnx__Affine", "operators/onnx__And", "operators/onnx__ArgMax", "operators/onnx__ArgMin", "operators/onnx__Asin", "operators/onnx__Asinh", "operators/onnx__Atan", "operators/onnx__Atanh", "operators/onnx__AveragePool", "operators/onnx__BatchNormalization", "operators/onnx__Bernoulli", "operators/onnx__BitShift", "operators/onnx__BitwiseAnd", "operators/onnx__BitwiseNot", "operators/onnx__BitwiseOr", "operators/onnx__BitwiseXor", "operators/onnx__BlackmanWindow", "operators/onnx__Cast", "operators/onnx__CastLike", "operators/onnx__Ceil", "operators/onnx__Celu", "operators/onnx__CenterCropPad", "operators/onnx__Clip", "operators/onnx__Col2Im", "operators/onnx__Compress", "operators/onnx__Concat", "operators/onnx__ConcatFromSequence", "operators/onnx__Constant", "operators/onnx__ConstantOfShape", "operators/onnx__Conv", "operators/onnx__ConvInteger", "operators/onnx__ConvTranspose", "operators/onnx__Cos", "operators/onnx__Cosh", "operators/onnx__Crop", "operators/onnx__CumSum", "operators/onnx__DFT", "operators/onnx__DepthToSpace", "operators/onnx__DequantizeLinear", "operators/onnx__Det", "operators/onnx__DisentangledAttention_TRT", "operators/onnx__Div", "operators/onnx__Dropout", "operators/onnx__DynamicQuantizeLinear", "operators/onnx__DynamicSlice", "operators/onnx__EfficientNMS_TRT", "operators/onnx__Einsum", "operators/onnx__Elu", "operators/onnx__Equal", "operators/onnx__Erf", "operators/onnx__Exp", "operators/onnx__Expand", "operators/onnx__EyeLike", "operators/onnx__Flatten", "operators/onnx__Floor", "operators/onnx__GRU", "operators/onnx__GRUUnit", "operators/onnx__Gather", "operators/onnx__GatherElements", "operators/onnx__GatherND", "operators/onnx__Gemm", "operators/onnx__GivenTensorFill", "operators/onnx__GlobalAveragePool", "operators/onnx__GlobalLpPool", "operators/onnx__GlobalMaxPool", "operators/onnx__Greater", "operators/onnx__GreaterOrEqual", "operators/onnx__GridSample", "operators/onnx__GroupNormalization", "operators/onnx__HammingWindow", "operators/onnx__HannWindow", "operators/onnx__HardSigmoid", "operators/onnx__HardSwish", "operators/onnx__Hardmax", "operators/onnx__Identity", "operators/onnx__If", "operators/onnx__ImageScaler", "operators/onnx__InstanceNormalization", "operators/onnx__IsInf", "operators/onnx__IsNaN", "operators/onnx__LRN", "operators/onnx__LSTM", "operators/onnx__LayerNormalization", "operators/onnx__LeakyRelu", "operators/onnx__Less", "operators/onnx__LessOrEqual", "operators/onnx__Log", "operators/onnx__LogSoftmax", "operators/onnx__Loop", "operators/onnx__LpNormalization", "operators/onnx__LpPool", "operators/onnx__MatMul", "operators/onnx__MatMulInteger", "operators/onnx__Max", "operators/onnx__MaxPool", "operators/onnx__MaxRoiPool", "operators/onnx__MaxUnpool", "operators/onnx__Mean", "operators/onnx__MeanVarianceNormalization", "operators/onnx__MelWeightMatrix", "operators/onnx__MemcpyFromHost", "operators/onnx__MemcpyToHost", "operators/onnx__Min", "operators/onnx__Mish", "operators/onnx__Mod", "operators/onnx__Mul", "operators/onnx__MultilevelCropAndResize_TRT", "operators/onnx__Multinomial", "operators/onnx__Neg", "operators/onnx__NegativeLogLikelihoodLoss", "operators/onnx__NonMaxSuppression", "operators/onnx__NonZero", "operators/onnx__Not", "operators/onnx__OneHot", "operators/onnx__Optional", "operators/onnx__OptionalGetElement", "operators/onnx__OptionalHasElement", "operators/onnx__Or", "operators/onnx__PRelu", "operators/onnx__Pad", "operators/onnx__ParametricSoftplus", "operators/onnx__Pow", "operators/onnx__PyramidROIAlign_TRT", "operators/onnx__QLinearConv", "operators/onnx__QLinearMatMul", "operators/onnx__QuantizeLinear", "operators/onnx__RNN", "operators/onnx__RandomNormal", "operators/onnx__RandomNormalLike", "operators/onnx__RandomUniform", "operators/onnx__RandomUniformLike", "operators/onnx__Range", "operators/onnx__Reciprocal", "operators/onnx__ReduceL1", "operators/onnx__ReduceL2", "operators/onnx__ReduceLogSum", "operators/onnx__ReduceLogSumExp", "operators/onnx__ReduceMax", "operators/onnx__ReduceMean", "operators/onnx__ReduceMin", "operators/onnx__ReduceProd", "operators/onnx__ReduceSum", "operators/onnx__ReduceSumSquare", "operators/onnx__Relu", "operators/onnx__Reshape", "operators/onnx__Resize", "operators/onnx__ReverseSequence", "operators/onnx__RoiAlign", "operators/onnx__Round", "operators/onnx__STFT", "operators/onnx__Scale", "operators/onnx__ScaledTanh", "operators/onnx__Scan", "operators/onnx__Scatter", "operators/onnx__ScatterElements", "operators/onnx__ScatterND", "operators/onnx__Selu", "operators/onnx__SequenceAt", "operators/onnx__SequenceConstruct", "operators/onnx__SequenceEmpty", "operators/onnx__SequenceErase", "operators/onnx__SequenceInsert", "operators/onnx__SequenceLength", "operators/onnx__SequenceMap", "operators/onnx__Shape", "operators/onnx__Shrink", "operators/onnx__Sigmoid", "operators/onnx__Sign", "operators/onnx__SimplifiedLayerNormalization", "operators/onnx__Sin", "operators/onnx__Sinh", "operators/onnx__Size", "operators/onnx__Slice", "operators/onnx__Softmax", "operators/onnx__SoftmaxCrossEntropyLoss", "operators/onnx__Softplus", "operators/onnx__Softsign", "operators/onnx__SpaceToDepth", "operators/onnx__Split", "operators/onnx__SplitToSequence", "operators/onnx__Sqrt", "operators/onnx__Squeeze", "operators/onnx__StringNormalizer", "operators/onnx__Sub", "operators/onnx__Sum", "operators/onnx__Tan", "operators/onnx__Tanh", "operators/onnx__TfIdfVectorizer", "operators/onnx__ThresholdedRelu", "operators/onnx__Tile", "operators/onnx__TopK", "operators/onnx__Transpose", "operators/onnx__Trilu", "operators/onnx__Unique", "operators/onnx__Unsqueeze", "operators/onnx__Upsample", "operators/onnx__Where", "operators/onnx__Xor", "operators/onnx_aionnxml_ArrayFeatureExtractor", "operators/onnx_aionnxml_Binarizer", "operators/onnx_aionnxml_CastMap", "operators/onnx_aionnxml_CategoryMapper", "operators/onnx_aionnxml_DictVectorizer", "operators/onnx_aionnxml_FeatureVectorizer", "operators/onnx_aionnxml_Imputer", "operators/onnx_aionnxml_LabelEncoder", "operators/onnx_aionnxml_LinearClassifier", "operators/onnx_aionnxml_LinearRegressor", "operators/onnx_aionnxml_Normalizer", "operators/onnx_aionnxml_OneHotEncoder", "operators/onnx_aionnxml_SVMClassifier", "operators/onnx_aionnxml_SVMRegressor", "operators/onnx_aionnxml_Scaler", "operators/onnx_aionnxml_TreeEnsembleClassifier", "operators/onnx_aionnxml_TreeEnsembleRegressor", "operators/onnx_aionnxml_ZipMap", "operators/onnx_commicrosoft_Attention", "operators/onnx_commicrosoft_AttnLSTM", "operators/onnx_commicrosoft_BeamSearch", "operators/onnx_commicrosoft_BiasAdd", "operators/onnx_commicrosoft_BiasDropout", "operators/onnx_commicrosoft_BiasGelu", "operators/onnx_commicrosoft_BiasSoftmax", "operators/onnx_commicrosoft_BiasSplitGelu", "operators/onnx_commicrosoft_BifurcationDetector", "operators/onnx_commicrosoft_BitmaskBiasDropout", "operators/onnx_commicrosoft_BitmaskDropout", "operators/onnx_commicrosoft_CDist", "operators/onnx_commicrosoft_ComplexMul", "operators/onnx_commicrosoft_ComplexMulConj", "operators/onnx_commicrosoft_ConvTransposeWithDynamicPads", "operators/onnx_commicrosoft_CropAndResize", "operators/onnx_commicrosoft_DecoderAttention", "operators/onnx_commicrosoft_DecoderMaskedMultiheadAttention", "operators/onnx_commicrosoft_DequantizeBFP", "operators/onnx_commicrosoft_DequantizeLinear", "operators/onnx_commicrosoft_DequantizeWithOrder", "operators/onnx_commicrosoft_DynamicQuantizeLSTM", "operators/onnx_commicrosoft_DynamicQuantizeMatMul", "operators/onnx_commicrosoft_EmbedLayerNormalization", "operators/onnx_commicrosoft_ExpandDims", "operators/onnx_commicrosoft_FastGelu", "operators/onnx_commicrosoft_FusedConv", "operators/onnx_commicrosoft_FusedGemm", "operators/onnx_commicrosoft_FusedMatMul", "operators/onnx_commicrosoft_GatedRelativePositionBias", "operators/onnx_commicrosoft_GatherND", "operators/onnx_commicrosoft_Gelu", "operators/onnx_commicrosoft_GemmFastGelu", "operators/onnx_commicrosoft_GreedySearch", "operators/onnx_commicrosoft_GridSample", "operators/onnx_commicrosoft_GroupNorm", "operators/onnx_commicrosoft_Inverse", "operators/onnx_commicrosoft_Irfft", "operators/onnx_commicrosoft_IsAllFinite", "operators/onnx_commicrosoft_LongformerAttention", "operators/onnx_commicrosoft_MatMulInteger16", "operators/onnx_commicrosoft_MatMulIntegerToFloat", "operators/onnx_commicrosoft_MaxpoolWithMask", "operators/onnx_commicrosoft_MulInteger", "operators/onnx_commicrosoft_MultiHeadAttention", "operators/onnx_commicrosoft_MurmurHash3", "operators/onnx_commicrosoft_NGramRepeatBlock", "operators/onnx_commicrosoft_NhwcConv", "operators/onnx_commicrosoft_NhwcMaxPool", "operators/onnx_commicrosoft_Pad", "operators/onnx_commicrosoft_QAttention", "operators/onnx_commicrosoft_QEmbedLayerNormalization", "operators/onnx_commicrosoft_QGemm", "operators/onnx_commicrosoft_QLinearAdd", "operators/onnx_commicrosoft_QLinearAveragePool", "operators/onnx_commicrosoft_QLinearConcat", "operators/onnx_commicrosoft_QLinearConv", "operators/onnx_commicrosoft_QLinearGlobalAveragePool", "operators/onnx_commicrosoft_QLinearLeakyRelu", "operators/onnx_commicrosoft_QLinearMul", "operators/onnx_commicrosoft_QLinearReduceMean", "operators/onnx_commicrosoft_QLinearSigmoid", "operators/onnx_commicrosoft_QLinearSoftmax", "operators/onnx_commicrosoft_QLinearWhere", "operators/onnx_commicrosoft_QOrderedAttention", "operators/onnx_commicrosoft_QOrderedGelu", "operators/onnx_commicrosoft_QOrderedLayerNormalization", "operators/onnx_commicrosoft_QOrderedLongformerAttention", "operators/onnx_commicrosoft_QOrderedMatMul", "operators/onnx_commicrosoft_QuantizeBFP", "operators/onnx_commicrosoft_QuantizeLinear", "operators/onnx_commicrosoft_QuantizeWithOrder", "operators/onnx_commicrosoft_QuickGelu", "operators/onnx_commicrosoft_Range", "operators/onnx_commicrosoft_ReduceSumInteger", "operators/onnx_commicrosoft_RelativePositionBias", "operators/onnx_commicrosoft_RemovePadding", "operators/onnx_commicrosoft_RestorePadding", "operators/onnx_commicrosoft_Rfft", "operators/onnx_commicrosoft_SampleOp", "operators/onnx_commicrosoft_Sampling", "operators/onnx_commicrosoft_SkipLayerNormalization", "operators/onnx_commicrosoft_SkipSimplifiedLayerNormalization", "operators/onnx_commicrosoft_Snpe", "operators/onnx_commicrosoft_SparseToDenseMatMul", "operators/onnx_commicrosoft_Tokenizer", "operators/onnx_commicrosoft_TorchEmbedding", "operators/onnx_commicrosoft_TransposeMatMul", "operators/onnx_commicrosoft_Trilu", "operators/onnx_commicrosoft_Unique", "operators/onnx_commicrosoft_WordConvEmbedding", "operators/onnx_commicrosoftnchwc_AveragePool", "operators/onnx_commicrosoftnchwc_Conv", "operators/onnx_commicrosoftnchwc_GlobalAveragePool", "operators/onnx_commicrosoftnchwc_GlobalMaxPool", "operators/onnx_commicrosoftnchwc_MaxPool", "operators/onnx_commicrosoftnchwc_ReorderInput", "operators/onnx_commicrosoftnchwc_ReorderOutput", "operators/onnx_commicrosoftnchwc_Upsample", "operators/onnx_commsinternalnhwc_AveragePool", "operators/onnx_commsinternalnhwc_Conv", "operators/onnx_commsinternalnhwc_ConvTranspose", "operators/onnx_commsinternalnhwc_MaxPool", "operators/onnx_commsinternalnhwc_MaxUnpool", "operators/onnx_commsinternalnhwc_QLinearAveragePool", "operators/onnx_commsinternalnhwc_QLinearConv", "operators/onnx_commsinternalnhwc_QLinearConvTranspose", "tutorial"], "filenames": ["api_summary.rst", "auto_examples/index.rst", "auto_examples/plot_backend.rst", "auto_examples/plot_common_errors.rst", "auto_examples/plot_convert_pipeline_vectorizer.rst", "auto_examples/plot_load_and_predict.rst", "auto_examples/plot_metadata.rst", "auto_examples/plot_pipeline.rst", "auto_examples/plot_profiling.rst", "auto_examples/plot_train_convert_predict.rst", "auto_examples/sg_execution_times.rst", "examples_md.rst", "index.rst", "operators/index.rst", "operators/onnx__Abs.rst", "operators/onnx__Acos.rst", "operators/onnx__Acosh.rst", "operators/onnx__Add.rst", "operators/onnx__Affine.rst", "operators/onnx__And.rst", "operators/onnx__ArgMax.rst", "operators/onnx__ArgMin.rst", "operators/onnx__Asin.rst", "operators/onnx__Asinh.rst", "operators/onnx__Atan.rst", "operators/onnx__Atanh.rst", "operators/onnx__AveragePool.rst", "operators/onnx__BatchNormalization.rst", "operators/onnx__Bernoulli.rst", "operators/onnx__BitShift.rst", "operators/onnx__BitwiseAnd.rst", "operators/onnx__BitwiseNot.rst", "operators/onnx__BitwiseOr.rst", "operators/onnx__BitwiseXor.rst", "operators/onnx__BlackmanWindow.rst", "operators/onnx__Cast.rst", "operators/onnx__CastLike.rst", "operators/onnx__Ceil.rst", "operators/onnx__Celu.rst", "operators/onnx__CenterCropPad.rst", "operators/onnx__Clip.rst", "operators/onnx__Col2Im.rst", "operators/onnx__Compress.rst", "operators/onnx__Concat.rst", "operators/onnx__ConcatFromSequence.rst", "operators/onnx__Constant.rst", "operators/onnx__ConstantOfShape.rst", "operators/onnx__Conv.rst", "operators/onnx__ConvInteger.rst", "operators/onnx__ConvTranspose.rst", "operators/onnx__Cos.rst", "operators/onnx__Cosh.rst", "operators/onnx__Crop.rst", "operators/onnx__CumSum.rst", "operators/onnx__DFT.rst", "operators/onnx__DepthToSpace.rst", "operators/onnx__DequantizeLinear.rst", "operators/onnx__Det.rst", "operators/onnx__DisentangledAttention_TRT.rst", "operators/onnx__Div.rst", "operators/onnx__Dropout.rst", "operators/onnx__DynamicQuantizeLinear.rst", "operators/onnx__DynamicSlice.rst", "operators/onnx__EfficientNMS_TRT.rst", "operators/onnx__Einsum.rst", "operators/onnx__Elu.rst", "operators/onnx__Equal.rst", "operators/onnx__Erf.rst", "operators/onnx__Exp.rst", "operators/onnx__Expand.rst", "operators/onnx__EyeLike.rst", "operators/onnx__Flatten.rst", "operators/onnx__Floor.rst", "operators/onnx__GRU.rst", "operators/onnx__GRUUnit.rst", "operators/onnx__Gather.rst", "operators/onnx__GatherElements.rst", "operators/onnx__GatherND.rst", "operators/onnx__Gemm.rst", "operators/onnx__GivenTensorFill.rst", "operators/onnx__GlobalAveragePool.rst", "operators/onnx__GlobalLpPool.rst", "operators/onnx__GlobalMaxPool.rst", "operators/onnx__Greater.rst", "operators/onnx__GreaterOrEqual.rst", "operators/onnx__GridSample.rst", "operators/onnx__GroupNormalization.rst", "operators/onnx__HammingWindow.rst", "operators/onnx__HannWindow.rst", "operators/onnx__HardSigmoid.rst", "operators/onnx__HardSwish.rst", "operators/onnx__Hardmax.rst", "operators/onnx__Identity.rst", "operators/onnx__If.rst", "operators/onnx__ImageScaler.rst", "operators/onnx__InstanceNormalization.rst", "operators/onnx__IsInf.rst", "operators/onnx__IsNaN.rst", "operators/onnx__LRN.rst", "operators/onnx__LSTM.rst", "operators/onnx__LayerNormalization.rst", "operators/onnx__LeakyRelu.rst", "operators/onnx__Less.rst", "operators/onnx__LessOrEqual.rst", "operators/onnx__Log.rst", "operators/onnx__LogSoftmax.rst", "operators/onnx__Loop.rst", "operators/onnx__LpNormalization.rst", "operators/onnx__LpPool.rst", "operators/onnx__MatMul.rst", "operators/onnx__MatMulInteger.rst", "operators/onnx__Max.rst", "operators/onnx__MaxPool.rst", "operators/onnx__MaxRoiPool.rst", "operators/onnx__MaxUnpool.rst", "operators/onnx__Mean.rst", "operators/onnx__MeanVarianceNormalization.rst", "operators/onnx__MelWeightMatrix.rst", "operators/onnx__MemcpyFromHost.rst", "operators/onnx__MemcpyToHost.rst", "operators/onnx__Min.rst", "operators/onnx__Mish.rst", "operators/onnx__Mod.rst", "operators/onnx__Mul.rst", "operators/onnx__MultilevelCropAndResize_TRT.rst", "operators/onnx__Multinomial.rst", "operators/onnx__Neg.rst", "operators/onnx__NegativeLogLikelihoodLoss.rst", "operators/onnx__NonMaxSuppression.rst", "operators/onnx__NonZero.rst", "operators/onnx__Not.rst", "operators/onnx__OneHot.rst", "operators/onnx__Optional.rst", "operators/onnx__OptionalGetElement.rst", "operators/onnx__OptionalHasElement.rst", "operators/onnx__Or.rst", "operators/onnx__PRelu.rst", "operators/onnx__Pad.rst", "operators/onnx__ParametricSoftplus.rst", "operators/onnx__Pow.rst", "operators/onnx__PyramidROIAlign_TRT.rst", "operators/onnx__QLinearConv.rst", "operators/onnx__QLinearMatMul.rst", "operators/onnx__QuantizeLinear.rst", "operators/onnx__RNN.rst", "operators/onnx__RandomNormal.rst", "operators/onnx__RandomNormalLike.rst", "operators/onnx__RandomUniform.rst", "operators/onnx__RandomUniformLike.rst", "operators/onnx__Range.rst", "operators/onnx__Reciprocal.rst", "operators/onnx__ReduceL1.rst", "operators/onnx__ReduceL2.rst", "operators/onnx__ReduceLogSum.rst", "operators/onnx__ReduceLogSumExp.rst", "operators/onnx__ReduceMax.rst", "operators/onnx__ReduceMean.rst", "operators/onnx__ReduceMin.rst", "operators/onnx__ReduceProd.rst", "operators/onnx__ReduceSum.rst", "operators/onnx__ReduceSumSquare.rst", "operators/onnx__Relu.rst", "operators/onnx__Reshape.rst", "operators/onnx__Resize.rst", "operators/onnx__ReverseSequence.rst", "operators/onnx__RoiAlign.rst", "operators/onnx__Round.rst", "operators/onnx__STFT.rst", "operators/onnx__Scale.rst", "operators/onnx__ScaledTanh.rst", "operators/onnx__Scan.rst", "operators/onnx__Scatter.rst", "operators/onnx__ScatterElements.rst", "operators/onnx__ScatterND.rst", "operators/onnx__Selu.rst", "operators/onnx__SequenceAt.rst", "operators/onnx__SequenceConstruct.rst", "operators/onnx__SequenceEmpty.rst", "operators/onnx__SequenceErase.rst", "operators/onnx__SequenceInsert.rst", "operators/onnx__SequenceLength.rst", "operators/onnx__SequenceMap.rst", "operators/onnx__Shape.rst", "operators/onnx__Shrink.rst", "operators/onnx__Sigmoid.rst", "operators/onnx__Sign.rst", "operators/onnx__SimplifiedLayerNormalization.rst", "operators/onnx__Sin.rst", "operators/onnx__Sinh.rst", "operators/onnx__Size.rst", "operators/onnx__Slice.rst", "operators/onnx__Softmax.rst", "operators/onnx__SoftmaxCrossEntropyLoss.rst", "operators/onnx__Softplus.rst", "operators/onnx__Softsign.rst", "operators/onnx__SpaceToDepth.rst", "operators/onnx__Split.rst", "operators/onnx__SplitToSequence.rst", "operators/onnx__Sqrt.rst", "operators/onnx__Squeeze.rst", "operators/onnx__StringNormalizer.rst", "operators/onnx__Sub.rst", "operators/onnx__Sum.rst", "operators/onnx__Tan.rst", "operators/onnx__Tanh.rst", "operators/onnx__TfIdfVectorizer.rst", "operators/onnx__ThresholdedRelu.rst", "operators/onnx__Tile.rst", "operators/onnx__TopK.rst", "operators/onnx__Transpose.rst", "operators/onnx__Trilu.rst", "operators/onnx__Unique.rst", "operators/onnx__Unsqueeze.rst", "operators/onnx__Upsample.rst", "operators/onnx__Where.rst", "operators/onnx__Xor.rst", "operators/onnx_aionnxml_ArrayFeatureExtractor.rst", "operators/onnx_aionnxml_Binarizer.rst", "operators/onnx_aionnxml_CastMap.rst", "operators/onnx_aionnxml_CategoryMapper.rst", "operators/onnx_aionnxml_DictVectorizer.rst", "operators/onnx_aionnxml_FeatureVectorizer.rst", "operators/onnx_aionnxml_Imputer.rst", "operators/onnx_aionnxml_LabelEncoder.rst", "operators/onnx_aionnxml_LinearClassifier.rst", "operators/onnx_aionnxml_LinearRegressor.rst", "operators/onnx_aionnxml_Normalizer.rst", "operators/onnx_aionnxml_OneHotEncoder.rst", "operators/onnx_aionnxml_SVMClassifier.rst", "operators/onnx_aionnxml_SVMRegressor.rst", "operators/onnx_aionnxml_Scaler.rst", "operators/onnx_aionnxml_TreeEnsembleClassifier.rst", "operators/onnx_aionnxml_TreeEnsembleRegressor.rst", "operators/onnx_aionnxml_ZipMap.rst", "operators/onnx_commicrosoft_Attention.rst", "operators/onnx_commicrosoft_AttnLSTM.rst", "operators/onnx_commicrosoft_BeamSearch.rst", "operators/onnx_commicrosoft_BiasAdd.rst", "operators/onnx_commicrosoft_BiasDropout.rst", "operators/onnx_commicrosoft_BiasGelu.rst", "operators/onnx_commicrosoft_BiasSoftmax.rst", "operators/onnx_commicrosoft_BiasSplitGelu.rst", "operators/onnx_commicrosoft_BifurcationDetector.rst", "operators/onnx_commicrosoft_BitmaskBiasDropout.rst", "operators/onnx_commicrosoft_BitmaskDropout.rst", "operators/onnx_commicrosoft_CDist.rst", "operators/onnx_commicrosoft_ComplexMul.rst", "operators/onnx_commicrosoft_ComplexMulConj.rst", "operators/onnx_commicrosoft_ConvTransposeWithDynamicPads.rst", "operators/onnx_commicrosoft_CropAndResize.rst", "operators/onnx_commicrosoft_DecoderAttention.rst", "operators/onnx_commicrosoft_DecoderMaskedMultiheadAttention.rst", "operators/onnx_commicrosoft_DequantizeBFP.rst", "operators/onnx_commicrosoft_DequantizeLinear.rst", "operators/onnx_commicrosoft_DequantizeWithOrder.rst", "operators/onnx_commicrosoft_DynamicQuantizeLSTM.rst", "operators/onnx_commicrosoft_DynamicQuantizeMatMul.rst", "operators/onnx_commicrosoft_EmbedLayerNormalization.rst", "operators/onnx_commicrosoft_ExpandDims.rst", "operators/onnx_commicrosoft_FastGelu.rst", "operators/onnx_commicrosoft_FusedConv.rst", "operators/onnx_commicrosoft_FusedGemm.rst", "operators/onnx_commicrosoft_FusedMatMul.rst", "operators/onnx_commicrosoft_GatedRelativePositionBias.rst", "operators/onnx_commicrosoft_GatherND.rst", "operators/onnx_commicrosoft_Gelu.rst", "operators/onnx_commicrosoft_GemmFastGelu.rst", "operators/onnx_commicrosoft_GreedySearch.rst", "operators/onnx_commicrosoft_GridSample.rst", "operators/onnx_commicrosoft_GroupNorm.rst", "operators/onnx_commicrosoft_Inverse.rst", "operators/onnx_commicrosoft_Irfft.rst", "operators/onnx_commicrosoft_IsAllFinite.rst", "operators/onnx_commicrosoft_LongformerAttention.rst", "operators/onnx_commicrosoft_MatMulInteger16.rst", "operators/onnx_commicrosoft_MatMulIntegerToFloat.rst", "operators/onnx_commicrosoft_MaxpoolWithMask.rst", "operators/onnx_commicrosoft_MulInteger.rst", "operators/onnx_commicrosoft_MultiHeadAttention.rst", "operators/onnx_commicrosoft_MurmurHash3.rst", "operators/onnx_commicrosoft_NGramRepeatBlock.rst", "operators/onnx_commicrosoft_NhwcConv.rst", "operators/onnx_commicrosoft_NhwcMaxPool.rst", "operators/onnx_commicrosoft_Pad.rst", "operators/onnx_commicrosoft_QAttention.rst", "operators/onnx_commicrosoft_QEmbedLayerNormalization.rst", "operators/onnx_commicrosoft_QGemm.rst", "operators/onnx_commicrosoft_QLinearAdd.rst", "operators/onnx_commicrosoft_QLinearAveragePool.rst", "operators/onnx_commicrosoft_QLinearConcat.rst", "operators/onnx_commicrosoft_QLinearConv.rst", "operators/onnx_commicrosoft_QLinearGlobalAveragePool.rst", "operators/onnx_commicrosoft_QLinearLeakyRelu.rst", "operators/onnx_commicrosoft_QLinearMul.rst", "operators/onnx_commicrosoft_QLinearReduceMean.rst", "operators/onnx_commicrosoft_QLinearSigmoid.rst", "operators/onnx_commicrosoft_QLinearSoftmax.rst", "operators/onnx_commicrosoft_QLinearWhere.rst", "operators/onnx_commicrosoft_QOrderedAttention.rst", "operators/onnx_commicrosoft_QOrderedGelu.rst", "operators/onnx_commicrosoft_QOrderedLayerNormalization.rst", "operators/onnx_commicrosoft_QOrderedLongformerAttention.rst", "operators/onnx_commicrosoft_QOrderedMatMul.rst", "operators/onnx_commicrosoft_QuantizeBFP.rst", "operators/onnx_commicrosoft_QuantizeLinear.rst", "operators/onnx_commicrosoft_QuantizeWithOrder.rst", "operators/onnx_commicrosoft_QuickGelu.rst", "operators/onnx_commicrosoft_Range.rst", "operators/onnx_commicrosoft_ReduceSumInteger.rst", "operators/onnx_commicrosoft_RelativePositionBias.rst", "operators/onnx_commicrosoft_RemovePadding.rst", "operators/onnx_commicrosoft_RestorePadding.rst", "operators/onnx_commicrosoft_Rfft.rst", "operators/onnx_commicrosoft_SampleOp.rst", "operators/onnx_commicrosoft_Sampling.rst", "operators/onnx_commicrosoft_SkipLayerNormalization.rst", "operators/onnx_commicrosoft_SkipSimplifiedLayerNormalization.rst", "operators/onnx_commicrosoft_Snpe.rst", "operators/onnx_commicrosoft_SparseToDenseMatMul.rst", "operators/onnx_commicrosoft_Tokenizer.rst", "operators/onnx_commicrosoft_TorchEmbedding.rst", "operators/onnx_commicrosoft_TransposeMatMul.rst", "operators/onnx_commicrosoft_Trilu.rst", "operators/onnx_commicrosoft_Unique.rst", "operators/onnx_commicrosoft_WordConvEmbedding.rst", "operators/onnx_commicrosoftnchwc_AveragePool.rst", "operators/onnx_commicrosoftnchwc_Conv.rst", "operators/onnx_commicrosoftnchwc_GlobalAveragePool.rst", "operators/onnx_commicrosoftnchwc_GlobalMaxPool.rst", "operators/onnx_commicrosoftnchwc_MaxPool.rst", "operators/onnx_commicrosoftnchwc_ReorderInput.rst", "operators/onnx_commicrosoftnchwc_ReorderOutput.rst", "operators/onnx_commicrosoftnchwc_Upsample.rst", "operators/onnx_commsinternalnhwc_AveragePool.rst", "operators/onnx_commsinternalnhwc_Conv.rst", "operators/onnx_commsinternalnhwc_ConvTranspose.rst", "operators/onnx_commsinternalnhwc_MaxPool.rst", "operators/onnx_commsinternalnhwc_MaxUnpool.rst", "operators/onnx_commsinternalnhwc_QLinearAveragePool.rst", "operators/onnx_commsinternalnhwc_QLinearConv.rst", "operators/onnx_commsinternalnhwc_QLinearConvTranspose.rst", "tutorial.rst"], "titles": ["API", "Gallery of examples", "ONNX Runtime Backend for ONNX", "Common errors with onnxruntime", "Train, convert and predict with ONNX Runtime", "Load and predict with ONNX Runtime and a very simple model", "Metadata", "Draw a pipeline", "Profile the execution of a simple model", "Train, convert and predict with ONNX Runtime", "Computation times", "Gallery of examples", "Python Bindings for ONNX Runtime", "ONNX Operators in onnxruntime", "Abs", "Acos", "Acosh", "Add", "Affine", "And", "ArgMax", "ArgMin", "Asin", "Asinh", "Atan", "Atanh", "AveragePool", "BatchNormalization", "Bernoulli", "BitShift", "BitwiseAnd", "BitwiseNot", "BitwiseOr", "BitwiseXor", "BlackmanWindow", "Cast", "CastLike", "Ceil", "Celu", "CenterCropPad", "Clip", "Col2Im", "Compress", "Concat", "ConcatFromSequence", "Constant", "ConstantOfShape", "Conv", "ConvInteger", "ConvTranspose", "Cos", "Cosh", "Crop", "CumSum", "DFT", "DepthToSpace", "DequantizeLinear", "Det", "DisentangledAttention_TRT", "Div", "Dropout", "DynamicQuantizeLinear", "DynamicSlice", "EfficientNMS_TRT", "Einsum", "Elu", "Equal", "Erf", "Exp", "Expand", "EyeLike", "Flatten", "Floor", "GRU", "GRUUnit", "Gather", "GatherElements", "GatherND", "Gemm", "GivenTensorFill", "GlobalAveragePool", "GlobalLpPool", "GlobalMaxPool", "Greater", "GreaterOrEqual", "GridSample", "GroupNormalization", "HammingWindow", "HannWindow", "HardSigmoid", "HardSwish", "Hardmax", "Identity", "If", "ImageScaler", "InstanceNormalization", "IsInf", "IsNaN", "LRN", "LSTM", "LayerNormalization", "LeakyRelu", "Less", "LessOrEqual", "Log", "LogSoftmax", "Loop", "LpNormalization", "LpPool", "MatMul", "MatMulInteger", "Max", "MaxPool", "MaxRoiPool", "MaxUnpool", "Mean", "MeanVarianceNormalization", "MelWeightMatrix", "MemcpyFromHost", "MemcpyToHost", "Min", "Mish", "Mod", "Mul", "MultilevelCropAndResize_TRT", "Multinomial", "Neg", "NegativeLogLikelihoodLoss", "NonMaxSuppression", "NonZero", "Not", "OneHot", "Optional", "OptionalGetElement", "OptionalHasElement", "Or", "PRelu", "Pad", "ParametricSoftplus", "Pow", "PyramidROIAlign_TRT", "QLinearConv", "QLinearMatMul", "QuantizeLinear", "RNN", "RandomNormal", "RandomNormalLike", "RandomUniform", "RandomUniformLike", "Range", "Reciprocal", "ReduceL1", "ReduceL2", "ReduceLogSum", "ReduceLogSumExp", "ReduceMax", "ReduceMean", "ReduceMin", "ReduceProd", "ReduceSum", "ReduceSumSquare", "Relu", "Reshape", "Resize", "ReverseSequence", "RoiAlign", "Round", "STFT", "Scale", "ScaledTanh", "Scan", "Scatter", "ScatterElements", "ScatterND", "Selu", "SequenceAt", "SequenceConstruct", "SequenceEmpty", "SequenceErase", "SequenceInsert", "SequenceLength", "SequenceMap", "Shape", "Shrink", "Sigmoid", "Sign", "SimplifiedLayerNormalization", "Sin", "Sinh", "Size", "Slice", "Softmax", "SoftmaxCrossEntropyLoss", "Softplus", "Softsign", "SpaceToDepth", "Split", "SplitToSequence", "Sqrt", "Squeeze", "StringNormalizer", "Sub", "Sum", "Tan", "Tanh", "TfIdfVectorizer", "ThresholdedRelu", "Tile", "TopK", "Transpose", "Trilu", "Unique", "Unsqueeze", "Upsample", "Where", "Xor", "ai.onnx.ml - ArrayFeatureExtractor", "ai.onnx.ml - Binarizer", "ai.onnx.ml - CastMap", "ai.onnx.ml - CategoryMapper", "ai.onnx.ml - DictVectorizer", "ai.onnx.ml - FeatureVectorizer", "ai.onnx.ml - Imputer", "ai.onnx.ml - LabelEncoder", "ai.onnx.ml - LinearClassifier", "ai.onnx.ml - LinearRegressor", "ai.onnx.ml - Normalizer", "ai.onnx.ml - OneHotEncoder", "ai.onnx.ml - SVMClassifier", "ai.onnx.ml - SVMRegressor", "ai.onnx.ml - Scaler", "ai.onnx.ml - TreeEnsembleClassifier", "ai.onnx.ml - TreeEnsembleRegressor", "ai.onnx.ml - ZipMap", "com.microsoft - Attention", "com.microsoft - AttnLSTM", "com.microsoft - BeamSearch", "com.microsoft - BiasAdd", "com.microsoft - BiasDropout", "com.microsoft - BiasGelu", "com.microsoft - BiasSoftmax", "com.microsoft - BiasSplitGelu", "com.microsoft - BifurcationDetector", "com.microsoft - BitmaskBiasDropout", "com.microsoft - BitmaskDropout", "com.microsoft - CDist", "com.microsoft - ComplexMul", "com.microsoft - ComplexMulConj", "com.microsoft - ConvTransposeWithDynamicPads", "com.microsoft - CropAndResize", "com.microsoft - DecoderAttention", "com.microsoft - DecoderMaskedMultiheadAttention", "com.microsoft - DequantizeBFP", "com.microsoft - DequantizeLinear", "com.microsoft - DequantizeWithOrder", "com.microsoft - DynamicQuantizeLSTM", "com.microsoft - DynamicQuantizeMatMul", "com.microsoft - EmbedLayerNormalization", "com.microsoft - ExpandDims", "com.microsoft - FastGelu", "com.microsoft - FusedConv", "com.microsoft - FusedGemm", "com.microsoft - FusedMatMul", "com.microsoft - GatedRelativePositionBias", "com.microsoft - GatherND", "com.microsoft - Gelu", "com.microsoft - GemmFastGelu", "com.microsoft - GreedySearch", "com.microsoft - GridSample", "com.microsoft - GroupNorm", "com.microsoft - Inverse", "com.microsoft - Irfft", "com.microsoft - IsAllFinite", "com.microsoft - LongformerAttention", "com.microsoft - MatMulInteger16", "com.microsoft - MatMulIntegerToFloat", "com.microsoft - MaxpoolWithMask", "com.microsoft - MulInteger", "com.microsoft - MultiHeadAttention", "com.microsoft - MurmurHash3", "com.microsoft - NGramRepeatBlock", "com.microsoft - NhwcConv", "com.microsoft - NhwcMaxPool", "com.microsoft - Pad", "com.microsoft - QAttention", "com.microsoft - QEmbedLayerNormalization", "com.microsoft - QGemm", "com.microsoft - QLinearAdd", "com.microsoft - QLinearAveragePool", "com.microsoft - QLinearConcat", "com.microsoft - QLinearConv", "com.microsoft - QLinearGlobalAveragePool", "com.microsoft - QLinearLeakyRelu", "com.microsoft - QLinearMul", "com.microsoft - QLinearReduceMean", "com.microsoft - QLinearSigmoid", "com.microsoft - QLinearSoftmax", "com.microsoft - QLinearWhere", "com.microsoft - QOrderedAttention", "com.microsoft - QOrderedGelu", "com.microsoft - QOrderedLayerNormalization", "com.microsoft - QOrderedLongformerAttention", "com.microsoft - QOrderedMatMul", "com.microsoft - QuantizeBFP", "com.microsoft - QuantizeLinear", "com.microsoft - QuantizeWithOrder", "com.microsoft - QuickGelu", "com.microsoft - Range", "com.microsoft - ReduceSumInteger", "com.microsoft - RelativePositionBias", "com.microsoft - RemovePadding", "com.microsoft - RestorePadding", "com.microsoft - Rfft", "com.microsoft - SampleOp", "com.microsoft - Sampling", "com.microsoft - SkipLayerNormalization", "com.microsoft - SkipSimplifiedLayerNormalization", "com.microsoft - Snpe", "com.microsoft - SparseToDenseMatMul", "com.microsoft - Tokenizer", "com.microsoft - TorchEmbedding", "com.microsoft - TransposeMatMul", "com.microsoft - Trilu", "com.microsoft - Unique", "com.microsoft - WordConvEmbedding", "com.microsoft.nchwc - AveragePool", "com.microsoft.nchwc - Conv", "com.microsoft.nchwc - GlobalAveragePool", "com.microsoft.nchwc - GlobalMaxPool", "com.microsoft.nchwc - MaxPool", "com.microsoft.nchwc - ReorderInput", "com.microsoft.nchwc - ReorderOutput", "com.microsoft.nchwc - Upsample", "com.ms.internal.nhwc - AveragePool", "com.ms.internal.nhwc - Conv", "com.ms.internal.nhwc - ConvTranspose", "com.ms.internal.nhwc - MaxPool", "com.ms.internal.nhwc - MaxUnpool", "com.ms.internal.nhwc - QLinearAveragePool", "com.ms.internal.nhwc - QLinearConv", "com.ms.internal.nhwc - QLinearConvTranspose", "Tutorial"], "terms": {"onnx": [0, 1, 3, 6, 8, 10, 15, 16, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 46, 48, 50, 51, 54, 57, 61, 64, 70, 80, 82, 85, 86, 87, 88, 90, 96, 99, 110, 117, 121, 130, 141, 142, 144, 164, 166, 167, 179, 181, 183, 187, 188, 193, 194, 197, 200, 203, 205, 210, 211, 235, 253, 255, 264, 268, 283, 290, 304, 322, 323, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 339], "runtim": [0, 1, 6, 8, 10], "infer": [0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "graph": [0, 7, 93, 106, 170, 181, 236, 267, 314], "format": [0, 2, 3, 6, 8, 26, 41, 47, 48, 49, 108, 112, 114, 128, 137, 141, 205, 288, 319, 333, 334, 335, 336, 337, 338, 339], "ort": 0, "memori": 0, "disk": 0, "constrain": [0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "environ": [0, 4, 9, 200], "The": [0, 2, 3, 4, 5, 8, 9, 20, 21, 26, 27, 28, 34, 35, 38, 41, 45, 46, 47, 48, 49, 54, 70, 71, 73, 86, 87, 88, 93, 94, 95, 98, 99, 100, 106, 107, 108, 112, 114, 117, 125, 128, 141, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 165, 168, 170, 177, 181, 183, 186, 205, 211, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 242, 245, 249, 250, 252, 253, 254, 255, 257, 267, 269, 278, 280, 281, 284, 285, 288, 289, 294, 300, 303, 304, 308, 314, 315, 316, 319, 333, 334, 335, 336, 337, 338, 339, 340, 341], "consum": [0, 73, 99, 144, 235, 252, 255, 303], "produc": [0, 3, 6, 319], "can": [0, 2, 3, 8, 26, 29, 41, 47, 48, 49, 53, 54, 108, 112, 114, 128, 141, 164, 167, 171, 172, 182, 189, 205, 211, 230, 231, 232, 234, 245, 284, 288, 298, 323, 333, 334, 335, 336, 337, 338, 339, 340, 341], "specifi": [0, 28, 34, 39, 42, 46, 49, 70, 73, 87, 88, 99, 106, 108, 125, 127, 144, 145, 146, 147, 148, 164, 170, 192, 197, 205, 211, 234, 235, 238, 243, 244, 251, 253, 255, 278, 284, 299, 304, 319, 335, 340, 341], "access": 0, "wai": [0, 7, 341], "best": 0, "match": [0, 26, 47, 49, 93, 108, 112, 228, 242, 245, 252, 288, 303, 319, 335, 336, 338], "your": [0, 3], "scenario": [0, 4, 9, 341], "i": [0, 2, 3, 4, 5, 6, 7, 9, 12, 26, 27, 34, 36, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 53, 54, 58, 60, 64, 70, 71, 73, 74, 75, 76, 78, 81, 87, 88, 93, 95, 99, 106, 108, 112, 114, 116, 117, 118, 119, 127, 128, 137, 141, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 167, 170, 171, 172, 175, 177, 178, 179, 180, 181, 183, 192, 197, 200, 205, 208, 210, 211, 218, 219, 220, 223, 224, 227, 228, 229, 231, 232, 234, 235, 236, 249, 250, 251, 252, 255, 258, 267, 274, 278, 279, 281, 284, 288, 289, 294, 298, 300, 303, 308, 309, 313, 314, 319, 322, 323, 324, 333, 334, 335, 336, 337, 338, 339, 340, 341], "main": [0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "It": [0, 3, 5, 6, 29, 86, 106, 127, 170, 175, 178, 179, 180, 181, 190, 192, 200, 205, 213, 220, 236, 253, 267, 269, 279, 304, 314, 340, 341], "us": [0, 2, 3, 4, 6, 7, 9, 26, 27, 28, 34, 47, 48, 49, 70, 73, 81, 85, 86, 87, 88, 95, 99, 100, 108, 112, 113, 114, 125, 128, 141, 144, 146, 148, 165, 186, 205, 218, 219, 223, 224, 225, 228, 231, 232, 233, 234, 235, 236, 245, 249, 251, 252, 255, 257, 267, 268, 269, 278, 279, 284, 285, 288, 300, 303, 314, 315, 316, 317, 319, 324, 333, 334, 335, 336, 337, 338, 339], "an": [0, 3, 4, 5, 7, 9, 39, 48, 70, 106, 127, 141, 165, 170, 192, 205, 218, 219, 220, 223, 230, 319, 333, 334, 339, 341], "well": 0, "applic": [0, 249, 341], "configur": 0, "session": [0, 8], "onnxruntim": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 341], "name": [0, 2, 3, 4, 5, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "consist": [0, 4, 9], "comput": [0, 2, 4, 5, 8, 9, 20, 21, 27, 34, 87, 88, 116, 165, 288, 333, 336, 338, 340, 341], "oper": [0, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "implement": [0, 2, 200], "optim": [0, 14, 17, 27, 37, 40, 59, 60, 65, 68, 72, 89, 95, 101, 104, 111, 115, 120, 123, 126, 136, 150, 161, 162, 174, 184, 198, 201, 202, 204, 341], "kernel": [0, 26, 47, 48, 49, 108, 112, 114, 141, 228, 229, 281, 288, 324, 333, 334, 335, 336, 337, 338, 339, 340], "differ": [0, 7, 9, 13], "hardwar": 0, "target": [0, 9, 127, 192, 225, 232, 317, 341], "orchestr": 0, "execut": [0, 1, 9, 10, 236, 267, 314], "via": 0, "provid": [0, 3, 4, 5, 6, 8, 9, 39, 118, 119, 128, 146, 148, 228, 236, 258, 267, 313, 314, 324, 340, 341], "contain": [0, 6, 8, 205, 228, 229, 319], "set": [0, 4, 9, 17, 19, 27, 49, 53, 54, 59, 66, 70, 83, 85, 96, 102, 122, 123, 135, 139, 200, 201, 205, 215, 228, 268, 314, 319, 335, 340, 341], "specif": [0, 6, 200, 341], "gpu": [0, 2, 341], "iot": 0, "etc": [0, 163, 317], "ar": [0, 8, 9, 35, 39, 47, 48, 49, 54, 55, 70, 73, 85, 99, 107, 116, 128, 141, 144, 165, 167, 195, 200, 205, 211, 217, 218, 228, 234, 235, 249, 251, 253, 255, 268, 274, 281, 284, 304, 314, 319, 334, 335, 339, 340, 341], "paramet": [0, 98, 253, 304], "from": [0, 2, 3, 4, 5, 6, 7, 8, 9, 34, 35, 36, 39, 47, 48, 49, 75, 76, 85, 87, 88, 113, 117, 141, 165, 171, 172, 197, 200, 205, 211, 220, 236, 267, 281, 314, 323, 324, 334, 335, 339, 340, 341], "chosen": [0, 229], "prioriti": 0, "order": [0, 73, 99, 107, 144, 211, 228, 229, 235, 254, 255, 283, 298, 299, 300, 301, 302, 305, 323, 336], "given": [0, 74, 209, 283], "list": [0, 13, 73, 99, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 170, 197, 199, 200, 205, 209, 212, 221, 223, 227, 228, 229, 231, 235, 255, 294, 308, 319, 341], "In": [0, 4, 9, 26, 47, 48, 49, 53, 108, 112, 141, 224, 288, 333, 334, 335, 336, 338, 339, 341], "exampl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 15, 16, 18, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 44, 46, 48, 50, 51, 52, 54, 57, 58, 61, 62, 63, 64, 70, 73, 74, 79, 80, 82, 85, 86, 87, 88, 90, 94, 96, 99, 107, 110, 113, 117, 118, 119, 121, 124, 125, 130, 132, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 164, 166, 167, 168, 169, 175, 176, 177, 178, 179, 180, 181, 183, 186, 187, 188, 193, 194, 197, 200, 203, 205, 210, 211, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "below": 0, "cuda": [0, 305], "If": [0, 13, 17, 19, 26, 27, 34, 39, 41, 42, 46, 47, 48, 49, 53, 54, 59, 66, 70, 83, 85, 87, 88, 102, 112, 114, 116, 118, 119, 123, 135, 139, 141, 146, 147, 148, 165, 167, 170, 190, 197, 200, 201, 205, 211, 215, 218, 227, 228, 236, 245, 253, 258, 267, 268, 272, 279, 281, 288, 304, 313, 314, 319, 324, 333, 334, 335, 336, 337, 338, 339, 340], "cudaexecutionprovid": 0, "cpuexecutionprovid": 0, "avail": [0, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "found": [0, 219, 223, 227, 319], "here": [0, 2, 3, 4, 5, 6, 7, 8, 9, 341], "sinc": [0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "1": [0, 2, 3, 4, 6, 7, 8, 9, 13, 16, 23, 24, 25, 28, 29, 34, 38, 39, 41, 44, 46, 48, 50, 51, 53, 54, 57, 61, 64, 70, 76, 85, 87, 88, 96, 110, 117, 122, 128, 131, 132, 141, 142, 164, 165, 166, 167, 170, 171, 172, 176, 178, 179, 181, 183, 187, 188, 192, 197, 200, 203, 205, 210, 211, 333, 334, 336, 337, 339], "10": [0, 9, 13, 16, 28, 34, 39, 41, 46, 54, 85, 87, 88, 117, 121, 179, 181, 197, 210, 236, 254, 268, 304, 322, 325, 326, 329, 333, 334, 335, 336], "you": [0, 93, 341], "must": [0, 26, 34, 35, 47, 48, 49, 71, 73, 87, 88, 93, 99, 108, 112, 117, 118, 119, 141, 144, 146, 148, 164, 175, 178, 179, 180, 205, 211, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 252, 253, 255, 258, 274, 288, 299, 300, 303, 304, 308, 313, 333, 334, 335, 336, 338, 339, 340], "explicitli": [0, 49, 108, 335, 340], "onli": [0, 3, 53, 54, 93, 107, 108, 116, 131, 167, 183, 218, 219, 220, 223, 224, 227, 228, 231, 233, 234, 236, 245, 254, 267, 272, 284, 298, 314, 319, 326, 334, 340], "time": [0, 2, 3, 4, 5, 6, 7, 8, 9, 125, 164], "allow": [0, 319], "explicit": [0, 26, 47, 48, 49, 108, 112, 141, 288, 333, 334, 335, 336, 338, 339], "follow": [0, 2, 3, 26, 41, 47, 48, 49, 108, 112, 114, 137, 141, 288, 333, 334, 335, 336, 337, 338, 339], "assum": [0, 39, 231, 232], "nvidia": [0, 305], "replac": [0, 3, 40, 222], "suppli": [0, 128, 167], "other": [0, 2, 3, 7, 9, 53, 217, 326, 334, 341], "For": [0, 12, 85, 99, 144, 205, 231, 232, 235, 252, 255, 268, 303, 319], "enabl": [0, 8, 17, 19, 54, 59, 66, 83, 102, 123, 135, 139, 167, 201, 215], "profil": [0, 1, 10], "enable_profil": [0, 8], "true": [0, 8, 9, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 61, 63, 64, 66, 67, 69, 70, 71, 75, 76, 77, 79, 80, 82, 83, 85, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 105, 106, 107, 109, 110, 112, 113, 114, 116, 117, 118, 119, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 223, 224, 227, 228, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "sess_opt": 0, "its": [0, 4, 5, 7, 9, 48, 142, 205, 234, 251, 284, 286, 341], "On": [0, 4, 9], "default": [0, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 38, 41, 43, 44, 46, 47, 48, 49, 50, 51, 54, 60, 61, 65, 70, 73, 78, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 95, 96, 99, 101, 105, 108, 110, 112, 114, 116, 117, 121, 122, 127, 128, 130, 131, 137, 141, 142, 144, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 174, 177, 179, 183, 187, 188, 191, 192, 193, 194, 197, 200, 203, 205, 209, 210, 211, 213, 224, 234, 235, 249, 250, 251, 252, 253, 255, 268, 278, 279, 281, 283, 284, 288, 290, 294, 298, 300, 303, 304, 308, 309, 322, 326, 327, 328, 333, 334, 335, 336, 337, 338, 339, 340], "map": [0, 4, 96, 165, 205, 211, 217, 218, 219, 220, 223, 233, 323], "nativ": 0, "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 85, 268], "structur": 0, "numpi": [0, 2, 3, 4, 5, 8, 9, 15, 16, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 46, 48, 50, 51, 54, 57, 61, 64, 70, 80, 82, 85, 86, 87, 88, 90, 96, 110, 117, 121, 130, 141, 142, 164, 166, 167, 179, 181, 183, 187, 188, 193, 194, 197, 200, 203, 205, 210, 211, 253, 264, 268, 283, 290, 304, 322, 323, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 339, 341], "arrai": [0, 2, 3, 5, 8, 9, 15, 16, 22, 23, 24, 25, 29, 38, 39, 41, 46, 48, 50, 51, 57, 61, 80, 82, 85, 96, 110, 141, 142, 164, 166, 167, 179, 181, 183, 187, 188, 193, 194, 197, 200, 203, 205, 210, 211, 220, 228, 231, 232, 253, 264, 268, 283, 290, 304, 322, 323, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 339], "dictionari": [0, 4, 220], "x": [0, 2, 3, 4, 5, 7, 8, 9, 14, 15, 16, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 60, 61, 64, 65, 70, 71, 72, 73, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 100, 101, 108, 112, 113, 114, 118, 119, 121, 126, 129, 130, 136, 138, 139, 141, 143, 144, 150, 161, 163, 164, 165, 166, 167, 174, 181, 183, 184, 186, 187, 188, 193, 194, 198, 200, 203, 205, 206, 208, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 241, 248, 249, 252, 253, 255, 258, 259, 260, 265, 266, 268, 269, 270, 271, 276, 279, 281, 282, 283, 288, 290, 291, 292, 295, 296, 297, 299, 300, 303, 304, 306, 312, 313, 319, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "ortvalue_from_numpi": 0, "device_nam": 0, "shape": [0, 3, 4, 5, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "data_typ": [0, 4, 7, 9, 341], "tensor": [0, 3, 4, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "float": [0, 3, 4, 5, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "is_tensor": 0, "np": [0, 2, 15, 16, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 46, 48, 50, 51, 54, 57, 61, 64, 70, 80, 82, 85, 86, 87, 88, 90, 96, 110, 117, 121, 130, 141, 142, 164, 166, 167, 179, 181, 183, 187, 188, 193, 194, 197, 200, 203, 205, 210, 211, 253, 264, 268, 283, 290, 304, 322, 323, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 339], "array_equ": [0, 264], "part": [0, 26, 41, 47, 48, 49, 108, 112, 114, 141, 210, 288, 322, 333, 334, 335, 336, 337, 338, 339], "feed": [0, 3], "result": [0, 8, 210, 322], "y": [0, 4, 5, 7, 9, 14, 15, 16, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 60, 61, 64, 65, 70, 72, 73, 78, 80, 81, 82, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 100, 101, 108, 109, 110, 112, 113, 118, 119, 121, 126, 129, 130, 136, 138, 139, 141, 142, 143, 144, 150, 161, 163, 164, 165, 166, 174, 181, 183, 184, 186, 187, 188, 193, 194, 198, 200, 203, 205, 206, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 237, 241, 248, 249, 252, 253, 255, 256, 258, 259, 260, 261, 262, 265, 266, 268, 269, 270, 271, 274, 275, 276, 279, 281, 282, 283, 286, 288, 289, 290, 291, 292, 295, 296, 297, 299, 300, 302, 303, 304, 306, 307, 312, 313, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "By": [0, 54, 205, 209, 340], "alwai": 0, "place": 0, "": [0, 2, 4, 5, 6, 7, 8, 9, 44, 85, 127, 137, 165, 175, 176, 177, 178, 179, 180, 181, 190, 192, 197, 205, 207, 220, 222, 224, 225, 236, 253, 254, 267, 268, 298, 299, 300, 301, 302, 304, 305, 314, 319], "have": [0, 85, 181, 223, 268], "mai": [0, 205, 231, 232, 300, 319], "than": [0, 3, 7, 26, 41, 47, 48, 49, 108, 112, 114, 141, 213, 217, 288, 333, 334, 335, 336, 337, 338, 339, 340, 341], "becaus": [0, 4, 54, 91, 105, 167, 191], "introduc": 0, "copi": 0, "between": [0, 2, 9, 27, 43, 47, 48, 49, 54, 56, 60, 62, 63, 64, 73, 79, 93, 99, 100, 106, 110, 111, 114, 115, 120, 127, 128, 132, 141, 143, 144, 167, 170, 176, 178, 179, 181, 186, 192, 196, 197, 202, 205, 210, 211, 221, 234, 235, 236, 238, 242, 243, 244, 248, 250, 251, 255, 256, 257, 259, 260, 261, 266, 267, 272, 275, 277, 278, 281, 283, 284, 286, 287, 288, 289, 290, 292, 293, 294, 295, 298, 302, 307, 314, 315, 316, 317, 320, 322, 326, 333, 334, 335, 336, 337, 338, 339, 340], "support": [0, 8, 35, 36, 70, 85, 107, 108, 165, 229, 249, 254, 268], "custom": [0, 234, 251, 278, 284, 314], "all": [0, 1, 3, 13, 20, 21, 27, 28, 39, 41, 42, 55, 62, 64, 67, 69, 84, 85, 92, 93, 103, 106, 118, 119, 129, 132, 133, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 170, 185, 190, 195, 197, 199, 205, 209, 210, 212, 214, 227, 230, 231, 232, 236, 267, 268, 294, 296, 308, 314, 320, 322], "user": 0, "back": [0, 39, 75, 76, 171, 172, 197, 211], "thi": [0, 2, 3, 4, 5, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "call": [0, 4, 49, 236, 267, 314, 335, 340], "To": [0, 319], "featur": [0, 27, 165, 230, 231, 232], "run_with_iobind": 0, "A": [0, 17, 19, 30, 32, 33, 52, 59, 66, 73, 78, 83, 84, 99, 102, 103, 109, 110, 122, 123, 135, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 197, 201, 209, 215, 218, 219, 220, 222, 223, 224, 235, 239, 245, 246, 247, 252, 255, 256, 261, 262, 274, 275, 277, 286, 287, 293, 294, 302, 303, 308, 318, 319, 321], "instanc": [0, 6], "onto": 0, "io_bind": 0, "over": [0, 81, 98, 108, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 294, 308], "node": [0, 7, 15, 16, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 46, 50, 51, 54, 57, 61, 64, 70, 80, 82, 85, 86, 87, 88, 90, 96, 110, 117, 121, 130, 141, 142, 164, 166, 167, 179, 181, 183, 187, 188, 193, 194, 197, 200, 203, 205, 210, 231, 232, 253, 264, 268, 283, 290, 304, 322, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 339], "bind_cpu_input": 0, "bind_output": 0, "copy_outputs_to_cpu": 0, "0": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 34, 38, 39, 41, 44, 46, 47, 48, 49, 50, 51, 54, 60, 61, 65, 70, 71, 73, 78, 79, 81, 85, 87, 88, 89, 96, 99, 101, 108, 110, 112, 114, 116, 117, 122, 128, 130, 132, 137, 141, 142, 144, 164, 165, 166, 167, 170, 179, 181, 183, 187, 188, 190, 193, 194, 197, 203, 205, 210, 211, 217, 224, 231, 232, 234, 235, 236, 240, 249, 252, 253, 255, 264, 267, 268, 269, 279, 283, 284, 288, 290, 298, 303, 304, 305, 309, 314, 322, 323, 325, 326, 329, 332, 333, 334, 335, 336, 337, 338, 339, 341], "directli": [0, 2, 340], "x_ortvalu": 0, "bind_input": 0, "device_typ": 0, "device_id": 0, "element_typ": 0, "float32": [0, 2, 3, 5, 8, 9, 15, 16, 22, 23, 24, 25, 28, 34, 38, 39, 41, 46, 50, 51, 54, 57, 61, 70, 80, 82, 85, 86, 87, 88, 90, 96, 117, 121, 141, 142, 164, 166, 167, 181, 183, 187, 188, 193, 194, 197, 203, 205, 211, 253, 254, 264, 268, 283, 285, 286, 290, 298, 299, 301, 302, 304, 305, 323, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 339, 341], "buffer_ptr": 0, "data_ptr": 0, "both": [0, 205, 274], "also": [0, 2, 5, 49, 70, 335, 340, 341], "y_ortvalu": 0, "ortvalue_from_shape_and_typ": 0, "3": [0, 2, 3, 5, 6, 7, 8, 9, 15, 16, 22, 23, 24, 25, 29, 30, 31, 32, 33, 34, 39, 41, 46, 47, 48, 49, 50, 51, 56, 57, 61, 62, 63, 64, 70, 73, 80, 82, 85, 86, 87, 88, 90, 96, 99, 100, 106, 110, 114, 127, 130, 142, 143, 144, 164, 166, 167, 179, 181, 187, 188, 192, 193, 194, 197, 203, 205, 210, 211, 228, 229, 235, 236, 242, 244, 250, 251, 253, 255, 256, 257, 261, 264, 266, 268, 277, 278, 281, 283, 289, 304, 305, 307, 315, 316, 322, 323, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337], "2": [0, 2, 3, 4, 6, 7, 8, 9, 16, 29, 34, 38, 39, 41, 46, 47, 48, 49, 54, 56, 57, 60, 61, 63, 64, 73, 80, 81, 82, 85, 86, 87, 88, 89, 96, 100, 106, 107, 108, 110, 114, 117, 127, 128, 143, 144, 164, 166, 167, 170, 178, 179, 183, 186, 192, 196, 197, 205, 210, 211, 234, 236, 238, 243, 244, 248, 251, 253, 257, 259, 260, 261, 262, 264, 266, 267, 268, 281, 283, 284, 304, 305, 307, 314, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337], "chang": [0, 106, 170, 222, 340, 341], "actual": [0, 3, 4], "being": [0, 42, 85], "bound": [0, 73, 85, 99, 144, 235, 252, 255, 268, 303], "request": 0, "alloc": 0, "particularli": 0, "dynam": 0, "get_output": [0, 3, 4, 5, 9, 341], "get": [0, 9, 300, 341], "correspond": [0, 26, 34, 41, 47, 48, 49, 54, 87, 88, 99, 108, 112, 114, 117, 141, 144, 190, 234, 235, 251, 252, 255, 284, 288, 296, 303, 319, 333, 334, 335, 336, 337, 338, 339, 340], "thu": 0, "bind": 0, "return": [0, 3, 8, 9, 34, 53, 54, 87, 88, 167, 211, 227], "which": [0, 3, 4, 6, 7, 20, 21, 26, 35, 38, 40, 42, 43, 44, 47, 48, 49, 53, 54, 71, 75, 76, 106, 107, 108, 112, 131, 141, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 171, 172, 189, 196, 197, 200, 208, 228, 230, 231, 253, 288, 289, 294, 304, 308, 319, 333, 334, 335, 336, 338, 339, 340, 341], "ha": [0, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "ort_output": 0, "addit": [0, 131, 340], "work": [0, 288, 338], "while": 0, "inferenc": 0, "bind_ortvalue_input": 0, "bind_ortvalue_output": 0, "pytorch": [0, 128], "x_tensor": 0, "contigu": 0, "tupl": [0, 80, 82, 289, 327, 328], "y_shape": 0, "need": [0, 8, 9, 200, 211, 222, 319, 323, 340], "y_tensor": 0, "torch": [0, 85, 268], "empti": [0, 167, 175, 178, 179, 180, 319], "dtype": [0, 2, 3, 5, 8, 28, 34, 38, 39, 46, 54, 70, 85, 87, 88, 96, 110, 118, 119, 121, 125, 141, 142, 145, 146, 147, 148, 164, 167, 177, 181, 183, 197, 211, 252, 253, 258, 264, 268, 283, 290, 304, 313, 323, 332, 337, 339], "see": [0, 5, 6, 8, 9, 12, 17, 49, 59, 73, 99, 123, 139, 201, 235, 254, 255, 298, 299, 300, 301, 302, 335, 340, 341], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 341], "path_or_byt": 0, "none": [0, 3, 4, 8, 9, 127, 192, 200, 205, 224, 225, 228, 229, 231, 232, 269, 341], "provider_opt": 0, "kwarg": 0, "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "filenam": [0, 8], "serial": 0, "byte": [0, 3], "string": [0, 26, 29, 35, 36, 39, 41, 42, 44, 47, 48, 49, 55, 62, 63, 64, 69, 70, 73, 75, 76, 77, 85, 92, 93, 99, 106, 108, 112, 124, 127, 129, 131, 132, 133, 134, 137, 140, 141, 144, 146, 148, 163, 164, 165, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 189, 190, 192, 195, 197, 199, 200, 205, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 245, 248, 249, 255, 258, 260, 261, 264, 268, 276, 279, 281, 282, 283, 288, 290, 317, 319, 323, 325, 326, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340], "sequenc": [0, 73, 99, 118, 119, 132, 133, 134, 144, 177, 179, 181, 219, 233, 236, 267, 289, 314, 324], "decreas": 0, "preced": 0, "valu": [0, 4, 18, 26, 27, 34, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 52, 54, 58, 63, 71, 73, 75, 76, 78, 79, 81, 85, 86, 87, 88, 89, 93, 95, 99, 100, 106, 108, 112, 114, 117, 127, 131, 137, 138, 141, 144, 147, 148, 165, 167, 169, 170, 171, 172, 183, 186, 192, 197, 200, 205, 206, 208, 209, 211, 213, 217, 218, 219, 220, 222, 223, 231, 232, 234, 235, 249, 250, 251, 255, 257, 268, 269, 278, 279, 281, 283, 284, 285, 288, 298, 300, 306, 309, 314, 315, 316, 323, 326, 333, 334, 335, 336, 337, 338, 339, 340], "either": [0, 2, 3, 26, 29, 47, 48, 49, 108, 112, 141, 205, 218, 219, 220, 222, 228, 229, 274, 288, 333, 334, 335, 336, 338, 339, 340], "dict": 0, "type": [0, 3, 4, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "unless": 0, "so": [0, 26, 47, 48, 49, 96, 108, 112, 141, 205, 288, 333, 334, 335, 336, 338, 339, 340], "add_session_config_entri": 0, "load_model_format": 0, "file": [0, 8, 10, 317], "extens": 0, "when": [0, 6, 34, 44, 54, 71, 87, 88, 91, 105, 113, 165, 167, 191, 205, 219, 223, 224, 233, 249, 274, 288, 308, 319, 333, 338], "ani": [0, 3, 26, 41, 44, 47, 48, 49, 53, 75, 76, 77, 108, 112, 114, 117, 128, 131, 141, 146, 148, 164, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 211, 223, 258, 264, 288, 289, 297, 313, 323, 333, 334, 335, 336, 337, 338, 339], "should": [0, 26, 41, 46, 47, 48, 49, 71, 78, 86, 96, 106, 108, 112, 114, 122, 137, 141, 181, 189, 205, 261, 262, 269, 279, 281, 286, 288, 318, 319, 321, 333, 334, 335, 336, 337, 338, 339, 340], "mean": [0, 13, 20, 21, 26, 27, 39, 44, 47, 48, 49, 75, 76, 80, 100, 107, 108, 112, 116, 122, 127, 131, 141, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 171, 172, 186, 192, 197, 211, 253, 288, 294, 304, 305, 308, 315, 316, 327, 333, 334, 335, 336, 338, 339], "capabl": 0, "otherwis": [0, 53, 209, 228, 240], "disable_fallback": 0, "disabl": 0, "fallback": 0, "mechan": 0, "enable_fallback": 0, "fail": [0, 3, 4, 200, 227, 341], "due": [0, 3, 205], "failur": 0, "reset": [0, 73], "fall": 0, "end_profil": [0, 8], "end": [0, 4, 9, 26, 41, 47, 48, 49, 62, 106, 108, 112, 114, 137, 141, 170, 190, 205, 236, 267, 288, 314, 319, 333, 334, 335, 336, 337, 338, 339, 340], "store": [0, 7, 8, 205], "get_input": [0, 3, 4, 5, 8, 9, 341], "metadata": [0, 1, 10], "get_modelmeta": [0, 6], "get_overridable_initi": 0, "includ": [0, 7, 53, 163, 288, 333, 338], "initi": [0, 7, 236, 267, 314], "get_profiling_start_time_n": 0, "nanosecond": 0, "start": [0, 3, 4, 9, 26, 41, 47, 48, 49, 62, 112, 114, 141, 149, 167, 190, 205, 236, 267, 288, 307, 314, 319, 333, 334, 335, 336, 337, 338, 339], "compar": [0, 4, 9], "monotonic_n": 0, "after": [0, 54, 269], "some": [0, 8, 49, 73, 99, 144, 235, 255, 317, 335, 340], "platform": [0, 200], "timer": [0, 9], "precis": [0, 122, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 300], "window": [0, 34, 54, 87, 88, 167, 273, 301, 324], "maco": 0, "100n": 0, "get_provider_opt": 0, "regist": 0, "get_provid": 0, "get_session_opt": 0, "object": [0, 7, 9, 200], "output_nam": [0, 3, 5], "input_fe": 0, "run_opt": 0, "predict": [0, 1, 2, 3, 8, 10, 341], "input_nam": [0, 3, 5, 8, 9, 341], "input_valu": 0, "everi": [0, 9, 234, 284, 298], "spars": [0, 4, 205, 218], "sess": [0, 3, 4, 5, 6, 8, 9, 341], "run_with_ort_valu": 0, "input_dict_ort_valu": 0, "input_ort_valu": 0, "how": [0, 2, 5, 6, 7, 8, 9, 232], "creat": [0, 4, 106, 170, 341], "run_with_ortvaluevector": 0, "feed_nam": 0, "fetch_nam": 0, "fetch": 0, "fetch_devic": 0, "similar": [0, 4, 9], "run_": 0, "method": [0, 165, 249], "minim": 0, "c": [0, 9, 17, 19, 30, 32, 33, 59, 66, 78, 83, 84, 85, 86, 94, 102, 103, 122, 123, 135, 181, 201, 215, 219, 220, 222, 224, 228, 229, 239, 245, 246, 247, 261, 268, 269, 277, 286, 287, 293, 302, 324], "convers": 0, "overhead": 0, "set_provid": 0, "underli": 0, "re": [0, 3, 5, 8], "self": 0, "capi": [0, 2, 3, 4], "onnxruntime_pybind11_st": [0, 2, 3, 4], "inform": [0, 12], "singl": [0, 3], "add_run_config_entri": 0, "arg0": 0, "str": 0, "arg1": 0, "entri": 0, "pair": [0, 128], "get_run_config_entri": 0, "kei": [0, 218, 220, 233, 250, 278], "properti": 0, "log_severity_level": 0, "log": [0, 13, 193], "sever": [0, 3], "level": [0, 319, 341], "particular": 0, "invoc": 0, "verbos": 0, "info": 0, "warn": [0, 3], "error": [0, 1, 10, 106, 170], "4": [0, 3, 4, 5, 7, 8, 9, 15, 16, 22, 23, 24, 25, 29, 30, 31, 32, 33, 34, 41, 46, 48, 50, 51, 57, 61, 62, 64, 70, 73, 80, 82, 85, 86, 90, 110, 130, 164, 167, 179, 187, 188, 193, 194, 197, 200, 203, 205, 210, 211, 242, 248, 253, 260, 264, 268, 275, 277, 283, 288, 292, 294, 295, 304, 305, 315, 316, 320, 322, 323, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 338, 341], "fatal": 0, "log_verbosity_level": 0, "vlog": 0, "debug": 0, "build": 0, "run_log_severity_level": 0, "appli": [0, 58, 63, 73, 94, 99, 107, 127, 144, 168, 190, 192, 211, 224, 225, 228, 229, 230, 231, 232, 235, 240, 253, 255, 296, 304, 324], "logid": 0, "identifi": 0, "gener": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 28, 49, 125, 145, 146, 147, 148, 205, 238, 243, 244, 314, 335, 340], "only_execute_path_to_fetch": 0, "termin": 0, "current": 0, "individu": 0, "exit": 0, "gracefulli": 0, "statu": [0, 341], "add_external_initi": 0, "add_free_dimension_override_by_denot": 0, "int": [0, 4, 14, 17, 19, 20, 21, 26, 27, 28, 34, 37, 39, 40, 41, 42, 43, 44, 47, 48, 49, 52, 53, 54, 55, 58, 59, 60, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 83, 85, 86, 87, 88, 89, 91, 95, 96, 98, 99, 100, 101, 102, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 120, 122, 123, 124, 125, 126, 127, 128, 131, 135, 136, 137, 139, 140, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 170, 171, 172, 174, 177, 184, 186, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 208, 209, 210, 211, 212, 215, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 240, 242, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 267, 268, 269, 271, 272, 273, 276, 278, 279, 280, 281, 282, 284, 286, 288, 289, 290, 291, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 312, 314, 318, 319, 321, 322, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "dimens": [0, 2, 3, 17, 19, 20, 21, 39, 54, 59, 66, 71, 75, 76, 83, 100, 102, 106, 123, 131, 135, 139, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 170, 171, 172, 186, 197, 199, 201, 208, 209, 211, 212, 213, 215, 230, 234, 240, 252, 262, 294, 296, 300, 303, 308, 318, 321, 324, 326, 334, 340], "size": [0, 13, 26, 34, 47, 49, 58, 70, 87, 88, 94, 98, 108, 112, 114, 118, 119, 124, 140, 197, 205, 210, 221, 228, 231, 232, 234, 236, 242, 251, 253, 267, 280, 288, 298, 314, 322, 324, 333, 335, 336, 337, 338, 340], "each": [0, 26, 41, 47, 48, 49, 94, 106, 108, 112, 114, 127, 137, 141, 165, 170, 181, 196, 205, 221, 231, 232, 252, 281, 283, 288, 303, 324, 333, 334, 335, 336, 337, 338, 339, 340], "denot": [0, 200], "associ": [0, 205], "free": 0, "add_free_dimension_override_by_nam": 0, "within": [0, 232], "add_initi": 0, "enable_cpu_mem_arena": 0, "arena": 0, "pre": 0, "futur": 0, "usag": 0, "fals": [0, 4, 14, 17, 27, 35, 37, 40, 42, 43, 52, 54, 59, 60, 62, 65, 68, 72, 73, 74, 78, 81, 84, 86, 89, 93, 95, 96, 101, 103, 104, 108, 111, 115, 120, 123, 126, 136, 137, 150, 161, 162, 174, 184, 196, 198, 200, 201, 202, 204, 213, 217, 221, 222, 225, 226, 227, 229, 230, 231, 232, 235, 245, 246, 247, 271, 308, 312, 324], "don": 0, "t": [0, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 89, 90, 91, 92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 135, 136, 137, 138, 139, 140, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 171, 172, 173, 174, 175, 176, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 222, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 340], "want": [0, 85, 268], "enable_mem_pattern": 0, "pattern": [0, 319], "enable_mem_reus": 0, "reus": 0, "execution_mod": 0, "mode": [0, 27, 60, 85, 137, 163, 165, 205, 213, 249, 268, 283, 325, 329, 332, 333, 336], "sequenti": [0, 232], "execution_ord": 0, "basic": [0, 319], "topolog": 0, "get_session_config_entri": 0, "graph_optimization_level": 0, "inter_op_num_thread": 0, "number": [0, 3, 9, 26, 41, 47, 48, 49, 58, 63, 73, 86, 93, 98, 99, 108, 112, 114, 124, 125, 137, 140, 141, 144, 165, 170, 192, 205, 208, 225, 229, 232, 234, 235, 250, 251, 255, 263, 269, 273, 278, 281, 284, 288, 298, 301, 319, 333, 334, 335, 336, 337, 338, 339, 340, 341], "thread": 0, "parallel": [0, 205], "across": [0, 27, 106, 116, 170, 240], "let": [0, 2, 5, 6, 8, 9], "choos": [0, 205], "intra_op_num_thread": 0, "session_log_severity_level": 0, "logger": 0, "id": [0, 63, 231, 232, 236, 267, 314], "optimized_model_filepath": 0, "path": [0, 298], "save_model_format": 0, "config": 0, "case": [0, 4, 9, 26, 47, 48, 49, 108, 112, 141, 200, 224, 230, 288, 333, 334, 335, 336, 338, 339], "insensit": 0, "profile_file_prefix": 0, "prefix": 0, "append": [0, 9], "register_custom_ops_librari": 0, "share": 0, "librari": 0, "op": [0, 70, 296], "requir": [0, 26, 27, 29, 35, 44, 45, 55, 58, 63, 64, 86, 93, 98, 106, 112, 113, 114, 124, 137, 140, 145, 147, 170, 181, 190, 195, 205, 208, 212, 213, 224, 231, 234, 236, 240, 250, 251, 252, 254, 263, 267, 269, 271, 273, 278, 280, 282, 284, 288, 289, 294, 296, 298, 301, 302, 303, 305, 308, 309, 314, 317, 319, 325, 329, 333, 336, 337, 338], "use_deterministic_comput": 0, "whether": [0, 48, 54, 78, 96, 122, 141, 200, 210, 211, 218, 224, 229, 234, 261, 262, 284, 286, 288, 298, 318, 319, 321, 322, 333, 334, 336, 338, 339], "determinist": 0, "numpy_obj": 0, "non": [0, 199, 212], "construct": [0, 205], "deal": 0, "as_sparse_tensor": 0, "function": [0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "address": 0, "first": [0, 3, 4, 9, 34, 39, 53, 54, 87, 88, 100, 186, 205, 228, 230, 236, 267, 283, 300, 314, 324, 341], "element": [0, 27, 28, 35, 40, 42, 45, 46, 53, 70, 73, 99, 125, 132, 137, 144, 145, 146, 147, 148, 170, 192, 205, 208, 211, 218, 228, 229, 235, 240, 255, 296, 340], "buffer": 0, "where": [0, 13, 26, 39, 41, 44, 47, 48, 49, 60, 71, 76, 108, 112, 114, 128, 137, 141, 172, 211, 220, 288, 333, 334, 335, 336, 337, 338, 339, 340], "resid": 0, "e": [0, 2, 3, 4, 16, 27, 54, 128, 165, 167, 200], "g": [0, 27, 73, 99, 144, 165, 235, 255, 273, 298, 301], "proto": 0, "has_valu": 0, "els": [0, 117, 179, 279], "is_sparse_tensor": 0, "is_tensor_sequ": 0, "valid": [0, 26, 47, 48, 49, 108, 112, 118, 119, 141, 146, 148, 200, 258, 288, 313, 325, 329, 333, 334, 335, 336, 338, 339, 340], "hold": 0, "throw": 0, "accessor": 0, "gain": 0, "refer": [0, 39, 85, 268, 305, 341], "static": 0, "ort_value_from_sparse_tensor": 0, "sparse_tensor": [0, 318], "new": [0, 44, 162], "ownership": 0, "factori": 0, "held": 0, "NOT": 0, "integ": [0, 29, 30, 31, 32, 33, 39, 48, 56, 61, 62, 73, 75, 76, 99, 110, 117, 122, 127, 128, 137, 141, 142, 143, 144, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 171, 172, 192, 199, 205, 209, 212, 218, 219, 220, 223, 224, 228, 231, 233, 234, 236, 242, 251, 253, 255, 256, 257, 267, 273, 274, 275, 278, 279, 280, 284, 285, 286, 294, 298, 301, 304, 308, 310, 311, 314, 324, 339, 340], "indic": [0, 2, 3, 20, 21, 39, 62, 71, 75, 76, 77, 128, 131, 137, 170, 171, 172, 173, 190, 199, 205, 208, 210, 211, 212, 218, 224, 225, 228, 229, 231, 232, 236, 264, 267, 280, 314, 320, 322, 323, 336, 340], "update_inplac": 0, "np_arr": 0, "updat": [0, 73, 171, 172, 173], "content": [0, 7], "valuess": 0, "project": [0, 12], "depend": [0, 2, 48, 106, 141, 200, 228, 231, 333, 334, 339, 341], "more": [0, 12, 85, 268, 341], "one": [0, 4, 7, 9, 28, 34, 35, 46, 49, 73, 87, 88, 91, 99, 105, 108, 117, 125, 131, 144, 145, 146, 147, 148, 164, 191, 205, 211, 218, 219, 220, 223, 224, 227, 228, 229, 231, 233, 235, 238, 243, 244, 255, 319, 326, 334, 335, 341], "constructor": 0, "as_blocksparse_view": 0, "coo": 0, "represent": [0, 4, 9, 131], "queri": [0, 250, 278], "blockspars": 0, "did": 0, "would": [0, 53, 200, 252, 303, 319], "block_sparse_indic": 0, "as_coo_view": 0, "coo_indic": 0, "as_csrc_view": 0, "csr": [0, 205], "cr": 0, "dit": 0, "inner_ndic": 0, "inner": 0, "outer_ndic": 0, "outer": [0, 71], "dense_shap": 0, "int64": [0, 3, 4, 20, 21, 28, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 44, 46, 53, 54, 55, 62, 64, 66, 67, 69, 70, 75, 76, 77, 84, 85, 87, 88, 92, 93, 103, 106, 114, 117, 118, 119, 122, 125, 127, 128, 129, 131, 132, 133, 134, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 167, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 190, 192, 195, 197, 199, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 242, 248, 252, 258, 261, 264, 268, 279, 280, 283, 303, 307, 309, 313, 318, 320, 322, 323, 329, 336, 337], "dens": [0, 218], "ortsparseformat": 0, "enumer": 0, "sparse_coo_from_numpi": 0, "ort_devic": 0, "argument": 0, "d": [0, 9, 52, 58, 205, 218, 253, 304], "homogen": 0, "zero": [0, 27, 39, 46, 48, 49, 61, 74, 85, 86, 95, 100, 117, 142, 181, 186, 205, 227, 228, 229, 231, 232, 253, 257, 268, 269, 285, 286, 300, 315, 316, 335, 340], "linear": [0, 163, 228, 229], "index": [0, 2, 3, 54, 70, 85, 114, 205, 208, 211, 218, 231, 232, 234, 251, 284, 285, 305, 323, 336, 337], "length": [0, 34, 54, 87, 88, 167, 180, 196, 205, 218, 219, 220, 230, 273, 301], "equal": [0, 13, 26, 41, 47, 48, 49, 108, 112, 114, 141, 205, 213, 253, 288, 324, 333, 334, 335, 336, 337, 338, 339], "coordin": [0, 113, 128, 165, 205, 340], "nnz": 0, "exactli": [0, 165], "twice": 0, "describ": [0, 91, 105, 191, 341], "own": 0, "nummpi": 0, "suppor": 0, "numer": [0, 20, 21, 28, 34, 41, 46, 64, 67, 84, 87, 88, 103, 117, 122, 131, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 183, 185, 216, 217, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 245, 320, 322], "primit": 0, "them": [0, 4, 9], "storag": [0, 336], "increment": 0, "count": [0, 39, 75, 76, 137, 171, 172, 197, 205, 211, 230, 288, 323, 333, 338], "decrement": 0, "gc": 0, "doe": [0, 3, 8, 127, 192, 200, 211, 323, 340], "those": 0, "sparse_csr_from_numpi": 0, "inner_indic": 0, "outer_indic": 0, "row": [0, 4, 300, 336], "col": 0, "Its": [0, 205, 219, 228], "gced": 0, "to_cuda": 0, "alreadi": 0, "cross": 0, "present": [0, 26, 41, 47, 48, 49, 112, 114, 141, 190, 205, 227, 234, 251, 281, 284, 288, 333, 334, 335, 336, 337, 338, 339, 340], "arr_on_cpu": 0, "param": 0, "pointer": 0, "anoth": 0, "No": [0, 73, 99, 144, 200, 235, 255], "obtain": 0, "c_ort_devic": 0, "expos": 0, "These": 0, "cannot": [0, 3, 26, 47, 48, 49, 108, 112, 114, 141, 220, 288, 333, 334, 335, 336, 337, 338, 339], "instanti": 0, "thei": [0, 85, 228, 268], "defin": [0, 13, 17, 19, 59, 66, 83, 102, 123, 135, 139, 201, 215, 219, 220, 223, 224, 225, 227, 228, 231, 232, 233, 341], "about": 0, "usual": [0, 341], "facilit": 0, "comparison": [0, 9, 231, 232], "custom_metadata_map": [0, 6], "descript": [0, 6], "domain": [0, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "graph_descript": 0, "host": 0, "graph_nam": [0, 6], "producer_nam": [0, 6, 7], "version": [0, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "definit": [0, 5, 254, 298, 299, 300, 301, 302], "arg": [0, 8, 20, 21], "regular": [0, 4, 319], "perform": [0, 12, 53, 54, 100, 167, 186, 231, 232, 300, 341], "usabl": 0, "verif": 0, "conform": 0, "is_compat": 0, "compat": [0, 301], "unus": [0, 228, 229], "ex": [0, 324], "boolean": [0, 19, 42, 66, 83, 84, 96, 97, 102, 103, 130, 134, 135, 200, 210, 214, 215, 238, 243, 244, 272, 319, 322], "prepar": [0, 2, 211, 323], "readi": 0, "modelproto": [0, 7], "compil": [0, 2], "supports_devic": 0, "check": [0, 272], "test": [0, 4, 7, 9, 27, 34, 60, 85, 87, 88, 167, 268, 335], "suit": 0, "draw": [1, 10], "pipelin": [1, 10, 341], "load": [1, 2, 3, 4, 6, 7, 8, 9, 10], "veri": [1, 4, 8, 10], "simpl": [1, 2, 6, 7, 10], "model": [1, 2, 3, 4, 6, 9, 10, 12, 128, 224, 225, 236, 267, 314, 317], "backend": [1, 10], "train": [1, 3, 6, 10, 205], "convert": [1, 6, 7, 10, 317], "common": [1, 4, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "download": [1, 2, 3, 4, 5, 6, 7, 8, 9], "auto_examples_python": 1, "zip": [1, 211, 323], "jupyt": [1, 2, 3, 4, 5, 6, 7, 8, 9], "notebook": [1, 2, 3, 4, 5, 6, 7, 8, 9], "auto_examples_jupyt": 1, "sphinx": [1, 2, 3, 4, 5, 6, 7, 8, 9], "click": [2, 3, 4, 5, 6, 7, 8, 9], "full": [2, 3, 4, 5, 6, 7, 8, 9], "extend": 2, "api": [2, 12], "run": [2, 3, 4, 5, 6, 7, 8, 9, 27, 60, 93, 106, 170, 181, 236, 267, 300, 314], "logist": [2, 3, 6, 224, 225, 228, 229, 231, 232, 341], "regress": [2, 3, 6, 225, 229, 341], "import": [2, 3, 4, 5, 6, 7, 8, 9, 15, 16, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 46, 48, 50, 51, 54, 57, 61, 64, 70, 80, 82, 85, 86, 87, 88, 90, 96, 110, 117, 121, 130, 141, 142, 164, 166, 167, 179, 181, 183, 187, 188, 193, 194, 197, 200, 203, 205, 210, 211, 253, 264, 268, 283, 290, 304, 322, 323, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 339, 341], "devic": [2, 317], "packag": [2, 7, 85, 268], "wa": [2, 6], "cpu": [2, 317, 341], "dataset": [2, 3, 4, 5, 6, 7, 8, 9, 341], "get_devic": 2, "invalidargu": [2, 3, 4], "get_exampl": [2, 3, 5, 6, 7, 8], "logreg_iri": [2, 3, 6, 9, 341], "rep": 2, "try": [2, 3, 4, 9], "label": [2, 3, 9, 192, 223, 224, 228, 231], "proba": 2, "print": [2, 3, 4, 5, 6, 7, 8, 9, 211, 323, 341], "probabl": [2, 3, 228, 314], "except": [2, 3, 4], "runtimeerror": [2, 3, 4], "onnxruntimeerror": [2, 3, 4], "invalid_argu": [2, 3, 4], "got": [2, 3], "invalid": [2, 3], "input": [2, 3, 4, 5, 7, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "float_input": [2, 3, 4, 9, 341], "expect": [2, 3, 4, 15, 16, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 46, 48, 50, 51, 54, 57, 61, 64, 70, 80, 82, 85, 86, 87, 88, 90, 96, 110, 117, 121, 130, 141, 142, 164, 166, 167, 179, 181, 183, 187, 188, 193, 194, 197, 200, 203, 205, 210, 211, 253, 264, 268, 283, 290, 304, 322, 323, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 339], "pleas": [2, 3, 4, 9, 12, 305, 341], "fix": [2, 3, 118, 119], "without": [2, 48, 326, 334, 341], "framework": [2, 3, 49, 108, 335, 340], "make": [2, 85, 231, 232, 268], "easier": 2, "switch": 2, "multipl": [2, 3, 113, 165, 252, 262, 303, 318, 321], "same": [2, 3, 9, 39, 85, 94, 99, 144, 216, 217, 219, 220, 222, 223, 228, 230, 231, 232, 234, 235, 251, 253, 255, 284, 299, 300, 304], "total": [2, 3, 4, 5, 6, 7, 8, 9, 10, 218, 225, 232, 273, 301, 341], "script": [2, 3, 4, 5, 6, 7, 8, 9, 85, 268], "minut": [2, 3, 4, 5, 6, 7, 8, 9], "010": [2, 10], "second": [2, 3, 4, 5, 6, 7, 8, 9, 39, 228, 230], "plot_backend": [2, 10], "py": [2, 3, 4, 5, 6, 7, 8, 9, 10, 341], "ipynb": [2, 3, 4, 5, 6, 7, 8, 9], "galleri": [2, 3, 4, 5, 6, 7, 8, 9, 12], "look": [3, 4, 7, 9], "situat": 3, "rais": 3, "instead": [3, 4, 85, 268], "step": [3, 4, 9, 167], "favorit": 3, "iri": [3, 9, 341], "take": [3, 4, 26, 41, 42, 47, 48, 49, 108, 112, 114, 141, 211, 213, 288, 323, 324, 333, 334, 335, 336, 337, 338, 339], "vector": [3, 4, 5, 205, 224, 225, 229, 283, 324, 340], "class": [3, 63, 224, 228, 229, 231, 232], "among": 3, "three": [3, 85, 137, 268, 283], "rt": [3, 4, 5, 6, 8, 9, 341], "example2": 3, "inferencesess": [3, 4, 5, 6, 8, 9, 341], "get_available_provid": [3, 4, 5, 6, 8, 9, 341], "bad": 3, "handl": 3, "kind": [3, 231, 232], "5": [3, 5, 7, 8, 9, 15, 16, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 39, 41, 48, 50, 51, 60, 61, 64, 70, 80, 82, 85, 88, 89, 90, 110, 128, 130, 164, 166, 167, 179, 181, 183, 187, 188, 193, 194, 197, 203, 205, 210, 236, 238, 243, 253, 256, 264, 268, 283, 284, 288, 292, 294, 295, 302, 304, 315, 322, 325, 326, 327, 328, 329, 333, 334, 335, 336, 337, 338], "6": [3, 7, 8, 30, 31, 32, 33, 41, 46, 48, 61, 73, 80, 82, 85, 96, 99, 110, 130, 144, 164, 179, 197, 200, 205, 210, 235, 255, 264, 268, 286, 322, 325, 326, 327, 328, 329, 333, 334, 335, 336, 337], "float64": [3, 70], "unexpect": [3, 4], "data": [3, 4, 9, 20, 21, 28, 34, 35, 38, 39, 48, 60, 62, 70, 75, 76, 77, 81, 87, 88, 106, 108, 110, 117, 121, 125, 128, 137, 142, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 171, 172, 173, 177, 182, 189, 190, 197, 199, 209, 212, 238, 240, 243, 244, 254, 256, 264, 274, 275, 283, 294, 308, 332, 341], "doubl": [3, 4, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 258, 260, 261, 262, 264, 265, 268, 270, 271, 272, 279, 281, 283, 306, 307, 312, 313, 318, 320, 321, 322, 323, 333, 334, 335, 336, 337], "output": [3, 4, 5, 7, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "misspel": 3, "option": [3, 8, 13, 27, 28, 42, 46, 47, 48, 49, 54, 56, 60, 62, 63, 70, 73, 79, 96, 99, 100, 106, 110, 114, 125, 127, 128, 131, 133, 134, 141, 143, 144, 145, 146, 147, 148, 164, 167, 170, 177, 178, 179, 186, 190, 192, 196, 197, 210, 211, 234, 235, 236, 238, 242, 243, 244, 248, 250, 251, 253, 255, 256, 257, 259, 260, 261, 266, 267, 275, 277, 278, 281, 283, 284, 285, 286, 287, 288, 290, 292, 293, 294, 295, 296, 298, 299, 300, 302, 304, 307, 314, 315, 316, 317, 319, 320, 322, 326, 334, 335, 336, 337, 338, 339, 340, 341], "9505997896194458": 3, "027834143489599228": 3, "021566055715084076": 3, "9974970817565918": 3, "6270167988259345e": 3, "05": [3, 9], "0024466365575790405": 3, "9997311234474182": 3, "787709464906584e": 3, "07": 3, "0002686927327886224": 3, "goe": 3, "necessarili": 3, "r": [3, 8, 39, 44, 71, 73, 75, 76, 99, 144, 171, 172, 211, 235, 255], "rank": [3, 39, 44, 71, 76, 100, 137, 172, 186, 197, 211, 262, 300], "higher": [3, 240, 314, 340], "009": [3, 5, 10], "plot_common_error": [3, 10], "demonstr": [4, 5, 7, 9], "scikit": [4, 6, 9, 341], "learn": [4, 5, 6, 9, 205, 341], "dictvector": [4, 13], "dummi": 4, "panda": [4, 9], "sklearn": [4, 6, 9, 341], "make_regress": 4, "model_select": [4, 9, 341], "train_test_split": [4, 9, 341], "1000": [4, 85, 268, 304], "n_target": [4, 232], "x_train": [4, 9, 341], "x_test": [4, 9, 341], "y_train": [4, 9, 341], "y_test": [4, 9, 341], "x_train_dict": 4, "datafram": [4, 9], "to_dict": 4, "x_test_dict": 4, "we": [4, 7, 8, 9, 28, 125, 145, 146, 147, 148, 197, 205, 211, 238, 243, 244, 314, 323, 341], "ensembl": [4, 9], "gradientboostingregressor": 4, "feature_extract": 4, "make_pipelin": 4, "pipe": 4, "fit": [4, 9, 341], "x27": 4, "rerun": [4, 9], "cell": [4, 9, 73, 99, 144, 235, 255], "show": [4, 5, 8, 9], "html": [4, 9, 305, 319, 341], "trust": [4, 9], "github": [4, 5, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "unabl": [4, 9], "render": [4, 9], "page": [4, 9], "nbviewer": [4, 9], "org": [4, 9, 319, 341], "pipelinepipelin": 4, "dictvectorizerdictvector": 4, "gradientboostingregressorgradientboostingregressor": 4, "confus": [4, 9], "matrix": [4, 9, 205, 210, 252, 254, 298, 299, 300, 301, 302, 303, 305, 322], "metric": [4, 9, 245], "r2_score": 4, "pred": [4, 9], "8599498054540328": 4, "modul": [4, 9, 314, 341], "skl2onnx": [4, 9, 341], "convert_sklearn": [4, 9, 341], "dictionarytyp": 4, "floattensortyp": [4, 9, 341], "int64tensortyp": 4, "sequencetyp": 4, "initial_typ": [4, 9, 341], "onx": [4, 9, 341], "target_opset": 4, "17": [4, 13, 41, 48, 197, 205, 298, 325, 326, 329, 333, 334, 335, 336], "open": [4, 7, 8, 9, 12, 341], "pipeline_vector": 4, "wb": [4, 9, 341], "f": [4, 8, 9, 73, 99, 144, 230, 235, 254, 255, 283, 300, 301, 305, 341], "write": [4, 9, 341], "serializetostr": [4, 8, 9, 341], "inp": 4, "out": [4, 13, 85, 93, 268], "variabl": [4, 170], "could": [4, 300], "do": [4, 6, 9, 44, 85, 122, 208, 224, 231, 232, 262, 268, 318, 321], "pred_onx": [4, 9, 341], "seq": [4, 44, 118, 119, 132, 133, 134, 175, 176, 177, 178, 179, 180, 181, 197, 233], "But": 4, "observ": 4, "ones": [4, 46, 70], "9999999999999557": 4, "explain": 4, "small": 4, "discrep": 4, "093": [4, 10], "plot_convert_pipeline_vector": [4, 10], "retriev": [5, 9, 208], "test_sigmoid": 5, "example1": [5, 7, 8], "sigmoid": [5, 13, 228, 229], "input_shap": [5, 48, 141, 325, 329, 333, 334, 336, 339], "input_typ": 5, "output_shap": [5, 48, 49, 114, 141, 325, 329, 333, 334, 335, 336, 337, 339, 340], "output_typ": 5, "machin": [5, 9, 341], "random": [5, 9, 15, 16, 22, 23, 24, 25, 28, 39, 50, 51, 60, 64, 70, 80, 82, 86, 90, 125, 130, 145, 146, 147, 148, 181, 187, 188, 193, 194, 203, 210, 238, 243, 244, 283, 322, 325, 327, 328, 329, 333, 336], "astyp": [5, 9, 15, 16, 22, 23, 24, 25, 28, 29, 39, 41, 46, 48, 50, 51, 54, 57, 61, 80, 82, 86, 90, 117, 130, 166, 167, 179, 181, 187, 188, 193, 194, 197, 200, 203, 205, 210, 253, 283, 304, 322, 325, 326, 327, 328, 329, 333, 334, 335, 336, 341], "6896524": 5, "55375993": 5, "5679685": 5, "6854069": 5, "72843695": 5, "63964295": 5, "5631109": 5, "60380673": 5, "5369947": 5, "5720621": 5, "5982042": 5, "5107325": 5, "6660489": 5, "70920724": 5, "69003993": 5, "68470776": 5, "5456246": 5, "5927677": 5, "5800055": 5, "69838023": 5, "6133649": 5, "5953286": 5, "57312334": 5, "64011586": 5, "7229831": 5, "6363889": 5, "6689142": 5, "6759893": 5, "71769476": 5, "5567605": 5, "51593226": 5, "54153335": 5, "6512749": 5, "5049564": 5, "67835265": 5, "543447": 5, "6293069": 5, "61138153": 5, "72170675": 5, "6678998": 5, "68969023": 5, "6893969": 5, "61044204": 5, "67073345": 5, "64968336": 5, "71517783": 5, "62337285": 5, "7105763": 5, "7014016": 5, "53779906": 5, "6941286": 5, "6580804": 5, "72896874": 5, "71837354": 5, "6353168": 5, "53081554": 5, "6585707": 5, "5798434": 5, "68991786": 5, "5455835": 5, "plot_load_and_predict": [5, 10], "relat": 6, "deploi": 6, "product": [6, 78, 261, 262, 286, 318, 321], "keep": [6, 20, 21, 85, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 197, 294, 308, 314], "track": 6, "doc_str": 6, "ir_vers": [6, 7, 8], "metadata_prop": 6, "model_vers": 6, "producer_vers": 6, "onnxml": 6, "onnxmltool": [6, 341], "0116": 6, "With": 6, "meta": 6, "3c59201b940f410fa29dc71ea9d5767d": 6, "006": [6, 10], "plot_metadata": [6, 10], "There": [7, 231, 232, 341], "That": 7, "most": [7, 91, 105, 191, 314], "mul_1": [7, 8], "protobuf": 7, "messag": 7, "chenta": 7, "w": [7, 47, 48, 49, 54, 73, 85, 99, 141, 144, 167, 181, 235, 248, 252, 255, 260, 266, 268, 273, 281, 290, 301, 303, 324, 326, 334, 335, 339, 340], "op_typ": 7, "mul": [7, 13], "dim": [7, 39, 262, 296], "float_data": 7, "tensor_typ": 7, "elem_typ": 7, "dim_valu": 7, "opset_import": [7, 8, 332], "7": [7, 8, 13, 39, 41, 48, 80, 82, 85, 96, 110, 141, 164, 166, 179, 197, 205, 210, 234, 251, 257, 264, 267, 268, 275, 287, 290, 293, 322, 325, 326, 327, 328, 329, 333, 334, 335, 336, 337, 339], "net_draw": 7, "befor": [7, 8, 42, 211, 236, 262, 267, 314, 318, 321], "rb": [7, 8], "fid": 7, "read": 7, "parsefromstr": 7, "tool": [7, 341], "getopnodeproduc": 7, "getpydotgraph": 7, "pydot_graph": 7, "rankdir": 7, "lr": 7, "node_produc": 7, "docstr": 7, "write_dot": 7, "dot": 7, "Then": [7, 9], "imag": [7, 41, 54, 124, 165, 167], "o": [7, 132, 133, 134], "system": 7, "tpng": 7, "displai": 7, "matplotlib": [7, 9], "pyplot": 7, "plt": 7, "imread": 7, "png": 7, "imshow": 7, "axesimag": 7, "0x7f543d0f5ae0": 7, "380": [7, 10], "plot_pipelin": [7, 10], "interpret": 8, "def": [8, 9], "change_ir_vers": 8, "opset": [8, 296], "11": [8, 13, 41, 48, 85, 110, 164, 268, 325, 326, 329, 335], "onnx_model": 8, "onnx_model_str": 8, "9": [8, 9, 13, 39, 41, 48, 61, 80, 82, 85, 110, 141, 164, 166, 179, 197, 210, 257, 268, 284, 286, 290, 314, 322, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 339, 340], "16": [8, 9, 13, 29, 41, 48, 117, 167, 197, 274, 325, 326, 329, 333, 334, 335, 336], "25": [8, 9, 41, 87, 141, 290, 325, 326, 329, 333, 334, 335, 336, 339], "36": [8, 41, 205, 335], "sessionopt": 8, "sess_profil": 8, "prof_fil": 8, "onnxruntime_profile__2023": 8, "03": 8, "14_12": 8, "02": 8, "33": [8, 41, 326, 334, 335], "json": 8, "un": 8, "what": [8, 9, 231, 232], "sess_tim": 8, "pprint": [8, 9], "cat": 8, "dur": 8, "285": 8, "model_loading_arrai": 8, "ph": 8, "pid": 8, "7616": 8, "tid": [8, 280], "419": 8, "session_initi": 8, "327": [8, 335], "011": [8, 10], "plot_profil": [8, 10], "datset": 9, "load_iri": [9, 341], "linear_model": [9, 341], "logisticregress": [9, 341], "clr": [9, 341], "logisticregressionlogisticregress": 9, "confusion_matrix": 9, "13": [9, 41, 85, 141, 164, 197, 253, 268, 290, 325, 326, 329, 333, 334, 335, 336, 337, 339], "8": [9, 13, 29, 39, 41, 48, 56, 57, 61, 80, 82, 85, 96, 99, 110, 117, 141, 142, 143, 164, 166, 167, 179, 197, 205, 210, 253, 255, 256, 268, 275, 277, 278, 279, 286, 287, 288, 289, 290, 292, 293, 294, 295, 297, 302, 304, 308, 322, 325, 326, 327, 328, 329, 333, 334, 335, 336, 337, 338, 339, 340], "output_label": 9, "label_nam": [9, 341], "perfectli": 9, "ident": [9, 13, 181, 205], "relev": [9, 236, 267, 314], "roc": 9, "curv": 9, "prob_sklearn": 9, "predict_proba": 9, "03091501": 9, "911754": 9, "05733099": 9, "03153825": 9, "91233298": 9, "05612877": 9, "01576819": 9, "87124858": 9, "11298323": 9, "And": [9, 13], "probabili": 9, "appear": [9, 319], "prob_nam": 9, "prob_rt": 9, "030914992094039917": 9, "9117540717124939": 9, "05733095481991768": 9, "03153826296329498": 9, "9123330116271973": 9, "056128744035959244": 9, "015768177807331085": 9, "8712484836578369": 9, "11298327893018723": 9, "timeit": 9, "speed": 9, "inst": 9, "repeat": [9, 39, 236, 267, 314], "global": [9, 273, 298, 301], "raw": [9, 228], "av": 9, "sum": [9, 13, 53, 98, 127, 192, 232, 326], "len": [9, 179, 190, 211, 323], "mi": 9, "ma": 9, "min": [9, 13, 40, 61, 232], "max": [9, 13, 40, 61, 63, 82, 165, 226, 232, 309, 328, 329, 336], "averag": [9, 232], "3g": 9, "000131": 9, "000114": 9, "000173": 9, "11e": 9, "74e": 9, "25e": 9, "105488001892809e": 9, "webservic": 9, "experi": 9, "oppos": 9, "batch": [9, 27, 54, 164, 262, 314, 341], "loop": [9, 13, 170, 236, 267, 314], "fct": 9, "n": [9, 58, 85, 93, 106, 170, 181, 205, 219, 222, 224, 228, 229, 230, 268], "nrow": 9, "rang": [9, 13, 39, 44, 71, 73, 75, 76, 80, 82, 99, 117, 144, 167, 171, 172, 181, 197, 211, 235, 255, 327, 328], "im": 9, "50": [9, 41, 110, 304, 335], "sess_predict": 9, "0034": 9, "00333": 9, "00361": 9, "000757": 9, "000679": 9, "00121": 9, "0007573627199963085": 9, "sess_predict_proba": 9, "00473": 9, "00466": 9, "00486": 9, "000765": 9, "000735": 9, "000878": 9, "000764525760023389": 9, "better": [9, 300], "save": 9, "randomforestclassifi": 9, "rf": 9, "n_estim": 9, "rf_iri": 9, "sess_predict_proba_rf": 9, "0611": 9, "0547": 9, "0859": 9, "000962": 9, "000652": 9, "00138": 9, "0009623120800097241": 9, "tree": [9, 231, 232], "measur": 9, "n_tree": 9, "51": [9, 41, 142, 326, 334, 335], "rf_iris_": 9, "sess_predict_proba_loop": 9, "tsk": 9, "trt": [9, 63, 124, 140], "df": 9, "ax": [9, 39, 62, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 190, 199, 209, 212, 283, 294, 308], "plot": 9, "blue": 9, "logi": 9, "green": 9, "set_xlabel": 9, "set_ylabel": 9, "set_titl": 9, "nfor": 9, "forest": 9, "legend": 9, "0189": 9, "0181": 9, "0204": 9, "000669": 9, "000349": 9, "00102": 9, "025": 9, "023": 9, "0297": 9, "000307": 9, "000295": 9, "000325": 9, "15": [9, 13, 39, 41, 48, 85, 141, 164, 197, 268, 290, 325, 326, 329, 333, 334, 335, 336, 337, 339], "0416": 9, "0341": 9, "0488": 9, "000391": 9, "000369": 9, "000415": 9, "20": [9, 39, 41, 181, 298, 304, 325, 326, 329, 333, 334, 335, 336], "0528": 9, "0447": 9, "0702": 9, "000365": 9, "000333": 9, "000403": 9, "0607": 9, "0541": 9, "000374": 9, "000328": 9, "0005": 9, "30": [9, 41, 181, 325, 326, 329, 333, 334, 335, 336], "259": 9, "0678": 9, "466": 9, "000384": 9, "000329": 9, "000411": 9, "35": [9, 41, 335], "111": [9, 41, 326, 334, 335], "0909": 9, "151": [9, 142], "00223": 9, "0015": 9, "00307": 9, "40": [9, 41, 141, 181, 290, 335, 339], "254": [9, 142, 253, 304], "147": [9, 335], "524": 9, "000848": 9, "000641": 9, "00124": 9, "45": [9, 41, 335], "134": [9, 141, 290, 335, 339], "153": [9, 61, 141, 290, 326, 334, 339], "000322": 9, "000312": 9, "00034": 9, "124": [9, 141, 290, 326, 334, 339], "106": [9, 41, 335], "141": [9, 141, 290, 326, 334, 335, 339], "000421": 9, "000504": 9, "0x7f54091ca380": 9, "26": [9, 10, 41, 142, 326, 334, 335], "936": [9, 10], "plot_train_convert_predict": [9, 10], "00": 10, "31": [10, 41, 325, 326, 329, 333, 334, 335, 336], "454": 10, "auto_exampl": 10, "mb": 10, "04": 10, "focus": 12, "score": [12, 63, 128, 192, 224, 228, 229, 231, 232, 236, 280], "engin": 12, "neural": 12, "network": 12, "exchang": 12, "aka": 12, "m": [12, 13, 54, 106, 167, 170, 181, 234, 235, 236, 251, 269, 276, 278, 310, 311], "tutori": 12, "ai": 13, "ml": 13, "com": [13, 211], "microsoft": 13, "nchwc": 13, "intern": 13, "nhwc": [13, 288], "ab": [13, 194], "aco": 13, "acosh": 13, "add": [13, 26, 47, 49, 108, 112, 181, 288, 314, 325, 329, 333, 335, 336, 338, 340], "affin": 13, "argmax": 13, "argmin": 13, "asin": 13, "asinh": 13, "atan": 13, "atanh": 13, "averagepool": 13, "batchnorm": 13, "bernoulli": 13, "bitshift": 13, "bitwiseand": 13, "18": [13, 141, 197, 290, 325, 326, 329, 333, 334, 335, 336, 339], "bitwisenot": 13, "bitwiseor": 13, "bitwisexor": 13, "blackmanwindow": 13, "cast": [13, 36], "castlik": 13, "ceil": [13, 48, 141, 165, 288, 333, 334, 336, 338, 339], "celu": 13, "12": [13, 41, 48, 85, 110, 141, 164, 179, 197, 268, 290, 325, 326, 329, 333, 334, 335, 336, 339], "centercroppad": 13, "clip": [13, 61, 73, 99, 144, 235, 255], "col2im": 13, "compress": 13, "concat": [13, 44, 289], "concatfromsequ": 13, "constant": [13, 137, 283, 325, 329, 333, 336], "constantofshap": 13, "conv": [13, 324], "convinteg": 13, "convtranspos": 13, "co": [13, 34, 87, 88, 167], "cosh": 13, "crop": [13, 39], "cumsum": 13, "dft": 13, "depthtospac": 13, "dequantizelinear": 13, "det": 13, "disentangledattention_trt": 13, "div": 13, "dropout": 13, "dynamicquantizelinear": 13, "dynamicslic": 13, "efficientnms_trt": 13, "einsum": 13, "elu": 13, "erf": 13, "exp": [13, 38, 121, 193], "expand": [13, 212], "eyelik": 13, "flatten": [13, 42, 211], "floor": [13, 54, 167, 288, 333, 336, 338], "gru": 13, "gruunit": 13, "gather": [13, 76], "gatherel": 13, "gathernd": 13, "gemm": 13, "giventensorfil": 13, "globalaveragepool": 13, "globallppool": 13, "globalmaxpool": 13, "greater": [13, 26, 41, 47, 48, 49, 108, 112, 114, 141, 213, 217, 288, 333, 334, 335, 336, 337, 338, 339], "greaterorequ": 13, "gridsampl": 13, "groupnorm": 13, "hammingwindow": 13, "hannwindow": 13, "hardsigmoid": 13, "hardswish": 13, "14": [13, 41, 85, 164, 197, 235, 268, 325, 326, 329, 333, 334, 335, 336], "hardmax": 13, "imagescal": 13, "instancenorm": 13, "isinf": 13, "isnan": 13, "lrn": 13, "lstm": [13, 73, 144, 235, 255], "layernorm": 13, "leakyrelu": [13, 99, 144, 235, 255], "less": [13, 340], "lessorequ": 13, "logsoftmax": 13, "lpnormal": 13, "lppool": 13, "matmul": 13, "matmulinteg": 13, "maxpool": 13, "maxroipool": 13, "maxunpool": 13, "meanvariancenorm": 13, "melweightmatrix": 13, "memcpyfromhost": 13, "memcpytohost": 13, "mish": 13, "mod": 13, "multilevelcropandresize_trt": 13, "multinomi": [13, 224], "neg": [13, 39, 75, 76, 96, 171, 172, 197, 199, 211, 212], "negativeloglikelihoodloss": 13, "nonmaxsuppress": 13, "nonzero": [13, 27, 60], "Not": 13, "onehot": 13, "optionalgetel": 13, "optionalhasel": 13, "Or": 13, "prelu": 13, "pad": [13, 26, 39, 41, 47, 48, 49, 85, 108, 112, 114, 141, 236, 248, 260, 267, 268, 276, 281, 282, 288, 290, 314, 319, 325, 326, 329, 333, 334, 335, 336, 337, 338, 339, 340], "parametricsoftplu": 13, "pow": 13, "pyramidroialign_trt": 13, "qlinearconv": 13, "qlinearmatmul": 13, "quantizelinear": 13, "rnn": [13, 73, 99, 235, 255], "randomnorm": 13, "randomnormallik": 13, "randomuniform": 13, "randomuniformlik": 13, "reciproc": 13, "reducel1": 13, "reducel2": 13, "reducelogsum": 13, "reducelogsumexp": 13, "reducemax": 13, "reducemean": 13, "reducemin": 13, "reduceprod": 13, "reducesum": 13, "reducesumsquar": 13, "relu": 13, "reshap": [13, 48, 54, 57, 61, 141, 167, 197, 200, 253, 290, 304, 325, 333, 339], "resiz": 13, "reversesequ": 13, "roialign": 13, "round": [13, 61], "stft": 13, "scale": [13, 27, 52, 58, 61, 73, 86, 94, 95, 98, 99, 100, 113, 144, 145, 146, 163, 165, 169, 186, 205, 213, 230, 234, 235, 251, 253, 254, 255, 278, 284, 286, 289, 297, 298, 299, 300, 301, 302, 305, 332, 341], "scaledtanh": 13, "scan": 13, "scatter": [13, 172], "scatterel": 13, "scatternd": 13, "selu": 13, "sequenceat": 13, "sequenceconstruct": 13, "sequenceempti": 13, "sequenceeras": 13, "sequenceinsert": 13, "sequencelength": 13, "sequencemap": 13, "shrink": 13, "sign": [13, 277, 279, 287, 289, 291, 293, 294, 296, 297], "simplifiedlayernorm": 13, "sin": 13, "sinh": 13, "slice": [13, 42], "softmax": [13, 224, 225, 228, 229, 231, 232, 240, 296], "softmaxcrossentropyloss": 13, "softplu": 13, "softsign": 13, "spacetodepth": 13, "split": [13, 48, 141, 197, 231, 232, 333, 334, 339], "splittosequ": 13, "sqrt": [13, 58, 234, 251, 278, 284], "squeez": 13, "stringnorm": 13, "sub": 13, "tan": 13, "tanh": [13, 121, 144], "tfidfvector": 13, "thresholdedrelu": 13, "tile": 13, "topk": 13, "transpos": [13, 78, 261, 262, 286, 318, 321], "trilu": 13, "uniqu": 13, "unsqueez": 13, "upsampl": 13, "xor": 13, "arrayfeatureextractor": 13, "binar": 13, "castmap": 13, "categorymapp": 13, "featurevector": 13, "imput": 13, "labelencod": 13, "linearclassifi": 13, "linearregressor": 13, "normal": [13, 27, 100, 107, 116, 128, 145, 146, 186, 269, 271, 300, 312], "onehotencod": 13, "svmclassifi": 13, "svmregressor": 13, "scaler": 13, "treeensembleclassifi": 13, "treeensembleregressor": 13, "zipmap": 13, "attent": [13, 58, 250, 251, 263, 273, 278, 284, 298, 301], "attnlstm": 13, "beamsearch": 13, "biasadd": 13, "biasdropout": 13, "biasgelu": 13, "biassoftmax": 13, "biassplitgelu": 13, "bifurcationdetector": 13, "bitmaskbiasdropout": 13, "bitmaskdropout": 13, "cdist": 13, "complexmul": 13, "complexmulconj": 13, "convtransposewithdynamicpad": 13, "cropandres": 13, "decoderattent": 13, "decodermaskedmultiheadattent": 13, "dequantizebfp": 13, "dequantizewithord": 13, "dynamicquantizelstm": 13, "dynamicquantizematmul": 13, "embedlayernorm": 13, "expanddim": 13, "fastgelu": 13, "fusedconv": 13, "fusedgemm": 13, "fusedmatmul": 13, "gatedrelativepositionbia": 13, "gelu": 13, "gemmfastgelu": 13, "greedysearch": 13, "invers": [13, 54, 205], "irfft": 13, "isallfinit": 13, "longformerattent": 13, "matmulinteger16": 13, "matmulintegertofloat": 13, "maxpoolwithmask": 13, "mulinteg": 13, "multiheadattent": 13, "murmurhash3": 13, "ngramrepeatblock": 13, "nhwcconv": 13, "nhwcmaxpool": 13, "qattent": 13, "qembedlayernorm": 13, "qgemm": 13, "qlinearadd": 13, "qlinearaveragepool": 13, "qlinearconcat": 13, "qlinearglobalaveragepool": 13, "qlinearleakyrelu": 13, "qlinearmul": 13, "qlinearreducemean": 13, "qlinearsigmoid": 13, "qlinearsoftmax": 13, "qlinearwher": 13, "qorderedattent": 13, "qorderedgelu": 13, "qorderedlayernorm": 13, "qorderedlongformerattent": 13, "qorderedmatmul": 13, "quantizebfp": [13, 252], "quantizewithord": [13, 254, 298, 299, 300, 301, 302], "quickgelu": 13, "reducesuminteg": 13, "relativepositionbia": 13, "removepad": 13, "restorepad": 13, "rfft": [13, 54, 167], "sampleop": 13, "sampl": [13, 85, 125, 127, 165, 181, 268], "skiplayernorm": 13, "skipsimplifiedlayernorm": 13, "snpe": 13, "sparsetodensematmul": 13, "token": [13, 234, 236, 242, 267, 284, 298, 314], "torchembed": 13, "transposematmul": 13, "wordconvembed": 13, "reorderinput": 13, "reorderoutput": 13, "qlinearconvtranspos": 13, "since_vers": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "support_level": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "supporttyp": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "been": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "summari": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "attribut": [14, 17, 18, 19, 20, 21, 26, 27, 28, 29, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 58, 59, 60, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 83, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 177, 181, 183, 184, 186, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 260, 261, 262, 263, 267, 268, 269, 271, 272, 273, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "consumed_input": [14, 17, 27, 37, 40, 59, 60, 65, 68, 72, 89, 95, 101, 104, 111, 115, 120, 123, 126, 136, 150, 161, 162, 174, 184, 198, 201, 202, 204], "legaci": [14, 17, 27, 37, 40, 59, 60, 65, 68, 72, 89, 95, 101, 104, 108, 111, 115, 120, 123, 126, 136, 150, 161, 162, 174, 184, 198, 201, 202, 204], "heterogen": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "constraint": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "float16": [14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 234, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 278, 281, 283, 284, 300, 301, 303, 304, 305, 306, 309, 310, 311, 312, 313, 315, 316, 320, 321, 322, 323, 333, 334, 335, 336, 337], "helper": [15, 16, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 46, 48, 50, 51, 54, 57, 61, 64, 70, 80, 82, 85, 86, 87, 88, 90, 96, 110, 117, 121, 130, 141, 142, 164, 166, 167, 179, 181, 183, 187, 188, 193, 194, 197, 200, 203, 205, 210, 211, 253, 264, 268, 283, 290, 304, 322, 323, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 339], "make_nod": [15, 16, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 46, 48, 50, 51, 54, 57, 61, 64, 70, 80, 82, 85, 86, 87, 88, 90, 96, 110, 117, 121, 130, 141, 142, 164, 166, 167, 179, 181, 183, 187, 188, 193, 194, 197, 200, 203, 210, 211, 253, 264, 268, 283, 290, 304, 322, 323, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 339], "arcco": 15, "test_acos_exampl": 15, "rand": [15, 22], "test_aco": 15, "arccosh": 16, "99322295": 16, "65745449": 16, "test_acosh_exampl": 16, "uniform": [16, 25, 28, 181], "test_acosh": 16, "axi": [17, 19, 20, 21, 26, 39, 41, 42, 43, 44, 47, 48, 49, 53, 54, 59, 66, 71, 75, 76, 80, 82, 83, 91, 100, 102, 105, 107, 108, 112, 114, 123, 131, 135, 137, 139, 141, 164, 167, 171, 172, 186, 190, 191, 196, 197, 201, 207, 208, 211, 215, 240, 253, 258, 281, 283, 288, 289, 296, 300, 304, 323, 325, 327, 328, 329, 333, 334, 335, 336, 337, 338, 339, 340], "broadcast": [17, 19, 59, 66, 78, 83, 102, 123, 135, 139, 201, 215, 240], "doc": [17, 49, 59, 123, 139, 201, 305, 335, 340], "detail": [17, 49, 59, 123, 139, 201, 335, 340, 341], "pass": [17, 59, 74, 123, 139, 201], "b": [17, 19, 27, 30, 32, 33, 47, 49, 59, 66, 73, 78, 83, 84, 93, 95, 99, 100, 102, 103, 106, 109, 110, 122, 123, 134, 135, 141, 142, 144, 201, 214, 215, 235, 239, 245, 246, 247, 248, 250, 255, 256, 260, 261, 262, 274, 275, 277, 281, 286, 287, 290, 293, 297, 300, 302, 318, 319, 321, 324, 326, 334, 335, 339, 340], "alpha": [18, 38, 65, 78, 89, 98, 99, 101, 138, 144, 169, 174, 206, 235, 255, 261, 262, 286, 292, 306, 318, 321], "beta": [18, 78, 89, 98, 138, 169, 257, 261, 269, 315], "t1": [19, 28, 34, 35, 36, 42, 46, 48, 54, 61, 66, 70, 73, 83, 84, 85, 87, 88, 96, 97, 99, 102, 103, 110, 114, 117, 125, 131, 135, 141, 142, 143, 144, 146, 148, 165, 167, 182, 189, 205, 207, 215, 218, 219, 220, 221, 223, 224, 228, 231, 235, 238, 243, 244, 249, 252, 253, 255, 256, 257, 268, 274, 275, 277, 279, 284, 285, 290, 303, 304, 308, 318, 324, 337, 339, 340], "bool": [19, 28, 35, 36, 39, 41, 42, 44, 46, 55, 62, 66, 69, 70, 74, 75, 76, 77, 83, 84, 85, 92, 93, 96, 97, 102, 103, 106, 118, 119, 129, 130, 131, 132, 133, 134, 135, 146, 148, 163, 164, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 189, 190, 195, 197, 199, 209, 210, 211, 212, 213, 214, 215, 238, 243, 244, 250, 258, 264, 268, 272, 297, 320, 322, 323], "keepdim": [20, 21, 80, 82, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 197, 294, 308, 327, 328], "reduc": [20, 21, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 294, 308], "int16": [20, 21, 28, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 44, 46, 55, 62, 64, 67, 69, 70, 75, 76, 77, 84, 85, 87, 88, 92, 93, 103, 106, 117, 118, 119, 122, 129, 131, 132, 133, 134, 146, 148, 149, 163, 164, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 190, 195, 197, 199, 209, 210, 211, 212, 214, 258, 264, 268, 274, 307, 320, 322, 323], "int32": [20, 21, 28, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 44, 46, 48, 53, 54, 55, 56, 62, 63, 64, 66, 67, 69, 70, 73, 75, 76, 77, 84, 85, 87, 88, 92, 93, 99, 103, 106, 110, 117, 118, 119, 122, 125, 127, 129, 131, 132, 133, 134, 141, 143, 144, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 167, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 190, 192, 195, 197, 199, 205, 209, 210, 211, 212, 213, 214, 216, 217, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 249, 251, 255, 257, 258, 261, 264, 267, 268, 273, 274, 276, 277, 278, 279, 283, 284, 285, 286, 290, 298, 301, 307, 308, 310, 311, 313, 314, 318, 320, 322, 323, 324, 339, 340], "int8": [20, 21, 28, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 44, 46, 48, 55, 56, 62, 64, 67, 69, 70, 75, 76, 77, 84, 85, 87, 88, 92, 93, 103, 106, 110, 117, 118, 119, 122, 129, 131, 132, 133, 134, 141, 142, 143, 146, 148, 163, 164, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 190, 195, 197, 199, 209, 210, 211, 212, 214, 253, 254, 255, 256, 258, 264, 268, 275, 277, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 308, 320, 322, 323, 338, 339, 340], "uint16": [20, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 44, 46, 55, 62, 64, 67, 69, 70, 75, 76, 77, 84, 85, 87, 88, 92, 93, 103, 106, 117, 118, 119, 122, 129, 131, 132, 133, 134, 146, 148, 163, 164, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 190, 195, 197, 199, 209, 210, 211, 212, 214, 258, 264, 268, 274, 317, 320, 322, 323], "uint32": [20, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 44, 46, 53, 55, 62, 64, 67, 69, 70, 75, 76, 77, 84, 85, 87, 88, 92, 93, 103, 106, 117, 118, 119, 122, 129, 131, 132, 133, 134, 146, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 190, 195, 197, 199, 209, 210, 211, 212, 214, 243, 244, 258, 261, 264, 268, 274, 279, 308, 313, 318, 320, 322, 323], "uint64": [20, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 44, 46, 53, 55, 62, 64, 67, 69, 70, 75, 76, 77, 84, 85, 87, 88, 92, 93, 103, 106, 117, 118, 119, 122, 129, 131, 132, 133, 134, 146, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 190, 195, 197, 199, 209, 210, 211, 212, 214, 252, 258, 261, 264, 268, 279, 303, 313, 318, 320, 322, 323], "uint8": [20, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 44, 46, 48, 55, 56, 61, 62, 64, 67, 69, 70, 75, 76, 77, 84, 85, 87, 88, 92, 93, 103, 106, 110, 117, 118, 119, 122, 129, 131, 132, 133, 134, 141, 142, 143, 146, 148, 163, 164, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 190, 195, 197, 199, 209, 210, 211, 212, 214, 252, 253, 255, 256, 258, 264, 268, 275, 277, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 303, 304, 308, 317, 320, 322, 323, 329, 336, 338, 339, 340], "arcsin": 22, "test_asin_exampl": 22, "test_asin": 22, "arcsinh": 23, "88137358": 23, "test_asinh_exampl": 23, "randn": [23, 24, 39, 50, 51, 64, 80, 82, 86, 90, 130, 187, 188, 193, 194, 203, 283, 325, 327, 328, 329, 333, 336], "test_asinh": 23, "arctan": 24, "test_atan_exampl": 24, "test_atan": 24, "arctanh": 25, "54930615": 25, "test_atanh_exampl": 25, "test_atanh": 25, "auto_pad": [26, 47, 48, 49, 108, 112, 114, 141, 248, 260, 276, 281, 282, 288, 290, 325, 326, 329, 333, 334, 335, 336, 337, 338, 339, 340], "notset": [26, 47, 48, 49, 108, 112, 141, 288, 333, 334, 335, 336, 338, 339, 340], "same_upp": [26, 47, 48, 49, 108, 112, 141, 288, 325, 329, 333, 334, 335, 336, 338, 339, 340], "same_low": [26, 47, 48, 49, 108, 112, 141, 288, 325, 326, 329, 333, 334, 335, 336, 338, 339, 340], "spatial": [26, 27, 41, 47, 48, 49, 112, 113, 114, 141, 165, 281, 288, 333, 334, 335, 336, 337, 338, 339, 340], "odd": [26, 47, 48, 49, 108, 112, 141, 288, 333, 334, 335, 336, 338, 339], "extra": [26, 47, 48, 49, 108, 112, 141, 288, 333, 334, 335, 336, 338, 339], "begin": [26, 41, 47, 48, 49, 108, 112, 114, 137, 141, 288, 319, 333, 334, 335, 336, 337, 338, 339, 340], "kernel_shap": [26, 47, 48, 49, 108, 112, 114, 141, 248, 260, 276, 281, 282, 288, 290, 325, 326, 329, 333, 334, 335, 336, 337, 338, 339, 340], "along": [26, 41, 42, 47, 48, 49, 74, 100, 108, 112, 114, 131, 141, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 186, 213, 253, 281, 283, 288, 294, 296, 300, 304, 308, 326, 333, 334, 335, 336, 337, 338, 339, 340], "repres": [26, 41, 47, 48, 49, 85, 108, 112, 114, 141, 288, 324, 333, 334, 335, 336, 337, 338, 339], "pixel": [26, 41, 47, 48, 49, 85, 108, 112, 114, 137, 141, 268, 288, 333, 334, 335, 336, 337, 338, 339], "ad": [26, 41, 47, 48, 49, 108, 112, 114, 131, 137, 141, 183, 231, 232, 288, 333, 334, 335, 336, 337, 338, 339, 340], "x1_begin": [26, 41, 47, 48, 49, 108, 112, 114, 137, 141, 283, 288, 333, 334, 335, 336, 337, 338, 339], "x2_begin": [26, 41, 47, 48, 49, 108, 112, 114, 137, 141, 283, 288, 333, 334, 335, 336, 337, 338, 339], "x1_end": [26, 41, 47, 48, 49, 108, 112, 114, 137, 141, 283, 288, 333, 334, 335, 336, 337, 338, 339], "x2_end": [26, 41, 47, 48, 49, 108, 112, 114, 137, 141, 283, 288, 333, 334, 335, 336, 337, 338, 339], "xi_begin": [26, 41, 47, 48, 49, 108, 112, 114, 137, 141, 288, 333, 334, 335, 336, 337, 338, 339], "xi_end": [26, 41, 47, 48, 49, 108, 112, 114, 137, 141, 288, 333, 334, 335, 336, 337, 338, 339], "simultan": [26, 47, 48, 49, 108, 112, 114, 141, 288, 333, 334, 335, 336, 337, 338, 339], "stride": [26, 41, 47, 48, 49, 108, 112, 114, 141, 248, 252, 260, 276, 281, 282, 288, 290, 303, 324, 325, 326, 329, 333, 334, 335, 336, 337, 338, 339, 340], "epsilon": [27, 86, 95, 100, 186, 257, 269, 285, 300, 315, 316], "avoid": [27, 86, 95, 100, 186, 257, 269, 285, 300, 315, 316], "divis": [27, 86, 95, 100, 186, 257, 269, 285, 300, 315, 316], "1e": [27, 86, 95], "5f": [27, 95], "is_test": [27, 60], "momentum": 27, "factor": [27, 58, 113, 165], "varianc": [27, 116], "running_mean": 27, "9f": 27, "per": [27, 58, 253, 304, 314], "var": 27, "saved_mean": 27, "saved_var": 27, "seed": [28, 125, 145, 146, 147, 148, 238, 243, 244, 279, 314], "auto": [28, 49, 125, 145, 146, 147, 148, 238, 243, 244, 335, 340], "t2": [28, 34, 35, 36, 46, 48, 53, 54, 61, 70, 85, 87, 88, 96, 97, 110, 114, 117, 125, 131, 141, 142, 143, 146, 148, 165, 167, 218, 219, 220, 223, 224, 228, 231, 238, 243, 244, 249, 252, 253, 255, 256, 268, 274, 275, 279, 284, 285, 290, 303, 304, 308, 337, 339, 340], "bfloat16": [28, 34, 36, 39, 41, 54, 86, 87, 88, 100, 117, 118, 119, 167, 186, 210, 238, 239, 243, 244, 252, 259, 262, 265, 266, 272, 303, 306, 320, 321, 322], "_bernoulli_without_dtyp": 28, "bernoulli_reference_implement": 28, "test_bernoulli": 28, "_bernoulli_with_dtyp": 28, "tensorproto": [28, 34, 35, 46, 70, 87, 88, 117, 145, 147, 181], "test_bernoulli_doubl": 28, "_bernoulli_with_se": 28, "test_bernoulli_se": 28, "direct": [29, 53, 73, 99, 144, 170, 235, 255], "move": [29, 55, 195], "bit": [29, 48, 56, 61, 110, 141, 142, 143, 244, 253, 255, 256, 274, 275, 277, 279, 286, 287, 288, 289, 292, 293, 294, 295, 297, 304, 308, 338, 339, 340], "right": [29, 117, 324], "shift": 29, "left": [29, 117, 231, 232, 324], "z": [29, 30, 32, 33, 64, 139, 216, 224, 228, 231, 233, 260, 297, 329, 336], "_right_unit8": 29, "test_bitshift_right_uint8": 29, "_right_unit16": 29, "test_bitshift_right_uint16": 29, "_right_unit32": 29, "test_bitshift_right_uint32": 29, "_right_unit64": 29, "test_bitshift_right_uint64": 29, "_left_unit8": 29, "32": [29, 41, 48, 56, 110, 141, 253, 274, 277, 279, 286, 304, 308, 325, 326, 329, 333, 334, 335, 336, 339, 340], "test_bitshift_left_uint8": 29, "_left_unit16": 29, "test_bitshift_left_uint16": 29, "_left_unit32": 29, "test_bitshift_left_uint32": 29, "_left_unit64": 29, "test_bitshift_left_uint64": 29, "2d": [30, 31, 32, 33, 91, 105, 130, 137, 142, 191, 252, 303], "create_random_int": [30, 31, 32, 33], "bitwise_and": 30, "test_bitwise_and_i32_2d": 30, "3d": [30, 31, 32, 33, 58, 130, 142], "test_bitwise_and_i16_3d": 30, "_bitwiseand_broadcast": 30, "v": [30, 32, 33, 93, 100, 106, 132, 133, 170, 181, 186, 234, 235, 272, 298], "1d": [30, 32, 33], "test_bitwise_and_ui64_bcast_3v1d": 30, "4d": [30, 31, 32, 33, 130], "test_bitwise_and_ui8_bcast_4v3d": 30, "bitwise_not": 31, "test_bitwise_not_2d": 31, "test_bitwise_not_3d": 31, "test_bitwise_not_4d": 31, "bitwise_or": 32, "test_bitwise_or_i32_2d": 32, "test_bitwise_or_i16_4d": 32, "_bitwiseor_broadcast": [32, 33], "test_bitwise_or_ui64_bcast_3v1d": 32, "test_bitwise_or_ui8_bcast_4v3d": 32, "bitwise_xor": 33, "test_bitwise_xor_i32_2d": 33, "test_bitwise_xor_i16_3d": 33, "test_bitwise_xor_ui64_bcast_3v1d": 33, "test_bitwise_xor_ui8_bcast_4v3d": 33, "output_datatyp": [34, 87, 88, 117], "strictli": [34, 35, 87, 88, 117], "datatyp": [34, 35, 46, 87, 88, 117, 252], "enum": [34, 35, 87, 88, 117, 200, 252, 303], "whose": [34, 87, 88, 117], "period": [34, 87, 88], "symmetr": [34, 87, 88], "hann": [34, 87, 88], "point": [34, 48, 57, 61, 85, 87, 88, 127, 142, 165, 253, 268, 286], "int64_t": [34, 54, 87, 88, 167], "a0": [34, 87, 88, 167], "42": [34, 41, 141, 290, 335, 339], "a1": [34, 87, 88, 167], "a2": 34, "08": 34, "1415": [34, 87, 88, 167], "arang": [34, 54, 57, 87, 88, 117, 167, 183, 197, 211, 323, 325, 333], "test_blackmanwindow": 34, "test_blackmanwindow_symmetr": 34, "complex": [35, 36, 54, 70, 167], "target_typ": 36, "formula": 38, "control": [38, 340], "unit": 38, "input_data": [38, 39, 121], "8439683": 38, "5665144": 38, "05836735": 38, "02916367": 38, "12964272": 38, "5060197": 38, "79538304": 38, "9411346": 38, "9546573": 38, "17730942": 38, "46192095": 38, "26480448": 38, "6746842": 38, "01665257": 38, "62473077": 38, "9240844": 38, "9722341": 38, "11965699": 38, "41356155": 38, "9129373": 38, "59330076": 38, "81929934": 38, "7862604": 38, "11799799": 38, "69248444": 38, "54119414": 38, "07513223": 38, "calcul": [38, 121, 288, 333, 338], "positive_input": 38, "maximum": [38, 40, 58, 61, 205, 242, 319], "negative_input": 38, "minimum": [38, 40, 61, 205, 242, 319], "expected_output": [38, 121, 197, 264], "test_celu": 38, "subset": 39, "accept": [39, 44, 75, 76, 171, 172, 197, 211], "behavior": 39, "undefin": [39, 231, 232], "tind": [39, 62, 75, 76, 127, 171, 172, 192, 264], "output_data": 39, "complex128": [39, 41, 42, 44, 55, 62, 69, 75, 76, 77, 85, 92, 93, 106, 118, 119, 129, 131, 132, 133, 134, 146, 148, 163, 164, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 189, 190, 195, 197, 199, 209, 210, 211, 212, 214, 258, 264, 268, 323], "complex64": [39, 41, 42, 44, 54, 55, 62, 69, 75, 76, 77, 85, 92, 93, 106, 118, 119, 129, 131, 132, 133, 134, 146, 148, 163, 164, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 189, 190, 195, 197, 199, 209, 210, 211, 212, 214, 258, 264, 268, 323], "_center_crop_pad_crop": 39, "even": [39, 48, 141, 333, 334, 339], "diff": 39, "uneven": 39, "test_center_crop_pad_crop": 39, "_center_crop_pad_pad": 39, "test_center_crop_pad_pad": 39, "_center_crop_pad_crop_and_pad": 39, "third": 39, "stai": 39, "test_center_crop_pad_crop_and_pad": 39, "_center_crop_pad_crop_axes_hwc": 39, "test_center_crop_pad_crop_axes_hwc": 39, "_center_crop_pad_crop_axes_chw": 39, "test_center_crop_pad_crop_axes_chw": 39, "abov": [40, 73, 99, 144, 235, 255], "under": 40, "dilat": [41, 47, 48, 49, 141, 248, 260, 281, 282, 290, 325, 326, 329, 333, 334, 335, 336, 339, 340], "dimension": 41, "image_shap": 41, "block_shap": 41, "21": [41, 141, 290, 325, 326, 329, 333, 334, 335, 336, 339], "22": [41, 325, 326, 329, 333, 334, 335, 336], "23": [41, 141, 290, 325, 326, 329, 333, 334, 335, 336, 339], "19": [41, 325, 326, 329, 333, 334, 335, 336], "24": [41, 48, 253, 304, 325, 326, 329, 333, 334, 335, 336], "test_col2im": 41, "_col2im_strid": 41, "test_col2im_strid": 41, "_col2im_pad": 41, "41": [41, 141, 290, 335, 339], "46": [41, 87, 335], "56": [41, 110, 141, 290, 335, 339], "61": 41, "66": [41, 142, 335], "71": 41, "27": [41, 326, 334, 335], "37": [41, 335], "47": [41, 335], "52": [41, 141, 290, 335, 339], "57": [41, 335], "62": 41, "67": [41, 141, 290, 335, 339], "72": [41, 326, 334, 335], "28": [41, 48, 325, 326, 329, 333, 334, 335, 336], "38": [41, 110, 335], "43": [41, 141, 290, 335, 339], "48": [41, 335], "53": [41, 335], "58": [41, 141, 290, 335, 339], "63": [41, 326, 334, 335], "68": [41, 335], "73": 41, "29": [41, 142, 326, 334, 335], "34": [41, 61, 141, 253, 290, 326, 334, 335, 339], "39": [41, 141, 290, 335, 339], "44": [41, 110, 304, 335], "49": [41, 335], "54": [41, 326, 334, 335], "59": [41, 141, 253, 290, 335, 339], "64": [41, 141, 290, 335, 339], "69": [41, 141, 290, 339], "74": [41, 253], "55": [41, 335], "60": [41, 141, 142, 290, 335, 339], "65": 41, "70": 41, "75": 41, "114": [41, 141, 142, 290, 335, 339], "117": [41, 326, 334, 335], "84": [41, 253, 304, 326, 334], "98": [41, 110, 335], "156": [41, 335], "159": [41, 335], "162": [41, 141, 290, 304, 326, 334, 335, 339], "128": [41, 110, 141, 167, 253, 290, 304, 335, 339], "201": 41, "204": 41, "207": [41, 326, 334, 335], "144": [41, 326, 334, 335], "test_col2im_pad": 41, "_col2im_dil": 41, "test_col2im_dil": 41, "_col2im_5d": 41, "76": [41, 304, 335], "81": [41, 141, 290, 326, 334, 335, 339], "86": 41, "91": 41, "96": 41, "101": [41, 141, 290, 339], "116": 41, "77": [41, 141, 290, 339], "82": 41, "87": [41, 141, 253, 290, 335, 339], "92": [41, 141, 290, 339], "97": 41, "102": [41, 141, 253, 290, 335, 339], "107": [41, 141, 290, 339], "112": [41, 326, 334], "78": [41, 335], "83": [41, 110, 141, 290, 339], "88": [41, 335], "93": [41, 141, 290, 326, 334, 335, 339], "103": 41, "108": [41, 326, 334, 335], "113": [41, 110, 142, 335], "118": [41, 142], "79": 41, "89": [41, 141, 253, 290, 339], "94": 41, "99": [41, 253, 326, 334, 335], "104": [41, 335], "109": 41, "119": 41, "80": [41, 141, 290, 339], "85": [41, 335], "90": [41, 335], "95": [41, 141, 290, 339], "100": [41, 54, 70, 304], "105": [41, 335], "110": 41, "115": [41, 142], "120": [41, 335], "test_col2im_5d": 41, "select": [42, 340], "condit": [42, 93, 106, 214, 297], "2147483647": [43, 64, 93, 106, 111, 115, 120, 170, 176, 181, 196, 202, 221, 272, 289, 317], "variad": [43, 64, 93, 106, 111, 115, 120, 170, 176, 181, 196, 202, 221, 272, 289, 317], "concat_result": [43, 44], "new_axi": 44, "insert": [44, 131, 179, 212], "concaten": [44, 106, 170], "input_sequ": [44, 175, 178, 179, 180, 181], "_float_on": 46, "tensor_valu": 46, "make_tensor": 46, "test_constantofshape_float_on": 46, "_int32_zero": 46, "test_constantofshape_int_zero": 46, "_int32_shape_zero": 46, "test_constantofshape_int_shape_zero": 46, "filter": [47, 48, 49, 141, 281, 314, 324, 334, 335, 336, 339, 340], "group": [47, 48, 49, 86, 141, 248, 260, 269, 281, 290, 326, 334, 335, 339, 340], "channel": [47, 48, 49, 86, 94, 98, 116, 141, 269, 281, 331, 334, 335, 339, 340], "divid": [47, 48, 49, 127, 141, 192, 281, 319, 334, 335, 339, 340], "convolut": [47, 48, 49, 141, 281, 324, 326, 334, 335, 339, 340], "two": [48, 141, 144, 163, 165, 205, 213, 249, 262, 318, 319, 321, 333, 334, 339], "side": [48, 49, 141, 273, 301, 333, 334, 335, 339, 340], "almost": [48, 141, 333, 334, 339], "ofpixel": [48, 141, 339], "defaultsto": [48, 141, 339], "x_zero_point": [48, 56, 141, 253, 288, 290, 291, 292, 295, 296, 297, 304, 338, 339, 340], "w_zero_point": [48, 141, 255, 290, 339, 340], "t3": [48, 110, 117, 131, 141, 142, 243, 244, 252, 274, 275, 284, 290, 303, 339, 340], "_without_pad": 48, "convinteger_nod": 48, "test_convinteger_without_pad": 48, "_with_pad": 48, "convinteger_node_with_pad": 48, "test_convinteger_with_pad": 48, "output_pad": [49, 248, 335, 340], "adj": [49, 335, 340], "adjust": [49, 335, 340], "caus": [49, 85, 268, 335, 340], "ignor": [49, 127, 192, 197, 319, 335, 340], "equat": [49, 64, 73, 99, 235, 255, 335, 340], "test_cos_exampl": 50, "test_co": 50, "54308069": 51, "test_cosh_exampl": 51, "test_cosh": 51, "border": [52, 85, 268], "leftbord": 52, "topbord": 52, "rightbord": 52, "bottombord": 52, "height": [52, 113, 128, 165, 213], "width": [52, 113, 128, 165, 213], "exclus": [53, 71, 190], "top": [53, 208], "term": [53, 205], "j": [53, 117], "th": [53, 170, 205], "revers": [53, 73, 99, 144, 170, 209, 235, 255], "discret": 54, "fourier": [54, 167], "transform": [54, 167, 224, 225, 228, 229, 231, 232], "onesid": [54, 167, 271, 312], "n_fft": [54, 167], "real": [54, 167], "satisfi": [54, 167], "conjug": [54, 167], "symmetri": [54, 167], "note": [54, 108, 167, 317, 319, 340], "possibl": [54, 167], "fast": [54, 167], "invok": [54, 167], "dft_length": [54, 117], "scalar": [54, 78, 106, 167, 175, 178, 179, 180, 189, 253, 261, 262, 286, 304, 318, 321], "fft": [54, 167], "stack": [54, 167], "test_dft": 54, "test_dft_axi": 54, "ifft": 54, "test_dft_invers": 54, "blocksiz": [55, 195], "block": [55, 195, 252, 303], "x_scale": [56, 141, 253, 288, 290, 291, 292, 295, 296, 297, 304, 338, 339, 340], "_2d": 57, "linalg": 57, "test_det_2d": 57, "_nd": 57, "test_det_nd": 57, "hidden": [58, 73, 74, 99, 144, 234, 235, 255, 298], "head": [58, 234, 250, 251, 263, 273, 278, 284, 298, 301], "h": [58, 73, 85, 99, 144, 181, 235, 255, 268, 326, 334], "span": [58, 252, 303], "rel": [58, 165], "distanc": [58, 245, 309], "k": [58, 70, 106, 170, 181, 208, 210, 234, 298, 322], "c2c_attent": 58, "c2p_attent": 58, "p2c_attent": 58, "disentangled_attent": 58, "simpli": 60, "ratio": [60, 238, 243, 244], "mask": [60, 234, 236, 238, 243, 244, 250, 251, 257, 273, 278, 284, 285, 301], "y_scale": [61, 141, 142, 143, 286, 288, 289, 290, 291, 292, 295, 296, 297, 304, 338, 339, 340], "y_zero_point": [61, 141, 142, 143, 286, 288, 289, 290, 291, 292, 295, 296, 297, 304, 338, 339, 340], "unsign": [61, 277, 279, 287, 289, 291, 293, 294, 296, 297], "0196078438": 61, "x_min": 61, "x_max": 61, "255": [61, 141, 142, 253, 290, 304, 339], "y_zeropoint": 61, "test_dynamicquantizelinear": 61, "0156862754": 61, "test_dynamicquantizelinear_max_adjust": 61, "345": 61, "test_dynamicquantizelinear_min_adjust": 61, "background_class": 63, "background": 63, "box_cod": 63, "encod": [63, 236, 267, 279, 314], "box": [63, 124, 128, 140, 252, 303], "anchor": 63, "iou_threshold": [63, 128], "iou": 63, "threshold": [63, 73, 99, 144, 206, 217, 231, 232, 235, 255], "max_output_box": 63, "detect": 63, "plugin_vers": [63, 124, 140], "plugin": [63, 124, 140], "score_activ": 63, "activ": [63, 73, 99, 144, 235, 255, 260, 261, 269, 326, 333, 334, 335, 336, 337], "score_threshold": [63, 128], "num_detect": 63, "detection_box": 63, "detection_scor": 63, "detection_class": 63, "express": [64, 231, 232, 319], "_einsum_transpos": 64, "eqn": 64, "ij": 64, "ji": 64, "einsum_reference_implement": 64, "test_einsum_transpos": 64, "_einsum_sum": 64, "test_einsum_sum": 64, "_einsum_batch_diagon": 64, "ii": 64, "test_einsum_batch_diagon": 64, "_einsum_inner_prod": 64, "test_einsum_inner_prod": 64, "_einsum_batch_matmul": 64, "bij": 64, "bjk": 64, "bik": 64, "test_einsum_batch_matmul": 64, "coeffici": [65, 101, 174, 224, 225, 228, 229, 292], "integr": [66, 125, 175, 178, 179, 180, 197, 235], "notspecifi": 70, "diagon": [70, 128], "popul": 70, "upper": [70, 147, 148, 200, 210, 322], "lower": [70, 147, 148, 200, 210, 322], "_without_dtyp": 70, "randint": [70, 181, 210, 322], "ey": 70, "test_eyelike_without_dtyp": 70, "_with_dtyp": 70, "test_eyelike_with_dtyp": 70, "_populate_off_main_diagon": 70, "off_diagonal_offset": 70, "test_eyelike_populate_off_main_diagon": 70, "up": [71, 314], "d_0": 71, "d_1": 71, "d_n": 71, "activation_alpha": [73, 99, 144, 235, 255, 261], "activation_beta": [73, 99, 144, 235, 255, 261], "bidirect": [73, 99, 144, 235, 255], "gate": [73, 74, 99, 144, 235, 255], "forward": [73, 99, 144, 170, 235, 255], "hidden_s": [73, 99, 144, 234, 235, 255], "neuron": [73, 99, 144, 235, 255], "layer": [73, 99, 144, 235, 255, 298], "output_sequ": [73, 99, 144, 176, 178, 179, 197], "sequence_len": [73, 99, 144, 164, 170, 235, 255], "initial_h": [73, 99, 144, 235, 255], "y_h": [73, 99, 144, 235, 255], "seq_len": [73, 99, 144, 235, 255], "drop_stat": 74, "determin": [74, 205], "state": [74, 170], "timestep": 74, "past": [74, 234, 251, 284, 298], "sequence_length": [74, 309], "hidden_prev": 74, "seq_length": 74, "multipli": [78, 230, 261, 262, 286, 318, 321], "transa": [78, 261, 262, 286, 318, 321], "transb": [78, 261, 262, 286, 318, 321], "extra_shap": 79, "input_as_shap": 79, "ndim": [80, 82, 327, 328], "test_globalaveragepool": [80, 327], "_globalaveragepool_precomput": [80, 327], "test_globalaveragepool_precomput": [80, 327], "p": [81, 99, 107, 108, 235, 255], "lp": [81, 108], "norm": [81, 108, 226], "pool": [81, 108, 113, 124, 140, 165, 205, 249, 325, 329, 333, 336], "test_globalmaxpool": [82, 328], "_globalmaxpool_precomput": [82, 328], "test_globalmaxpool_precomput": [82, 328], "align_corn": [85, 268], "extrema": [85, 268], "consid": [85, 268], "center": [85, 117, 268], "corner": [85, 128, 268], "resolut": [85, 268], "agnost": [85, 268], "interpol": [85, 163, 165, 213, 268], "bilinear": [85, 163, 213, 249, 268], "nearest": [85, 163, 213, 249, 268, 332], "bicub": [85, 268], "padding_mod": [85, 268], "outsid": [85, 268, 319], "grid": [85, 165, 268], "reflect": [85, 137, 268, 283], "locat": [85, 268], "margin": 85, "far": 85, "awai": 85, "until": 85, "becom": 85, "_gridsampl": [85, 268], "h_out": [85, 268], "w_out": [85, 268], "0000": [85, 268, 325, 333], "6000": [85, 268, 325, 333], "2000": [85, 268, 325, 333], "1500": [85, 268], "5500": [85, 268], "9500": [85, 268], "3500": [85, 268], "7500": [85, 268], "5000": [85, 268], "3000": [85, 268], "9000": [85, 268], "7000": [85, 268], "8000": [85, 268, 325, 333], "4000": [85, 268, 325, 333], "test_gridsampl": [85, 268], "_gridsample_paddingmod": [85, 268], "y_zero": [85, 268], "test_gridsample_zeros_pad": [85, 268], "y_border": [85, 268], "test_gridsample_border_pad": [85, 268], "y_reflect": [85, 268], "test_gridsample_reflection_pad": [85, 268], "_gridsample_mode_aligncorn": [85, 268], "y_bilinear": [85, 268], "2500": [85, 268], "test_gridsample_bilinear": [85, 268], "y_align_corn": [85, 268], "test_gridsample_aligncorners_tru": [85, 268], "y_nearest": [85, 268], "test_gridsample_nearest": [85, 268], "y_bicub": [85, 268], "1406": [85, 268], "3828": [85, 268], "7556": [85, 268], "9688": [85, 268], "1445": [85, 268], "3906": [85, 268], "test_gridsample_bicub": [85, 268], "someon": [85, 268], "who": [85, 268], "comment": [85, 268], "ci": [85, 268], "num_group": 86, "divisor": [86, 269], "bia": [86, 94, 98, 100, 141, 183, 234, 237, 238, 240, 241, 243, 250, 251, 256, 259, 263, 266, 273, 275, 278, 284, 298, 300, 301, 302, 315, 316, 339, 340], "_group_norm": 86, "test_group_normalization_exampl": 86, "test_group_normalization_epsilon": 86, "test_hammingwindow": 87, "test_hammingwindow_symmetr": 87, "test_hannwindow": 88, "test_hannwindow_symmetr": 88, "test_hardswish": 90, "coerc": [91, 105, 191], "0th": [91, 105, 191], "like": [91, 105, 122, 191, 236, 267, 314, 317], "batch_siz": [91, 105, 167, 191, 234, 251, 284], "else_branch": 93, "wish": 93, "live": 93, "enclos": 93, "scope": 93, "then_branch": 93, "cond": [93, 106], "detect_neg": 96, "infin": 96, "induc": 96, "detect_posit": 96, "posit": [96, 175, 178, 179, 218, 234, 279, 284], "_infin": 96, "nan": [96, 231, 232, 272, 325, 329, 333, 336], "inf": [96, 272], "ninf": 96, "test_isinf": 96, "_positive_infinity_onli": 96, "isposinf": 96, "test_isinf_posit": 96, "_negative_infinity_onli": 96, "isneginf": 96, "test_isinf_neg": 96, "expon": 98, "01": [99, 101, 144, 235, 255], "forget": [99, 235, 255], "input_forget": [99, 235, 255], "coupl": [99, 235, 255], "initial_c": [99, 235, 255], "y_c": [99, 235, 255], "experiment": [100, 186, 213, 272, 285], "stash_typ": [100, 186], "stash": [100, 186], "inv_std_var": [100, 186, 315, 316], "u": [100, 186, 309, 315, 316], "invstddev": 100, "leakag": [101, 292], "bodi": [106, 170, 181], "iter": [106, 170, 341], "iteration_num": 106, "carri": 106, "scan_output": [106, 170], "v_initi": 106, "v_final_and_scan_output": 106, "last": [107, 131, 252, 262, 283, 303, 318, 321], "deprec": 108, "intend": 108, "author": 108, "encourag": 108, "a_zero_point": [110, 142, 275, 277, 286, 287, 293], "b_zero_point": [110, 142, 256, 275, 277, 286, 287, 293], "test_matmulinteg": 110, "data_0": [111, 115, 120, 202], "pooled_shap": 113, "roi": [113, 165, 249], "spatial_scal": [113, 165], "translat": [113, 165], "across_channel": 116, "normalize_vari": 116, "num_mel_bin": 117, "sample_r": 117, "lower_edge_hertz": 117, "upper_edge_hertz": 117, "8192": 117, "num_spectrogram_bin": 117, "frequency_bin": 117, "low_frequency_mel": 117, "2595": 117, "log10": 117, "700": 117, "high_frequency_mel": 117, "mel_step": 117, "power": 117, "flag": [117, 170, 229], "writeabl": 117, "lower_frequency_valu": 117, "center_frequency_point": 117, "higher_frequency_point": 117, "low_to_cent": 117, "center_to_high": 117, "000000": 117, "test_melweightmatrix": 117, "linspac": 121, "10000": [121, 234, 250, 278, 284], "log1p": 121, "test_mish": 121, "fmod": 122, "behav": 122, "forc": 122, "treatment": 122, "high": [122, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 341], "image_s": 124, "pooled_s": [124, 140], "feature_map_0": [124, 140], "feature_map_1": [124, 140], "feature_map_2": [124, 140], "feature_map_3": [124, 140], "patch": [124, 140], "sample_s": 125, "ignore_index": [127, 192], "contribut": [127, 192, 340], "gradient": [127, 192], "reduct": [127, 192, 252, 303], "loss": [127, 192], "weight": [127, 192, 205, 224, 225, 231, 232, 234, 251, 255, 263, 273, 284, 298, 301, 320, 324, 326, 334], "center_point_box": 128, "y1": [128, 181], "x1": [128, 181], "y2": 128, "x2": 128, "ly": 128, "interv": 128, "absolut": 128, "mostli": 128, "tf": [128, 205, 289, 297], "x_center": 128, "y_center": 128, "max_output_boxes_per_class": 128, "selected_indic": 128, "logical_not": 130, "test_not_2d": 130, "test_not_3d": 130, "test_not_4d": 130, "hot": 131, "innermost": 131, "depth": 131, "slope": 136, "edg": [137, 283, 288, 333, 338], "One": [137, 144, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 273, 301], "fill": [137, 234, 250, 278, 284], "w_scale": [141, 255, 290, 339, 340], "t4": [141, 284, 290, 339, 340], "174": [141, 290, 335, 339], "203": [141, 290, 339], "168": [141, 142, 290, 335, 339], "237": [141, 290, 339], "129": [141, 290, 304, 335, 339], "242": [141, 290, 339], "221": [141, 290, 339], "166": [141, 290, 339], "232": [141, 290, 304, 339], "178": [141, 290, 339], "186": [141, 290, 335, 339], "195": [141, 290, 335, 339], "188": [141, 290, 339], "127": [141, 142, 290, 339], "230": [141, 290, 339], "154": [141, 290, 339], "148": [141, 290, 339], "247": [141, 142, 290, 339], "00369204697": [141, 290, 339], "132": [141, 290, 339], "00172794575": [141, 290, 339], "00162681262": [141, 290, 339], "123": [141, 290, 326, 334, 335, 339], "197": [141, 290, 339], "240": [141, 290, 335, 339], "196": [141, 253, 290, 304, 339], "160": [141, 290, 339], "126": [141, 290, 335, 339], "191": [141, 290, 339], "199": [141, 290, 339], "243": [141, 290, 339], "216": [141, 290, 339], "131": [141, 290, 339], "175": [141, 290, 339], "212": [141, 290, 335, 339], "234": [141, 290, 326, 334, 335, 339], "172": [141, 290, 335, 339], "214": [141, 142, 290, 339], "215": [141, 290, 339], "121": [141, 253, 290, 339], "163": [141, 290, 339], "213": [141, 290, 335, 339], "test_qlinearconv": [141, 290, 339], "a_scal": [142, 275, 286, 287, 293], "b_scale": [142, 256, 275, 286, 287, 293], "208": [142, 335], "236": 142, "238": 142, "0066": 142, "152": 142, "244": 142, "246": [142, 335], "00705": 142, "0107": 142, "test_qlinearmatmul_2d": 142, "test_qlinearmatmul_3d": 142, "distribut": [145, 146], "standard": [145, 146], "deviat": [145, 146], "boundari": [147, 148, 205], "low": [147, 148], "limit": [149, 307, 341], "delta": [149, 307], "trilinear": 163, "batch_axi": 164, "time_axi": 164, "_reversesequence_tim": 164, "test_reversesequence_tim": 164, "_reversesequence_batch": 164, "test_reversesequence_batch": 164, "avg": [165, 325, 333], "output_height": 165, "output_width": 165, "sampling_ratio": 165, "bin": 165, "adapt": 165, "roi_width": 165, "likewis": 165, "0f": [165, 234, 249, 250, 278, 284], "batch_indic": [165, 249], "test_round": 166, "signal": 167, "frame_step": 167, "frame_length": 167, "onesided_length": 167, "no_window": 167, "nstft": 167, "frame": 167, "stop": [167, 200, 236, 341], "complex_out": 167, "test_stft": 167, "test_stft_with_window": 167, "scan_input_elt": 170, "scan_output_elt": 170, "scan_input": 170, "omit": [170, 231, 232], "num_scan_input": 170, "initial_state_and_scan_input": 170, "final_state_and_scan_output": 170, "6732": 174, "gamma": [174, 228, 229, 257, 269, 300, 315, 316], "0507": 174, "test_cas": 179, "at_back": 179, "at_front": 179, "test_nam": 179, "test_input": 179, "item": [179, 205], "sequence_insert_reference_implement": 179, "test_sequence_insert_": 179, "mani": [181, 218], "additional_input": 181, "out_sequ": 181, "_sequence_map_identity_1_sequ": 181, "make_graph": 181, "in0": 181, "out0": 181, "seq_map_bodi": 181, "make_tensor_value_info": 181, "_": 181, "input_type_proto": 181, "make_sequence_type_proto": 181, "make_tensor_type_proto": 181, "output_type_proto": 181, "test_sequence_map_identity_1_sequ": 181, "_sequence_map_identity_2_sequ": 181, "in1": 181, "out1": 181, "x0": 181, "y0": 181, "test_sequence_map_identity_2_sequ": 181, "_sequence_map_identity_1_sequence_1_tensor": 181, "test_sequence_map_identity_1_sequence_1_tensor": 181, "_sequence_map_add_2_sequ": 181, "test_sequence_map_add_2_sequ": 181, "_sequence_map_add_1_sequence_1_tensor": 181, "test_sequence_map_add_1_sequence_1_tensor": 181, "_sequence_map_extract_shap": 181, "in_seq": 181, "test_sequence_map_extract_shap": 181, "arbitrari": [182, 189], "lambd": 183, "formul": 183, "_hard_shrink": 183, "test_shrink_hard": 183, "_soft_shrink": 183, "test_shrink_soft": 183, "test_sin_exampl": 187, "test_sin": 187, "17520118": 188, "test_sinh_exampl": 188, "test_sinh": 188, "though": 189, "treat": [190, 224], "log_prob": 192, "31326166": 193, "69314718": 193, "31326163": 193, "test_softplus_exampl": 193, "test_softplu": 193, "test_softsign_exampl": 194, "test_softsign": 194, "_with_split_1": 197, "test_split_to_sequence_1": 197, "_with_split_2": 197, "test_split_to_sequence_2": 197, "_nokeepdim": 197, "test_split_to_sequence_nokeepdim": 197, "case_change_act": 200, "lowercas": 200, "uppercas": 200, "unchang": 200, "is_case_sensit": 200, "identif": 200, "word": [200, 205, 324], "sensit": 200, "local": 200, "accord": [200, 209, 296], "en_u": 200, "equival": 200, "decid": 200, "stopword": 200, "remov": [200, 340], "_nostopwords_nochangecas": 200, "mondai": 200, "tuesdai": 200, "noop": 200, "test_strnormalizer_nostopwords_nochangecas": 200, "_monday_casesensintive_nochangecas": 200, "wednesdai": 200, "thursdai": 200, "test_strnormalizer_export_monday_casesensintive_nochangecas": 200, "_monday_casesensintive_low": 200, "test_strnormalizer_export_monday_casesensintive_low": 200, "_monday_casesensintive_upp": 200, "test_strnormalizer_export_monday_casesensintive_upp": 200, "_monday_empty_output": 200, "test_strnormalizer_export_monday_empty_output": 200, "_monday_insensintive_upper_twodim": 200, "cecedil": 200, "accent": 200, "german": 200, "umlaut": 200, "eszett": 200, "test_strnormalizer_export_monday_insensintive_upper_twodim": 200, "test_tan_exampl": 203, "test_tan": 203, "max_gram_length": 205, "gram": 205, "max_skip_count": 205, "skip": [205, 237, 315, 316], "min_gram_length": 205, "skip_count": 205, "criteria": 205, "frequenc": 205, "idf": 205, "document": [205, 341], "tfidf": 205, "combin": 205, "ngram_count": 205, "consecut": [205, 319], "collect": [205, 224], "base": [205, 218, 231, 232], "essenti": 205, "csc": 205, "popular": [205, 231, 232], "ngram_index": 205, "attributeproto": 205, "pool_": 205, "pool_int64": 205, "pool_str": 205, "ether": 205, "utf": [205, 279], "_tf_only_bigrams_skip0": 205, "unigram": 205, "bigram": 205, "tfidfvectorizerhelp": 205, "make_node_noweight": 205, "test_tfidfvectorizer_tf_only_bigrams_skip0": 205, "_tf_batch_onlybigrams_skip0": 205, "test_tfidfvectorizer_tf_batch_onlybigrams_skip0": 205, "_tf_onlybigrams_levelempti": 205, "test_tfidfvectorizer_tf_onlybigrams_levelempti": 205, "_tf_onlybigrams_skip5": 205, "test_tfidfvectorizer_tf_onlybigrams_skip5": 205, "_tf_batch_onlybigrams_skip5": 205, "test_tfidfvectorizer_tf_batch_onlybigrams_skip5": 205, "_tf_uniandbigrams_skip5": 205, "test_tfidfvectorizer_tf_uniandbigrams_skip5": 205, "_tf_batch_uniandbigrams_skip5": 205, "test_tfidfvectorizer_tf_batch_uniandbigrams_skip5": 205, "sort": [208, 211, 323], "perm": 209, "permut": 209, "retain": [210, 211, 322, 323], "_triu": [210, 322], "triu_reference_implement": [210, 322], "test_triu": [210, 322], "_triu_neg": [210, 322], "test_triu_neg": [210, 322], "_triu_out_neg_out": [210, 322], "test_triu_out_neg_out": [210, 322], "_triu_po": [210, 322], "test_triu_po": [210, 322], "_triu_out_po": [210, 322], "test_triu_out_po": [210, 322], "_triu_squar": [210, 322], "test_triu_squar": [210, 322], "_triu_square_neg": [210, 322], "test_triu_square_neg": [210, 322], "_triu_one_row": [210, 322], "test_triu_one_row": [210, 322], "_triu_zero": [210, 322], "test_triu_zero": [210, 322], "_tril": [210, 322], "tril_reference_implement": [210, 322], "test_tril": [210, 322], "_tril_neg": [210, 322], "test_tril_neg": [210, 322], "_tril_out_neg": [210, 322], "test_tril_out_neg": [210, 322], "_tril_po": [210, 322], "test_tril_po": [210, 322], "_tril_out_po": [210, 322], "test_tril_out_po": [210, 322], "_tril_squar": [210, 322], "test_tril_squar": [210, 322], "_tril_square_neg": [210, 322], "test_tril_square_neg": [210, 322], "_tril_one_row": [210, 322], "test_tril_one_row_neg": [210, 322], "_tril_zero": [210, 322], "test_tril_zero": [210, 322], "ascend": 211, "inverse_indic": [211, 323], "_sorted_without_axi": [211, 323], "node_sort": [211, 323], "specify_int64": [211, 323], "test_unique_sorted_without_axi": [211, 323], "_not_sorted_without_axi": [211, 323], "node_not_sort": [211, 323], "origin": [211, 323], "http": [211, 305, 323, 341], "issu": [211, 323], "8621": [211, 323], "recov": [211, 323], "unsort": [211, 323], "argsorted_indic": [211, 323], "argsort": [211, 323], "inverse_indices_map": [211, 323], "si": [211, 323], "asarrai": [211, 323], "test_unique_not_sorted_without_axi": [211, 323], "_sorted_with_axi": [211, 323], "test_unique_sorted_with_axi": [211, 323], "_sorted_with_axis_3d": [211, 323], "test_unique_sorted_with_axis_3d": [211, 323], "_sorted_with_negative_axi": [211, 323], "test_unique_sorted_with_negative_axi": [211, 323], "height_scal": 213, "width_scal": 213, "cast_to": 218, "desir": 218, "to_float": 218, "to_str": 218, "to_int64": 218, "map_form": 218, "br": [218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233], "max_map": 218, "cats_int64": [219, 227], "cats_str": [219, 227], "default_int64": [219, 223], "default_": [219, 223], "default_str": [219, 223], "int64_vocabulari": 220, "vocabulari": [220, 236, 267, 314], "string_vocabulari": 220, "inputdimens": 221, "imputed_value_float": 222, "imputed_value_int64": 222, "replaced_value_float": 222, "replaced_value_int64": 222, "classes_str": 223, "classlabels_int": [224, 228], "classlabel": 224, "classlabels_str": [224, 228, 231, 233], "intercept": [224, 225], "multi_class": 224, "ovr": 224, "post_transform": [224, 225, 228, 229, 231, 232], "softmax_zero": [224, 225, 228, 229, 231, 232], "probit": [224, 225, 228, 229, 231, 232], "latter": 224, "l1": 226, "l2": 226, "categori": 227, "cats_": 227, "classlabels_": [228, 231, 233], "kernel_param": [228, 229], "coef0": [228, 229], "degre": [228, 229], "kernel_typ": [228, 229], "poli": [228, 229], "rbf": [228, 229], "prob_a": 228, "prob_b": 228, "estim": 228, "rho": [228, 229], "support_vector": [228, 229], "vectors_per_class": 228, "bactch": 228, "n_support": 229, "one_class": 229, "svm": 229, "offset": 230, "regardless": 230, "base_valu": [231, 232], "classif": [231, 232], "final": [231, 232], "unassign": [231, 232], "class_id": 231, "class_nodeid": 231, "class_treeid": 231, "class_weight": 231, "classlabels_int64": [231, 233], "nodes_falsenodeid": [231, 232], "child": [231, 232], "nodes_featureid": [231, 232], "nodes_hitr": [231, 232], "nodes_missing_value_tracks_tru": [231, 232], "presenc": [231, 232, 314], "miss": [231, 236, 267, 314], "branch": [231, 232], "defalt": [231, 232], "nodes_mod": [231, 232], "leaf": [231, 232], "branch_leq": [231, 232], "branch_lt": [231, 232], "branch_gt": [231, 232], "branch_eq": [231, 232], "branch_neq": [231, 232], "nodes_nodeid": [231, 232], "restart": [231, 232], "nodes_treeid": [231, 232], "nodes_truenodeid": [231, 232], "nodes_valu": [231, 232], "aggregate_funct": 232, "aggreg": 232, "increas": [232, 341], "target_id": 232, "target_nodeid": 232, "target_treeid": 232, "target_weight": 232, "do_rotari": [234, 284], "rotari": [234, 284], "embed": [234, 284, 324], "mask_filter_valu": [234, 250, 278, 284], "num_head": [234, 250, 251, 263, 273, 278, 284, 298, 301], "past_present_share_buff": [234, 251, 284], "max_sequence_length": [234, 251, 284], "head_siz": [234, 251, 278, 284], "qkv_hidden_s": [234, 298], "q": [234, 254, 298, 299, 300, 301, 302, 305], "v_hidden_s": 234, "unidirect": [234, 284, 298], "attend": [234, 284, 298], "previou": [234, 284, 298], "mask_index": [234, 251, 257, 284, 298], "relative_position_bia": [234, 251, 278, 298], "past_sequence_length": [234, 251], "qw": 235, "mw": 235, "memory_seq_len": 235, "aw": 235, "decod": [236, 267, 314], "subgraph": [236, 267, 314], "decoder_start_token_id": [236, 267, 314], "early_stop": 236, "earli": 236, "onc": [236, 267, 314], "eos_token_id": [236, 267, 314], "init_decod": [236, 267, 314], "gpt2": [236, 267, 314], "model_typ": [236, 267, 314], "gpt": [236, 267, 314], "t5": 236, "no_repeat_ngram_s": [236, 267, 314], "ngram": [236, 242, 267, 280, 314], "pad_token_id": [236, 267, 314], "vocab_s": [236, 267, 314], "input_id": [236, 257, 267, 280, 285, 314], "max_length": [236, 267, 314], "min_length": [236, 267, 314], "num_beam": 236, "num_return_sequ": 236, "length_penalti": 236, "repetition_penalti": [236, 267, 314], "vocab_mask": [236, 267, 314], "prefix_vocab_mask": [236, 267, 314], "attention_mask": [236, 267, 314], "sequences_scor": 236, "residu": [238, 243], "training_mod": [238, 243, 244], "is_inner_broadcast": 240, "broadcast_axi": 240, "max_ngram_s": 242, "suffix": 242, "min_ngram_s": 242, "src_token": 242, "cur_token": 242, "prev_suffix_match_idx": 242, "pred_token": 242, "suffix_match_idx": 242, "pack": 244, "braycurti": 245, "canberra": 245, "chebyshev": 245, "cityblock": 245, "correl": 245, "cosin": 245, "dice": 245, "euclidean": 245, "ham": 245, "jaccard": 245, "jensenshannon": 245, "kulsinski": 245, "mahalanobi": 245, "minkowski": 245, "rogerstanimoto": 245, "russellrao": 245, "seuclidean": 245, "sokalmichen": 245, "sokalsneath": 245, "sqeuclidean": 245, "wminkowski": 245, "yule": 245, "half": [246, 247, 259, 266, 271, 273, 301, 309, 312, 315, 316], "extrapolation_valu": 249, "extrapol": 249, "crop_siz": 249, "q_weight": [250, 298], "kv_weight": 250, "key_padding_mask": [250, 278], "key_cach": 250, "value_cach": 250, "static_kv": 250, "use_past": 250, "has_layer_st": 250, "has_key_padding_mask": 250, "new_key_cach": 250, "new_value_cach": 250, "bfp_type": [252, 303], "bfp": [252, 303], "bfptype": [252, 303], "block_dim": [252, 303], "typic": [252, 303], "multip": [252, 303], "dequant": 252, "quantiz": [253, 300, 304], "256": 253, "250": 253, "test_dequantizelinear": 253, "_axi": [253, 304], "200": 253, "245": [253, 304], "142": 253, "test_dequantizelinear_axi": 253, "order_input": [254, 298, 301, 305], "cublaslt": [254, 298, 299, 300, 301, 302, 305], "schema": [254, 298, 299, 300, 301, 302], "order_output": [254, 298, 301, 305], "tensorproto_datatype_float": 254, "tensorproto_datatype_float16": 254, "scale_input": [254, 298, 301, 305], "r_scale": 255, "r_zero_point": 255, "segment_id": [257, 285], "word_embed": 257, "position_embed": 257, "segment_embed": [257, 285], "position_id": 257, "embedding_sum": 257, "activation_param": [260, 326, 333, 334, 335, 336, 337], "activation_gamma": 261, "transbatcha": 262, "1st": 262, "transbatchb": 262, "query_lay": 263, "query_bia": 263, "rel_po": 263, "eco_a": 263, "_int32": 264, "gather_nd_impl": 264, "assert": 264, "test_gathernd_example_int32": 264, "_float32": 264, "test_gathernd_example_float32": 264, "_int32_batchdim_1": 264, "batch_dim": 264, "test_gathernd_example_int32_batch_dim1": 264, "bart": [267, 314], "swish": 269, "signal_ndim": [271, 312], "isinf_onli": 272, "isnan_onli": 272, "global_weight": [273, 301], "global_bia": [273, 301], "storage_ord": [276, 329, 336], "input0": 276, "past_kei": 278, "past_valu": 278, "present_kei": 278, "present_valu": 278, "uint32_t": 279, "int32_t": 279, "hash": 279, "algorithm": 279, "unicod": 279, "ngram_siz": 280, "scores_out": 280, "ceil_mod": [282, 288, 325, 329, 333, 336, 338], "mirror": 283, "_constant_pad": 283, "pad_impl": 283, "test_constant_pad": 283, "_reflection_edge_and_wrap_pad": 283, "wrap": 283, "test_": 283, "_pad": 283, "_constant_pad_ax": 283, "test_constant_pad_ax": 283, "input_scal": 284, "weight_scal": 284, "input_zero_point": 284, "weight_zero_point": 284, "word_embedding_qu": 285, "position_embedding_qu": 285, "gamma_qu": 285, "beta_qu": 285, "word_embedding_scal": 285, "position_embedding_scal": 285, "segment_embedding_scal": 285, "gamma_scal": 285, "beta_scal": 285, "word_embedding_zero_point": 285, "position_embedding_zero_point": 285, "segment_embedding_zero_point": 285, "gamma_zero_point": 285, "beta_zero_point": 285, "layernorm_out": 285, "mask_index_out": 285, "ta": [286, 319], "tb": 286, "tc": 286, "tyz": 286, "ty": 286, "c_scale": [287, 293], "c_zero_point": [287, 293], "channels_last": [288, 290, 291, 330, 331, 338], "layout": [288, 338], "count_include_pad": [288, 325, 333, 338], "doesn": [288, 319, 333, 338, 340], "t8": 289, "tv": 289, "zeropoint": 289, "data_scal": 294, "data_zero_point": 294, "reduced_scal": 294, "reduced_zero_point": 294, "z_scale": 297, "z_zero_point": 297, "order_weight": [298, 301], "scale_q_gemm": 298, "scale_k_gemm": 298, "scale_v_gemm": 298, "k_weight": 298, "v_weight": 298, "scale_q_weight": 298, "scale_k_weight": 298, "scale_v_weight": 298, "q_bia": 298, "k_bia": 298, "v_bia": 298, "scale_qkt_gemm": 298, "scale_qkt_softmax": 298, "scale_values_gemm": 298, "order_x": [299, 300], "order_i": [299, 300, 302], "togeth": 299, "scale_x": [299, 300], "scale_i": [299, 300, 302], "major": [300, 336], "faster": 300, "order_global_weight": 301, "scale_weight": 301, "scale_bia": 301, "scale_qkv_gemm": 301, "scale_global_weight": 301, "scale_global_gemm": 301, "scale_output": 301, "Be": 301, "order_a": 302, "order_b": 302, "scale_a": 302, "scale_b": 302, "scale_c": 302, "bfloat": 303, "130": [304, 335], "test_quantizelinear": 304, "252": [304, 326, 334], "485": 304, "960": 304, "270": [304, 335], "375": 304, "470": 304, "test_quantizelinear_axi": 304, "order_col": 305, "order_row": 305, "order_col32": 305, "order_col4_4r2_8c": 305, "order_col32_2r_4r4": 305, "cubla": 305, "cublasltorder_t": 305, "is_bidirect": 309, "max_dist": 309, "bias_tabl": 309, "query_length": 309, "key_length": 309, "sequence_token_count": 310, "token_offset": [310, 311], "cumulated_seq_len": 310, "max_seq_len": 310, "logic": 314, "filter_valu": 314, "min_tokens_to_keep": 314, "minimumb": 314, "presence_penalti": 314, "penalti": 314, "temperatur": 314, "next": 314, "top_p": 314, "smallest": 314, "kept": 314, "presence_mask": 314, "filtered_logit": 314, "input_skip_bias_sum": [315, 316], "dlc": 317, "payload": 317, "snpe_vers": 317, "target_devic": 317, "dsp": 317, "mark": 319, "charact": 319, "text": 319, "0x02": 319, "0x03": 319, "mincharnum": 319, "pad_valu": 319, "extract": 319, "marker": 319, "separ": 319, "segment": 319, "connect": 319, "hello": 319, "world": 319, "space": 319, "achiev": 319, "tokenexp": 319, "posix": 319, "pub": 319, "opengroup": 319, "onlinepub": 319, "9699919799": 319, "basedef": 319, "v1_chap09": 319, "g_09_03": 319, "padding_idx": 320, "scale_grad_by_freq": 320, "idx": 323, "char_embedding_s": 324, "char": 324, "conv_window_s": 324, "xa": 324, "am": 324, "mp": 324, "embedding_s": 324, "_averagepool_2d_precomputed_pad": [325, 333], "pad_shap": [325, 329, 333, 336], "test_averagepool_2d_precomputed_pad": [325, 333], "_averagepool_2d_precomputed_pads_count_include_pad": [325, 333], "5200": [325, 333], "0800": [325, 333], "2400": [325, 333], "5600": [325, 333], "0400": [325, 333], "9600": [325, 333], "9200": [325, 333], "1200": [325, 333], "8800": [325, 333], "8400": [325, 333], "test_averagepool_2d_precomputed_pads_count_include_pad": [325, 333], "_averagepool_2d_precomputed_strid": [325, 333], "test_averagepool_2d_precomputed_strid": [325, 333], "_averagepool_2d_precomputed_same_upp": [325, 333], "test_averagepool_2d_precomputed_same_upp": [325, 333], "_averagepool_1d_default": [325, 333], "x_shape": [325, 329, 333, 336], "out_shap": [325, 329, 333, 336], "get_output_shap": [325, 329, 333, 336], "test_averagepool_1d_default": [325, 333], "_averagepool_2d_default": [325, 333], "test_averagepool_2d_default": [325, 333], "_averagepool_3d_default": [325, 333], "test_averagepool_3d_default": [325, 333], "_averagepool_2d_same_upp": [325, 333], "get_pad_shap": [325, 329, 333, 336], "pad_top": [325, 329, 333, 336], "pad_bottom": [325, 329, 333, 336], "pad_left": [325, 329, 333, 336], "pad_right": [325, 329, 333, 336], "constant_valu": [325, 329, 333, 336], "test_averagepool_2d_same_upp": [325, 333], "_averagepool_2d_same_low": [325, 333], "test_averagepool_2d_same_low": [325, 333], "_averagepool_2d_pad": [325, 333], "test_averagepool_2d_pad": [325, 333], "_averagepool_2d_pads_count_include_pad": [325, 333], "test_averagepool_2d_pads_count_include_pad": [325, 333], "_averagepool_2d_strid": [325, 333], "test_averagepool_2d_strid": [325, 333], "_averagepool_2d_ceil": [325, 333], "test_averagepool_2d_ceil": [325, 333], "_averagepool_2d_dil": [325, 333], "test_averagepool_2d_dil": [325, 333], "node_with_pad": [326, 334], "y_with_pad": [326, 334], "test_basic_conv_with_pad": [326, 334], "node_without_pad": [326, 334], "y_without_pad": [326, 334], "test_basic_conv_without_pad": [326, 334], "_conv_with_strid": [326, 334], "198": [326, 334, 335], "177": [326, 334], "test_conv_with_strides_pad": [326, 334], "test_conv_with_strides_no_pad": [326, 334], "nxcxhxw": [326, 334], "node_with_asymmetric_pad": [326, 334], "y_with_asymmetric_pad": [326, 334], "189": [326, 334, 335], "171": [326, 334, 335], "183": [326, 334], "test_conv_with_strides_and_asymmetric_pad": [326, 334], "_conv_with_autopad_sam": [326, 334], "test_conv_with_autopad_sam": [326, 334], "_maxpool_2d_uint8": [329, 336], "test_maxpool_2d_uint8": [329, 336], "_maxpool_2d_precomputed_pad": [329, 336], "test_maxpool_2d_precomputed_pad": [329, 336], "_maxpool_with_argmax_2d_precomputed_pad": [329, 336], "test_maxpool_with_argmax_2d_precomputed_pad": [329, 336], "_maxpool_2d_precomputed_strid": [329, 336], "test_maxpool_2d_precomputed_strid": [329, 336], "_maxpool_with_argmax_2d_precomputed_strid": [329, 336], "test_maxpool_with_argmax_2d_precomputed_strid": [329, 336], "_maxpool_2d_precomputed_same_upp": [329, 336], "test_maxpool_2d_precomputed_same_upp": [329, 336], "_maxpool_1d_default": [329, 336], "test_maxpool_1d_default": [329, 336], "_maxpool_2d_default": [329, 336], "test_maxpool_2d_default": [329, 336], "_maxpool_3d_default": [329, 336], "test_maxpool_3d_default": [329, 336], "_maxpool_2d_same_upp": [329, 336], "test_maxpool_2d_same_upp": [329, 336], "_maxpool_2d_same_low": [329, 336], "test_maxpool_2d_same_low": [329, 336], "_maxpool_2d_pad": [329, 336], "test_maxpool_2d_pad": [329, 336], "_maxpool_2d_strid": [329, 336], "test_maxpool_2d_strid": [329, 336], "_maxpool_2d_ceil": [329, 336], "test_maxpool_2d_ceil": [329, 336], "_maxpool_2d_dil": [329, 336], "test_maxpool_2d_dil": [329, 336], "coordinate_transformation_mod": 332, "_nearest": 332, "test_upsample_nearest": 332, "make_opsetid": 332, "test_convtranspos": 335, "_convtranspose_1d": 335, "test_convtranspose_1d": 335, "_convtranspose_3d": 335, "288": 335, "306": 335, "324": 335, "222": 335, "378": 335, "396": 335, "414": 335, "282": 335, "184": 335, "294": 335, "135": 335, "276": 335, "423": 335, "441": 335, "459": 335, "312": 335, "225": 335, "702": 335, "729": 335, "756": 335, "513": 335, "261": 335, "549": 335, "837": 335, "864": 335, "891": 335, "603": 335, "621": 335, "639": 335, "432": 335, "219": 335, "333": 335, "342": 335, "231": 335, "122": 335, "192": 335, "264": 335, "402": 335, "426": 335, "146": 335, "210": 335, "648": 335, "666": 335, "684": 335, "462": 335, "486": 335, "738": 335, "774": 335, "522": 335, "170": 335, "344": 335, "534": 335, "546": 335, "368": 335, "182": 335, "194": 335, "267": 335, "273": 335, "291": 335, "150": 335, "303": 335, "468": 335, "477": 335, "321": 335, "224": 335, "test_convtranspose_3d": 335, "_convtranspose_attribut": 335, "test_convtranspose_output_shap": 335, "test_convtranspose_pad": 335, "test_convtranspose_kernel_shap": 335, "_convtranspose_pad": 335, "_convtranspose_dil": 335, "test_convtranspose_dil": 335, "_convtranspose_autopad_sam": 335, "test_convtranspose_autopad_sam": 335, "column": 336, "_without_output_shap": 337, "xt": 337, "xi": 337, "test_maxunpool_export_without_output_shap": 337, "_with_output_shap": 337, "test_maxunpool_export_with_output_shap": 337, "affect": 340, "particip": 340, "amount": 340, "easi": 341, "rather": 341, "site": 341, "servic": 341, "At": 341, "briefli": 341, "ll": 341, "famou": 341, "home": 341, "xadupr": 341, "_logist": 341, "458": 341, "convergencewarn": 341, "lbfg": 341, "converg": 341, "NO": 341, "reach": 341, "max_it": 341, "shown": 341, "stabl": 341, "preprocess": 341, "altern": 341, "solver": 341, "n_iter_i": 341, "_check_optimize_result": 341, "commonli": 341, "compos": 341}, "objects": {"onnxruntime": [[0, 0, 1, "", "IOBinding"], [0, 0, 1, "", "InferenceSession"], [0, 0, 1, "", "ModelMetadata"], [0, 0, 1, "", "NodeArg"], [0, 0, 1, "", "OrtDevice"], [0, 0, 1, "", "OrtValue"], [0, 0, 1, "", "RunOptions"], [0, 0, 1, "", "SessionOptions"], [0, 0, 1, "", "SparseTensor"]], "onnxruntime.IOBinding": [[0, 1, 1, "", "bind_cpu_input"], [0, 1, 1, "", "bind_input"], [0, 1, 1, "", "bind_ortvalue_input"], [0, 1, 1, "", "bind_ortvalue_output"], [0, 1, 1, "", "bind_output"], [0, 1, 1, "", "copy_outputs_to_cpu"], [0, 1, 1, "", "get_outputs"]], "onnxruntime.InferenceSession": [[0, 1, 1, "", "disable_fallback"], [0, 1, 1, "", "enable_fallback"], [0, 1, 1, "", "end_profiling"], [0, 1, 1, "", "get_inputs"], [0, 1, 1, "", "get_modelmeta"], [0, 1, 1, "", "get_outputs"], [0, 1, 1, "", "get_overridable_initializers"], [0, 1, 1, "", "get_profiling_start_time_ns"], [0, 1, 1, "", "get_provider_options"], [0, 1, 1, "", "get_providers"], [0, 1, 1, "", "get_session_options"], [0, 1, 1, "", "io_binding"], [0, 1, 1, "", "run"], [0, 1, 1, "", "run_with_iobinding"], [0, 1, 1, "", "run_with_ort_values"], [0, 1, 1, "", "run_with_ortvaluevector"], [0, 1, 1, "", "set_providers"]], "onnxruntime.ModelMetadata": [[0, 2, 1, "", "custom_metadata_map"], [0, 2, 1, "", "description"], [0, 2, 1, "", "domain"], [0, 2, 1, "", "graph_description"], [0, 2, 1, "", "graph_name"], [0, 2, 1, "", "producer_name"], [0, 2, 1, "", "version"]], "onnxruntime.NodeArg": [[0, 2, 1, "", "name"], [0, 2, 1, "", "shape"], [0, 2, 1, "", "type"]], "onnxruntime.OrtValue": [[0, 1, 1, "", "as_sparse_tensor"], [0, 1, 1, "", "data_ptr"], [0, 1, 1, "", "data_type"], [0, 1, 1, "", "device_name"], [0, 1, 1, "", "element_type"], [0, 1, 1, "", "has_value"], [0, 1, 1, "", "is_sparse_tensor"], [0, 1, 1, "", "is_tensor"], [0, 1, 1, "", "is_tensor_sequence"], [0, 1, 1, "", "numpy"], [0, 1, 1, "", "ort_value_from_sparse_tensor"], [0, 1, 1, "", "ortvalue_from_numpy"], [0, 1, 1, "", "ortvalue_from_shape_and_type"], [0, 1, 1, "", "shape"], [0, 1, 1, "", "update_inplace"]], "onnxruntime.RunOptions": [[0, 1, 1, "", "add_run_config_entry"], [0, 1, 1, "", "get_run_config_entry"], [0, 2, 1, "", "log_severity_level"], [0, 2, 1, "", "log_verbosity_level"], [0, 2, 1, "", "logid"], [0, 2, 1, "", "only_execute_path_to_fetches"], [0, 2, 1, "", "terminate"]], "onnxruntime.SessionOptions": [[0, 1, 1, "", "add_external_initializers"], [0, 1, 1, "", "add_free_dimension_override_by_denotation"], [0, 1, 1, "", "add_free_dimension_override_by_name"], [0, 1, 1, "", "add_initializer"], [0, 1, 1, "", "add_session_config_entry"], [0, 2, 1, "", "enable_cpu_mem_arena"], [0, 2, 1, "", "enable_mem_pattern"], [0, 2, 1, "", "enable_mem_reuse"], [0, 2, 1, "", "enable_profiling"], [0, 2, 1, "", "execution_mode"], [0, 2, 1, "", "execution_order"], [0, 1, 1, "", "get_session_config_entry"], [0, 2, 1, "", "graph_optimization_level"], [0, 2, 1, "", "inter_op_num_threads"], [0, 2, 1, "", "intra_op_num_threads"], [0, 2, 1, "", "log_severity_level"], [0, 2, 1, "", "log_verbosity_level"], [0, 2, 1, "", "logid"], [0, 2, 1, "", "optimized_model_filepath"], [0, 2, 1, "", "profile_file_prefix"], [0, 1, 1, "", "register_custom_ops_library"], [0, 2, 1, "", "use_deterministic_compute"]], "onnxruntime.SparseTensor": [[0, 1, 1, "", "as_blocksparse_view"], [0, 1, 1, "", "as_coo_view"], [0, 1, 1, "", "as_csrc_view"], [0, 1, 1, "", "data_type"], [0, 1, 1, "", "dense_shape"], [0, 1, 1, "", "device_name"], [0, 1, 1, "", "format"], [0, 1, 1, "", "sparse_coo_from_numpy"], [0, 1, 1, "", "sparse_csr_from_numpy"], [0, 1, 1, "", "to_cuda"], [0, 1, 1, "", "values"]], "onnxruntime.backend": [[0, 3, 1, "", "is_compatible"], [0, 3, 1, "", "prepare"], [0, 3, 1, "", "run"], [0, 3, 1, "", "supports_device"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "overview": 0, "load": [0, 5, 341], "run": [0, 341], "model": [0, 5, 7, 8, 341], "data": 0, "input": 0, "output": 0, "cpu": 0, "devic": 0, "detail": 0, "inferencesess": 0, "option": [0, 132], "runopt": 0, "sessionopt": 0, "ortvalu": 0, "sparsetensor": 0, "iobind": 0, "ortdevic": 0, "intern": [0, 333, 334, 335, 336, 337, 338, 339, 340], "class": 0, "modelmetadata": 0, "nodearg": 0, "backend": [0, 2], "galleri": 1, "exampl": 1, "onnx": [2, 4, 5, 7, 9, 12, 13, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 341], "runtim": [2, 4, 5, 9, 12, 341], "common": 3, "error": 3, "onnxruntim": [3, 13], "train": [4, 9, 341], "convert": [4, 9, 341], "predict": [4, 5, 9], "pipelin": [4, 7], "convers": [4, 9], "format": [4, 7, 9, 341], "veri": 5, "simpl": [5, 8], "metadata": 6, "draw": 7, "retriev": 7, "json": 7, "profil": 8, "execut": 8, "logist": 9, "regress": 9, "probabl": 9, "benchmark": 9, "randomforest": 9, "comput": 10, "time": 10, "python": 12, "bind": 12, "oper": 13, "ab": 14, "1": [14, 17, 18, 19, 20, 21, 26, 27, 35, 37, 40, 43, 45, 47, 49, 52, 55, 58, 59, 60, 62, 63, 65, 66, 68, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 89, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 123, 124, 126, 130, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 168, 169, 174, 182, 184, 186, 189, 190, 191, 193, 194, 195, 196, 198, 199, 201, 202, 204, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 338, 340, 341], "aco": 15, "7": [15, 22, 24, 50, 125, 187, 203], "acosh": 16, "9": [16, 23, 25, 42, 46, 51, 67, 70, 97, 114, 129, 131, 171, 183, 185, 188, 205, 214, 337], "add": 17, "affin": 18, "And": 19, "argmax": 20, "argmin": 21, "asin": 22, "asinh": 23, "atan": 24, "atanh": 25, "averagepool": [26, 325, 333], "batchnorm": 27, "bernoulli": 28, "15": [28, 36, 132, 133, 134], "bitshift": 29, "11": [29, 44, 53, 57, 61, 76, 77, 149, 166, 172, 173, 175, 176, 177, 178, 179, 180, 197, 211, 333, 334, 336], "bitwiseand": 30, "18": [30, 31, 32, 33, 39, 41, 86, 121], "bitwisenot": 31, "bitwiseor": 32, "bitwisexor": 33, "blackmanwindow": 34, "17": [34, 54, 87, 88, 117, 167, 181], "cast": 35, "castlik": 36, "ceil": 37, "celu": 38, "12": [38, 64, 84, 103, 127, 192], "centercroppad": 39, "clip": 40, "col2im": 41, "compress": 42, "concat": 43, "concatfromsequ": 44, "constant": 45, "constantofshap": 46, "conv": [47, 326, 334], "convinteg": 48, "10": [48, 56, 96, 110, 122, 128, 141, 142, 143, 163, 164, 165, 200, 339], "convtranspos": [49, 335], "co": 50, "cosh": 51, "crop": 52, "cumsum": 53, "dft": 54, "depthtospac": 55, "dequantizelinear": [56, 253], "det": 57, "disentangledattention_trt": 58, "div": 59, "dropout": 60, "dynamicquantizelinear": 61, "dynamicslic": 62, "efficientnms_trt": 63, "einsum": 64, "elu": 65, "equal": 66, "erf": 67, "exp": 68, "expand": 69, "8": [69, 170], "eyelik": 70, "flatten": 71, "floor": 72, "gru": 73, "gruunit": 74, "gather": 75, "gatherel": 76, "gathernd": [77, 264], "gemm": 78, "giventensorfil": 79, "globalaveragepool": [80, 327], "globallppool": 81, "globalmaxpool": [82, 328], "greater": 83, "greaterorequ": 84, "gridsampl": [85, 268], "16": 85, "groupnorm": [86, 269], "hammingwindow": 87, "hannwindow": 88, "hardsigmoid": 89, "hardswish": 90, "14": [90, 210], "hardmax": 91, "ident": 92, "If": 93, "imagescal": 94, "instancenorm": 95, "isinf": 96, "isnan": 97, "lrn": 98, "lstm": 99, "layernorm": 100, "leakyrelu": 101, "less": 102, "lessorequ": 103, "log": 104, "logsoftmax": 105, "loop": 106, "lpnormal": 107, "lppool": 108, "matmul": 109, "matmulinteg": 110, "max": 111, "maxpool": [112, 329, 336], "maxroipool": 113, "maxunpool": [114, 337], "mean": 115, "meanvariancenorm": 116, "melweightmatrix": 117, "memcpyfromhost": 118, "memcpytohost": 119, "min": 120, "mish": 121, "mod": 122, "mul": 123, "multilevelcropandresize_trt": 124, "multinomi": 125, "neg": 126, "negativeloglikelihoodloss": 127, "nonmaxsuppress": 128, "nonzero": 129, "Not": 130, "onehot": 131, "optionalgetel": 133, "optionalhasel": 134, "Or": 135, "prelu": 136, "pad": [137, 283], "parametricsoftplu": 138, "pow": 139, "pyramidroialign_trt": 140, "qlinearconv": [141, 290, 339], "qlinearmatmul": 142, "quantizelinear": [143, 304], "rnn": 144, "randomnorm": 145, "randomnormallik": 146, "randomuniform": 147, "randomuniformlik": 148, "rang": [149, 307], "reciproc": 150, "reducel1": 151, "reducel2": 152, "reducelogsum": 153, "reducelogsumexp": 154, "reducemax": 155, "reducemean": 156, "reducemin": 157, "reduceprod": 158, "reducesum": 159, "reducesumsquar": 160, "relu": 161, "reshap": 162, "resiz": 163, "reversesequ": 164, "roialign": 165, "round": 166, "stft": 167, "scale": 168, "scaledtanh": 169, "scan": 170, "scatter": 171, "scatterel": 172, "scatternd": 173, "selu": 174, "sequenceat": 175, "sequenceconstruct": 176, "sequenceempti": 177, "sequenceeras": 178, "sequenceinsert": 179, "sequencelength": 180, "sequencemap": 181, "shape": 182, "shrink": 183, "sigmoid": 184, "sign": 185, "simplifiedlayernorm": 186, "sin": 187, "sinh": 188, "size": 189, "slice": 190, "softmax": 191, "softmaxcrossentropyloss": 192, "softplu": 193, "softsign": 194, "spacetodepth": 195, "split": 196, "splittosequ": 197, "sqrt": 198, "squeez": 199, "stringnorm": 200, "sub": 201, "sum": 202, "tan": 203, "tanh": 204, "tfidfvector": 205, "thresholdedrelu": 206, "tile": 207, "topk": 208, "transpos": 209, "trilu": [210, 322], "uniqu": [211, 323], "unsqueez": 212, "upsampl": [213, 332], "where": 214, "xor": 215, "ai": [216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "ml": [216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "arrayfeatureextractor": 216, "binar": 217, "castmap": 218, "categorymapp": 219, "dictvector": 220, "featurevector": 221, "imput": 222, "labelencod": 223, "linearclassifi": 224, "linearregressor": 225, "normal": 226, "onehotencod": 227, "svmclassifi": 228, "svmregressor": 229, "scaler": 230, "treeensembleclassifi": 231, "treeensembleregressor": 232, "zipmap": 233, "com": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "microsoft": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "attent": 234, "attnlstm": 235, "beamsearch": 236, "biasadd": 237, "biasdropout": 238, "biasgelu": 239, "biassoftmax": 240, "biassplitgelu": 241, "bifurcationdetector": 242, "bitmaskbiasdropout": 243, "bitmaskdropout": 244, "cdist": 245, "complexmul": 246, "complexmulconj": 247, "convtransposewithdynamicpad": 248, "cropandres": 249, "decoderattent": 250, "decodermaskedmultiheadattent": 251, "dequantizebfp": 252, "dequantizewithord": 254, "dynamicquantizelstm": 255, "dynamicquantizematmul": 256, "embedlayernorm": 257, "expanddim": 258, "fastgelu": 259, "fusedconv": 260, "fusedgemm": 261, "fusedmatmul": 262, "gatedrelativepositionbia": 263, "gelu": 265, "gemmfastgelu": 266, "greedysearch": 267, "invers": 270, "irfft": 271, "isallfinit": 272, "longformerattent": 273, "matmulinteger16": 274, "matmulintegertofloat": 275, "maxpoolwithmask": 276, "mulinteg": 277, "multiheadattent": 278, "murmurhash3": 279, "ngramrepeatblock": 280, "nhwcconv": 281, "nhwcmaxpool": 282, "qattent": 284, "qembedlayernorm": 285, "qgemm": 286, "qlinearadd": 287, "qlinearaveragepool": [288, 338], "qlinearconcat": 289, "qlinearglobalaveragepool": 291, "qlinearleakyrelu": 292, "qlinearmul": 293, "qlinearreducemean": 294, "qlinearsigmoid": 295, "qlinearsoftmax": 296, "qlinearwher": 297, "qorderedattent": 298, "qorderedgelu": 299, "qorderedlayernorm": 300, "qorderedlongformerattent": 301, "qorderedmatmul": 302, "quantizebfp": 303, "quantizewithord": 305, "quickgelu": 306, "reducesuminteg": 308, "relativepositionbia": 309, "removepad": 310, "restorepad": 311, "rfft": 312, "sampleop": 313, "sampl": 314, "skiplayernorm": 315, "skipsimplifiedlayernorm": 316, "snpe": 317, "sparsetodensematmul": 318, "token": 319, "torchembed": 320, "transposematmul": 321, "wordconvembed": 324, "nchwc": [325, 326, 327, 328, 329, 330, 331, 332], "reorderinput": 330, "reorderoutput": 331, "m": [333, 334, 335, 336, 337, 338, 339, 340], "nhwc": [333, 334, 335, 336, 337, 338, 339, 340], "qlinearconvtranspos": 340, "tutori": 341, "step": 341, "us": 341, "your": 341, "favorit": 341, "framework": 341, "2": 341, "export": 341, "3": 341}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"API": [[0, "api"]], "API Overview": [[0, "api-overview"]], "Load and run a model": [[0, "load-and-run-a-model"]], "Data inputs and outputs": [[0, "data-inputs-and-outputs"]], "Data on CPU": [[0, "data-on-cpu"]], "Data on device": [[0, "data-on-device"]], "API Details": [[0, "api-details"]], "InferenceSession": [[0, "inferencesession"]], "Options": [[0, "options"]], "RunOptions": [[0, "runoptions"]], "SessionOptions": [[0, "sessionoptions"]], "Data": [[0, "data"]], "OrtValue": [[0, "ortvalue"]], "SparseTensor": [[0, "sparsetensor"]], "Devices": [[0, "devices"]], "IOBinding": [[0, "iobinding"]], "OrtDevice": [[0, "ortdevice"]], "Internal classes": [[0, "internal-classes"]], "ModelMetadata": [[0, "modelmetadata"]], "NodeArg": [[0, "nodearg"]], "Backend": [[0, "backend"]], "Gallery of examples": [[1, "gallery-of-examples"]], "ONNX Runtime Backend for ONNX": [[2, "onnx-runtime-backend-for-onnx"]], "Common errors with onnxruntime": [[3, "common-errors-with-onnxruntime"]], "Train, convert and predict with ONNX Runtime": [[4, "train-convert-and-predict-with-onnx-runtime"], [9, "train-convert-and-predict-with-onnx-runtime"]], "Train a pipeline": [[4, "train-a-pipeline"]], "Conversion to ONNX format": [[4, "conversion-to-onnx-format"], [9, "conversion-to-onnx-format"]], "Load and predict with ONNX Runtime and a very simple model": [[5, "load-and-predict-with-onnx-runtime-and-a-very-simple-model"]], "Metadata": [[6, "metadata"]], "Draw a pipeline": [[7, "draw-a-pipeline"]], "Retrieve a model in JSON format": [[7, "retrieve-a-model-in-json-format"]], "Draw a model with ONNX": [[7, "draw-a-model-with-onnx"]], "Profile the execution of a simple model": [[8, "profile-the-execution-of-a-simple-model"]], "Train a logistic regression": [[9, "train-a-logistic-regression"]], "Probabilities": [[9, "probabilities"]], "Benchmark with RandomForest": [[9, "benchmark-with-randomforest"]], "Computation times": [[10, "computation-times"]], "Python Bindings for ONNX Runtime": [[12, "python-bindings-for-onnx-runtime"]], "ONNX Operators in onnxruntime": [[13, "onnx-operators-in-onnxruntime"]], "Abs": [[14, "abs"]], "Abs - 1": [[14, "abs-1"]], "Acos": [[15, "acos"]], "Acos - 7": [[15, "acos-7"]], "Acosh": [[16, "acosh"]], "Acosh - 9": [[16, "acosh-9"]], "Add": [[17, "add"]], "Add - 1": [[17, "add-1"]], "Affine": [[18, "affine"]], "Affine - 1": [[18, "affine-1"]], "And": [[19, "and"]], "And - 1": [[19, "and-1"]], "ArgMax": [[20, "argmax"]], "ArgMax - 1": [[20, "argmax-1"]], "ArgMin": [[21, "argmin"]], "ArgMin - 1": [[21, "argmin-1"]], "Asin": [[22, "asin"]], "Asin - 7": [[22, "asin-7"]], "Asinh": [[23, "asinh"]], "Asinh - 9": [[23, "asinh-9"]], "Atan": [[24, "atan"]], "Atan - 7": [[24, "atan-7"]], "Atanh": [[25, "atanh"]], "Atanh - 9": [[25, "atanh-9"]], "AveragePool": [[26, "averagepool"]], "AveragePool - 1": [[26, "averagepool-1"], [325, "averagepool-1"]], "BatchNormalization": [[27, "batchnormalization"]], "BatchNormalization - 1": [[27, "batchnormalization-1"]], "Bernoulli": [[28, "bernoulli"]], "Bernoulli - 15": [[28, "bernoulli-15"]], "BitShift": [[29, "bitshift"]], "BitShift - 11": [[29, "bitshift-11"]], "BitwiseAnd": [[30, "bitwiseand"]], "BitwiseAnd - 18": [[30, "bitwiseand-18"]], "BitwiseNot": [[31, "bitwisenot"]], "BitwiseNot - 18": [[31, "bitwisenot-18"]], "BitwiseOr": [[32, "bitwiseor"]], "BitwiseOr - 18": [[32, "bitwiseor-18"]], "BitwiseXor": [[33, "bitwisexor"]], "BitwiseXor - 18": [[33, "bitwisexor-18"]], "BlackmanWindow": [[34, "blackmanwindow"]], "BlackmanWindow - 17": [[34, "blackmanwindow-17"]], "Cast": [[35, "cast"]], "Cast - 1": [[35, "cast-1"]], "CastLike": [[36, "castlike"]], "CastLike - 15": [[36, "castlike-15"]], "Ceil": [[37, "ceil"]], "Ceil - 1": [[37, "ceil-1"]], "Celu": [[38, "celu"]], "Celu - 12": [[38, "celu-12"]], "CenterCropPad": [[39, "centercroppad"]], "CenterCropPad - 18": [[39, "centercroppad-18"]], "Clip": [[40, "clip"]], "Clip - 1": [[40, "clip-1"]], "Col2Im": [[41, "col2im"]], "Col2Im - 18": [[41, "col2im-18"]], "Compress": [[42, "compress"]], "Compress - 9": [[42, "compress-9"]], "Concat": [[43, "concat"]], "Concat - 1": [[43, "concat-1"]], "ConcatFromSequence": [[44, "concatfromsequence"]], "ConcatFromSequence - 11": [[44, "concatfromsequence-11"]], "Constant": [[45, "constant"]], "Constant - 1": [[45, "constant-1"]], "ConstantOfShape": [[46, "constantofshape"]], "ConstantOfShape - 9": [[46, "constantofshape-9"]], "Conv": [[47, "conv"]], "Conv - 1": [[47, "conv-1"], [326, "conv-1"]], "ConvInteger": [[48, "convinteger"]], "ConvInteger - 10": [[48, "convinteger-10"]], "ConvTranspose": [[49, "convtranspose"]], "ConvTranspose - 1": [[49, "convtranspose-1"], [335, "convtranspose-1"]], "Cos": [[50, "cos"]], "Cos - 7": [[50, "cos-7"]], "Cosh": [[51, "cosh"]], "Cosh - 9": [[51, "cosh-9"]], "Crop": [[52, "crop"]], "Crop - 1": [[52, "crop-1"]], "CumSum": [[53, "cumsum"]], "CumSum - 11": [[53, "cumsum-11"]], "DFT": [[54, "dft"]], "DFT - 17": [[54, "dft-17"]], "DepthToSpace": [[55, "depthtospace"]], "DepthToSpace - 1": [[55, "depthtospace-1"]], "DequantizeLinear": [[56, "dequantizelinear"]], "DequantizeLinear - 10": [[56, "dequantizelinear-10"]], "Det": [[57, "det"]], "Det - 11": [[57, "det-11"]], "DisentangledAttention_TRT": [[58, "disentangledattention-trt"]], "DisentangledAttention_TRT - 1": [[58, "disentangledattention-trt-1"]], "Div": [[59, "div"]], "Div - 1": [[59, "div-1"]], "Dropout": [[60, "dropout"]], "Dropout - 1": [[60, "dropout-1"]], "DynamicQuantizeLinear": [[61, "dynamicquantizelinear"]], "DynamicQuantizeLinear - 11": [[61, "dynamicquantizelinear-11"]], "DynamicSlice": [[62, "dynamicslice"]], "DynamicSlice - 1": [[62, "dynamicslice-1"]], "EfficientNMS_TRT": [[63, "efficientnms-trt"]], "EfficientNMS_TRT - 1": [[63, "efficientnms-trt-1"]], "Einsum": [[64, "einsum"]], "Einsum - 12": [[64, "einsum-12"]], "Elu": [[65, "elu"]], "Elu - 1": [[65, "elu-1"]], "Equal": [[66, "equal"]], "Equal - 1": [[66, "equal-1"]], "Erf": [[67, "erf"]], "Erf - 9": [[67, "erf-9"]], "Exp": [[68, "exp"]], "Exp - 1": [[68, "exp-1"]], "Expand": [[69, "expand"]], "Expand - 8": [[69, "expand-8"]], "EyeLike": [[70, "eyelike"]], "EyeLike - 9": [[70, "eyelike-9"]], "Flatten": [[71, "flatten"]], "Flatten - 1": [[71, "flatten-1"]], "Floor": [[72, "floor"]], "Floor - 1": [[72, "floor-1"]], "GRU": [[73, "gru"]], "GRU - 1": [[73, "gru-1"]], "GRUUnit": [[74, "gruunit"]], "GRUUnit - 1": [[74, "gruunit-1"]], "Gather": [[75, "gather"]], "Gather - 1": [[75, "gather-1"]], "GatherElements": [[76, "gatherelements"]], "GatherElements - 11": [[76, "gatherelements-11"]], "GatherND": [[77, "gathernd"]], "GatherND - 11": [[77, "gathernd-11"]], "Gemm": [[78, "gemm"]], "Gemm - 1": [[78, "gemm-1"]], "GivenTensorFill": [[79, "giventensorfill"]], "GivenTensorFill - 1": [[79, "giventensorfill-1"]], "GlobalAveragePool": [[80, "globalaveragepool"]], "GlobalAveragePool - 1": [[80, "globalaveragepool-1"], [327, "globalaveragepool-1"]], "GlobalLpPool": [[81, "globallppool"]], "GlobalLpPool - 1": [[81, "globallppool-1"]], "GlobalMaxPool": [[82, "globalmaxpool"]], "GlobalMaxPool - 1": [[82, "globalmaxpool-1"], [328, "globalmaxpool-1"]], "Greater": [[83, "greater"]], "Greater - 1": [[83, "greater-1"]], "GreaterOrEqual": [[84, "greaterorequal"]], "GreaterOrEqual - 12": [[84, "greaterorequal-12"]], "GridSample": [[85, "gridsample"]], "GridSample - 16": [[85, "gridsample-16"]], "GroupNormalization": [[86, "groupnormalization"]], "GroupNormalization - 18": [[86, "groupnormalization-18"]], "HammingWindow": [[87, "hammingwindow"]], "HammingWindow - 17": [[87, "hammingwindow-17"]], "HannWindow": [[88, "hannwindow"]], "HannWindow - 17": [[88, "hannwindow-17"]], "HardSigmoid": [[89, "hardsigmoid"]], "HardSigmoid - 1": [[89, "hardsigmoid-1"]], "HardSwish": [[90, "hardswish"]], "HardSwish - 14": [[90, "hardswish-14"]], "Hardmax": [[91, "hardmax"]], "Hardmax - 1": [[91, "hardmax-1"]], "Identity": [[92, "l-onnx-doc-identity"]], "Identity - 1": [[92, "l-onnx-op-identity-1"]], "If": [[93, "if"]], "If - 1": [[93, "if-1"]], "ImageScaler": [[94, "imagescaler"]], "ImageScaler - 1": [[94, "imagescaler-1"]], "InstanceNormalization": [[95, "instancenormalization"]], "InstanceNormalization - 1": [[95, "instancenormalization-1"]], "IsInf": [[96, "isinf"]], "IsInf - 10": [[96, "isinf-10"]], "IsNaN": [[97, "isnan"]], "IsNaN - 9": [[97, "isnan-9"]], "LRN": [[98, "lrn"]], "LRN - 1": [[98, "lrn-1"]], "LSTM": [[99, "lstm"]], "LSTM - 1": [[99, "lstm-1"]], "LayerNormalization": [[100, "layernormalization"]], "LayerNormalization - 1": [[100, "layernormalization-1"]], "LeakyRelu": [[101, "leakyrelu"]], "LeakyRelu - 1": [[101, "leakyrelu-1"]], "Less": [[102, "less"]], "Less - 1": [[102, "less-1"]], "LessOrEqual": [[103, "lessorequal"]], "LessOrEqual - 12": [[103, "lessorequal-12"]], "Log": [[104, "log"]], "Log - 1": [[104, "log-1"]], "LogSoftmax": [[105, "logsoftmax"]], "LogSoftmax - 1": [[105, "logsoftmax-1"]], "Loop": [[106, "loop"]], "Loop - 1": [[106, "loop-1"]], "LpNormalization": [[107, "lpnormalization"]], "LpNormalization - 1": [[107, "lpnormalization-1"]], "LpPool": [[108, "lppool"]], "LpPool - 1": [[108, "lppool-1"]], "MatMul": [[109, "matmul"]], "MatMul - 1": [[109, "matmul-1"]], "MatMulInteger": [[110, "matmulinteger"]], "MatMulInteger - 10": [[110, "matmulinteger-10"]], "Max": [[111, "max"]], "Max - 1": [[111, "max-1"]], "MaxPool": [[112, "maxpool"]], "MaxPool - 1": [[112, "maxpool-1"], [329, "maxpool-1"]], "MaxRoiPool": [[113, "maxroipool"]], "MaxRoiPool - 1": [[113, "maxroipool-1"]], "MaxUnpool": [[114, "maxunpool"]], "MaxUnpool - 9": [[114, "maxunpool-9"], [337, "maxunpool-9"]], "Mean": [[115, "mean"]], "Mean - 1": [[115, "mean-1"]], "MeanVarianceNormalization": [[116, "meanvariancenormalization"]], "MeanVarianceNormalization - 1": [[116, "meanvariancenormalization-1"]], "MelWeightMatrix": [[117, "melweightmatrix"]], "MelWeightMatrix - 17": [[117, "melweightmatrix-17"]], "MemcpyFromHost": [[118, "memcpyfromhost"]], "MemcpyFromHost - 1": [[118, "memcpyfromhost-1"]], "MemcpyToHost": [[119, "memcpytohost"]], "MemcpyToHost - 1": [[119, "memcpytohost-1"]], "Min": [[120, "min"]], "Min - 1": [[120, "min-1"]], "Mish": [[121, "mish"]], "Mish - 18": [[121, "mish-18"]], "Mod": [[122, "mod"]], "Mod - 10": [[122, "mod-10"]], "Mul": [[123, "mul"]], "Mul - 1": [[123, "mul-1"]], "MultilevelCropAndResize_TRT": [[124, "multilevelcropandresize-trt"]], "MultilevelCropAndResize_TRT - 1": [[124, "multilevelcropandresize-trt-1"]], "Multinomial": [[125, "multinomial"]], "Multinomial - 7": [[125, "multinomial-7"]], "Neg": [[126, "neg"]], "Neg - 1": [[126, "neg-1"]], "NegativeLogLikelihoodLoss": [[127, "negativeloglikelihoodloss"]], "NegativeLogLikelihoodLoss - 12": [[127, "negativeloglikelihoodloss-12"]], "NonMaxSuppression": [[128, "nonmaxsuppression"]], "NonMaxSuppression - 10": [[128, "nonmaxsuppression-10"]], "NonZero": [[129, "nonzero"]], "NonZero - 9": [[129, "nonzero-9"]], "Not": [[130, "not"]], "Not - 1": [[130, "not-1"]], "OneHot": [[131, "onehot"]], "OneHot - 9": [[131, "onehot-9"]], "Optional": [[132, "optional"]], "Optional - 15": [[132, "optional-15"]], "OptionalGetElement": [[133, "optionalgetelement"]], "OptionalGetElement - 15": [[133, "optionalgetelement-15"]], "OptionalHasElement": [[134, "optionalhaselement"]], "OptionalHasElement - 15": [[134, "optionalhaselement-15"]], "Or": [[135, "or"]], "Or - 1": [[135, "or-1"]], "PRelu": [[136, "prelu"]], "PRelu - 1": [[136, "prelu-1"]], "Pad": [[137, "pad"]], "Pad - 1": [[137, "pad-1"], [283, "pad-1"]], "ParametricSoftplus": [[138, "parametricsoftplus"]], "ParametricSoftplus - 1": [[138, "parametricsoftplus-1"]], "Pow": [[139, "pow"]], "Pow - 1": [[139, "pow-1"]], "PyramidROIAlign_TRT": [[140, "pyramidroialign-trt"]], "PyramidROIAlign_TRT - 1": [[140, "pyramidroialign-trt-1"]], "QLinearConv": [[141, "qlinearconv"]], "QLinearConv - 10": [[141, "qlinearconv-10"], [339, "qlinearconv-10"]], "QLinearMatMul": [[142, "qlinearmatmul"]], "QLinearMatMul - 10": [[142, "qlinearmatmul-10"]], "QuantizeLinear": [[143, "quantizelinear"]], "QuantizeLinear - 10": [[143, "quantizelinear-10"]], "RNN": [[144, "rnn"]], "RNN - 1": [[144, "rnn-1"]], "RandomNormal": [[145, "randomnormal"]], "RandomNormal - 1": [[145, "randomnormal-1"]], "RandomNormalLike": [[146, "randomnormallike"]], "RandomNormalLike - 1": [[146, "randomnormallike-1"]], "RandomUniform": [[147, "randomuniform"]], "RandomUniform - 1": [[147, "randomuniform-1"]], "RandomUniformLike": [[148, "randomuniformlike"]], "RandomUniformLike - 1": [[148, "randomuniformlike-1"]], "Range": [[149, "range"]], "Range - 11": [[149, "range-11"]], "Reciprocal": [[150, "reciprocal"]], "Reciprocal - 1": [[150, "reciprocal-1"]], "ReduceL1": [[151, "reducel1"]], "ReduceL1 - 1": [[151, "reducel1-1"]], "ReduceL2": [[152, "reducel2"]], "ReduceL2 - 1": [[152, "reducel2-1"]], "ReduceLogSum": [[153, "reducelogsum"]], "ReduceLogSum - 1": [[153, "reducelogsum-1"]], "ReduceLogSumExp": [[154, "reducelogsumexp"]], "ReduceLogSumExp - 1": [[154, "reducelogsumexp-1"]], "ReduceMax": [[155, "reducemax"]], "ReduceMax - 1": [[155, "reducemax-1"]], "ReduceMean": [[156, "reducemean"]], "ReduceMean - 1": [[156, "reducemean-1"]], "ReduceMin": [[157, "reducemin"]], "ReduceMin - 1": [[157, "reducemin-1"]], "ReduceProd": [[158, "reduceprod"]], "ReduceProd - 1": [[158, "reduceprod-1"]], "ReduceSum": [[159, "reducesum"]], "ReduceSum - 1": [[159, "reducesum-1"]], "ReduceSumSquare": [[160, "reducesumsquare"]], "ReduceSumSquare - 1": [[160, "reducesumsquare-1"]], "Relu": [[161, "relu"]], "Relu - 1": [[161, "relu-1"]], "Reshape": [[162, "reshape"]], "Reshape - 1": [[162, "reshape-1"]], "Resize": [[163, "resize"]], "Resize - 10": [[163, "resize-10"]], "ReverseSequence": [[164, "reversesequence"]], "ReverseSequence - 10": [[164, "reversesequence-10"]], "RoiAlign": [[165, "roialign"]], "RoiAlign - 10": [[165, "roialign-10"]], "Round": [[166, "round"]], "Round - 11": [[166, "round-11"]], "STFT": [[167, "stft"]], "STFT - 17": [[167, "stft-17"]], "Scale": [[168, "scale"]], "Scale - 1": [[168, "scale-1"]], "ScaledTanh": [[169, "scaledtanh"]], "ScaledTanh - 1": [[169, "scaledtanh-1"]], "Scan": [[170, "scan"]], "Scan - 8": [[170, "scan-8"]], "Scatter": [[171, "scatter"]], "Scatter - 9": [[171, "scatter-9"]], "ScatterElements": [[172, "scatterelements"]], "ScatterElements - 11": [[172, "scatterelements-11"]], "ScatterND": [[173, "scatternd"]], "ScatterND - 11": [[173, "scatternd-11"]], "Selu": [[174, "selu"]], "Selu - 1": [[174, "selu-1"]], "SequenceAt": [[175, "sequenceat"]], "SequenceAt - 11": [[175, "sequenceat-11"]], "SequenceConstruct": [[176, "sequenceconstruct"]], "SequenceConstruct - 11": [[176, "sequenceconstruct-11"]], "SequenceEmpty": [[177, "sequenceempty"]], "SequenceEmpty - 11": [[177, "sequenceempty-11"]], "SequenceErase": [[178, "sequenceerase"]], "SequenceErase - 11": [[178, "sequenceerase-11"]], "SequenceInsert": [[179, "sequenceinsert"]], "SequenceInsert - 11": [[179, "sequenceinsert-11"]], "SequenceLength": [[180, "sequencelength"]], "SequenceLength - 11": [[180, "sequencelength-11"]], "SequenceMap": [[181, "sequencemap"]], "SequenceMap - 17": [[181, "sequencemap-17"]], "Shape": [[182, "shape"]], "Shape - 1": [[182, "shape-1"]], "Shrink": [[183, "shrink"]], "Shrink - 9": [[183, "shrink-9"]], "Sigmoid": [[184, "sigmoid"]], "Sigmoid - 1": [[184, "sigmoid-1"]], "Sign": [[185, "sign"]], "Sign - 9": [[185, "sign-9"]], "SimplifiedLayerNormalization": [[186, "simplifiedlayernormalization"]], "SimplifiedLayerNormalization - 1": [[186, "simplifiedlayernormalization-1"]], "Sin": [[187, "sin"]], "Sin - 7": [[187, "sin-7"]], "Sinh": [[188, "sinh"]], "Sinh - 9": [[188, "sinh-9"]], "Size": [[189, "size"]], "Size - 1": [[189, "size-1"]], "Slice": [[190, "slice"]], "Slice - 1": [[190, "slice-1"]], "Softmax": [[191, "softmax"]], "Softmax - 1": [[191, "softmax-1"]], "SoftmaxCrossEntropyLoss": [[192, "softmaxcrossentropyloss"]], "SoftmaxCrossEntropyLoss - 12": [[192, "softmaxcrossentropyloss-12"]], "Softplus": [[193, "softplus"]], "Softplus - 1": [[193, "softplus-1"]], "Softsign": [[194, "softsign"]], "Softsign - 1": [[194, "softsign-1"]], "SpaceToDepth": [[195, "spacetodepth"]], "SpaceToDepth - 1": [[195, "spacetodepth-1"]], "Split": [[196, "split"]], "Split - 1": [[196, "split-1"]], "SplitToSequence": [[197, "splittosequence"]], "SplitToSequence - 11": [[197, "splittosequence-11"]], "Sqrt": [[198, "sqrt"]], "Sqrt - 1": [[198, "sqrt-1"]], "Squeeze": [[199, "squeeze"]], "Squeeze - 1": [[199, "squeeze-1"]], "StringNormalizer": [[200, "stringnormalizer"]], "StringNormalizer - 10": [[200, "stringnormalizer-10"]], "Sub": [[201, "sub"]], "Sub - 1": [[201, "sub-1"]], "Sum": [[202, "sum"]], "Sum - 1": [[202, "sum-1"]], "Tan": [[203, "tan"]], "Tan - 7": [[203, "tan-7"]], "Tanh": [[204, "tanh"]], "Tanh - 1": [[204, "tanh-1"]], "TfIdfVectorizer": [[205, "tfidfvectorizer"]], "TfIdfVectorizer - 9": [[205, "tfidfvectorizer-9"]], "ThresholdedRelu": [[206, "thresholdedrelu"]], "ThresholdedRelu - 1": [[206, "thresholdedrelu-1"]], "Tile": [[207, "tile"]], "Tile - 1": [[207, "tile-1"]], "TopK": [[208, "topk"]], "TopK - 1": [[208, "topk-1"]], "Transpose": [[209, "transpose"]], "Transpose - 1": [[209, "transpose-1"]], "Trilu": [[210, "trilu"]], "Trilu - 14": [[210, "trilu-14"]], "Unique": [[211, "unique"]], "Unique - 11": [[211, "unique-11"]], "Unsqueeze": [[212, "unsqueeze"]], "Unsqueeze - 1": [[212, "unsqueeze-1"]], "Upsample": [[213, "upsample"]], "Upsample - 1": [[213, "upsample-1"], [332, "upsample-1"]], "Where": [[214, "where"]], "Where - 9": [[214, "where-9"]], "Xor": [[215, "xor"]], "Xor - 1": [[215, "xor-1"]], "ai.onnx.ml - ArrayFeatureExtractor": [[216, "ai-onnx-ml-arrayfeatureextractor"]], "ArrayFeatureExtractor - 1": [[216, "arrayfeatureextractor-1"]], "ai.onnx.ml - Binarizer": [[217, "ai-onnx-ml-binarizer"]], "Binarizer - 1": [[217, "binarizer-1"]], "ai.onnx.ml - CastMap": [[218, "ai-onnx-ml-castmap"]], "CastMap - 1": [[218, "castmap-1"]], "ai.onnx.ml - CategoryMapper": [[219, "ai-onnx-ml-categorymapper"]], "CategoryMapper - 1": [[219, "categorymapper-1"]], "ai.onnx.ml - DictVectorizer": [[220, "ai-onnx-ml-dictvectorizer"]], "DictVectorizer - 1": [[220, "dictvectorizer-1"]], "ai.onnx.ml - FeatureVectorizer": [[221, "ai-onnx-ml-featurevectorizer"]], "FeatureVectorizer - 1": [[221, "featurevectorizer-1"]], "ai.onnx.ml - Imputer": [[222, "ai-onnx-ml-imputer"]], "Imputer - 1": [[222, "imputer-1"]], "ai.onnx.ml - LabelEncoder": [[223, "ai-onnx-ml-labelencoder"]], "LabelEncoder - 1": [[223, "labelencoder-1"]], "ai.onnx.ml - LinearClassifier": [[224, "ai-onnx-ml-linearclassifier"]], "LinearClassifier - 1": [[224, "linearclassifier-1"]], "ai.onnx.ml - LinearRegressor": [[225, "ai-onnx-ml-linearregressor"]], "LinearRegressor - 1": [[225, "linearregressor-1"]], "ai.onnx.ml - Normalizer": [[226, "ai-onnx-ml-normalizer"]], "Normalizer - 1": [[226, "normalizer-1"]], "ai.onnx.ml - OneHotEncoder": [[227, "ai-onnx-ml-onehotencoder"]], "OneHotEncoder - 1": [[227, "onehotencoder-1"]], "ai.onnx.ml - SVMClassifier": [[228, "ai-onnx-ml-svmclassifier"]], "SVMClassifier - 1": [[228, "svmclassifier-1"]], "ai.onnx.ml - SVMRegressor": [[229, "ai-onnx-ml-svmregressor"]], "SVMRegressor - 1": [[229, "svmregressor-1"]], "ai.onnx.ml - Scaler": [[230, "ai-onnx-ml-scaler"]], "Scaler - 1": [[230, "scaler-1"]], "ai.onnx.ml - TreeEnsembleClassifier": [[231, "ai-onnx-ml-treeensembleclassifier"]], "TreeEnsembleClassifier - 1": [[231, "treeensembleclassifier-1"]], "ai.onnx.ml - TreeEnsembleRegressor": [[232, "ai-onnx-ml-treeensembleregressor"]], "TreeEnsembleRegressor - 1": [[232, "treeensembleregressor-1"]], "ai.onnx.ml - ZipMap": [[233, "ai-onnx-ml-zipmap"]], "ZipMap - 1": [[233, "zipmap-1"]], "com.microsoft - Attention": [[234, "com-microsoft-attention"]], "Attention - 1": [[234, "attention-1"]], "com.microsoft - AttnLSTM": [[235, "com-microsoft-attnlstm"]], "AttnLSTM - 1": [[235, "attnlstm-1"]], "com.microsoft - BeamSearch": [[236, "com-microsoft-beamsearch"]], "BeamSearch - 1": [[236, "beamsearch-1"]], "com.microsoft - BiasAdd": [[237, "com-microsoft-biasadd"]], "BiasAdd - 1": [[237, "biasadd-1"]], "com.microsoft - BiasDropout": [[238, "com-microsoft-biasdropout"]], "BiasDropout - 1": [[238, "biasdropout-1"]], "com.microsoft - BiasGelu": [[239, "com-microsoft-biasgelu"]], "BiasGelu - 1": [[239, "biasgelu-1"]], "com.microsoft - BiasSoftmax": [[240, "com-microsoft-biassoftmax"]], "BiasSoftmax - 1": [[240, "biassoftmax-1"]], "com.microsoft - BiasSplitGelu": [[241, "com-microsoft-biassplitgelu"]], "BiasSplitGelu - 1": [[241, "biassplitgelu-1"]], "com.microsoft - BifurcationDetector": [[242, "com-microsoft-bifurcationdetector"]], "BifurcationDetector - 1": [[242, "bifurcationdetector-1"]], "com.microsoft - BitmaskBiasDropout": [[243, "com-microsoft-bitmaskbiasdropout"]], "BitmaskBiasDropout - 1": [[243, "bitmaskbiasdropout-1"]], "com.microsoft - BitmaskDropout": [[244, "com-microsoft-bitmaskdropout"]], "BitmaskDropout - 1": [[244, "bitmaskdropout-1"]], "com.microsoft - CDist": [[245, "com-microsoft-cdist"]], "CDist - 1": [[245, "cdist-1"]], "com.microsoft - ComplexMul": [[246, "com-microsoft-complexmul"]], "ComplexMul - 1": [[246, "complexmul-1"]], "com.microsoft - ComplexMulConj": [[247, "com-microsoft-complexmulconj"]], "ComplexMulConj - 1": [[247, "complexmulconj-1"]], "com.microsoft - ConvTransposeWithDynamicPads": [[248, "com-microsoft-convtransposewithdynamicpads"]], "ConvTransposeWithDynamicPads - 1": [[248, "convtransposewithdynamicpads-1"]], "com.microsoft - CropAndResize": [[249, "com-microsoft-cropandresize"]], "CropAndResize - 1": [[249, "cropandresize-1"]], "com.microsoft - DecoderAttention": [[250, "com-microsoft-decoderattention"]], "DecoderAttention - 1": [[250, "decoderattention-1"]], "com.microsoft - DecoderMaskedMultiheadAttention": [[251, "com-microsoft-decodermaskedmultiheadattention"]], "DecoderMaskedMultiheadAttention - 1": [[251, "decodermaskedmultiheadattention-1"]], "com.microsoft - DequantizeBFP": [[252, "com-microsoft-dequantizebfp"]], "DequantizeBFP - 1": [[252, "dequantizebfp-1"]], "com.microsoft - DequantizeLinear": [[253, "com-microsoft-dequantizelinear"]], "DequantizeLinear - 1": [[253, "dequantizelinear-1"]], "com.microsoft - DequantizeWithOrder": [[254, "com-microsoft-dequantizewithorder"]], "DequantizeWithOrder - 1": [[254, "dequantizewithorder-1"]], "com.microsoft - DynamicQuantizeLSTM": [[255, "com-microsoft-dynamicquantizelstm"]], "DynamicQuantizeLSTM - 1": [[255, "dynamicquantizelstm-1"]], "com.microsoft - DynamicQuantizeMatMul": [[256, "com-microsoft-dynamicquantizematmul"]], "DynamicQuantizeMatMul - 1": [[256, "dynamicquantizematmul-1"]], "com.microsoft - EmbedLayerNormalization": [[257, "com-microsoft-embedlayernormalization"]], "EmbedLayerNormalization - 1": [[257, "embedlayernormalization-1"]], "com.microsoft - ExpandDims": [[258, "com-microsoft-expanddims"]], "ExpandDims - 1": [[258, "expanddims-1"]], "com.microsoft - FastGelu": [[259, "com-microsoft-fastgelu"]], "FastGelu - 1": [[259, "fastgelu-1"]], "com.microsoft - FusedConv": [[260, "com-microsoft-fusedconv"]], "FusedConv - 1": [[260, "fusedconv-1"]], "com.microsoft - FusedGemm": [[261, "com-microsoft-fusedgemm"]], "FusedGemm - 1": [[261, "fusedgemm-1"]], "com.microsoft - FusedMatMul": [[262, "com-microsoft-fusedmatmul"]], "FusedMatMul - 1": [[262, "fusedmatmul-1"]], "com.microsoft - GatedRelativePositionBias": [[263, "com-microsoft-gatedrelativepositionbias"]], "GatedRelativePositionBias - 1": [[263, "gatedrelativepositionbias-1"]], "com.microsoft - GatherND": [[264, "com-microsoft-gathernd"]], "GatherND - 1": [[264, "gathernd-1"]], "com.microsoft - Gelu": [[265, "com-microsoft-gelu"]], "Gelu - 1": [[265, "gelu-1"]], "com.microsoft - GemmFastGelu": [[266, "com-microsoft-gemmfastgelu"]], "GemmFastGelu - 1": [[266, "gemmfastgelu-1"]], "com.microsoft - GreedySearch": [[267, "com-microsoft-greedysearch"]], "GreedySearch - 1": [[267, "greedysearch-1"]], "com.microsoft - GridSample": [[268, "com-microsoft-gridsample"]], "GridSample - 1": [[268, "gridsample-1"]], "com.microsoft - GroupNorm": [[269, "com-microsoft-groupnorm"]], "GroupNorm - 1": [[269, "groupnorm-1"]], "com.microsoft - Inverse": [[270, "com-microsoft-inverse"]], "Inverse - 1": [[270, "inverse-1"]], "com.microsoft - Irfft": [[271, "com-microsoft-irfft"]], "Irfft - 1": [[271, "irfft-1"]], "com.microsoft - IsAllFinite": [[272, "com-microsoft-isallfinite"]], "IsAllFinite - 1": [[272, "isallfinite-1"]], "com.microsoft - LongformerAttention": [[273, "com-microsoft-longformerattention"]], "LongformerAttention - 1": [[273, "longformerattention-1"]], "com.microsoft - MatMulInteger16": [[274, "com-microsoft-matmulinteger16"]], "MatMulInteger16 - 1": [[274, "matmulinteger16-1"]], "com.microsoft - MatMulIntegerToFloat": [[275, "com-microsoft-matmulintegertofloat"]], "MatMulIntegerToFloat - 1": [[275, "matmulintegertofloat-1"]], "com.microsoft - MaxpoolWithMask": [[276, "com-microsoft-maxpoolwithmask"]], "MaxpoolWithMask - 1": [[276, "maxpoolwithmask-1"]], "com.microsoft - MulInteger": [[277, "com-microsoft-mulinteger"]], "MulInteger - 1": [[277, "mulinteger-1"]], "com.microsoft - MultiHeadAttention": [[278, "com-microsoft-multiheadattention"]], "MultiHeadAttention - 1": [[278, "multiheadattention-1"]], "com.microsoft - MurmurHash3": [[279, "com-microsoft-murmurhash3"]], "MurmurHash3 - 1": [[279, "murmurhash3-1"]], "com.microsoft - NGramRepeatBlock": [[280, "com-microsoft-ngramrepeatblock"]], "NGramRepeatBlock - 1": [[280, "ngramrepeatblock-1"]], "com.microsoft - NhwcConv": [[281, "com-microsoft-nhwcconv"]], "NhwcConv - 1": [[281, "nhwcconv-1"]], "com.microsoft - NhwcMaxPool": [[282, "com-microsoft-nhwcmaxpool"]], "NhwcMaxPool - 1": [[282, "nhwcmaxpool-1"]], "com.microsoft - Pad": [[283, "com-microsoft-pad"]], "com.microsoft - QAttention": [[284, "com-microsoft-qattention"]], "QAttention - 1": [[284, "qattention-1"]], "com.microsoft - QEmbedLayerNormalization": [[285, "com-microsoft-qembedlayernormalization"]], "QEmbedLayerNormalization - 1": [[285, "qembedlayernormalization-1"]], "com.microsoft - QGemm": [[286, "com-microsoft-qgemm"]], "QGemm - 1": [[286, "qgemm-1"]], "com.microsoft - QLinearAdd": [[287, "com-microsoft-qlinearadd"]], "QLinearAdd - 1": [[287, "qlinearadd-1"]], "com.microsoft - QLinearAveragePool": [[288, "com-microsoft-qlinearaveragepool"]], "QLinearAveragePool - 1": [[288, "qlinearaveragepool-1"], [338, "qlinearaveragepool-1"]], "com.microsoft - QLinearConcat": [[289, "com-microsoft-qlinearconcat"]], "QLinearConcat - 1": [[289, "qlinearconcat-1"]], "com.microsoft - QLinearConv": [[290, "com-microsoft-qlinearconv"]], "QLinearConv - 1": [[290, "qlinearconv-1"]], "com.microsoft - QLinearGlobalAveragePool": [[291, "com-microsoft-qlinearglobalaveragepool"]], "QLinearGlobalAveragePool - 1": [[291, "qlinearglobalaveragepool-1"]], "com.microsoft - QLinearLeakyRelu": [[292, "com-microsoft-qlinearleakyrelu"]], "QLinearLeakyRelu - 1": [[292, "qlinearleakyrelu-1"]], "com.microsoft - QLinearMul": [[293, "com-microsoft-qlinearmul"]], "QLinearMul - 1": [[293, "qlinearmul-1"]], "com.microsoft - QLinearReduceMean": [[294, "com-microsoft-qlinearreducemean"]], "QLinearReduceMean - 1": [[294, "qlinearreducemean-1"]], "com.microsoft - QLinearSigmoid": [[295, "com-microsoft-qlinearsigmoid"]], "QLinearSigmoid - 1": [[295, "qlinearsigmoid-1"]], "com.microsoft - QLinearSoftmax": [[296, "com-microsoft-qlinearsoftmax"]], "QLinearSoftmax - 1": [[296, "qlinearsoftmax-1"]], "com.microsoft - QLinearWhere": [[297, "com-microsoft-qlinearwhere"]], "QLinearWhere - 1": [[297, "qlinearwhere-1"]], "com.microsoft - QOrderedAttention": [[298, "com-microsoft-qorderedattention"]], "QOrderedAttention - 1": [[298, "qorderedattention-1"]], "com.microsoft - QOrderedGelu": [[299, "com-microsoft-qorderedgelu"]], "QOrderedGelu - 1": [[299, "qorderedgelu-1"]], "com.microsoft - QOrderedLayerNormalization": [[300, "com-microsoft-qorderedlayernormalization"]], "QOrderedLayerNormalization - 1": [[300, "qorderedlayernormalization-1"]], "com.microsoft - QOrderedLongformerAttention": [[301, "com-microsoft-qorderedlongformerattention"]], "QOrderedLongformerAttention - 1": [[301, "qorderedlongformerattention-1"]], "com.microsoft - QOrderedMatMul": [[302, "com-microsoft-qorderedmatmul"]], "QOrderedMatMul - 1": [[302, "qorderedmatmul-1"]], "com.microsoft - QuantizeBFP": [[303, "com-microsoft-quantizebfp"]], "QuantizeBFP - 1": [[303, "quantizebfp-1"]], "com.microsoft - QuantizeLinear": [[304, "com-microsoft-quantizelinear"]], "QuantizeLinear - 1": [[304, "quantizelinear-1"]], "com.microsoft - QuantizeWithOrder": [[305, "com-microsoft-quantizewithorder"]], "QuantizeWithOrder - 1": [[305, "quantizewithorder-1"]], "com.microsoft - QuickGelu": [[306, "com-microsoft-quickgelu"]], "QuickGelu - 1": [[306, "quickgelu-1"]], "com.microsoft - Range": [[307, "com-microsoft-range"]], "Range - 1": [[307, "range-1"]], "com.microsoft - ReduceSumInteger": [[308, "com-microsoft-reducesuminteger"]], "ReduceSumInteger - 1": [[308, "reducesuminteger-1"]], "com.microsoft - RelativePositionBias": [[309, "com-microsoft-relativepositionbias"]], "RelativePositionBias - 1": [[309, "relativepositionbias-1"]], "com.microsoft - RemovePadding": [[310, "com-microsoft-removepadding"]], "RemovePadding - 1": [[310, "removepadding-1"]], "com.microsoft - RestorePadding": [[311, "com-microsoft-restorepadding"]], "RestorePadding - 1": [[311, "restorepadding-1"]], "com.microsoft - Rfft": [[312, "com-microsoft-rfft"]], "Rfft - 1": [[312, "rfft-1"]], "com.microsoft - SampleOp": [[313, "com-microsoft-sampleop"]], "SampleOp - 1": [[313, "sampleop-1"]], "com.microsoft - Sampling": [[314, "com-microsoft-sampling"]], "Sampling - 1": [[314, "sampling-1"]], "com.microsoft - SkipLayerNormalization": [[315, "com-microsoft-skiplayernormalization"]], "SkipLayerNormalization - 1": [[315, "skiplayernormalization-1"]], "com.microsoft - SkipSimplifiedLayerNormalization": [[316, "com-microsoft-skipsimplifiedlayernormalization"]], "SkipSimplifiedLayerNormalization - 1": [[316, "skipsimplifiedlayernormalization-1"]], "com.microsoft - Snpe": [[317, "com-microsoft-snpe"]], "Snpe - 1": [[317, "snpe-1"]], "com.microsoft - SparseToDenseMatMul": [[318, "com-microsoft-sparsetodensematmul"]], "SparseToDenseMatMul - 1": [[318, "sparsetodensematmul-1"]], "com.microsoft - Tokenizer": [[319, "com-microsoft-tokenizer"]], "Tokenizer - 1": [[319, "tokenizer-1"]], "com.microsoft - TorchEmbedding": [[320, "com-microsoft-torchembedding"]], "TorchEmbedding - 1": [[320, "torchembedding-1"]], "com.microsoft - TransposeMatMul": [[321, "com-microsoft-transposematmul"]], "TransposeMatMul - 1": [[321, "transposematmul-1"]], "com.microsoft - Trilu": [[322, "com-microsoft-trilu"]], "Trilu - 1": [[322, "trilu-1"]], "com.microsoft - Unique": [[323, "com-microsoft-unique"]], "Unique - 1": [[323, "unique-1"]], "com.microsoft - WordConvEmbedding": [[324, "com-microsoft-wordconvembedding"]], "WordConvEmbedding - 1": [[324, "wordconvembedding-1"]], "com.microsoft.nchwc - AveragePool": [[325, "com-microsoft-nchwc-averagepool"]], "com.microsoft.nchwc - Conv": [[326, "com-microsoft-nchwc-conv"]], "com.microsoft.nchwc - GlobalAveragePool": [[327, "com-microsoft-nchwc-globalaveragepool"]], "com.microsoft.nchwc - GlobalMaxPool": [[328, "com-microsoft-nchwc-globalmaxpool"]], "com.microsoft.nchwc - MaxPool": [[329, "com-microsoft-nchwc-maxpool"]], "com.microsoft.nchwc - ReorderInput": [[330, "com-microsoft-nchwc-reorderinput"]], "ReorderInput - 1": [[330, "reorderinput-1"]], "com.microsoft.nchwc - ReorderOutput": [[331, "com-microsoft-nchwc-reorderoutput"]], "ReorderOutput - 1": [[331, "reorderoutput-1"]], "com.microsoft.nchwc - Upsample": [[332, "com-microsoft-nchwc-upsample"]], "com.ms.internal.nhwc - AveragePool": [[333, "com-ms-internal-nhwc-averagepool"]], "AveragePool - 11": [[333, "averagepool-11"]], "com.ms.internal.nhwc - Conv": [[334, "com-ms-internal-nhwc-conv"]], "Conv - 11": [[334, "conv-11"]], "com.ms.internal.nhwc - ConvTranspose": [[335, "com-ms-internal-nhwc-convtranspose"]], "com.ms.internal.nhwc - MaxPool": [[336, "com-ms-internal-nhwc-maxpool"]], "MaxPool - 11": [[336, "maxpool-11"]], "com.ms.internal.nhwc - MaxUnpool": [[337, "com-ms-internal-nhwc-maxunpool"]], "com.ms.internal.nhwc - QLinearAveragePool": [[338, "com-ms-internal-nhwc-qlinearaveragepool"]], "com.ms.internal.nhwc - QLinearConv": [[339, "com-ms-internal-nhwc-qlinearconv"]], "com.ms.internal.nhwc - QLinearConvTranspose": [[340, "com-ms-internal-nhwc-qlinearconvtranspose"]], "QLinearConvTranspose - 1": [[340, "qlinearconvtranspose-1"]], "Tutorial": [[341, "tutorial"]], "Step 1: Train a model using your favorite framework": [[341, "step-1-train-a-model-using-your-favorite-framework"]], "Step 2: Convert or export the model into ONNX format": [[341, "step-2-convert-or-export-the-model-into-onnx-format"]], "Step 3: Load and run the model using ONNX Runtime": [[341, "step-3-load-and-run-the-model-using-onnx-runtime"]]}, "indexentries": {"iobinding (class in onnxruntime)": [[0, "onnxruntime.IOBinding"]], "inferencesession (class in onnxruntime)": [[0, "onnxruntime.InferenceSession"]], "modelmetadata (class in onnxruntime)": [[0, "onnxruntime.ModelMetadata"]], "nodearg (class in onnxruntime)": [[0, "onnxruntime.NodeArg"]], "ortdevice (class in onnxruntime)": [[0, "onnxruntime.OrtDevice"]], "ortvalue (class in onnxruntime)": [[0, "onnxruntime.OrtValue"]], "runoptions (class in onnxruntime)": [[0, "onnxruntime.RunOptions"]], "sessionoptions (class in onnxruntime)": [[0, "onnxruntime.SessionOptions"]], "sparsetensor (class in onnxruntime)": [[0, "onnxruntime.SparseTensor"]], "add_external_initializers() (onnxruntime.sessionoptions method)": [[0, "onnxruntime.SessionOptions.add_external_initializers"]], "add_free_dimension_override_by_denotation() (onnxruntime.sessionoptions method)": [[0, "onnxruntime.SessionOptions.add_free_dimension_override_by_denotation"]], "add_free_dimension_override_by_name() (onnxruntime.sessionoptions method)": [[0, "onnxruntime.SessionOptions.add_free_dimension_override_by_name"]], "add_initializer() (onnxruntime.sessionoptions method)": [[0, "onnxruntime.SessionOptions.add_initializer"]], "add_run_config_entry() (onnxruntime.runoptions method)": [[0, "onnxruntime.RunOptions.add_run_config_entry"]], "add_session_config_entry() (onnxruntime.sessionoptions method)": [[0, "onnxruntime.SessionOptions.add_session_config_entry"]], "as_blocksparse_view() (onnxruntime.sparsetensor method)": [[0, "onnxruntime.SparseTensor.as_blocksparse_view"]], "as_coo_view() (onnxruntime.sparsetensor method)": [[0, "onnxruntime.SparseTensor.as_coo_view"]], "as_csrc_view() (onnxruntime.sparsetensor method)": [[0, "onnxruntime.SparseTensor.as_csrc_view"]], "as_sparse_tensor() (onnxruntime.ortvalue method)": [[0, "onnxruntime.OrtValue.as_sparse_tensor"]], "bind_cpu_input() (onnxruntime.iobinding method)": [[0, "onnxruntime.IOBinding.bind_cpu_input"]], "bind_input() (onnxruntime.iobinding method)": [[0, "onnxruntime.IOBinding.bind_input"]], "bind_ortvalue_input() (onnxruntime.iobinding method)": [[0, "onnxruntime.IOBinding.bind_ortvalue_input"]], "bind_ortvalue_output() (onnxruntime.iobinding method)": [[0, "onnxruntime.IOBinding.bind_ortvalue_output"]], "bind_output() (onnxruntime.iobinding method)": [[0, "onnxruntime.IOBinding.bind_output"]], "copy_outputs_to_cpu() (onnxruntime.iobinding method)": [[0, "onnxruntime.IOBinding.copy_outputs_to_cpu"]], "custom_metadata_map (onnxruntime.modelmetadata property)": [[0, "onnxruntime.ModelMetadata.custom_metadata_map"]], "data_ptr() (onnxruntime.ortvalue method)": [[0, "onnxruntime.OrtValue.data_ptr"]], "data_type() (onnxruntime.ortvalue method)": [[0, "onnxruntime.OrtValue.data_type"]], "data_type() (onnxruntime.sparsetensor method)": [[0, "onnxruntime.SparseTensor.data_type"]], "dense_shape() (onnxruntime.sparsetensor method)": [[0, "onnxruntime.SparseTensor.dense_shape"]], "description (onnxruntime.modelmetadata property)": [[0, "onnxruntime.ModelMetadata.description"]], "device_name() (onnxruntime.ortvalue method)": [[0, "onnxruntime.OrtValue.device_name"]], "device_name() (onnxruntime.sparsetensor method)": [[0, "onnxruntime.SparseTensor.device_name"]], "disable_fallback() (onnxruntime.inferencesession method)": [[0, "onnxruntime.InferenceSession.disable_fallback"]], "domain (onnxruntime.modelmetadata property)": [[0, "onnxruntime.ModelMetadata.domain"]], "element_type() (onnxruntime.ortvalue method)": [[0, "onnxruntime.OrtValue.element_type"]], "enable_cpu_mem_arena (onnxruntime.sessionoptions property)": [[0, "onnxruntime.SessionOptions.enable_cpu_mem_arena"]], "enable_fallback() (onnxruntime.inferencesession method)": [[0, "onnxruntime.InferenceSession.enable_fallback"]], "enable_mem_pattern (onnxruntime.sessionoptions property)": [[0, "onnxruntime.SessionOptions.enable_mem_pattern"]], "enable_mem_reuse (onnxruntime.sessionoptions property)": [[0, "onnxruntime.SessionOptions.enable_mem_reuse"]], "enable_profiling (onnxruntime.sessionoptions property)": [[0, "onnxruntime.SessionOptions.enable_profiling"]], "end_profiling() (onnxruntime.inferencesession method)": [[0, "onnxruntime.InferenceSession.end_profiling"]], "execution_mode (onnxruntime.sessionoptions property)": [[0, "onnxruntime.SessionOptions.execution_mode"]], "execution_order (onnxruntime.sessionoptions property)": [[0, "onnxruntime.SessionOptions.execution_order"]], "format() (onnxruntime.sparsetensor method)": [[0, "onnxruntime.SparseTensor.format"]], "get_inputs() (onnxruntime.inferencesession method)": [[0, "onnxruntime.InferenceSession.get_inputs"]], "get_modelmeta() (onnxruntime.inferencesession method)": [[0, "onnxruntime.InferenceSession.get_modelmeta"]], "get_outputs() (onnxruntime.iobinding method)": [[0, "onnxruntime.IOBinding.get_outputs"]], "get_outputs() (onnxruntime.inferencesession method)": [[0, "onnxruntime.InferenceSession.get_outputs"]], "get_overridable_initializers() (onnxruntime.inferencesession method)": [[0, "onnxruntime.InferenceSession.get_overridable_initializers"]], "get_profiling_start_time_ns() (onnxruntime.inferencesession method)": [[0, "onnxruntime.InferenceSession.get_profiling_start_time_ns"]], "get_provider_options() (onnxruntime.inferencesession method)": [[0, "onnxruntime.InferenceSession.get_provider_options"]], "get_providers() (onnxruntime.inferencesession method)": [[0, "onnxruntime.InferenceSession.get_providers"]], "get_run_config_entry() (onnxruntime.runoptions method)": [[0, "onnxruntime.RunOptions.get_run_config_entry"]], "get_session_config_entry() (onnxruntime.sessionoptions method)": [[0, "onnxruntime.SessionOptions.get_session_config_entry"]], "get_session_options() (onnxruntime.inferencesession method)": [[0, "onnxruntime.InferenceSession.get_session_options"]], "graph_description (onnxruntime.modelmetadata property)": [[0, "onnxruntime.ModelMetadata.graph_description"]], "graph_name (onnxruntime.modelmetadata property)": [[0, "onnxruntime.ModelMetadata.graph_name"]], "graph_optimization_level (onnxruntime.sessionoptions property)": [[0, "onnxruntime.SessionOptions.graph_optimization_level"]], "has_value() (onnxruntime.ortvalue method)": [[0, "onnxruntime.OrtValue.has_value"]], "inter_op_num_threads (onnxruntime.sessionoptions property)": [[0, "onnxruntime.SessionOptions.inter_op_num_threads"]], "intra_op_num_threads (onnxruntime.sessionoptions property)": [[0, "onnxruntime.SessionOptions.intra_op_num_threads"]], "io_binding() (onnxruntime.inferencesession method)": [[0, "onnxruntime.InferenceSession.io_binding"]], "is_compatible() (in module onnxruntime.backend)": [[0, "onnxruntime.backend.is_compatible"]], "is_sparse_tensor() (onnxruntime.ortvalue method)": [[0, "onnxruntime.OrtValue.is_sparse_tensor"]], "is_tensor() (onnxruntime.ortvalue method)": [[0, "onnxruntime.OrtValue.is_tensor"]], "is_tensor_sequence() (onnxruntime.ortvalue method)": [[0, "onnxruntime.OrtValue.is_tensor_sequence"]], "log_severity_level (onnxruntime.runoptions property)": [[0, "onnxruntime.RunOptions.log_severity_level"]], "log_severity_level (onnxruntime.sessionoptions property)": [[0, "onnxruntime.SessionOptions.log_severity_level"]], "log_verbosity_level (onnxruntime.runoptions property)": [[0, "onnxruntime.RunOptions.log_verbosity_level"]], "log_verbosity_level (onnxruntime.sessionoptions property)": [[0, "onnxruntime.SessionOptions.log_verbosity_level"]], "logid (onnxruntime.runoptions property)": [[0, "onnxruntime.RunOptions.logid"]], "logid (onnxruntime.sessionoptions property)": [[0, "onnxruntime.SessionOptions.logid"]], "name (onnxruntime.nodearg property)": [[0, "onnxruntime.NodeArg.name"]], "numpy() (onnxruntime.ortvalue method)": [[0, "onnxruntime.OrtValue.numpy"]], "only_execute_path_to_fetches (onnxruntime.runoptions property)": [[0, "onnxruntime.RunOptions.only_execute_path_to_fetches"]], "optimized_model_filepath (onnxruntime.sessionoptions property)": [[0, "onnxruntime.SessionOptions.optimized_model_filepath"]], "ort_value_from_sparse_tensor() (onnxruntime.ortvalue static method)": [[0, "onnxruntime.OrtValue.ort_value_from_sparse_tensor"]], "ortvalue_from_numpy() (onnxruntime.ortvalue static method)": [[0, "onnxruntime.OrtValue.ortvalue_from_numpy"]], "ortvalue_from_shape_and_type() (onnxruntime.ortvalue static method)": [[0, "onnxruntime.OrtValue.ortvalue_from_shape_and_type"]], "prepare() (in module onnxruntime.backend)": [[0, "onnxruntime.backend.prepare"]], "producer_name (onnxruntime.modelmetadata property)": [[0, "onnxruntime.ModelMetadata.producer_name"]], "profile_file_prefix (onnxruntime.sessionoptions property)": [[0, "onnxruntime.SessionOptions.profile_file_prefix"]], "register_custom_ops_library() (onnxruntime.sessionoptions method)": [[0, "onnxruntime.SessionOptions.register_custom_ops_library"]], "run() (in module onnxruntime.backend)": [[0, "onnxruntime.backend.run"]], "run() (onnxruntime.inferencesession method)": [[0, "onnxruntime.InferenceSession.run"]], "run_with_iobinding() (onnxruntime.inferencesession method)": [[0, "onnxruntime.InferenceSession.run_with_iobinding"]], "run_with_ort_values() (onnxruntime.inferencesession method)": [[0, "onnxruntime.InferenceSession.run_with_ort_values"]], "run_with_ortvaluevector() (onnxruntime.inferencesession method)": [[0, "onnxruntime.InferenceSession.run_with_ortvaluevector"]], "set_providers() (onnxruntime.inferencesession method)": [[0, "onnxruntime.InferenceSession.set_providers"]], "shape (onnxruntime.nodearg property)": [[0, "onnxruntime.NodeArg.shape"]], "shape() (onnxruntime.ortvalue method)": [[0, "onnxruntime.OrtValue.shape"]], "sparse_coo_from_numpy() (onnxruntime.sparsetensor static method)": [[0, "onnxruntime.SparseTensor.sparse_coo_from_numpy"]], "sparse_csr_from_numpy() (onnxruntime.sparsetensor static method)": [[0, "onnxruntime.SparseTensor.sparse_csr_from_numpy"]], "supports_device() (in module onnxruntime.backend)": [[0, "onnxruntime.backend.supports_device"]], "terminate (onnxruntime.runoptions property)": [[0, "onnxruntime.RunOptions.terminate"]], "to_cuda() (onnxruntime.sparsetensor method)": [[0, "onnxruntime.SparseTensor.to_cuda"]], "type (onnxruntime.nodearg property)": [[0, "onnxruntime.NodeArg.type"]], "update_inplace() (onnxruntime.ortvalue method)": [[0, "onnxruntime.OrtValue.update_inplace"]], "use_deterministic_compute (onnxruntime.sessionoptions property)": [[0, "onnxruntime.SessionOptions.use_deterministic_compute"]], "values() (onnxruntime.sparsetensor method)": [[0, "onnxruntime.SparseTensor.values"]], "version (onnxruntime.modelmetadata property)": [[0, "onnxruntime.ModelMetadata.version"]]}})