Search.setIndex({"docnames": ["expect", "index", "onnx-api/index", "onnx-api/modules/onnx.checker", "onnx-api/modules/onnx.compose", "onnx-api/modules/onnx.external_data_helper", "onnx-api/modules/onnx.helper", "onnx-api/modules/onnx.hub", "onnx-api/modules/onnx.numpy_helper", "onnx-api/modules/onnx.parser", "onnx-api/modules/onnx.utils", "onnx-api/modules/onnx.version.version", "onnx-api/modules/onnx.version_converter", "onnx_doc_folder/diff_Abs_1_6", "onnx_doc_folder/diff_Abs_6_13", "onnx_doc_folder/diff_Add_13_14", "onnx_doc_folder/diff_Add_1_6", "onnx_doc_folder/diff_Add_6_7", "onnx_doc_folder/diff_Add_7_13", "onnx_doc_folder/diff_And_1_7", "onnx_doc_folder/diff_ArgMax_11_12", "onnx_doc_folder/diff_ArgMax_12_13", "onnx_doc_folder/diff_ArgMax_1_11", "onnx_doc_folder/diff_ArgMin_11_12", "onnx_doc_folder/diff_ArgMin_12_13", "onnx_doc_folder/diff_ArgMin_1_11", "onnx_doc_folder/diff_AveragePool_10_11", "onnx_doc_folder/diff_AveragePool_1_7", "onnx_doc_folder/diff_AveragePool_7_10", "onnx_doc_folder/diff_BatchNormalization_14_15", "onnx_doc_folder/diff_BatchNormalization_1_6", "onnx_doc_folder/diff_BatchNormalization_6_7", "onnx_doc_folder/diff_BatchNormalization_7_9", "onnx_doc_folder/diff_BatchNormalization_9_14", "onnx_doc_folder/diff_Cast_1_6", "onnx_doc_folder/diff_Cast_6_9", "onnx_doc_folder/diff_Cast_9_13", "onnx_doc_folder/diff_Ceil_1_6", "onnx_doc_folder/diff_Ceil_6_13", "onnx_doc_folder/diff_Clip_11_12", "onnx_doc_folder/diff_Clip_12_13", "onnx_doc_folder/diff_Clip_1_6", "onnx_doc_folder/diff_Clip_6_11", "onnx_doc_folder/diff_Compress_9_11", "onnx_doc_folder/diff_Concat_11_13", "onnx_doc_folder/diff_Concat_1_4", "onnx_doc_folder/diff_Concat_4_11", "onnx_doc_folder/diff_Constant_11_12", "onnx_doc_folder/diff_Constant_12_13", "onnx_doc_folder/diff_Constant_1_9", "onnx_doc_folder/diff_Constant_9_11", "onnx_doc_folder/diff_ConvTranspose_1_11", "onnx_doc_folder/diff_Conv_1_11", "onnx_doc_folder/diff_CumSum_11_14", "onnx_doc_folder/diff_DepthToSpace_11_13", "onnx_doc_folder/diff_DepthToSpace_1_11", "onnx_doc_folder/diff_DequantizeLinear_10_13", "onnx_doc_folder/diff_Div_13_14", "onnx_doc_folder/diff_Div_1_6", "onnx_doc_folder/diff_Div_6_7", "onnx_doc_folder/diff_Div_7_13", "onnx_doc_folder/diff_Dropout_10_12", "onnx_doc_folder/diff_Dropout_12_13", "onnx_doc_folder/diff_Dropout_1_6", "onnx_doc_folder/diff_Dropout_6_7", "onnx_doc_folder/diff_Dropout_7_10", "onnx_doc_folder/diff_Elu_1_6", "onnx_doc_folder/diff_Equal_11_13", "onnx_doc_folder/diff_Equal_1_7", "onnx_doc_folder/diff_Equal_7_11", "onnx_doc_folder/diff_Erf_9_13", "onnx_doc_folder/diff_Exp_1_6", "onnx_doc_folder/diff_Exp_6_13", "onnx_doc_folder/diff_Expand_8_13", "onnx_doc_folder/diff_Flatten_11_13", "onnx_doc_folder/diff_Flatten_1_9", "onnx_doc_folder/diff_Flatten_9_11", "onnx_doc_folder/diff_Floor_1_6", "onnx_doc_folder/diff_Floor_6_13", "onnx_doc_folder/diff_GRU_1_3", "onnx_doc_folder/diff_GRU_3_7", "onnx_doc_folder/diff_GRU_7_14", "onnx_doc_folder/diff_GatherElements_11_13", "onnx_doc_folder/diff_GatherND_11_12", "onnx_doc_folder/diff_GatherND_12_13", "onnx_doc_folder/diff_Gather_11_13", "onnx_doc_folder/diff_Gather_1_11", "onnx_doc_folder/diff_Gemm_11_13", "onnx_doc_folder/diff_Gemm_1_6", "onnx_doc_folder/diff_Gemm_6_7", "onnx_doc_folder/diff_Gemm_7_9", "onnx_doc_folder/diff_Gemm_9_11", "onnx_doc_folder/diff_GlobalLpPool_1_2", "onnx_doc_folder/diff_GreaterOrEqual_12_16", "onnx_doc_folder/diff_Greater_1_7", "onnx_doc_folder/diff_Greater_7_9", "onnx_doc_folder/diff_Greater_9_13", "onnx_doc_folder/diff_HardSigmoid_1_6", "onnx_doc_folder/diff_Hardmax_11_13", "onnx_doc_folder/diff_Hardmax_1_11", "onnx_doc_folder/diff_Identity_13_14", "onnx_doc_folder/diff_Identity_14_16", "onnx_doc_folder/diff_Identity_1_13", "onnx_doc_folder/diff_If_11_13", "onnx_doc_folder/diff_If_13_16", "onnx_doc_folder/diff_If_1_11", "onnx_doc_folder/diff_InstanceNormalization_1_6", "onnx_doc_folder/diff_IsNaN_9_13", "onnx_doc_folder/diff_LRN_1_13", "onnx_doc_folder/diff_LSTM_1_7", "onnx_doc_folder/diff_LSTM_7_14", "onnx_doc_folder/diff_LabelEncoder_1_2", "onnx_doc_folder/diff_LeakyRelu_1_6", "onnx_doc_folder/diff_LeakyRelu_6_16", "onnx_doc_folder/diff_LessOrEqual_12_16", "onnx_doc_folder/diff_Less_1_7", "onnx_doc_folder/diff_Less_7_9", "onnx_doc_folder/diff_Less_9_13", "onnx_doc_folder/diff_LogSoftmax_11_13", "onnx_doc_folder/diff_LogSoftmax_1_11", "onnx_doc_folder/diff_Log_1_6", "onnx_doc_folder/diff_Log_6_13", "onnx_doc_folder/diff_Loop_11_13", "onnx_doc_folder/diff_Loop_13_16", "onnx_doc_folder/diff_Loop_1_11", "onnx_doc_folder/diff_LpPool_1_2", "onnx_doc_folder/diff_LpPool_2_11", "onnx_doc_folder/diff_MatMul_1_9", "onnx_doc_folder/diff_MatMul_9_13", "onnx_doc_folder/diff_MaxPool_10_11", "onnx_doc_folder/diff_MaxPool_11_12", "onnx_doc_folder/diff_MaxPool_1_8", "onnx_doc_folder/diff_MaxPool_8_10", "onnx_doc_folder/diff_MaxUnpool_9_11", "onnx_doc_folder/diff_Max_12_13", "onnx_doc_folder/diff_Max_1_6", "onnx_doc_folder/diff_Max_6_8", "onnx_doc_folder/diff_Max_8_12", "onnx_doc_folder/diff_MeanVarianceNormalization_9_13", "onnx_doc_folder/diff_Mean_1_6", "onnx_doc_folder/diff_Mean_6_8", "onnx_doc_folder/diff_Mean_8_13", "onnx_doc_folder/diff_Min_12_13", "onnx_doc_folder/diff_Min_1_6", "onnx_doc_folder/diff_Min_6_8", "onnx_doc_folder/diff_Min_8_12", "onnx_doc_folder/diff_Mod_10_13", "onnx_doc_folder/diff_Mul_13_14", "onnx_doc_folder/diff_Mul_1_6", "onnx_doc_folder/diff_Mul_6_7", "onnx_doc_folder/diff_Mul_7_13", "onnx_doc_folder/diff_Neg_1_6", "onnx_doc_folder/diff_Neg_6_13", "onnx_doc_folder/diff_NegativeLogLikelihoodLoss_12_13", "onnx_doc_folder/diff_NonMaxSuppression_10_11", "onnx_doc_folder/diff_NonZero_9_13", "onnx_doc_folder/diff_OneHot_9_11", "onnx_doc_folder/diff_OptionalGetElement_15_18", "onnx_doc_folder/diff_OptionalHasElement_15_18", "onnx_doc_folder/diff_Or_1_7", "onnx_doc_folder/diff_PRelu_1_6", "onnx_doc_folder/diff_PRelu_6_7", "onnx_doc_folder/diff_PRelu_7_9", "onnx_doc_folder/diff_PRelu_9_16", "onnx_doc_folder/diff_Pad_11_13", "onnx_doc_folder/diff_Pad_13_18", "onnx_doc_folder/diff_Pad_1_2", "onnx_doc_folder/diff_Pad_2_11", "onnx_doc_folder/diff_Pow_12_13", "onnx_doc_folder/diff_Pow_13_15", "onnx_doc_folder/diff_Pow_1_7", "onnx_doc_folder/diff_Pow_7_12", "onnx_doc_folder/diff_QuantizeLinear_10_13", "onnx_doc_folder/diff_RNN_1_7", "onnx_doc_folder/diff_RNN_7_14", "onnx_doc_folder/diff_Reciprocal_1_6", "onnx_doc_folder/diff_Reciprocal_6_13", "onnx_doc_folder/diff_ReduceL1_11_13", "onnx_doc_folder/diff_ReduceL1_1_11", "onnx_doc_folder/diff_ReduceL2_11_13", "onnx_doc_folder/diff_ReduceL2_1_11", "onnx_doc_folder/diff_ReduceLogSumExp_11_13", "onnx_doc_folder/diff_ReduceLogSumExp_1_11", "onnx_doc_folder/diff_ReduceLogSum_11_13", "onnx_doc_folder/diff_ReduceLogSum_1_11", "onnx_doc_folder/diff_ReduceMax_11_12", "onnx_doc_folder/diff_ReduceMax_12_13", "onnx_doc_folder/diff_ReduceMax_1_11", "onnx_doc_folder/diff_ReduceMean_11_13", "onnx_doc_folder/diff_ReduceMean_1_11", "onnx_doc_folder/diff_ReduceMin_11_12", "onnx_doc_folder/diff_ReduceMin_12_13", "onnx_doc_folder/diff_ReduceMin_1_11", "onnx_doc_folder/diff_ReduceProd_11_13", "onnx_doc_folder/diff_ReduceProd_1_11", "onnx_doc_folder/diff_ReduceSumSquare_11_13", "onnx_doc_folder/diff_ReduceSumSquare_1_11", "onnx_doc_folder/diff_ReduceSum_11_13", "onnx_doc_folder/diff_ReduceSum_1_11", "onnx_doc_folder/diff_Relu_13_14", "onnx_doc_folder/diff_Relu_1_6", "onnx_doc_folder/diff_Relu_6_13", "onnx_doc_folder/diff_Reshape_13_14", "onnx_doc_folder/diff_Reshape_1_5", "onnx_doc_folder/diff_Reshape_5_13", "onnx_doc_folder/diff_Resize_10_11", "onnx_doc_folder/diff_Resize_11_13", "onnx_doc_folder/diff_Resize_13_18", "onnx_doc_folder/diff_RoiAlign_10_16", "onnx_doc_folder/diff_Scan_11_16", "onnx_doc_folder/diff_Scan_8_9", "onnx_doc_folder/diff_Scan_9_11", "onnx_doc_folder/diff_ScatterElements_11_13", "onnx_doc_folder/diff_ScatterElements_13_16", "onnx_doc_folder/diff_ScatterElements_16_18", "onnx_doc_folder/diff_ScatterND_11_13", "onnx_doc_folder/diff_ScatterND_13_16", "onnx_doc_folder/diff_ScatterND_16_18", "onnx_doc_folder/diff_Scatter_9_11", "onnx_doc_folder/diff_Selu_1_6", "onnx_doc_folder/diff_Shape_13_15", "onnx_doc_folder/diff_Shape_1_13", "onnx_doc_folder/diff_Sigmoid_1_6", "onnx_doc_folder/diff_Sigmoid_6_13", "onnx_doc_folder/diff_Sign_9_13", "onnx_doc_folder/diff_Size_1_13", "onnx_doc_folder/diff_Slice_10_11", "onnx_doc_folder/diff_Slice_11_13", "onnx_doc_folder/diff_Slice_1_10", "onnx_doc_folder/diff_SoftmaxCrossEntropyLoss_12_13", "onnx_doc_folder/diff_Softmax_11_13", "onnx_doc_folder/diff_Softmax_1_11", "onnx_doc_folder/diff_SpaceToDepth_1_13", "onnx_doc_folder/diff_Split_11_13", "onnx_doc_folder/diff_Split_1_2", "onnx_doc_folder/diff_Split_2_11", "onnx_doc_folder/diff_Sqrt_1_6", "onnx_doc_folder/diff_Sqrt_6_13", "onnx_doc_folder/diff_Squeeze_11_13", "onnx_doc_folder/diff_Squeeze_1_11", "onnx_doc_folder/diff_Sub_13_14", "onnx_doc_folder/diff_Sub_1_6", "onnx_doc_folder/diff_Sub_6_7", "onnx_doc_folder/diff_Sub_7_13", "onnx_doc_folder/diff_Sum_1_6", "onnx_doc_folder/diff_Sum_6_8", "onnx_doc_folder/diff_Sum_8_13", "onnx_doc_folder/diff_Tanh_1_6", "onnx_doc_folder/diff_Tanh_6_13", "onnx_doc_folder/diff_Tile_1_6", "onnx_doc_folder/diff_Tile_6_13", "onnx_doc_folder/diff_TopK_10_11", "onnx_doc_folder/diff_TopK_1_10", "onnx_doc_folder/diff_Transpose_1_13", "onnx_doc_folder/diff_TreeEnsembleClassifier_1_3", "onnx_doc_folder/diff_TreeEnsembleRegressor_1_3", "onnx_doc_folder/diff_Unsqueeze_11_13", "onnx_doc_folder/diff_Unsqueeze_1_11", "onnx_doc_folder/diff_Upsample_1_7", "onnx_doc_folder/diff_Upsample_7_9", "onnx_doc_folder/diff_Upsample_9_10", "onnx_doc_folder/diff_Where_9_16", "onnx_doc_folder/diff_Xor_1_7", "onnx_doc_folder/index", "onnx_doc_folder/onnx__Abs", "onnx_doc_folder/onnx__Acos", "onnx_doc_folder/onnx__Acosh", "onnx_doc_folder/onnx__Add", "onnx_doc_folder/onnx__And", "onnx_doc_folder/onnx__ArgMax", "onnx_doc_folder/onnx__ArgMin", "onnx_doc_folder/onnx__Asin", "onnx_doc_folder/onnx__Asinh", "onnx_doc_folder/onnx__Atan", "onnx_doc_folder/onnx__Atanh", "onnx_doc_folder/onnx__AveragePool", "onnx_doc_folder/onnx__BatchNormalization", "onnx_doc_folder/onnx__Bernoulli", "onnx_doc_folder/onnx__BitShift", "onnx_doc_folder/onnx__BlackmanWindow", "onnx_doc_folder/onnx__Cast", "onnx_doc_folder/onnx__CastLike", "onnx_doc_folder/onnx__Ceil", "onnx_doc_folder/onnx__Celu", "onnx_doc_folder/onnx__CenterCropPad", "onnx_doc_folder/onnx__Clip", "onnx_doc_folder/onnx__Col2Im", "onnx_doc_folder/onnx__Compress", "onnx_doc_folder/onnx__Concat", "onnx_doc_folder/onnx__ConcatFromSequence", "onnx_doc_folder/onnx__Constant", "onnx_doc_folder/onnx__ConstantOfShape", "onnx_doc_folder/onnx__Conv", "onnx_doc_folder/onnx__ConvInteger", "onnx_doc_folder/onnx__ConvTranspose", "onnx_doc_folder/onnx__Cos", "onnx_doc_folder/onnx__Cosh", "onnx_doc_folder/onnx__CumSum", "onnx_doc_folder/onnx__DFT", "onnx_doc_folder/onnx__DepthToSpace", "onnx_doc_folder/onnx__DequantizeLinear", "onnx_doc_folder/onnx__Det", "onnx_doc_folder/onnx__Div", "onnx_doc_folder/onnx__Dropout", "onnx_doc_folder/onnx__DynamicQuantizeLinear", "onnx_doc_folder/onnx__Einsum", "onnx_doc_folder/onnx__Elu", "onnx_doc_folder/onnx__Equal", "onnx_doc_folder/onnx__Erf", "onnx_doc_folder/onnx__Exp", "onnx_doc_folder/onnx__Expand", "onnx_doc_folder/onnx__EyeLike", "onnx_doc_folder/onnx__Flatten", "onnx_doc_folder/onnx__Floor", "onnx_doc_folder/onnx__GRU", "onnx_doc_folder/onnx__Gather", "onnx_doc_folder/onnx__GatherElements", "onnx_doc_folder/onnx__GatherND", "onnx_doc_folder/onnx__Gemm", "onnx_doc_folder/onnx__GlobalAveragePool", "onnx_doc_folder/onnx__GlobalLpPool", "onnx_doc_folder/onnx__GlobalMaxPool", "onnx_doc_folder/onnx__Greater", "onnx_doc_folder/onnx__GreaterOrEqual", "onnx_doc_folder/onnx__GridSample", "onnx_doc_folder/onnx__HammingWindow", "onnx_doc_folder/onnx__HannWindow", "onnx_doc_folder/onnx__HardSigmoid", "onnx_doc_folder/onnx__HardSwish", "onnx_doc_folder/onnx__Hardmax", "onnx_doc_folder/onnx__Identity", "onnx_doc_folder/onnx__If", "onnx_doc_folder/onnx__InstanceNormalization", "onnx_doc_folder/onnx__IsInf", "onnx_doc_folder/onnx__IsNaN", "onnx_doc_folder/onnx__LRN", "onnx_doc_folder/onnx__LSTM", "onnx_doc_folder/onnx__LayerNormalization", "onnx_doc_folder/onnx__LeakyRelu", "onnx_doc_folder/onnx__Less", "onnx_doc_folder/onnx__LessOrEqual", "onnx_doc_folder/onnx__Log", "onnx_doc_folder/onnx__LogSoftmax", "onnx_doc_folder/onnx__Loop", "onnx_doc_folder/onnx__LpNormalization", "onnx_doc_folder/onnx__LpPool", "onnx_doc_folder/onnx__MatMul", "onnx_doc_folder/onnx__MatMulInteger", "onnx_doc_folder/onnx__Max", "onnx_doc_folder/onnx__MaxPool", "onnx_doc_folder/onnx__MaxRoiPool", "onnx_doc_folder/onnx__MaxUnpool", "onnx_doc_folder/onnx__Mean", "onnx_doc_folder/onnx__MeanVarianceNormalization", "onnx_doc_folder/onnx__MelWeightMatrix", "onnx_doc_folder/onnx__Min", "onnx_doc_folder/onnx__Mish", "onnx_doc_folder/onnx__Mod", "onnx_doc_folder/onnx__Mul", "onnx_doc_folder/onnx__Multinomial", "onnx_doc_folder/onnx__Neg", "onnx_doc_folder/onnx__NegativeLogLikelihoodLoss", "onnx_doc_folder/onnx__NonMaxSuppression", "onnx_doc_folder/onnx__NonZero", "onnx_doc_folder/onnx__Not", "onnx_doc_folder/onnx__OneHot", "onnx_doc_folder/onnx__Optional", "onnx_doc_folder/onnx__OptionalGetElement", "onnx_doc_folder/onnx__OptionalHasElement", "onnx_doc_folder/onnx__Or", "onnx_doc_folder/onnx__PRelu", "onnx_doc_folder/onnx__Pad", "onnx_doc_folder/onnx__Pow", "onnx_doc_folder/onnx__QLinearConv", "onnx_doc_folder/onnx__QLinearMatMul", "onnx_doc_folder/onnx__QuantizeLinear", "onnx_doc_folder/onnx__RNN", "onnx_doc_folder/onnx__RandomNormal", "onnx_doc_folder/onnx__RandomNormalLike", "onnx_doc_folder/onnx__RandomUniform", "onnx_doc_folder/onnx__RandomUniformLike", "onnx_doc_folder/onnx__Range", "onnx_doc_folder/onnx__Reciprocal", "onnx_doc_folder/onnx__ReduceL1", "onnx_doc_folder/onnx__ReduceL2", "onnx_doc_folder/onnx__ReduceLogSum", "onnx_doc_folder/onnx__ReduceLogSumExp", "onnx_doc_folder/onnx__ReduceMax", "onnx_doc_folder/onnx__ReduceMean", "onnx_doc_folder/onnx__ReduceMin", "onnx_doc_folder/onnx__ReduceProd", "onnx_doc_folder/onnx__ReduceSum", "onnx_doc_folder/onnx__ReduceSumSquare", "onnx_doc_folder/onnx__Relu", "onnx_doc_folder/onnx__Reshape", "onnx_doc_folder/onnx__Resize", "onnx_doc_folder/onnx__ReverseSequence", "onnx_doc_folder/onnx__RoiAlign", "onnx_doc_folder/onnx__Round", "onnx_doc_folder/onnx__STFT", "onnx_doc_folder/onnx__Scan", "onnx_doc_folder/onnx__Scatter", "onnx_doc_folder/onnx__ScatterElements", "onnx_doc_folder/onnx__ScatterND", "onnx_doc_folder/onnx__Selu", "onnx_doc_folder/onnx__SequenceAt", "onnx_doc_folder/onnx__SequenceConstruct", "onnx_doc_folder/onnx__SequenceEmpty", "onnx_doc_folder/onnx__SequenceErase", "onnx_doc_folder/onnx__SequenceInsert", "onnx_doc_folder/onnx__SequenceLength", "onnx_doc_folder/onnx__SequenceMap", "onnx_doc_folder/onnx__Shape", "onnx_doc_folder/onnx__Shrink", "onnx_doc_folder/onnx__Sigmoid", "onnx_doc_folder/onnx__Sign", "onnx_doc_folder/onnx__Sin", "onnx_doc_folder/onnx__Sinh", "onnx_doc_folder/onnx__Size", "onnx_doc_folder/onnx__Slice", "onnx_doc_folder/onnx__Softmax", "onnx_doc_folder/onnx__SoftmaxCrossEntropyLoss", "onnx_doc_folder/onnx__Softplus", "onnx_doc_folder/onnx__Softsign", "onnx_doc_folder/onnx__SpaceToDepth", "onnx_doc_folder/onnx__Split", "onnx_doc_folder/onnx__SplitToSequence", "onnx_doc_folder/onnx__Sqrt", "onnx_doc_folder/onnx__Squeeze", "onnx_doc_folder/onnx__StringNormalizer", "onnx_doc_folder/onnx__Sub", "onnx_doc_folder/onnx__Sum", "onnx_doc_folder/onnx__Tan", "onnx_doc_folder/onnx__Tanh", "onnx_doc_folder/onnx__TfIdfVectorizer", "onnx_doc_folder/onnx__ThresholdedRelu", "onnx_doc_folder/onnx__Tile", "onnx_doc_folder/onnx__TopK", "onnx_doc_folder/onnx__Transpose", "onnx_doc_folder/onnx__Trilu", "onnx_doc_folder/onnx__Unique", "onnx_doc_folder/onnx__Unsqueeze", "onnx_doc_folder/onnx__Upsample", "onnx_doc_folder/onnx__Where", "onnx_doc_folder/onnx__Xor", "onnx_doc_folder/onnx_aionnxml_ArrayFeatureExtractor", "onnx_doc_folder/onnx_aionnxml_Binarizer", "onnx_doc_folder/onnx_aionnxml_CastMap", "onnx_doc_folder/onnx_aionnxml_CategoryMapper", "onnx_doc_folder/onnx_aionnxml_DictVectorizer", "onnx_doc_folder/onnx_aionnxml_FeatureVectorizer", "onnx_doc_folder/onnx_aionnxml_Imputer", "onnx_doc_folder/onnx_aionnxml_LabelEncoder", "onnx_doc_folder/onnx_aionnxml_LinearClassifier", "onnx_doc_folder/onnx_aionnxml_LinearRegressor", "onnx_doc_folder/onnx_aionnxml_Normalizer", "onnx_doc_folder/onnx_aionnxml_OneHotEncoder", "onnx_doc_folder/onnx_aionnxml_SVMClassifier", "onnx_doc_folder/onnx_aionnxml_SVMRegressor", "onnx_doc_folder/onnx_aionnxml_Scaler", "onnx_doc_folder/onnx_aionnxml_TreeEnsembleClassifier", "onnx_doc_folder/onnx_aionnxml_TreeEnsembleRegressor", "onnx_doc_folder/onnx_aionnxml_ZipMap", "onnx_doc_folder/onnx_aionnxpreviewtraining_Adagrad", "onnx_doc_folder/onnx_aionnxpreviewtraining_Adam", "onnx_doc_folder/onnx_aionnxpreviewtraining_Gradient", "onnx_doc_folder/onnx_aionnxpreviewtraining_Momentum", "onnx_doc_folder/table_ai_onnx_ml", "onnx_doc_folder/table_ai_onnx_preview_training", "onnx_doc_folder/table_main", "onnx_python/classes", "onnx_python/helper", "onnx_python/hub", "onnx_python/index", "onnx_python/numpy_helper", "onnx_python/plotting", "onnx_python/serialize", "onnx_python/shape_inference", "onnx_python/spec", "onnx_python/utils"], "filenames": ["expect.rst", "index.rst", "onnx-api/index.rst", "onnx-api/modules/onnx.checker.rst", "onnx-api/modules/onnx.compose.rst", "onnx-api/modules/onnx.external_data_helper.rst", "onnx-api/modules/onnx.helper.rst", "onnx-api/modules/onnx.hub.rst", "onnx-api/modules/onnx.numpy_helper.rst", "onnx-api/modules/onnx.parser.rst", "onnx-api/modules/onnx.utils.rst", "onnx-api/modules/onnx.version.version.rst", "onnx-api/modules/onnx.version_converter.rst", "onnx_doc_folder/diff_Abs_1_6.rst", "onnx_doc_folder/diff_Abs_6_13.rst", "onnx_doc_folder/diff_Add_13_14.rst", "onnx_doc_folder/diff_Add_1_6.rst", "onnx_doc_folder/diff_Add_6_7.rst", "onnx_doc_folder/diff_Add_7_13.rst", "onnx_doc_folder/diff_And_1_7.rst", "onnx_doc_folder/diff_ArgMax_11_12.rst", "onnx_doc_folder/diff_ArgMax_12_13.rst", "onnx_doc_folder/diff_ArgMax_1_11.rst", "onnx_doc_folder/diff_ArgMin_11_12.rst", "onnx_doc_folder/diff_ArgMin_12_13.rst", "onnx_doc_folder/diff_ArgMin_1_11.rst", "onnx_doc_folder/diff_AveragePool_10_11.rst", "onnx_doc_folder/diff_AveragePool_1_7.rst", "onnx_doc_folder/diff_AveragePool_7_10.rst", "onnx_doc_folder/diff_BatchNormalization_14_15.rst", "onnx_doc_folder/diff_BatchNormalization_1_6.rst", "onnx_doc_folder/diff_BatchNormalization_6_7.rst", "onnx_doc_folder/diff_BatchNormalization_7_9.rst", "onnx_doc_folder/diff_BatchNormalization_9_14.rst", "onnx_doc_folder/diff_Cast_1_6.rst", "onnx_doc_folder/diff_Cast_6_9.rst", "onnx_doc_folder/diff_Cast_9_13.rst", "onnx_doc_folder/diff_Ceil_1_6.rst", "onnx_doc_folder/diff_Ceil_6_13.rst", "onnx_doc_folder/diff_Clip_11_12.rst", "onnx_doc_folder/diff_Clip_12_13.rst", "onnx_doc_folder/diff_Clip_1_6.rst", "onnx_doc_folder/diff_Clip_6_11.rst", "onnx_doc_folder/diff_Compress_9_11.rst", "onnx_doc_folder/diff_Concat_11_13.rst", "onnx_doc_folder/diff_Concat_1_4.rst", "onnx_doc_folder/diff_Concat_4_11.rst", "onnx_doc_folder/diff_Constant_11_12.rst", "onnx_doc_folder/diff_Constant_12_13.rst", "onnx_doc_folder/diff_Constant_1_9.rst", "onnx_doc_folder/diff_Constant_9_11.rst", "onnx_doc_folder/diff_ConvTranspose_1_11.rst", "onnx_doc_folder/diff_Conv_1_11.rst", "onnx_doc_folder/diff_CumSum_11_14.rst", "onnx_doc_folder/diff_DepthToSpace_11_13.rst", "onnx_doc_folder/diff_DepthToSpace_1_11.rst", "onnx_doc_folder/diff_DequantizeLinear_10_13.rst", "onnx_doc_folder/diff_Div_13_14.rst", "onnx_doc_folder/diff_Div_1_6.rst", "onnx_doc_folder/diff_Div_6_7.rst", "onnx_doc_folder/diff_Div_7_13.rst", "onnx_doc_folder/diff_Dropout_10_12.rst", "onnx_doc_folder/diff_Dropout_12_13.rst", "onnx_doc_folder/diff_Dropout_1_6.rst", "onnx_doc_folder/diff_Dropout_6_7.rst", "onnx_doc_folder/diff_Dropout_7_10.rst", "onnx_doc_folder/diff_Elu_1_6.rst", "onnx_doc_folder/diff_Equal_11_13.rst", "onnx_doc_folder/diff_Equal_1_7.rst", "onnx_doc_folder/diff_Equal_7_11.rst", "onnx_doc_folder/diff_Erf_9_13.rst", "onnx_doc_folder/diff_Exp_1_6.rst", "onnx_doc_folder/diff_Exp_6_13.rst", "onnx_doc_folder/diff_Expand_8_13.rst", "onnx_doc_folder/diff_Flatten_11_13.rst", "onnx_doc_folder/diff_Flatten_1_9.rst", "onnx_doc_folder/diff_Flatten_9_11.rst", "onnx_doc_folder/diff_Floor_1_6.rst", "onnx_doc_folder/diff_Floor_6_13.rst", "onnx_doc_folder/diff_GRU_1_3.rst", "onnx_doc_folder/diff_GRU_3_7.rst", "onnx_doc_folder/diff_GRU_7_14.rst", "onnx_doc_folder/diff_GatherElements_11_13.rst", "onnx_doc_folder/diff_GatherND_11_12.rst", "onnx_doc_folder/diff_GatherND_12_13.rst", "onnx_doc_folder/diff_Gather_11_13.rst", "onnx_doc_folder/diff_Gather_1_11.rst", "onnx_doc_folder/diff_Gemm_11_13.rst", "onnx_doc_folder/diff_Gemm_1_6.rst", "onnx_doc_folder/diff_Gemm_6_7.rst", "onnx_doc_folder/diff_Gemm_7_9.rst", "onnx_doc_folder/diff_Gemm_9_11.rst", "onnx_doc_folder/diff_GlobalLpPool_1_2.rst", "onnx_doc_folder/diff_GreaterOrEqual_12_16.rst", "onnx_doc_folder/diff_Greater_1_7.rst", "onnx_doc_folder/diff_Greater_7_9.rst", "onnx_doc_folder/diff_Greater_9_13.rst", "onnx_doc_folder/diff_HardSigmoid_1_6.rst", "onnx_doc_folder/diff_Hardmax_11_13.rst", "onnx_doc_folder/diff_Hardmax_1_11.rst", "onnx_doc_folder/diff_Identity_13_14.rst", "onnx_doc_folder/diff_Identity_14_16.rst", "onnx_doc_folder/diff_Identity_1_13.rst", "onnx_doc_folder/diff_If_11_13.rst", "onnx_doc_folder/diff_If_13_16.rst", "onnx_doc_folder/diff_If_1_11.rst", "onnx_doc_folder/diff_InstanceNormalization_1_6.rst", "onnx_doc_folder/diff_IsNaN_9_13.rst", "onnx_doc_folder/diff_LRN_1_13.rst", "onnx_doc_folder/diff_LSTM_1_7.rst", "onnx_doc_folder/diff_LSTM_7_14.rst", "onnx_doc_folder/diff_LabelEncoder_1_2.rst", "onnx_doc_folder/diff_LeakyRelu_1_6.rst", "onnx_doc_folder/diff_LeakyRelu_6_16.rst", "onnx_doc_folder/diff_LessOrEqual_12_16.rst", "onnx_doc_folder/diff_Less_1_7.rst", "onnx_doc_folder/diff_Less_7_9.rst", "onnx_doc_folder/diff_Less_9_13.rst", "onnx_doc_folder/diff_LogSoftmax_11_13.rst", "onnx_doc_folder/diff_LogSoftmax_1_11.rst", "onnx_doc_folder/diff_Log_1_6.rst", "onnx_doc_folder/diff_Log_6_13.rst", "onnx_doc_folder/diff_Loop_11_13.rst", "onnx_doc_folder/diff_Loop_13_16.rst", "onnx_doc_folder/diff_Loop_1_11.rst", "onnx_doc_folder/diff_LpPool_1_2.rst", "onnx_doc_folder/diff_LpPool_2_11.rst", "onnx_doc_folder/diff_MatMul_1_9.rst", "onnx_doc_folder/diff_MatMul_9_13.rst", "onnx_doc_folder/diff_MaxPool_10_11.rst", "onnx_doc_folder/diff_MaxPool_11_12.rst", "onnx_doc_folder/diff_MaxPool_1_8.rst", "onnx_doc_folder/diff_MaxPool_8_10.rst", "onnx_doc_folder/diff_MaxUnpool_9_11.rst", "onnx_doc_folder/diff_Max_12_13.rst", "onnx_doc_folder/diff_Max_1_6.rst", "onnx_doc_folder/diff_Max_6_8.rst", "onnx_doc_folder/diff_Max_8_12.rst", "onnx_doc_folder/diff_MeanVarianceNormalization_9_13.rst", "onnx_doc_folder/diff_Mean_1_6.rst", "onnx_doc_folder/diff_Mean_6_8.rst", "onnx_doc_folder/diff_Mean_8_13.rst", "onnx_doc_folder/diff_Min_12_13.rst", "onnx_doc_folder/diff_Min_1_6.rst", "onnx_doc_folder/diff_Min_6_8.rst", "onnx_doc_folder/diff_Min_8_12.rst", "onnx_doc_folder/diff_Mod_10_13.rst", "onnx_doc_folder/diff_Mul_13_14.rst", "onnx_doc_folder/diff_Mul_1_6.rst", "onnx_doc_folder/diff_Mul_6_7.rst", "onnx_doc_folder/diff_Mul_7_13.rst", "onnx_doc_folder/diff_Neg_1_6.rst", "onnx_doc_folder/diff_Neg_6_13.rst", "onnx_doc_folder/diff_NegativeLogLikelihoodLoss_12_13.rst", "onnx_doc_folder/diff_NonMaxSuppression_10_11.rst", "onnx_doc_folder/diff_NonZero_9_13.rst", "onnx_doc_folder/diff_OneHot_9_11.rst", "onnx_doc_folder/diff_OptionalGetElement_15_18.rst", "onnx_doc_folder/diff_OptionalHasElement_15_18.rst", "onnx_doc_folder/diff_Or_1_7.rst", "onnx_doc_folder/diff_PRelu_1_6.rst", "onnx_doc_folder/diff_PRelu_6_7.rst", "onnx_doc_folder/diff_PRelu_7_9.rst", "onnx_doc_folder/diff_PRelu_9_16.rst", "onnx_doc_folder/diff_Pad_11_13.rst", "onnx_doc_folder/diff_Pad_13_18.rst", "onnx_doc_folder/diff_Pad_1_2.rst", "onnx_doc_folder/diff_Pad_2_11.rst", "onnx_doc_folder/diff_Pow_12_13.rst", "onnx_doc_folder/diff_Pow_13_15.rst", "onnx_doc_folder/diff_Pow_1_7.rst", "onnx_doc_folder/diff_Pow_7_12.rst", "onnx_doc_folder/diff_QuantizeLinear_10_13.rst", "onnx_doc_folder/diff_RNN_1_7.rst", "onnx_doc_folder/diff_RNN_7_14.rst", "onnx_doc_folder/diff_Reciprocal_1_6.rst", "onnx_doc_folder/diff_Reciprocal_6_13.rst", "onnx_doc_folder/diff_ReduceL1_11_13.rst", "onnx_doc_folder/diff_ReduceL1_1_11.rst", "onnx_doc_folder/diff_ReduceL2_11_13.rst", "onnx_doc_folder/diff_ReduceL2_1_11.rst", "onnx_doc_folder/diff_ReduceLogSumExp_11_13.rst", "onnx_doc_folder/diff_ReduceLogSumExp_1_11.rst", "onnx_doc_folder/diff_ReduceLogSum_11_13.rst", "onnx_doc_folder/diff_ReduceLogSum_1_11.rst", "onnx_doc_folder/diff_ReduceMax_11_12.rst", "onnx_doc_folder/diff_ReduceMax_12_13.rst", "onnx_doc_folder/diff_ReduceMax_1_11.rst", "onnx_doc_folder/diff_ReduceMean_11_13.rst", "onnx_doc_folder/diff_ReduceMean_1_11.rst", "onnx_doc_folder/diff_ReduceMin_11_12.rst", "onnx_doc_folder/diff_ReduceMin_12_13.rst", "onnx_doc_folder/diff_ReduceMin_1_11.rst", "onnx_doc_folder/diff_ReduceProd_11_13.rst", "onnx_doc_folder/diff_ReduceProd_1_11.rst", "onnx_doc_folder/diff_ReduceSumSquare_11_13.rst", "onnx_doc_folder/diff_ReduceSumSquare_1_11.rst", "onnx_doc_folder/diff_ReduceSum_11_13.rst", "onnx_doc_folder/diff_ReduceSum_1_11.rst", "onnx_doc_folder/diff_Relu_13_14.rst", "onnx_doc_folder/diff_Relu_1_6.rst", "onnx_doc_folder/diff_Relu_6_13.rst", "onnx_doc_folder/diff_Reshape_13_14.rst", "onnx_doc_folder/diff_Reshape_1_5.rst", "onnx_doc_folder/diff_Reshape_5_13.rst", "onnx_doc_folder/diff_Resize_10_11.rst", "onnx_doc_folder/diff_Resize_11_13.rst", "onnx_doc_folder/diff_Resize_13_18.rst", "onnx_doc_folder/diff_RoiAlign_10_16.rst", "onnx_doc_folder/diff_Scan_11_16.rst", "onnx_doc_folder/diff_Scan_8_9.rst", "onnx_doc_folder/diff_Scan_9_11.rst", "onnx_doc_folder/diff_ScatterElements_11_13.rst", "onnx_doc_folder/diff_ScatterElements_13_16.rst", "onnx_doc_folder/diff_ScatterElements_16_18.rst", "onnx_doc_folder/diff_ScatterND_11_13.rst", "onnx_doc_folder/diff_ScatterND_13_16.rst", "onnx_doc_folder/diff_ScatterND_16_18.rst", "onnx_doc_folder/diff_Scatter_9_11.rst", "onnx_doc_folder/diff_Selu_1_6.rst", "onnx_doc_folder/diff_Shape_13_15.rst", "onnx_doc_folder/diff_Shape_1_13.rst", "onnx_doc_folder/diff_Sigmoid_1_6.rst", "onnx_doc_folder/diff_Sigmoid_6_13.rst", "onnx_doc_folder/diff_Sign_9_13.rst", "onnx_doc_folder/diff_Size_1_13.rst", "onnx_doc_folder/diff_Slice_10_11.rst", "onnx_doc_folder/diff_Slice_11_13.rst", "onnx_doc_folder/diff_Slice_1_10.rst", "onnx_doc_folder/diff_SoftmaxCrossEntropyLoss_12_13.rst", "onnx_doc_folder/diff_Softmax_11_13.rst", "onnx_doc_folder/diff_Softmax_1_11.rst", "onnx_doc_folder/diff_SpaceToDepth_1_13.rst", "onnx_doc_folder/diff_Split_11_13.rst", "onnx_doc_folder/diff_Split_1_2.rst", "onnx_doc_folder/diff_Split_2_11.rst", "onnx_doc_folder/diff_Sqrt_1_6.rst", "onnx_doc_folder/diff_Sqrt_6_13.rst", "onnx_doc_folder/diff_Squeeze_11_13.rst", "onnx_doc_folder/diff_Squeeze_1_11.rst", "onnx_doc_folder/diff_Sub_13_14.rst", "onnx_doc_folder/diff_Sub_1_6.rst", "onnx_doc_folder/diff_Sub_6_7.rst", "onnx_doc_folder/diff_Sub_7_13.rst", "onnx_doc_folder/diff_Sum_1_6.rst", "onnx_doc_folder/diff_Sum_6_8.rst", "onnx_doc_folder/diff_Sum_8_13.rst", "onnx_doc_folder/diff_Tanh_1_6.rst", "onnx_doc_folder/diff_Tanh_6_13.rst", "onnx_doc_folder/diff_Tile_1_6.rst", "onnx_doc_folder/diff_Tile_6_13.rst", "onnx_doc_folder/diff_TopK_10_11.rst", "onnx_doc_folder/diff_TopK_1_10.rst", "onnx_doc_folder/diff_Transpose_1_13.rst", "onnx_doc_folder/diff_TreeEnsembleClassifier_1_3.rst", "onnx_doc_folder/diff_TreeEnsembleRegressor_1_3.rst", "onnx_doc_folder/diff_Unsqueeze_11_13.rst", "onnx_doc_folder/diff_Unsqueeze_1_11.rst", "onnx_doc_folder/diff_Upsample_1_7.rst", "onnx_doc_folder/diff_Upsample_7_9.rst", "onnx_doc_folder/diff_Upsample_9_10.rst", "onnx_doc_folder/diff_Where_9_16.rst", "onnx_doc_folder/diff_Xor_1_7.rst", "onnx_doc_folder/index.rst", "onnx_doc_folder/onnx__Abs.rst", "onnx_doc_folder/onnx__Acos.rst", "onnx_doc_folder/onnx__Acosh.rst", "onnx_doc_folder/onnx__Add.rst", "onnx_doc_folder/onnx__And.rst", "onnx_doc_folder/onnx__ArgMax.rst", "onnx_doc_folder/onnx__ArgMin.rst", "onnx_doc_folder/onnx__Asin.rst", "onnx_doc_folder/onnx__Asinh.rst", "onnx_doc_folder/onnx__Atan.rst", "onnx_doc_folder/onnx__Atanh.rst", "onnx_doc_folder/onnx__AveragePool.rst", "onnx_doc_folder/onnx__BatchNormalization.rst", "onnx_doc_folder/onnx__Bernoulli.rst", "onnx_doc_folder/onnx__BitShift.rst", "onnx_doc_folder/onnx__BlackmanWindow.rst", "onnx_doc_folder/onnx__Cast.rst", "onnx_doc_folder/onnx__CastLike.rst", "onnx_doc_folder/onnx__Ceil.rst", "onnx_doc_folder/onnx__Celu.rst", "onnx_doc_folder/onnx__CenterCropPad.rst", "onnx_doc_folder/onnx__Clip.rst", "onnx_doc_folder/onnx__Col2Im.rst", "onnx_doc_folder/onnx__Compress.rst", "onnx_doc_folder/onnx__Concat.rst", "onnx_doc_folder/onnx__ConcatFromSequence.rst", "onnx_doc_folder/onnx__Constant.rst", "onnx_doc_folder/onnx__ConstantOfShape.rst", "onnx_doc_folder/onnx__Conv.rst", "onnx_doc_folder/onnx__ConvInteger.rst", "onnx_doc_folder/onnx__ConvTranspose.rst", "onnx_doc_folder/onnx__Cos.rst", "onnx_doc_folder/onnx__Cosh.rst", "onnx_doc_folder/onnx__CumSum.rst", "onnx_doc_folder/onnx__DFT.rst", "onnx_doc_folder/onnx__DepthToSpace.rst", "onnx_doc_folder/onnx__DequantizeLinear.rst", "onnx_doc_folder/onnx__Det.rst", "onnx_doc_folder/onnx__Div.rst", "onnx_doc_folder/onnx__Dropout.rst", "onnx_doc_folder/onnx__DynamicQuantizeLinear.rst", "onnx_doc_folder/onnx__Einsum.rst", "onnx_doc_folder/onnx__Elu.rst", "onnx_doc_folder/onnx__Equal.rst", "onnx_doc_folder/onnx__Erf.rst", "onnx_doc_folder/onnx__Exp.rst", "onnx_doc_folder/onnx__Expand.rst", "onnx_doc_folder/onnx__EyeLike.rst", "onnx_doc_folder/onnx__Flatten.rst", "onnx_doc_folder/onnx__Floor.rst", "onnx_doc_folder/onnx__GRU.rst", "onnx_doc_folder/onnx__Gather.rst", "onnx_doc_folder/onnx__GatherElements.rst", "onnx_doc_folder/onnx__GatherND.rst", "onnx_doc_folder/onnx__Gemm.rst", "onnx_doc_folder/onnx__GlobalAveragePool.rst", "onnx_doc_folder/onnx__GlobalLpPool.rst", "onnx_doc_folder/onnx__GlobalMaxPool.rst", "onnx_doc_folder/onnx__Greater.rst", "onnx_doc_folder/onnx__GreaterOrEqual.rst", "onnx_doc_folder/onnx__GridSample.rst", "onnx_doc_folder/onnx__HammingWindow.rst", "onnx_doc_folder/onnx__HannWindow.rst", "onnx_doc_folder/onnx__HardSigmoid.rst", "onnx_doc_folder/onnx__HardSwish.rst", "onnx_doc_folder/onnx__Hardmax.rst", "onnx_doc_folder/onnx__Identity.rst", "onnx_doc_folder/onnx__If.rst", "onnx_doc_folder/onnx__InstanceNormalization.rst", "onnx_doc_folder/onnx__IsInf.rst", "onnx_doc_folder/onnx__IsNaN.rst", "onnx_doc_folder/onnx__LRN.rst", "onnx_doc_folder/onnx__LSTM.rst", "onnx_doc_folder/onnx__LayerNormalization.rst", "onnx_doc_folder/onnx__LeakyRelu.rst", "onnx_doc_folder/onnx__Less.rst", "onnx_doc_folder/onnx__LessOrEqual.rst", "onnx_doc_folder/onnx__Log.rst", "onnx_doc_folder/onnx__LogSoftmax.rst", "onnx_doc_folder/onnx__Loop.rst", "onnx_doc_folder/onnx__LpNormalization.rst", "onnx_doc_folder/onnx__LpPool.rst", "onnx_doc_folder/onnx__MatMul.rst", "onnx_doc_folder/onnx__MatMulInteger.rst", "onnx_doc_folder/onnx__Max.rst", "onnx_doc_folder/onnx__MaxPool.rst", "onnx_doc_folder/onnx__MaxRoiPool.rst", "onnx_doc_folder/onnx__MaxUnpool.rst", "onnx_doc_folder/onnx__Mean.rst", "onnx_doc_folder/onnx__MeanVarianceNormalization.rst", "onnx_doc_folder/onnx__MelWeightMatrix.rst", "onnx_doc_folder/onnx__Min.rst", "onnx_doc_folder/onnx__Mish.rst", "onnx_doc_folder/onnx__Mod.rst", "onnx_doc_folder/onnx__Mul.rst", "onnx_doc_folder/onnx__Multinomial.rst", "onnx_doc_folder/onnx__Neg.rst", "onnx_doc_folder/onnx__NegativeLogLikelihoodLoss.rst", "onnx_doc_folder/onnx__NonMaxSuppression.rst", "onnx_doc_folder/onnx__NonZero.rst", "onnx_doc_folder/onnx__Not.rst", "onnx_doc_folder/onnx__OneHot.rst", "onnx_doc_folder/onnx__Optional.rst", "onnx_doc_folder/onnx__OptionalGetElement.rst", "onnx_doc_folder/onnx__OptionalHasElement.rst", "onnx_doc_folder/onnx__Or.rst", "onnx_doc_folder/onnx__PRelu.rst", "onnx_doc_folder/onnx__Pad.rst", "onnx_doc_folder/onnx__Pow.rst", "onnx_doc_folder/onnx__QLinearConv.rst", "onnx_doc_folder/onnx__QLinearMatMul.rst", "onnx_doc_folder/onnx__QuantizeLinear.rst", "onnx_doc_folder/onnx__RNN.rst", "onnx_doc_folder/onnx__RandomNormal.rst", "onnx_doc_folder/onnx__RandomNormalLike.rst", "onnx_doc_folder/onnx__RandomUniform.rst", "onnx_doc_folder/onnx__RandomUniformLike.rst", "onnx_doc_folder/onnx__Range.rst", "onnx_doc_folder/onnx__Reciprocal.rst", "onnx_doc_folder/onnx__ReduceL1.rst", "onnx_doc_folder/onnx__ReduceL2.rst", "onnx_doc_folder/onnx__ReduceLogSum.rst", "onnx_doc_folder/onnx__ReduceLogSumExp.rst", "onnx_doc_folder/onnx__ReduceMax.rst", "onnx_doc_folder/onnx__ReduceMean.rst", "onnx_doc_folder/onnx__ReduceMin.rst", "onnx_doc_folder/onnx__ReduceProd.rst", "onnx_doc_folder/onnx__ReduceSum.rst", "onnx_doc_folder/onnx__ReduceSumSquare.rst", "onnx_doc_folder/onnx__Relu.rst", "onnx_doc_folder/onnx__Reshape.rst", "onnx_doc_folder/onnx__Resize.rst", "onnx_doc_folder/onnx__ReverseSequence.rst", "onnx_doc_folder/onnx__RoiAlign.rst", "onnx_doc_folder/onnx__Round.rst", "onnx_doc_folder/onnx__STFT.rst", "onnx_doc_folder/onnx__Scan.rst", "onnx_doc_folder/onnx__Scatter.rst", "onnx_doc_folder/onnx__ScatterElements.rst", "onnx_doc_folder/onnx__ScatterND.rst", "onnx_doc_folder/onnx__Selu.rst", "onnx_doc_folder/onnx__SequenceAt.rst", "onnx_doc_folder/onnx__SequenceConstruct.rst", "onnx_doc_folder/onnx__SequenceEmpty.rst", "onnx_doc_folder/onnx__SequenceErase.rst", "onnx_doc_folder/onnx__SequenceInsert.rst", "onnx_doc_folder/onnx__SequenceLength.rst", "onnx_doc_folder/onnx__SequenceMap.rst", "onnx_doc_folder/onnx__Shape.rst", "onnx_doc_folder/onnx__Shrink.rst", "onnx_doc_folder/onnx__Sigmoid.rst", "onnx_doc_folder/onnx__Sign.rst", "onnx_doc_folder/onnx__Sin.rst", "onnx_doc_folder/onnx__Sinh.rst", "onnx_doc_folder/onnx__Size.rst", "onnx_doc_folder/onnx__Slice.rst", "onnx_doc_folder/onnx__Softmax.rst", "onnx_doc_folder/onnx__SoftmaxCrossEntropyLoss.rst", "onnx_doc_folder/onnx__Softplus.rst", "onnx_doc_folder/onnx__Softsign.rst", "onnx_doc_folder/onnx__SpaceToDepth.rst", "onnx_doc_folder/onnx__Split.rst", "onnx_doc_folder/onnx__SplitToSequence.rst", "onnx_doc_folder/onnx__Sqrt.rst", "onnx_doc_folder/onnx__Squeeze.rst", "onnx_doc_folder/onnx__StringNormalizer.rst", "onnx_doc_folder/onnx__Sub.rst", "onnx_doc_folder/onnx__Sum.rst", "onnx_doc_folder/onnx__Tan.rst", "onnx_doc_folder/onnx__Tanh.rst", "onnx_doc_folder/onnx__TfIdfVectorizer.rst", "onnx_doc_folder/onnx__ThresholdedRelu.rst", "onnx_doc_folder/onnx__Tile.rst", "onnx_doc_folder/onnx__TopK.rst", "onnx_doc_folder/onnx__Transpose.rst", "onnx_doc_folder/onnx__Trilu.rst", "onnx_doc_folder/onnx__Unique.rst", "onnx_doc_folder/onnx__Unsqueeze.rst", "onnx_doc_folder/onnx__Upsample.rst", "onnx_doc_folder/onnx__Where.rst", "onnx_doc_folder/onnx__Xor.rst", "onnx_doc_folder/onnx_aionnxml_ArrayFeatureExtractor.rst", "onnx_doc_folder/onnx_aionnxml_Binarizer.rst", "onnx_doc_folder/onnx_aionnxml_CastMap.rst", "onnx_doc_folder/onnx_aionnxml_CategoryMapper.rst", "onnx_doc_folder/onnx_aionnxml_DictVectorizer.rst", "onnx_doc_folder/onnx_aionnxml_FeatureVectorizer.rst", "onnx_doc_folder/onnx_aionnxml_Imputer.rst", "onnx_doc_folder/onnx_aionnxml_LabelEncoder.rst", "onnx_doc_folder/onnx_aionnxml_LinearClassifier.rst", "onnx_doc_folder/onnx_aionnxml_LinearRegressor.rst", "onnx_doc_folder/onnx_aionnxml_Normalizer.rst", "onnx_doc_folder/onnx_aionnxml_OneHotEncoder.rst", "onnx_doc_folder/onnx_aionnxml_SVMClassifier.rst", "onnx_doc_folder/onnx_aionnxml_SVMRegressor.rst", "onnx_doc_folder/onnx_aionnxml_Scaler.rst", "onnx_doc_folder/onnx_aionnxml_TreeEnsembleClassifier.rst", "onnx_doc_folder/onnx_aionnxml_TreeEnsembleRegressor.rst", "onnx_doc_folder/onnx_aionnxml_ZipMap.rst", "onnx_doc_folder/onnx_aionnxpreviewtraining_Adagrad.rst", "onnx_doc_folder/onnx_aionnxpreviewtraining_Adam.rst", "onnx_doc_folder/onnx_aionnxpreviewtraining_Gradient.rst", "onnx_doc_folder/onnx_aionnxpreviewtraining_Momentum.rst", "onnx_doc_folder/table_ai_onnx_ml.rst", "onnx_doc_folder/table_ai_onnx_preview_training.rst", "onnx_doc_folder/table_main.rst", "onnx_python/classes.rst", "onnx_python/helper.rst", "onnx_python/hub.rst", "onnx_python/index.rst", "onnx_python/numpy_helper.rst", "onnx_python/plotting.rst", "onnx_python/serialize.rst", "onnx_python/shape_inference.rst", "onnx_python/spec.rst", "onnx_python/utils.rst"], "titles": ["Function expect", "ONNX static content generation", "Submodules Summary", "onnx.checker", "onnx.compose", "onnx.external_data_helper", "onnx.helper", "onnx.hub", "onnx.numpy_helper", "onnx.parser", "onnx.utils", "onnx.version.version", "onnx.version_converter", "Abs - 1 vs 6", "Abs - 6 vs 13", "Add - 13 vs 14", "Add - 1 vs 6", "Add - 6 vs 7", "Add - 7 vs 13", "And - 1 vs 7", "ArgMax - 11 vs 12", "ArgMax - 12 vs 13", "ArgMax - 1 vs 11", "ArgMin - 11 vs 12", "ArgMin - 12 vs 13", "ArgMin - 1 vs 11", "AveragePool - 10 vs 11", "AveragePool - 1 vs 7", "AveragePool - 7 vs 10", "BatchNormalization - 14 vs 15", "BatchNormalization - 1 vs 6", "BatchNormalization - 6 vs 7", "BatchNormalization - 7 vs 9", "BatchNormalization - 9 vs 14", "Cast - 1 vs 6", "Cast - 6 vs 9", "Cast - 9 vs 13", "Ceil - 1 vs 6", "Ceil - 6 vs 13", "Clip - 11 vs 12", "Clip - 12 vs 13", "Clip - 1 vs 6", "Clip - 6 vs 11", "Compress - 9 vs 11", "Concat - 11 vs 13", "Concat - 1 vs 4", "Concat - 4 vs 11", "Constant - 11 vs 12", "Constant - 12 vs 13", "Constant - 1 vs 9", "Constant - 9 vs 11", "ConvTranspose - 1 vs 11", "Conv - 1 vs 11", "CumSum - 11 vs 14", "DepthToSpace - 11 vs 13", "DepthToSpace - 1 vs 11", "DequantizeLinear - 10 vs 13", "Div - 13 vs 14", "Div - 1 vs 6", "Div - 6 vs 7", "Div - 7 vs 13", "Dropout - 10 vs 12", "Dropout - 12 vs 13", "Dropout - 1 vs 6", "Dropout - 6 vs 7", "Dropout - 7 vs 10", "Elu - 1 vs 6", "Equal - 11 vs 13", "Equal - 1 vs 7", "Equal - 7 vs 11", "Erf - 9 vs 13", "Exp - 1 vs 6", "Exp - 6 vs 13", "Expand - 8 vs 13", "Flatten - 11 vs 13", "Flatten - 1 vs 9", "Flatten - 9 vs 11", "Floor - 1 vs 6", "Floor - 6 vs 13", "GRU - 1 vs 3", "GRU - 3 vs 7", "GRU - 7 vs 14", "GatherElements - 11 vs 13", "GatherND - 11 vs 12", "GatherND - 12 vs 13", "Gather - 11 vs 13", "Gather - 1 vs 11", "Gemm - 11 vs 13", "Gemm - 1 vs 6", "Gemm - 6 vs 7", "Gemm - 7 vs 9", "Gemm - 9 vs 11", "GlobalLpPool - 1 vs 2", "GreaterOrEqual - 12 vs 16", "Greater - 1 vs 7", "Greater - 7 vs 9", "Greater - 9 vs 13", "HardSigmoid - 1 vs 6", "Hardmax - 11 vs 13", "Hardmax - 1 vs 11", "Identity - 13 vs 14", "Identity - 14 vs 16", "Identity - 1 vs 13", "If - 11 vs 13", "If - 13 vs 16", "If - 1 vs 11", "InstanceNormalization - 1 vs 6", "IsNaN - 9 vs 13", "LRN - 1 vs 13", "LSTM - 1 vs 7", "LSTM - 7 vs 14", "LabelEncoder - 1 vs 2", "LeakyRelu - 1 vs 6", "LeakyRelu - 6 vs 16", "LessOrEqual - 12 vs 16", "Less - 1 vs 7", "Less - 7 vs 9", "Less - 9 vs 13", "LogSoftmax - 11 vs 13", "LogSoftmax - 1 vs 11", "Log - 1 vs 6", "Log - 6 vs 13", "Loop - 11 vs 13", "Loop - 13 vs 16", "Loop - 1 vs 11", "LpPool - 1 vs 2", "LpPool - 2 vs 11", "MatMul - 1 vs 9", "MatMul - 9 vs 13", "MaxPool - 10 vs 11", "MaxPool - 11 vs 12", "MaxPool - 1 vs 8", "MaxPool - 8 vs 10", "MaxUnpool - 9 vs 11", "Max - 12 vs 13", "Max - 1 vs 6", "Max - 6 vs 8", "Max - 8 vs 12", "MeanVarianceNormalization - 9 vs 13", "Mean - 1 vs 6", "Mean - 6 vs 8", "Mean - 8 vs 13", "Min - 12 vs 13", "Min - 1 vs 6", "Min - 6 vs 8", "Min - 8 vs 12", "Mod - 10 vs 13", "Mul - 13 vs 14", "Mul - 1 vs 6", "Mul - 6 vs 7", "Mul - 7 vs 13", "Neg - 1 vs 6", "Neg - 6 vs 13", "NegativeLogLikelihoodLoss - 12 vs 13", "NonMaxSuppression - 10 vs 11", "NonZero - 9 vs 13", "OneHot - 9 vs 11", "OptionalGetElement - 15 vs 18", "OptionalHasElement - 15 vs 18", "Or - 1 vs 7", "PRelu - 1 vs 6", "PRelu - 6 vs 7", "PRelu - 7 vs 9", "PRelu - 9 vs 16", "Pad - 11 vs 13", "Pad - 13 vs 18", "Pad - 1 vs 2", "Pad - 2 vs 11", "Pow - 12 vs 13", "Pow - 13 vs 15", "Pow - 1 vs 7", "Pow - 7 vs 12", "QuantizeLinear - 10 vs 13", "RNN - 1 vs 7", "RNN - 7 vs 14", "Reciprocal - 1 vs 6", "Reciprocal - 6 vs 13", "ReduceL1 - 11 vs 13", "ReduceL1 - 1 vs 11", "ReduceL2 - 11 vs 13", "ReduceL2 - 1 vs 11", "ReduceLogSumExp - 11 vs 13", "ReduceLogSumExp - 1 vs 11", "ReduceLogSum - 11 vs 13", "ReduceLogSum - 1 vs 11", "ReduceMax - 11 vs 12", "ReduceMax - 12 vs 13", "ReduceMax - 1 vs 11", "ReduceMean - 11 vs 13", "ReduceMean - 1 vs 11", "ReduceMin - 11 vs 12", "ReduceMin - 12 vs 13", "ReduceMin - 1 vs 11", "ReduceProd - 11 vs 13", "ReduceProd - 1 vs 11", "ReduceSumSquare - 11 vs 13", "ReduceSumSquare - 1 vs 11", "ReduceSum - 11 vs 13", "ReduceSum - 1 vs 11", "Relu - 13 vs 14", "Relu - 1 vs 6", "Relu - 6 vs 13", "Reshape - 13 vs 14", "Reshape - 1 vs 5", "Reshape - 5 vs 13", "Resize - 10 vs 11", "Resize - 11 vs 13", "Resize - 13 vs 18", "RoiAlign - 10 vs 16", "Scan - 11 vs 16", "Scan - 8 vs 9", "Scan - 9 vs 11", "ScatterElements - 11 vs 13", "ScatterElements - 13 vs 16", "ScatterElements - 16 vs 18", "ScatterND - 11 vs 13", "ScatterND - 13 vs 16", "ScatterND - 16 vs 18", "Scatter - 9 vs 11", "Selu - 1 vs 6", "Shape - 13 vs 15", "Shape - 1 vs 13", "Sigmoid - 1 vs 6", "Sigmoid - 6 vs 13", "Sign - 9 vs 13", "Size - 1 vs 13", "Slice - 10 vs 11", "Slice - 11 vs 13", "Slice - 1 vs 10", "SoftmaxCrossEntropyLoss - 12 vs 13", "Softmax - 11 vs 13", "Softmax - 1 vs 11", "SpaceToDepth - 1 vs 13", "Split - 11 vs 13", "Split - 1 vs 2", "Split - 2 vs 11", "Sqrt - 1 vs 6", "Sqrt - 6 vs 13", "Squeeze - 11 vs 13", "Squeeze - 1 vs 11", "Sub - 13 vs 14", "Sub - 1 vs 6", "Sub - 6 vs 7", "Sub - 7 vs 13", "Sum - 1 vs 6", "Sum - 6 vs 8", "Sum - 8 vs 13", "Tanh - 1 vs 6", "Tanh - 6 vs 13", "Tile - 1 vs 6", "Tile - 6 vs 13", "TopK - 10 vs 11", "TopK - 1 vs 10", "Transpose - 1 vs 13", "TreeEnsembleClassifier - 1 vs 3", "TreeEnsembleRegressor - 1 vs 3", "Unsqueeze - 11 vs 13", "Unsqueeze - 1 vs 11", "Upsample - 1 vs 7", "Upsample - 7 vs 9", "Upsample - 9 vs 10", "Where - 9 vs 16", "Xor - 1 vs 7", "ONNX operators", "Abs", "Acos", "Acosh", "Add", "And", "ArgMax", "ArgMin", "Asin", "Asinh", "Atan", "Atanh", "AveragePool", "BatchNormalization", "Bernoulli", "BitShift", "BlackmanWindow", "Cast", "CastLike", "Ceil", "Celu", "CenterCropPad", "Clip", "Col2Im", "Compress", "Concat", "ConcatFromSequence", "Constant", "ConstantOfShape", "Conv", "ConvInteger", "ConvTranspose", "Cos", "Cosh", "CumSum", "DFT", "DepthToSpace", "DequantizeLinear", "Det", "Div", "Dropout", "DynamicQuantizeLinear", "Einsum", "Elu", "Equal", "Erf", "Exp", "Expand", "EyeLike", "Flatten", "Floor", "GRU", "Gather", "GatherElements", "GatherND", "Gemm", "GlobalAveragePool", "GlobalLpPool", "GlobalMaxPool", "Greater", "GreaterOrEqual", "GridSample", "HammingWindow", "HannWindow", "HardSigmoid", "HardSwish", "Hardmax", "Identity", "If", "InstanceNormalization", "IsInf", "IsNaN", "LRN", "LSTM", "LayerNormalization", "LeakyRelu", "Less", "LessOrEqual", "Log", "LogSoftmax", "Loop", "LpNormalization", "LpPool", "MatMul", "MatMulInteger", "Max", "MaxPool", "MaxRoiPool", "MaxUnpool", "Mean", "MeanVarianceNormalization", "MelWeightMatrix", "Min", "Mish", "Mod", "Mul", "Multinomial", "Neg", "NegativeLogLikelihoodLoss", "NonMaxSuppression", "NonZero", "Not", "OneHot", "Optional", "OptionalGetElement", "OptionalHasElement", "Or", "PRelu", "Pad", "Pow", "QLinearConv", "QLinearMatMul", "QuantizeLinear", "RNN", "RandomNormal", "RandomNormalLike", "RandomUniform", "RandomUniformLike", "Range", "Reciprocal", "ReduceL1", "ReduceL2", "ReduceLogSum", "ReduceLogSumExp", "ReduceMax", "ReduceMean", "ReduceMin", "ReduceProd", "ReduceSum", "ReduceSumSquare", "Relu", "Reshape", "Resize", "ReverseSequence", "RoiAlign", "Round", "STFT", "Scan", "Scatter", "ScatterElements", "ScatterND", "Selu", "SequenceAt", "SequenceConstruct", "SequenceEmpty", "SequenceErase", "SequenceInsert", "SequenceLength", "SequenceMap", "Shape", "Shrink", "Sigmoid", "Sign", "Sin", "Sinh", "Size", "Slice", "Softmax", "SoftmaxCrossEntropyLoss", "Softplus", "Softsign", "SpaceToDepth", "Split", "SplitToSequence", "Sqrt", "Squeeze", "StringNormalizer", "Sub", "Sum", "Tan", "Tanh", "TfIdfVectorizer", "ThresholdedRelu", "Tile", "TopK", "Transpose", "Trilu", "Unique", "Unsqueeze", "Upsample", "Where", "Xor", "ai.onnx.ml - ArrayFeatureExtractor", "ai.onnx.ml - Binarizer", "ai.onnx.ml - CastMap", "ai.onnx.ml - CategoryMapper", "ai.onnx.ml - DictVectorizer", "ai.onnx.ml - FeatureVectorizer", "ai.onnx.ml - Imputer", "ai.onnx.ml - LabelEncoder", "ai.onnx.ml - LinearClassifier", "ai.onnx.ml - LinearRegressor", "ai.onnx.ml - Normalizer", "ai.onnx.ml - OneHotEncoder", "ai.onnx.ml - SVMClassifier", "ai.onnx.ml - SVMRegressor", "ai.onnx.ml - Scaler", "ai.onnx.ml - TreeEnsembleClassifier", "ai.onnx.ml - TreeEnsembleRegressor", "ai.onnx.ml - ZipMap", "ai.onnx.preview.training - Adagrad", "ai.onnx.preview.training - Adam", "ai.onnx.preview.training - Gradient", "ai.onnx.preview.training - Momentum", "operator table for domain ai.onnx.ml", "operator table for domain ai.onnx.preview.training", "operator table for domain main", "onnx classes", "onnx.helper", "onnx.hub", "Functions", "onnx.numpy_helper", "onnx.helper", "Serialization", "onnx.shape_inference", "Specifications", "Tools"], "terms": {"mani": [0, 400, 411, 447, 462, 473], "exampl": [0, 1, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 473, 479], "from": [0, 11, 268, 275, 276, 277, 279, 280, 281, 284, 286, 287, 288, 291, 292, 293, 294, 297, 299, 300, 303, 307, 311, 312, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 332, 335, 337, 339, 340, 342, 343, 345, 346, 347, 349, 350, 351, 354, 359, 362, 363, 365, 369, 371, 373, 374, 375, 377, 378, 379, 380, 394, 395, 397, 400, 401, 402, 405, 408, 409, 411, 412, 419, 420, 424, 425, 426, 428, 429, 434, 437, 440, 441, 443, 444, 449, 452, 456, 462, 463, 465, 472, 473, 475, 476, 478, 479], "document": [0, 279, 281, 325, 326, 395, 434, 471], "end": [0, 1, 275, 286, 292, 293, 294, 343, 345, 349, 351, 371, 373, 400, 412, 419, 434, 460, 461], "call": [0, 1, 294, 463, 464, 465, 466, 474, 476], "check": [0, 1, 3, 267, 268, 278, 302, 307, 318, 322, 323, 339, 340, 348, 352, 355, 357, 358, 369, 370, 372, 395, 430, 431, 443, 444, 463, 464, 466, 477, 479], "runtim": [0, 1, 343], "return": [0, 11, 268, 277, 279, 280, 297, 298, 307, 322, 323, 325, 326, 331, 334, 339, 340, 343, 354, 363, 364, 367, 368, 369, 399, 400, 412, 427, 429, 437, 439, 440, 443, 444, 456, 460, 461, 471, 472, 474, 476, 477, 479], "output": [0, 1, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 471, 477, 479], "given": [0, 11, 265, 266, 271, 272, 273, 274, 280, 281, 284, 285, 287, 291, 295, 296, 297, 304, 308, 309, 310, 315, 317, 324, 329, 331, 341, 342, 343, 344, 350, 361, 371, 395, 397, 400, 401, 407, 409, 415, 416, 417, 420, 421, 423, 426, 432, 433, 436, 437, 438, 439, 441, 442, 449, 463, 464, 465, 471, 472], "here": [0, 343, 400, 434, 476], "i": [0, 1, 3, 11, 264, 267, 268, 269, 270, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 335, 336, 337, 338, 339, 340, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 463, 464, 465, 466, 471, 472, 475, 476, 477, 479], "one": [0, 264, 277, 279, 280, 282, 290, 291, 292, 294, 301, 303, 305, 306, 310, 311, 313, 314, 315, 316, 325, 326, 327, 328, 329, 336, 337, 338, 342, 343, 345, 354, 359, 360, 361, 365, 370, 372, 376, 377, 378, 379, 380, 382, 393, 394, 395, 396, 398, 400, 401, 404, 411, 412, 413, 414, 420, 421, 422, 427, 428, 429, 434, 435, 439, 440, 441, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 460, 462, 463, 464, 465, 466, 476, 479], "implement": [0, 1, 3, 7, 277, 286, 303, 314, 336, 337, 343, 376, 429], "base": [0, 275, 292, 293, 294, 343, 345, 349, 354, 362, 365, 372, 373, 434, 445, 446, 447, 460, 461, 463, 464, 465, 466, 471], "onnxruntim": 0, "type": [0, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 470, 471, 474, 476, 477], "import": [0, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 463, 464, 466, 473, 475, 476, 478, 479], "ani": [0, 267, 275, 280, 286, 288, 289, 292, 293, 294, 297, 302, 315, 316, 317, 343, 345, 349, 351, 354, 358, 362, 365, 372, 373, 378, 380, 394, 396, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 419, 430, 436, 440, 441, 445, 449, 452, 465, 471, 472, 474, 476, 477], "sequenc": [0, 288, 289, 305, 314, 330, 331, 336, 343, 366, 367, 368, 376, 381, 396, 400, 405, 406, 407, 408, 409, 410, 411, 426, 434, 448, 454, 460, 462, 471], "numpi": [0, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 463, 464, 466, 474], "np": [0, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 463, 464, 466], "onnx": [0, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 473, 476, 478, 479], "def": [0, 337, 473, 474, 478], "node": [0, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 460, 461, 463, 464, 465, 466, 471, 479], "nodeproto": [0, 471], "input": [0, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 471, 474, 477, 479], "ndarrai": [0, 474], "name": [0, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 471, 472, 474, 475, 476, 479], "str": [0, 11, 280, 281, 288, 312, 438, 441, 471, 472, 474, 476, 477, 478, 479], "kwarg": [0, 471, 478], "none": [0, 280, 281, 337, 343, 361, 368, 383, 384, 386, 387, 388, 389, 390, 391, 392, 402, 403, 421, 429, 434, 440, 453, 454, 457, 458, 460, 461, 471, 472, 474, 476, 477, 479], "build": 0, "model": [0, 7, 12, 303, 331, 343, 362, 453, 454, 465, 466, 472, 473, 477, 479], "present_input": 0, "x": [0, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 349, 350, 351, 353, 356, 357, 358, 360, 361, 363, 364, 369, 370, 371, 372, 373, 374, 375, 376, 382, 393, 395, 396, 397, 398, 399, 400, 404, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "present_output": 0, "input_type_proto": [0, 280, 281, 330, 343, 367, 368, 411], "len": [0, 280, 281, 288, 312, 337, 409, 419, 438, 440], "del": 0, "output_type_proto": [0, 280, 281, 330, 331, 411], "inputs_vi": 0, "_extract_value_info": 0, "arr": [0, 474], "arr_nam": 0, "input_typ": 0, "zip": [0, 400, 440], "outputs_vi": 0, "output_typ": [0, 365], "graph": [0, 331, 343, 400, 411, 465, 471, 476, 477, 479], "helper": [0, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 463, 464, 466, 473, 478], "make_graph": [0, 331, 343, 400, 411, 471], "producer_nam": [0, 479], "backend": 0, "test": [0, 276, 279, 294, 303, 324, 325, 326, 399, 412, 479], "opset_import": [0, 303, 330, 331, 343, 400, 401, 442, 463, 464, 466, 471], "To": [0, 357, 465], "make": [0, 324, 337, 343, 351, 436, 460, 461], "sure": 0, "produc": [0, 1, 264, 277, 280, 281, 282, 286, 290, 303, 305, 306, 313, 316, 327, 328, 331, 338, 343, 350, 351, 360, 363, 365, 370, 372, 382, 393, 397, 400, 401, 402, 403, 404, 410, 413, 414, 419, 422, 427, 434, 435, 449, 479], "same": [0, 267, 269, 270, 276, 277, 280, 281, 284, 288, 289, 290, 297, 300, 302, 305, 308, 310, 311, 314, 316, 318, 319, 320, 321, 324, 329, 331, 332, 336, 337, 342, 348, 349, 351, 352, 353, 355, 357, 358, 362, 365, 370, 372, 373, 374, 375, 376, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 398, 400, 401, 402, 403, 406, 409, 411, 413, 415, 420, 428, 430, 431, 436, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 456, 457, 459, 460, 461, 463, 466, 471, 476, 477, 479], "opset_vers": 0, "after": [0, 276, 286, 298, 343, 344, 371, 395, 412, 421, 425, 426, 429, 442, 463], "opset": [0, 12, 267, 302, 358, 402, 403, 430, 471, 472, 473, 479], "chang": [0, 267, 280, 294, 297, 302, 343, 358, 400, 402, 403, 430, 451], "By": [0, 289, 294, 297, 298, 299, 311, 394, 434, 438, 465, 479], "default": [0, 11, 12, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 448, 452, 453, 454, 463, 464, 471, 472, 477, 479], "us": [0, 11, 275, 276, 277, 279, 280, 283, 292, 293, 294, 298, 299, 303, 305, 311, 314, 318, 320, 324, 325, 326, 332, 336, 337, 343, 345, 349, 350, 351, 353, 354, 356, 359, 362, 365, 371, 373, 376, 378, 380, 395, 397, 400, 401, 402, 403, 412, 419, 425, 426, 434, 437, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 460, 461, 462, 465, 466, 471, 473, 474, 476, 479], "since_vers": [0, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "produce_opset_vers": 0, "get_schema": [0, 478], "op_typ": [0, 471, 478], "domain": [0, 12, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 471, 478, 479], "make_operatorsetid": [0, 471], "make_model_gen_vers": 0, "ar": [0, 1, 267, 275, 276, 278, 280, 284, 286, 287, 292, 293, 294, 298, 299, 300, 302, 304, 305, 310, 311, 314, 315, 316, 317, 319, 320, 321, 324, 331, 332, 334, 335, 336, 337, 343, 344, 345, 349, 350, 351, 353, 354, 358, 362, 363, 365, 371, 372, 373, 376, 378, 380, 394, 395, 397, 399, 400, 401, 402, 405, 408, 409, 412, 419, 424, 429, 430, 434, 437, 439, 440, 441, 442, 445, 446, 447, 448, 450, 451, 452, 454, 455, 457, 460, 461, 462, 463, 464, 465, 466, 471, 473, 477, 479], "ones": [0, 291, 303, 310, 311, 314, 336, 361, 376, 421, 456], "sess": 0, "inferencesess": 0, "serializetostr": [0, 476], "feed": [0, 465], "valu": [0, 266, 272, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 303, 304, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 329, 331, 332, 333, 336, 337, 342, 343, 345, 347, 349, 351, 354, 359, 361, 362, 365, 366, 367, 370, 371, 373, 375, 376, 377, 378, 379, 380, 381, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 408, 409, 412, 413, 417, 419, 420, 421, 423, 424, 425, 426, 428, 429, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 456, 460, 461, 462, 463, 464, 465, 466, 471, 474, 477, 479], "result": [0, 11, 267, 268, 269, 270, 278, 280, 292, 293, 294, 302, 307, 322, 323, 329, 339, 340, 346, 347, 348, 351, 352, 355, 357, 358, 362, 363, 365, 369, 373, 374, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 419, 429, 430, 431, 434, 437, 439, 444, 454, 463, 464, 466, 477], "run": [0, 276, 303, 331, 343, 400, 411, 464, 479], "assert_allclos": 0, "thi": [1, 3, 7, 12, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 470, 471, 472, 473, 476], "develop": 1, "usag": [1, 343, 400], "guid": 1, "python": [1, 7, 286, 324, 474], "api": 1, "oper": [1, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 471, 477, 479], "schema": 1, "It": [1, 276, 278, 285, 293, 294, 297, 298, 300, 303, 304, 308, 310, 314, 315, 316, 317, 335, 336, 343, 347, 361, 362, 367, 373, 374, 375, 376, 394, 395, 396, 399, 400, 401, 402, 405, 408, 409, 410, 411, 413, 415, 419, 421, 426, 429, 434, 441, 442, 449, 452, 463, 464, 465, 466, 472, 476, 479], "contain": [1, 277, 286, 290, 292, 293, 294, 301, 303, 305, 317, 329, 342, 351, 354, 361, 365, 366, 368, 371, 373, 381, 396, 406, 409, 410, 411, 412, 420, 426, 434, 437, 439, 440, 441, 457, 458, 465, 466, 471, 476], "follow": [1, 267, 275, 276, 280, 286, 292, 293, 294, 298, 299, 302, 303, 305, 310, 314, 316, 317, 318, 336, 337, 345, 349, 351, 354, 358, 371, 372, 373, 376, 399, 400, 403, 419, 421, 430, 463, 464, 465, 473, 476], "inform": [1, 311, 351, 354, 378, 380, 419, 464, 476, 477], "latest": 1, "releas": 1, "overview": 1, "For": [1, 267, 275, 276, 278, 280, 286, 292, 293, 294, 297, 298, 302, 314, 316, 319, 320, 321, 324, 329, 331, 332, 335, 336, 337, 342, 345, 349, 351, 358, 371, 372, 373, 374, 375, 376, 395, 396, 399, 400, 401, 402, 411, 412, 419, 420, 430, 434, 436, 438, 441, 449, 452, 455, 456, 460, 461, 463, 464, 465, 466, 479], "all": [1, 264, 267, 269, 270, 275, 276, 277, 280, 284, 285, 286, 287, 288, 289, 290, 291, 299, 301, 302, 303, 305, 307, 308, 310, 312, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 329, 330, 331, 336, 337, 339, 340, 343, 345, 348, 349, 351, 352, 353, 354, 355, 358, 359, 361, 363, 365, 366, 367, 371, 376, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 400, 401, 402, 403, 406, 412, 415, 419, 421, 424, 425, 426, 428, 429, 430, 431, 434, 436, 438, 439, 440, 441, 442, 443, 449, 450, 451, 455, 456, 459, 460, 461, 463, 464, 465, 466, 471, 472, 479], "modul": 1, "involv": [1, 400], "differ": [1, 12, 277, 280, 310, 331, 337, 343, 363, 370, 395, 396, 465, 466], "tool": [1, 473, 475], "part": [1, 275, 286, 292, 293, 294, 298, 345, 349, 351, 365, 373, 425, 426, 439, 463], "pull": 1, "function": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 476, 479], "defin": [1, 11, 267, 268, 302, 307, 317, 322, 324, 335, 337, 339, 343, 351, 354, 358, 369, 372, 391, 430, 444, 448, 449, 451, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 466, 471, 479], "them": [1, 275, 310, 315, 349, 398, 419, 434, 464], "auto": [1, 277, 294, 303, 351, 359, 377, 378, 379, 380, 465], "updat": [1, 276, 314, 400, 401, 402, 403, 463, 464, 466], "everi": [1, 276, 305, 395, 400, 456, 471, 476], "time": [1, 314, 336, 343, 359, 376, 396, 399, 400, 434], "doc": [1, 267, 268, 286, 287, 294, 302, 307, 322, 324, 337, 339, 346, 347, 358, 361, 363, 369, 372, 374, 419, 430, 440, 443, 444], "re": [1, 299, 331, 354, 472], "built": 1, "op": [1, 276, 299, 311, 343, 351, 368, 391, 400, 402, 403, 424, 442], "list": [1, 276, 288, 314, 336, 343, 348, 352, 353, 355, 371, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 400, 419, 425, 428, 429, 431, 434, 438, 441, 450, 452, 456, 457, 458, 460, 463, 464, 465, 466, 471, 472, 474, 478, 479], "out": [1, 276, 280, 315, 316, 317, 324, 331, 332, 343, 354, 362, 395, 401, 402, 405, 408, 409, 412], "each": [1, 275, 276, 278, 284, 286, 287, 292, 293, 294, 305, 316, 317, 324, 329, 342, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 359, 360, 361, 371, 373, 395, 396, 397, 398, 400, 401, 402, 403, 411, 419, 420, 421, 425, 426, 431, 434, 440, 441, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 461, 463, 464, 465, 479], "paramet": [1, 294, 314, 335, 336, 343, 376, 377, 378, 380, 400, 428, 443, 449, 460, 461, 463, 464, 466, 471, 472, 474, 476, 477, 479], "line": [1, 471], "version": [1, 12, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 479], "histori": [1, 338, 370, 443], "section": [1, 473], "also": [1, 276, 294, 297, 303, 310, 311, 314, 316, 318, 324, 336, 337, 343, 351, 357, 361, 365, 376, 394, 400, 425, 434, 463, 465], "includ": [1, 267, 275, 297, 302, 304, 354, 358, 372, 394, 395, 412, 430, 436, 439, 442, 443, 465, 476, 479], "tabl": [1, 343], "detail": [1, 267, 268, 276, 278, 280, 281, 294, 302, 303, 307, 314, 318, 322, 323, 336, 339, 340, 348, 352, 355, 357, 358, 369, 370, 372, 374, 375, 376, 395, 430, 431, 443, 444, 448, 466], "its": [1, 267, 278, 293, 302, 316, 335, 343, 358, 370, 372, 373, 374, 400, 401, 402, 403, 419, 421, 430, 434, 440, 449, 452, 463, 465, 466, 472], "done": [1, 303, 318, 455, 465], "md": [1, 337], "avail": [1, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 476], "expect": [1, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 463, 464, 466, 479], "which": [1, 269, 270, 275, 276, 278, 280, 283, 285, 287, 288, 289, 292, 293, 294, 297, 298, 300, 303, 304, 312, 315, 316, 324, 329, 334, 335, 337, 342, 343, 344, 345, 349, 351, 353, 354, 362, 363, 365, 371, 373, 375, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 400, 401, 402, 403, 411, 418, 420, 425, 426, 429, 434, 436, 437, 441, 448, 449, 451, 452, 455, 457, 459, 460, 463, 464, 465, 471, 476, 479], "One": [1, 371, 376, 395, 425, 426, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462], "can": [1, 267, 275, 278, 280, 284, 286, 287, 292, 293, 294, 297, 298, 300, 302, 303, 311, 317, 318, 337, 343, 345, 349, 351, 354, 357, 358, 362, 370, 372, 373, 375, 394, 395, 396, 399, 400, 401, 402, 403, 411, 412, 418, 421, 425, 426, 429, 430, 434, 440, 441, 451, 452, 459, 460, 461, 463, 464, 465, 466, 474, 476, 479], "found": [1, 286, 434, 448, 449, 452, 456, 465, 472], "first": [1, 267, 268, 269, 270, 278, 279, 281, 284, 297, 298, 302, 307, 317, 319, 320, 321, 322, 323, 325, 326, 329, 331, 337, 339, 340, 343, 351, 358, 369, 370, 371, 372, 381, 394, 396, 400, 401, 403, 411, 421, 429, 430, 434, 437, 440, 444, 445, 457, 459, 463, 464, 465, 466, 479], "page": 1, "link": 1, "below": [1, 276, 299, 314, 317, 336, 343, 376, 381, 401, 402, 439, 440, 463, 464, 465], "submodul": [1, 478], "summari": [1, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "graphal": 3, "allow": [3, 276, 280, 310, 337, 338, 370, 397, 400, 402, 403, 443, 465], "u": [3, 276, 305, 317, 337], "whether": [3, 269, 270, 275, 292, 293, 294, 298, 303, 318, 333, 343, 345, 349, 357, 362, 373, 400, 429, 437, 439, 440, 447, 451, 453, 458, 472, 479], "serial": [3, 471, 473, 479], "proto": [3, 471, 476], "legal": 3, "class": [5, 7, 10, 361, 362, 365, 421, 453, 457, 458, 460, 461, 472, 473, 476], "client": 7, "except": [9, 288, 289, 343, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 411, 478, 479], "1": [11, 266, 272, 273, 274, 277, 278, 279, 281, 283, 284, 286, 287, 289, 291, 293, 295, 296, 297, 298, 300, 301, 304, 305, 308, 310, 311, 316, 317, 324, 325, 326, 328, 333, 337, 347, 351, 353, 354, 356, 357, 361, 362, 363, 365, 366, 367, 368, 373, 374, 375, 381, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 408, 409, 411, 413, 415, 416, 417, 421, 426, 429, 432, 434, 435, 439, 440, 443, 467, 468, 469, 473, 478, 479], "12": [11, 275, 286, 288, 292, 293, 294, 297, 299, 314, 324, 347, 365, 373, 376, 383, 384, 388, 390, 391, 392, 394, 395, 396, 400, 403, 409, 424, 425, 430, 431, 434, 469, 473, 478], "0": [11, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 306, 309, 311, 312, 314, 315, 316, 317, 318, 320, 324, 325, 326, 327, 328, 329, 331, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 409, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 451, 453, 456, 460, 461, 463, 464, 466, 473, 479], "object": [11, 280, 281, 429, 470, 471, 474, 476], "bytes_or_buff": 11, "encod": [11, 280, 281, 361, 400, 455, 456, 479], "error": [11, 308, 315, 316, 317, 329, 342, 343, 367, 395, 400, 401, 402, 405, 408, 409, 420, 428, 441, 477], "creat": [11, 343, 354, 400, 401, 402, 403, 462, 463, 464, 466, 471, 479], "new": [11, 289, 394, 400, 409, 463, 464, 466], "string": [11, 276, 280, 281, 284, 286, 287, 288, 289, 290, 299, 303, 305, 310, 311, 312, 314, 315, 316, 317, 318, 324, 330, 331, 336, 343, 363, 365, 366, 367, 368, 371, 376, 378, 380, 394, 395, 396, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 418, 419, 424, 425, 426, 428, 429, 434, 436, 438, 439, 440, 441, 442, 443, 445, 447, 448, 449, 452, 453, 456, 457, 460, 462, 465, 471, 476, 479], "If": [11, 263, 267, 268, 269, 270, 275, 276, 278, 279, 284, 286, 287, 291, 292, 293, 294, 297, 298, 302, 303, 305, 307, 311, 312, 314, 317, 318, 322, 324, 325, 326, 336, 337, 339, 343, 345, 347, 349, 351, 357, 358, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 399, 400, 412, 413, 415, 419, 421, 425, 426, 427, 428, 429, 430, 434, 437, 439, 440, 444, 447, 448, 451, 452, 454, 456, 457, 463, 464, 465, 466, 469, 471, 472, 476, 477, 479], "specifi": [11, 267, 277, 278, 279, 280, 284, 285, 286, 287, 290, 291, 294, 298, 300, 302, 303, 311, 314, 318, 324, 325, 326, 329, 336, 337, 343, 345, 351, 358, 359, 361, 365, 366, 371, 372, 375, 376, 377, 378, 379, 380, 394, 395, 396, 400, 401, 402, 403, 405, 408, 412, 419, 421, 425, 426, 429, 430, 434, 437, 439, 440, 452, 462, 465, 471, 474, 479], "must": [11, 275, 276, 279, 280, 285, 288, 289, 290, 291, 292, 293, 294, 297, 300, 305, 310, 311, 312, 314, 317, 325, 326, 329, 331, 336, 337, 342, 343, 345, 347, 348, 349, 351, 352, 354, 355, 357, 365, 370, 373, 374, 375, 376, 377, 378, 379, 380, 395, 396, 399, 400, 403, 405, 406, 408, 409, 410, 411, 419, 420, 425, 426, 431, 434, 440, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 471, 474, 476], "expos": 11, "data": [11, 264, 269, 270, 275, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 292, 293, 294, 299, 303, 304, 306, 310, 311, 313, 315, 316, 317, 319, 320, 321, 324, 325, 326, 327, 328, 330, 331, 332, 335, 338, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 362, 365, 370, 371, 372, 373, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 401, 402, 403, 404, 406, 407, 409, 412, 413, 414, 418, 419, 422, 424, 427, 428, 431, 435, 438, 440, 441, 442, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 471, 474, 477], "buffer": [11, 476], "decod": [11, 280, 281, 461], "handler": 11, "otherwis": [11, 269, 270, 287, 292, 293, 294, 297, 329, 331, 361, 365, 368, 373, 395, 413, 421, 425, 426, 435, 438, 439, 440, 443, 457, 466, 471, 477, 479], "__str__": 11, "repr": 11, "sy": [11, 280, 281], "getdefaultencod": 11, "strict": 11, "convert": [12, 280, 281, 303, 304, 394, 397, 447, 448, 449, 452, 474, 479], "enabl": [12, 267, 268, 275, 298, 302, 305, 307, 322, 339, 349, 358, 369, 372, 399, 400, 430, 444, 477], "user": [12, 280, 303, 343, 395, 411, 419, 465, 472, 476], "between": [12, 275, 276, 280, 285, 288, 292, 293, 294, 298, 300, 303, 305, 314, 317, 318, 331, 336, 337, 343, 345, 347, 348, 349, 351, 352, 355, 361, 362, 366, 368, 371, 373, 375, 376, 391, 395, 399, 400, 406, 408, 409, 411, 419, 421, 425, 426, 428, 431, 434, 439, 440, 448, 450, 463, 464, 465, 466], "within": [12, 285, 305, 315, 316, 317, 401, 402, 441, 451, 461], "ai": [12, 478], "ab": [263, 276, 288, 312, 324, 332, 342, 383, 397, 420, 423, 427, 469, 479], "aco": [263, 469], "acosh": [263, 469], "add": [263, 268, 275, 292, 294, 307, 322, 337, 338, 339, 343, 345, 349, 352, 369, 370, 371, 400, 402, 403, 411, 431, 443, 444, 463, 464, 466, 469, 471, 479], "And": [263, 275, 349, 469, 479], "argmax": [263, 469], "argmin": [263, 469], "asin": [263, 469], "asinh": [263, 469], "atan": [263, 469], "atanh": [263, 469], "averagepool": [263, 319, 469, 479], "batchnorm": [263, 469, 479], "bernoulli": [263, 469], "bitshift": [263, 469], "blackmanwindow": [263, 469], "cast": [263, 281, 304, 337, 365, 447, 456, 469, 479], "castlik": [263, 469], "ceil": [263, 275, 292, 293, 335, 345, 349, 373, 381, 395, 397, 469, 479], "celu": [263, 469], "centercroppad": [263, 469], "clip": [263, 304, 306, 314, 327, 336, 338, 370, 376, 393, 404, 435, 469, 479], "col2im": [263, 469], "compress": [263, 469], "concat": [263, 289, 314, 336, 376, 400, 469, 479], "concatfromsequ": [263, 469], "constant": [263, 275, 331, 343, 349, 371, 400, 463, 464, 469], "constantofshap": [263, 469], "conv": [263, 465, 469], "convinteg": [263, 469], "convtranspos": [263, 469], "co": [263, 279, 325, 326, 399, 469], "cosh": [263, 469], "cumsum": [263, 469], "dft": [263, 354, 399, 469], "depthtospac": [263, 469], "dequantizelinear": [263, 469], "det": [263, 469], "div": [263, 469, 479], "dropout": [263, 343, 469, 479], "dynamicquantizelinear": [263, 469], "einsum": [263, 469], "elu": [263, 314, 336, 376, 469, 479], "equal": [263, 267, 269, 270, 275, 276, 284, 286, 292, 293, 294, 298, 300, 302, 310, 317, 319, 320, 321, 345, 349, 351, 358, 361, 372, 373, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 400, 403, 418, 421, 425, 426, 428, 430, 434, 442, 443, 448, 449, 451, 460, 469, 477, 479], "erf": [263, 469], "exp": [263, 283, 306, 341, 356, 386, 404, 414, 420, 422, 469, 479], "expand": [263, 441, 469], "eyelik": [263, 469], "flatten": [263, 276, 280, 281, 287, 290, 343, 349, 351, 440, 469], "floor": [263, 275, 298, 335, 349, 354, 395, 399, 442, 469, 479], "gru": [263, 465, 469, 479], "gather": [263, 316, 317, 362, 469, 473], "gatherel": [263, 401, 402, 469], "gathernd": [263, 362, 403, 469], "gemm": [263, 465, 469, 479], "globalaveragepool": [263, 469], "globallppool": [263, 469, 479], "globalmaxpool": [263, 469], "greater": [263, 275, 286, 292, 293, 294, 298, 343, 345, 349, 351, 365, 373, 395, 442, 446, 469, 479], "greaterorequ": [263, 469], "gridsampl": [263, 469], "hammingwindow": [263, 469], "hannwindow": [263, 469], "hardsigmoid": [263, 314, 328, 336, 376, 469, 479], "hardswish": [263, 469], "hardmax": [263, 469], "ident": [263, 278, 343, 391, 400, 411, 421, 434, 452, 469], "instancenorm": [263, 469, 479], "isinf": [263, 469], "isnan": [263, 469], "lrn": [263, 469], "lstm": [263, 314, 376, 465, 469, 479], "layernorm": [263, 469], "leakyrelu": [263, 314, 336, 376, 469, 479], "less": [263, 287, 294, 298, 362, 395, 400, 403, 469, 479], "lessorequ": [263, 469], "log": [263, 314, 336, 342, 359, 361, 376, 385, 386, 421, 422, 469, 479], "logsoftmax": [263, 469], "loop": [263, 400, 401, 403, 469, 479], "lpnormal": [263, 469], "lppool": [263, 320, 469, 479], "matmul": [263, 347, 374, 469], "matmulinteg": [263, 469], "max": [263, 269, 275, 283, 285, 304, 314, 321, 327, 328, 335, 336, 349, 350, 376, 381, 387, 393, 395, 397, 400, 402, 403, 428, 434, 455, 461, 469, 479], "maxpool": [263, 321, 351, 469, 479], "maxroipool": [263, 469], "maxunpool": [263, 469], "mean": [263, 269, 270, 275, 276, 284, 287, 288, 289, 292, 293, 294, 297, 300, 304, 312, 314, 315, 316, 319, 329, 332, 336, 337, 342, 344, 345, 349, 353, 357, 361, 362, 365, 371, 373, 375, 376, 377, 378, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 398, 400, 401, 402, 405, 408, 409, 412, 419, 420, 421, 425, 426, 428, 437, 440, 441, 459, 463, 464, 469, 476, 477, 479], "meanvariancenorm": [263, 469], "melweightmatrix": [263, 469], "min": [263, 270, 283, 285, 304, 314, 317, 327, 328, 335, 336, 376, 389, 395, 402, 403, 461, 469, 479], "mish": [263, 469], "mod": [263, 292, 469], "mul": [263, 337, 402, 403, 469, 479], "multinomi": [263, 453, 469], "neg": [263, 280, 284, 287, 288, 297, 300, 312, 315, 316, 329, 333, 337, 342, 361, 365, 371, 375, 395, 400, 401, 402, 405, 408, 409, 412, 414, 419, 420, 425, 426, 427, 428, 437, 439, 440, 441, 469, 479], "negativeloglikelihoodloss": [263, 469], "nonmaxsuppress": [263, 469], "nonzero": [263, 276, 280, 303, 443, 469], "Not": [263, 337, 343, 469], "onehot": [263, 469], "option": [263, 275, 276, 277, 285, 287, 291, 292, 293, 294, 298, 300, 303, 311, 314, 316, 318, 330, 331, 333, 335, 336, 337, 343, 347, 349, 351, 359, 361, 362, 365, 367, 368, 371, 373, 375, 376, 377, 378, 379, 380, 391, 394, 395, 396, 399, 400, 401, 402, 403, 407, 408, 409, 412, 419, 421, 425, 426, 428, 439, 440, 454, 465, 469, 471, 472, 476, 479], "optionalgetel": [263, 343, 469], "optionalhasel": [263, 343, 469], "Or": [263, 292, 293, 373, 469, 476, 479], "prelu": [263, 469, 479], "pad": [263, 275, 284, 286, 292, 293, 294, 298, 314, 324, 336, 345, 349, 351, 373, 376, 400, 469, 479], "pow": [263, 469, 479], "qlinearconv": [263, 469], "qlinearmatmul": [263, 469], "quantizelinear": [263, 469], "rnn": [263, 314, 336, 343, 400, 465, 469, 479], "randomnorm": [263, 469], "randomnormallik": [263, 469], "randomuniform": [263, 469], "randomuniformlik": [263, 469], "rang": [263, 269, 270, 277, 280, 284, 287, 288, 289, 297, 300, 304, 312, 314, 315, 316, 319, 321, 324, 329, 336, 337, 342, 351, 354, 361, 362, 365, 371, 375, 376, 379, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 399, 400, 401, 402, 405, 408, 409, 411, 412, 415, 419, 420, 421, 425, 426, 428, 437, 438, 440, 441, 469], "reciproc": [263, 337, 469, 479], "reducel1": [263, 469], "reducel2": [263, 469], "reducelogsum": [263, 469], "reducelogsumexp": [263, 469], "reducemax": [263, 469], "reducemean": [263, 276, 337, 421, 469], "reducemin": [263, 469], "reduceprod": [263, 469], "reducesum": [263, 420, 421, 469], "reducesumsquar": [263, 469], "relu": [263, 314, 336, 376, 469, 479], "reshap": [263, 280, 281, 293, 297, 298, 299, 300, 301, 304, 310, 312, 343, 357, 372, 373, 375, 383, 384, 399, 400, 424, 428, 429, 441, 469, 479], "resiz": [263, 343, 442, 469], "reversesequ": [263, 469], "roialign": [263, 469], "round": [263, 280, 304, 374, 375, 395, 469], "stft": [263, 354, 469], "scan": [263, 343, 434, 469], "scatter": [263, 402, 469], "scatterel": [263, 316, 401, 469], "scatternd": [263, 317, 469], "selu": [263, 469, 479], "sequenceat": [263, 469], "sequenceconstruct": [263, 331, 343, 469], "sequenceempti": [263, 469], "sequenceeras": [263, 469], "sequenceinsert": [263, 343, 469], "sequencelength": [263, 469], "sequencemap": [263, 469], "shape": [263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 471, 477, 479], "shrink": [263, 469], "sigmoid": [263, 314, 336, 376, 457, 458, 469, 479], "sign": [263, 280, 357, 360, 393, 419, 469], "sin": [263, 469], "sinh": [263, 469], "size": [263, 267, 275, 276, 279, 280, 286, 287, 288, 289, 292, 293, 294, 300, 302, 310, 311, 315, 316, 317, 319, 320, 321, 324, 325, 326, 329, 332, 335, 342, 345, 349, 350, 351, 354, 358, 361, 365, 370, 372, 373, 394, 395, 397, 399, 400, 401, 402, 412, 419, 420, 425, 426, 430, 434, 436, 439, 450, 456, 457, 460, 461, 469, 472], "slice": [263, 287, 317, 343, 396, 403, 412, 440, 469], "softmax": [263, 342, 421, 453, 454, 457, 458, 460, 461, 469], "softmaxcrossentropyloss": [263, 469], "softplu": [263, 314, 336, 356, 376, 469], "softsign": [263, 314, 336, 376, 469], "spacetodepth": [263, 299, 469], "split": [263, 275, 292, 293, 294, 337, 345, 349, 373, 426, 460, 461, 469, 479], "splittosequ": [263, 469], "sqrt": [263, 276, 332, 337, 353, 384, 455, 463, 464, 469, 479], "squeez": [263, 469], "stringnorm": [263, 469], "sub": [263, 337, 343, 400, 411, 419, 465, 469, 479], "sum": [263, 267, 275, 276, 297, 305, 335, 343, 349, 361, 383, 384, 385, 386, 391, 392, 395, 400, 421, 425, 426, 455, 461, 466, 469, 479], "tan": [263, 469], "tanh": [263, 314, 336, 356, 376, 400, 469], "tfidfvector": [263, 469], "thresholdedrelu": [263, 314, 336, 376, 469], "tile": [263, 310, 469, 479], "topk": [263, 469], "transpos": [263, 294, 299, 318, 424, 469], "trilu": [263, 469], "uniqu": [263, 331, 399, 469, 471], "unsqueez": [263, 343, 469, 479], "upsampl": [263, 395, 469, 479], "where": [263, 264, 269, 270, 275, 276, 277, 282, 284, 286, 287, 288, 289, 292, 293, 294, 299, 300, 301, 303, 304, 305, 306, 312, 313, 315, 316, 317, 318, 319, 320, 321, 324, 327, 328, 329, 332, 335, 337, 338, 342, 345, 349, 350, 351, 359, 360, 361, 362, 365, 370, 371, 372, 373, 375, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 412, 414, 419, 420, 421, 422, 424, 425, 427, 428, 435, 437, 439, 440, 441, 449, 451, 456, 460, 461, 463, 464, 465, 466, 469], "xor": [263, 469, 479], "arrayfeatureextractor": [263, 467], "binar": [263, 467], "castmap": [263, 467], "categorymapp": [263, 467], "dictvector": [263, 467], "featurevector": [263, 467], "imput": [263, 467], "labelencod": [263, 467], "linearclassifi": [263, 467], "linearregressor": [263, 467], "normal": [263, 276, 324, 332, 335, 337, 344, 353, 362, 377, 378, 395, 420, 429, 467], "onehotencod": [263, 467], "svmclassifi": [263, 467], "svmregressor": [263, 467], "scaler": [263, 467], "treeensembleclassifi": [263, 467], "treeensembleregressor": [263, 467], "zipmap": [263, 467], "adagrad": [263, 468], "adam": [263, 468], "gradient": [263, 276, 337, 361, 421, 463, 464, 466, 468], "momentum": [263, 276, 464, 468], "github": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 472], "main": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 472], "fals": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 471, 472, 477, 479], "support_level": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "supporttyp": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "common": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "infer": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 477, 479], "true": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 452, 453, 456, 457, 460, 461, 462, 463, 464, 466, 471, 476, 479], "ha": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 476], "been": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "sinc": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "absolut": [264, 362], "take": [264, 275, 282, 286, 287, 292, 293, 294, 301, 303, 306, 313, 315, 316, 327, 328, 338, 345, 349, 351, 360, 368, 370, 372, 373, 382, 393, 394, 395, 398, 400, 401, 402, 403, 404, 412, 413, 414, 418, 422, 427, 428, 435, 439, 440, 441, 442, 477], "tensor": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 471, 474, 476, 479], "t": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 294, 295, 296, 297, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 327, 328, 329, 330, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 355, 356, 357, 358, 360, 361, 363, 364, 369, 370, 371, 372, 376, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 401, 402, 403, 404, 405, 406, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 451, 454, 455, 456, 458, 459, 461, 462, 463, 464, 465, 466, 471], "y": [264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 349, 350, 351, 353, 356, 357, 358, 360, 363, 364, 365, 369, 370, 371, 372, 373, 374, 375, 376, 382, 393, 395, 396, 397, 398, 400, 401, 402, 403, 404, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 465], "appli": [264, 275, 276, 280, 282, 286, 306, 313, 314, 319, 320, 321, 327, 328, 336, 338, 344, 345, 349, 350, 360, 361, 370, 371, 372, 376, 382, 393, 397, 402, 403, 404, 411, 414, 419, 421, 422, 425, 427, 435, 440, 445, 451, 453, 454, 457, 458, 459, 460, 461, 464, 477, 479], "elementwis": [264, 268, 282, 306, 307, 313, 322, 323, 327, 328, 338, 339, 340, 360, 369, 370, 372, 382, 393, 404, 414, 422, 427, 435, 444], "heterogen": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466], "constraint": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "bfloat16": [264, 267, 269, 270, 276, 277, 279, 280, 281, 282, 284, 285, 286, 288, 290, 297, 298, 299, 302, 303, 307, 308, 309, 310, 312, 313, 315, 316, 317, 318, 322, 323, 325, 326, 329, 330, 331, 334, 335, 337, 338, 339, 340, 341, 342, 343, 346, 348, 352, 353, 354, 355, 357, 358, 360, 363, 370, 371, 372, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 399, 400, 402, 403, 412, 414, 415, 418, 419, 420, 421, 424, 425, 427, 428, 430, 431, 433, 436, 438, 439, 441, 443], "doubl": [264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 366, 367, 368, 370, 371, 372, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466], "float": [264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 471], "float16": [264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 366, 367, 368, 370, 371, 372, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 465, 478], "int16": [264, 267, 269, 270, 277, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 299, 302, 305, 307, 308, 310, 311, 312, 315, 316, 317, 322, 323, 324, 325, 326, 330, 331, 339, 340, 343, 348, 354, 355, 357, 358, 360, 363, 365, 366, 367, 368, 371, 372, 378, 380, 381, 393, 394, 395, 396, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 418, 419, 424, 425, 426, 428, 430, 436, 437, 438, 439, 440, 441, 442, 443, 465, 478], "int32": [264, 267, 269, 270, 277, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 293, 297, 298, 299, 300, 302, 305, 307, 308, 310, 311, 312, 314, 315, 316, 317, 318, 322, 323, 324, 325, 326, 330, 331, 336, 339, 340, 343, 346, 347, 348, 354, 355, 357, 358, 359, 360, 361, 363, 365, 366, 367, 368, 370, 371, 372, 373, 375, 376, 378, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 418, 419, 421, 424, 425, 426, 428, 430, 434, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 465, 478], "int64": [264, 267, 269, 270, 277, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 297, 298, 299, 302, 303, 305, 307, 308, 310, 311, 312, 315, 316, 317, 318, 322, 323, 324, 325, 326, 330, 331, 339, 340, 343, 346, 348, 349, 351, 354, 355, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 370, 371, 372, 378, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 418, 419, 421, 424, 425, 426, 428, 430, 434, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 478], "int8": [264, 267, 269, 270, 277, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 293, 299, 300, 302, 304, 305, 307, 308, 310, 311, 312, 315, 316, 317, 322, 323, 324, 325, 326, 330, 331, 339, 340, 343, 347, 348, 349, 354, 355, 357, 358, 360, 363, 365, 366, 367, 368, 371, 372, 373, 374, 375, 378, 380, 387, 389, 393, 394, 395, 396, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 418, 419, 424, 425, 426, 428, 430, 436, 437, 438, 439, 440, 441, 442, 443, 465, 478], "uint16": [264, 267, 269, 270, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 299, 302, 305, 307, 308, 310, 311, 312, 315, 316, 317, 322, 323, 324, 325, 326, 330, 331, 339, 340, 343, 348, 354, 355, 357, 358, 363, 365, 366, 367, 368, 371, 372, 378, 380, 394, 395, 396, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 418, 419, 424, 425, 426, 428, 430, 436, 437, 438, 439, 440, 441, 442, 443, 465, 478], "uint32": [264, 267, 269, 270, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 297, 299, 302, 305, 307, 308, 310, 311, 312, 315, 316, 317, 318, 322, 323, 324, 325, 326, 330, 331, 339, 340, 343, 346, 348, 354, 355, 357, 358, 363, 365, 366, 367, 368, 370, 371, 372, 378, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 418, 419, 424, 425, 426, 428, 430, 436, 437, 438, 439, 440, 441, 442, 443, 465, 478], "uint64": [264, 267, 269, 270, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 297, 299, 302, 305, 307, 308, 310, 311, 312, 315, 316, 317, 318, 322, 323, 324, 325, 326, 330, 331, 339, 340, 343, 346, 348, 354, 355, 357, 358, 363, 365, 366, 367, 368, 370, 371, 372, 378, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 418, 419, 424, 425, 426, 428, 430, 436, 437, 438, 439, 440, 441, 442, 443, 465, 478], "uint8": [264, 267, 269, 270, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 293, 299, 300, 302, 304, 305, 307, 308, 310, 311, 312, 315, 316, 317, 322, 323, 324, 325, 326, 330, 331, 339, 340, 343, 347, 348, 349, 354, 355, 357, 358, 363, 365, 366, 367, 368, 371, 372, 373, 374, 375, 378, 380, 387, 389, 394, 395, 396, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 418, 419, 424, 425, 426, 428, 430, 436, 437, 438, 439, 440, 441, 442, 443, 465, 478], "constrain": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 463, 464, 466], "numer": [264, 267, 269, 270, 277, 279, 280, 285, 286, 291, 297, 302, 305, 307, 308, 322, 323, 325, 326, 339, 340, 348, 353, 354, 355, 357, 358, 360, 365, 371, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 413, 415, 430, 437, 445, 446, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461], "make_nod": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 463, 464, 466, 471], "random": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 280, 281, 282, 284, 285, 290, 295, 296, 302, 303, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 318, 319, 321, 322, 327, 328, 329, 335, 337, 338, 339, 341, 342, 346, 349, 358, 359, 360, 361, 364, 369, 370, 371, 372, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 404, 411, 412, 414, 416, 417, 418, 419, 420, 422, 423, 424, 427, 428, 430, 432, 433, 435, 436, 438, 439, 441, 444], "randn": [264, 267, 268, 272, 273, 275, 282, 284, 285, 290, 295, 296, 302, 303, 305, 306, 307, 308, 309, 313, 314, 315, 319, 321, 322, 327, 328, 329, 335, 337, 338, 339, 341, 342, 346, 349, 358, 360, 364, 369, 370, 371, 372, 376, 393, 404, 412, 414, 416, 417, 418, 419, 420, 422, 423, 427, 428, 430, 432, 433, 435, 441, 444], "3": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 346, 347, 348, 349, 351, 352, 353, 355, 357, 358, 360, 361, 362, 364, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 409, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 457, 458, 463, 464, 466, 467, 469, 478, 479], "4": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 285, 286, 287, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 327, 328, 329, 330, 331, 332, 334, 336, 337, 338, 339, 341, 342, 343, 346, 347, 348, 349, 350, 351, 352, 355, 357, 358, 360, 361, 362, 364, 365, 367, 368, 369, 370, 371, 372, 375, 376, 381, 382, 383, 384, 385, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 409, 412, 414, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 449, 456, 463, 464, 466, 469, 478, 479], "5": [264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 279, 280, 282, 284, 285, 286, 287, 288, 290, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 326, 327, 328, 329, 330, 331, 335, 336, 337, 338, 339, 341, 342, 343, 347, 348, 349, 350, 351, 355, 357, 358, 360, 361, 362, 364, 365, 369, 370, 371, 372, 375, 376, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 430, 432, 433, 434, 435, 436, 437, 439, 441, 444, 452, 463, 464, 466, 469, 478, 479], "astyp": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 312, 313, 314, 315, 316, 318, 319, 321, 322, 327, 328, 329, 330, 331, 335, 336, 337, 338, 339, 341, 342, 343, 346, 348, 349, 352, 354, 355, 357, 358, 360, 361, 362, 364, 367, 368, 369, 370, 371, 372, 375, 376, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 404, 409, 411, 412, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 441, 444], "float32": [264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 346, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 365, 367, 368, 370, 371, 372, 373, 374, 375, 376, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 463, 464, 466, 478], "test_ab": 264, "v": [264, 267, 268, 269, 270, 275, 276, 280, 282, 285, 287, 288, 290, 292, 294, 297, 299, 300, 302, 303, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 322, 323, 327, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 342, 343, 345, 346, 348, 349, 351, 352, 353, 355, 357, 358, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 400, 401, 402, 403, 404, 411, 412, 414, 415, 418, 419, 420, 421, 424, 425, 427, 428, 430, 431, 433, 436, 437, 438, 441, 442, 443, 444, 452, 460, 461, 464, 465, 466, 471], "attribut": [264, 267, 268, 269, 270, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 302, 303, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 320, 322, 324, 325, 326, 327, 329, 331, 332, 333, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 407, 411, 412, 413, 414, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 471, 479], "consumed_input": [264, 267, 276, 282, 285, 302, 303, 306, 309, 313, 327, 332, 338, 341, 348, 352, 355, 358, 360, 370, 382, 393, 394, 404, 414, 427, 430, 431, 433], "legaci": [264, 267, 276, 282, 285, 302, 303, 306, 309, 313, 327, 332, 338, 341, 345, 348, 352, 355, 358, 360, 370, 382, 393, 394, 404, 414, 427, 430, 431, 433], "optim": [264, 267, 276, 282, 285, 302, 303, 306, 309, 313, 327, 332, 338, 341, 343, 348, 352, 355, 358, 360, 370, 382, 393, 394, 404, 414, 427, 430, 431, 433, 463, 464, 465, 466], "calcul": [265, 266, 271, 272, 273, 274, 275, 276, 283, 286, 294, 295, 296, 301, 304, 309, 341, 353, 356, 357, 361, 395, 403, 415, 416, 417, 423, 432, 433], "arccosin": [265, 266], "invers": [265, 271, 273, 298, 316, 317, 337, 351, 401, 402, 403, 434], "cosin": [265, 295, 296], "element": [265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 285, 287, 290, 291, 293, 294, 295, 296, 297, 299, 302, 308, 309, 311, 314, 316, 317, 329, 331, 334, 335, 336, 337, 341, 343, 347, 348, 349, 351, 352, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 403, 411, 415, 416, 417, 418, 419, 421, 423, 429, 430, 431, 432, 433, 434, 436, 437, 439, 440, 442, 443, 445, 446, 447, 449, 450, 451, 452, 455, 456, 457, 458, 460, 461, 463, 464, 466, 471, 474, 479], "wise": [265, 266, 267, 271, 272, 273, 274, 278, 283, 295, 296, 302, 308, 309, 341, 343, 348, 352, 355, 356, 357, 358, 364, 398, 415, 416, 417, 423, 430, 431, 432, 433, 446, 452, 455, 463, 464, 466], "The": [265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 311, 312, 314, 317, 318, 319, 320, 321, 324, 325, 326, 329, 331, 332, 335, 336, 337, 341, 342, 343, 344, 345, 347, 349, 351, 353, 354, 357, 358, 359, 361, 362, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 399, 400, 401, 402, 403, 407, 411, 412, 413, 415, 416, 417, 419, 420, 421, 423, 425, 426, 430, 432, 433, 434, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 470, 471, 472, 479], "comput": [265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 279, 292, 293, 294, 295, 296, 298, 299, 300, 308, 309, 314, 317, 318, 324, 325, 326, 329, 332, 336, 337, 341, 342, 343, 345, 349, 351, 361, 373, 374, 375, 376, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 397, 399, 400, 411, 412, 415, 416, 417, 419, 420, 421, 423, 432, 433, 434, 463, 464, 465, 466, 477], "arrai": [265, 266, 269, 270, 271, 272, 273, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 306, 309, 310, 313, 314, 315, 316, 317, 318, 319, 321, 324, 327, 329, 330, 331, 333, 334, 336, 338, 341, 342, 343, 347, 348, 349, 351, 352, 353, 355, 357, 358, 360, 362, 363, 365, 367, 368, 371, 372, 373, 374, 375, 376, 382, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 449, 450, 451, 454, 456, 457, 460, 461, 463, 464, 466, 476], "arcco": 265, "test_acos_exampl": 265, "rand": [265, 271, 302, 361, 382, 436], "test_aco": 265, "hyperbol": [266, 272, 274, 296, 417, 433], "10": [266, 269, 270, 277, 279, 284, 286, 288, 291, 292, 294, 297, 298, 299, 307, 314, 315, 318, 324, 325, 326, 341, 343, 354, 356, 358, 361, 365, 376, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392, 401, 403, 409, 411, 412, 424, 425, 436, 439, 464, 469, 478], "e": [266, 267, 268, 276, 278, 280, 298, 301, 302, 304, 307, 311, 314, 317, 322, 323, 336, 337, 339, 340, 343, 348, 351, 352, 353, 354, 355, 356, 357, 358, 362, 365, 367, 369, 372, 376, 394, 397, 399, 404, 429, 430, 431, 443, 444, 453, 460, 466, 479], "arccosh": 266, "2": [266, 267, 269, 270, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 327, 329, 330, 331, 333, 335, 336, 337, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 365, 367, 368, 372, 373, 375, 376, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 408, 409, 412, 413, 418, 419, 420, 421, 424, 426, 427, 428, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 450, 455, 463, 464, 465, 466, 467, 469, 478, 479], "99322295": 266, "65745449": 266, "test_acosh_exampl": 266, "uniform": [266, 269, 270, 274, 277, 379, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 411], "test_acosh": 266, "perform": [267, 268, 278, 283, 297, 298, 302, 305, 307, 322, 323, 329, 337, 339, 340, 342, 353, 356, 357, 358, 369, 399, 400, 401, 402, 420, 429, 430, 444, 454, 460, 461, 477], "binari": [267, 277, 278, 302, 357, 358, 430, 476], "addit": [267, 294, 351, 365, 402, 403, 411, 472], "style": [267, 268, 278, 302, 307, 322, 323, 339, 340, 343, 348, 352, 355, 357, 358, 369, 372, 430, 431, 443, 444, 463, 464, 466], "broadcast": [267, 268, 278, 302, 305, 307, 310, 318, 322, 323, 339, 340, 348, 352, 355, 357, 358, 369, 370, 372, 430, 431, 436, 443, 444, 451, 463, 464, 466], "support": [267, 268, 278, 280, 281, 286, 302, 304, 307, 311, 314, 318, 322, 323, 324, 336, 339, 340, 343, 344, 345, 348, 352, 355, 357, 358, 369, 370, 371, 372, 376, 397, 400, 403, 430, 431, 443, 444, 447, 457, 458, 463, 464, 466, 477, 479], "multidirect": [267, 268, 278, 302, 307, 322, 323, 339, 340, 348, 352, 355, 357, 358, 369, 372, 430, 431, 443, 444], "more": [267, 268, 269, 270, 276, 278, 280, 286, 292, 293, 294, 299, 301, 302, 303, 307, 314, 318, 322, 323, 324, 336, 339, 340, 348, 352, 355, 357, 358, 362, 369, 370, 372, 373, 376, 395, 400, 403, 424, 425, 426, 430, 431, 434, 439, 443, 444, 456, 463, 465, 466], "pleas": [267, 268, 278, 302, 307, 318, 322, 323, 339, 340, 348, 352, 355, 357, 358, 369, 370, 372, 401, 430, 431, 443, 444], "extend": [267, 302, 358, 381, 430, 463, 466], "A": [267, 268, 279, 288, 290, 297, 302, 304, 307, 310, 312, 314, 318, 322, 323, 325, 326, 336, 339, 340, 343, 346, 347, 353, 356, 357, 358, 361, 368, 369, 371, 372, 376, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 399, 400, 421, 425, 426, 430, 436, 437, 438, 439, 440, 444, 447, 448, 449, 451, 452, 453, 460, 461, 463, 464, 465, 466, 472, 479], "operand": [267, 268, 278, 302, 305, 307, 322, 323, 339, 340, 358, 369, 372, 430, 444], "b": [267, 268, 276, 292, 294, 299, 302, 307, 312, 314, 317, 318, 322, 323, 331, 332, 336, 337, 339, 340, 343, 346, 347, 357, 358, 368, 369, 372, 373, 374, 376, 424, 430, 436, 440, 443, 444, 449, 465], "second": [267, 268, 278, 281, 284, 302, 307, 322, 323, 337, 339, 340, 351, 354, 358, 369, 371, 372, 394, 425, 430, 434, 440, 443, 444, 450, 457, 459, 464, 479], "c": [267, 268, 275, 276, 286, 292, 293, 294, 299, 302, 307, 318, 319, 320, 321, 322, 323, 324, 331, 332, 335, 336, 339, 340, 343, 345, 346, 349, 350, 351, 353, 357, 358, 361, 369, 373, 397, 411, 421, 424, 429, 430, 434, 442, 444, 448, 449, 450, 451, 453, 455, 457, 458, 465], "two": [267, 275, 280, 290, 292, 293, 294, 302, 303, 310, 316, 319, 320, 321, 337, 345, 349, 353, 358, 365, 373, 374, 376, 395, 397, 403, 413, 430, 434, 437, 442, 448, 452, 463, 464, 466, 479], "test_add": 267, "_add_uint8": 267, "randint": [267, 302, 311, 358, 361, 411, 430, 436, 439], "24": [267, 275, 286, 292, 293, 294, 300, 302, 312, 349, 358, 375, 394, 430], "dtype": [267, 269, 270, 277, 279, 280, 281, 283, 284, 288, 291, 298, 300, 302, 310, 311, 316, 317, 324, 325, 326, 330, 333, 334, 347, 348, 351, 353, 355, 356, 357, 358, 359, 363, 365, 371, 373, 374, 375, 377, 378, 379, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 399, 401, 402, 403, 407, 411, 413, 419, 428, 430, 436, 437, 440, 442, 443, 463, 464, 466, 474, 478], "test_add_uint8": 267, "_add_broadcast": 267, "test_add_bcast": 267, "high": [267, 297, 302, 357, 358, 361, 362, 375, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 430, 436, 465], "precis": [267, 280, 297, 300, 302, 337, 357, 358, 375, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 430], "limit": [267, 285, 302, 358, 381, 430, 477], "necessari": [267, 302, 358, 372, 430, 465, 466, 479], "right": [267, 268, 278, 302, 304, 305, 307, 310, 322, 339, 354, 358, 369, 372, 430, 444], "hand": [267, 268, 302, 305, 307, 322, 339, 358, 369, 372, 430, 444], "side": [267, 268, 275, 278, 284, 292, 293, 294, 302, 305, 307, 322, 339, 345, 349, 358, 369, 372, 373, 430, 444], "argument": [267, 268, 276, 280, 285, 302, 303, 307, 311, 314, 318, 322, 336, 338, 339, 351, 358, 365, 369, 372, 376, 377, 378, 379, 380, 394, 425, 426, 430, 437, 441, 444, 450, 471, 479], "match": [267, 268, 275, 280, 292, 294, 300, 302, 307, 318, 322, 329, 331, 339, 342, 343, 345, 349, 358, 369, 372, 375, 403, 411, 420, 430, 444, 452, 454, 457, 472], "left": [267, 268, 278, 302, 305, 307, 322, 339, 354, 358, 369, 372, 430, 444, 460, 461], "when": [267, 275, 276, 279, 280, 289, 298, 300, 301, 302, 305, 310, 312, 314, 325, 326, 329, 342, 350, 358, 361, 362, 365, 372, 373, 391, 394, 395, 397, 399, 400, 402, 403, 419, 420, 421, 430, 434, 438, 440, 443, 448, 452, 453, 462, 465, 473, 474, 479], "either": [267, 275, 278, 290, 292, 293, 294, 300, 302, 303, 343, 345, 349, 358, 361, 366, 372, 373, 374, 375, 411, 421, 426, 430, 434, 440, 443, 446, 447, 448, 449, 451, 452, 457, 458, 462, 466], "scalar": [267, 279, 285, 290, 291, 293, 298, 300, 301, 302, 303, 304, 317, 318, 325, 326, 331, 343, 347, 358, 361, 362, 363, 365, 368, 371, 372, 373, 374, 375, 381, 394, 399, 405, 408, 409, 410, 418, 421, 426, 430, 452, 463, 464, 466], "rank": [267, 269, 270, 284, 287, 288, 289, 297, 300, 302, 311, 312, 315, 316, 317, 319, 320, 321, 329, 331, 337, 342, 358, 365, 371, 372, 375, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 401, 402, 403, 412, 419, 420, 425, 426, 428, 430, 437, 439, 440, 441, 442], "smaller": [267, 284, 302, 310, 358, 370, 372, 395, 426, 430], "than": [267, 269, 270, 275, 284, 286, 287, 292, 293, 294, 298, 302, 310, 345, 349, 351, 358, 362, 365, 372, 373, 395, 400, 403, 419, 430, 434, 442, 446, 456], "have": [267, 269, 270, 277, 281, 288, 289, 300, 302, 310, 312, 314, 317, 318, 324, 329, 331, 336, 337, 342, 347, 348, 351, 352, 354, 355, 358, 361, 362, 365, 367, 372, 373, 374, 375, 376, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 396, 399, 400, 402, 403, 406, 409, 411, 413, 419, 420, 421, 430, 431, 451, 452, 455, 456, 460, 461, 471, 479], "contigu": [267, 302, 358, 372, 430, 454, 476], "subset": [267, 275, 284, 302, 345, 349, 358, 372, 395, 430], "": [267, 269, 270, 276, 278, 280, 281, 286, 288, 289, 293, 297, 298, 300, 302, 303, 304, 314, 315, 316, 317, 318, 324, 329, 331, 336, 337, 342, 347, 354, 358, 361, 363, 371, 372, 373, 375, 376, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 399, 400, 401, 402, 405, 406, 407, 408, 409, 410, 411, 412, 419, 420, 421, 426, 430, 434, 436, 439, 449, 451, 452, 453, 454, 463, 464, 465, 466, 471, 472, 476], "start": [267, 275, 286, 292, 293, 294, 302, 317, 345, 349, 351, 358, 371, 372, 373, 381, 399, 412, 419, 430, 434, 461], "mutual": [267, 302, 358, 372, 430], "axi": [267, 268, 269, 270, 275, 276, 284, 286, 287, 288, 289, 292, 293, 294, 297, 298, 299, 300, 302, 307, 312, 314, 315, 316, 317, 319, 321, 322, 329, 337, 339, 342, 344, 345, 349, 351, 353, 358, 359, 365, 369, 371, 372, 373, 375, 376, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 401, 402, 412, 419, 420, 424, 425, 426, 428, 430, 436, 437, 440, 441, 444, 455], "set": [267, 268, 276, 294, 297, 298, 302, 303, 305, 307, 311, 322, 324, 331, 333, 339, 343, 351, 357, 358, 361, 362, 369, 372, 391, 394, 395, 397, 402, 403, 419, 429, 430, 434, 439, 444, 448, 449, 452, 454, 456, 457, 465, 466, 471, 472, 479], "suffix": [267, 302, 358, 372, 430, 460, 461], "assum": [267, 276, 284, 292, 293, 294, 302, 314, 336, 351, 358, 371, 372, 373, 376, 395, 400, 411, 430, 434, 452, 456, 460, 461, 463, 464, 466], "dim": [267, 284, 290, 302, 343, 358, 372, 419, 425, 428, 430, 471], "expans": [267, 302, 358, 372, 430], "doesn": [267, 275, 294, 302, 337, 358, 372, 430, 463], "work": [267, 302, 358, 372, 430], "yet": [267, 280, 302, 358, 372, 430], "an": [267, 269, 270, 275, 276, 277, 280, 284, 285, 286, 287, 292, 293, 294, 297, 298, 302, 303, 305, 311, 314, 315, 316, 317, 318, 319, 320, 321, 324, 329, 331, 335, 336, 338, 342, 343, 345, 347, 349, 350, 351, 357, 358, 361, 362, 366, 367, 368, 371, 372, 373, 374, 376, 378, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 399, 400, 401, 402, 403, 405, 407, 408, 409, 412, 418, 419, 420, 421, 428, 430, 434, 436, 437, 438, 440, 441, 445, 447, 448, 449, 450, 452, 456, 459, 461, 465, 466, 471, 474, 476, 479], "need": [267, 294, 302, 303, 329, 342, 343, 351, 358, 372, 395, 400, 420, 429, 430, 440, 451, 463, 465, 476], "pass": [267, 302, 303, 343, 358, 372, 400, 419, 430, 445, 454, 456, 464, 465, 472], "dimens": [267, 268, 269, 270, 275, 276, 284, 286, 287, 288, 289, 292, 293, 294, 297, 298, 299, 300, 301, 302, 305, 307, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 329, 332, 335, 336, 337, 339, 342, 343, 345, 348, 349, 350, 351, 352, 355, 358, 363, 365, 369, 371, 372, 373, 375, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 400, 401, 402, 403, 412, 419, 420, 421, 424, 425, 426, 428, 430, 431, 436, 437, 438, 439, 440, 441, 442, 444, 445, 451, 456, 459, 471], "see": [267, 268, 276, 281, 294, 302, 303, 307, 314, 318, 322, 324, 336, 339, 343, 358, 361, 369, 372, 376, 425, 430, 444], "should": [267, 275, 276, 277, 280, 286, 291, 292, 293, 294, 302, 312, 317, 318, 324, 331, 333, 343, 345, 349, 350, 351, 357, 358, 361, 370, 371, 373, 395, 400, 402, 403, 411, 418, 421, 425, 430, 434, 441, 442, 448, 451, 452, 463, 464, 466, 471, 479], "share": [267, 302, 358, 430], "With": [267, 302, 358, 430], "disabl": [267, 302, 358, 430], "logic": [268, 307, 322, 323, 339, 340, 369, 444], "t1": [268, 276, 277, 279, 280, 281, 287, 291, 293, 298, 303, 304, 307, 311, 314, 322, 323, 324, 325, 326, 333, 334, 336, 339, 340, 347, 351, 354, 359, 365, 369, 372, 373, 374, 375, 376, 378, 380, 395, 397, 399, 400, 412, 418, 434, 436, 444, 447, 448, 449, 450, 452, 453, 457, 460, 463, 464, 465, 466], "bool": [268, 277, 280, 281, 284, 286, 287, 288, 289, 290, 291, 299, 303, 307, 310, 311, 312, 315, 316, 317, 322, 323, 324, 330, 331, 333, 334, 339, 340, 343, 363, 364, 365, 366, 367, 368, 369, 371, 378, 380, 394, 395, 396, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 418, 419, 424, 425, 426, 428, 436, 438, 439, 440, 441, 442, 443, 444, 465, 471, 472, 476, 477, 478, 479], "boolean": [268, 280, 287, 303, 307, 322, 323, 333, 334, 339, 340, 343, 364, 368, 369, 429, 439, 443, 444], "2d": [268, 288, 292, 293, 294, 311, 312, 329, 337, 342, 346, 347, 364, 369, 371, 373, 374, 395, 420, 444], "z": [268, 278, 302, 303, 305, 307, 314, 322, 339, 349, 357, 358, 369, 372, 400, 430, 436, 443, 444, 445, 449, 453, 457, 460, 462, 465], "logical_and": 268, "test_and2d": 268, "3d": [268, 288, 346, 364, 369, 374, 444], "test_and3d": 268, "4d": [268, 346, 364, 369, 444], "6": [268, 275, 286, 287, 288, 291, 292, 293, 294, 297, 299, 304, 310, 314, 316, 317, 319, 321, 324, 328, 333, 336, 343, 347, 349, 351, 357, 361, 362, 364, 369, 372, 376, 381, 383, 384, 390, 391, 392, 395, 396, 400, 403, 409, 412, 415, 418, 419, 424, 425, 429, 434, 437, 439, 443, 444, 452, 464, 466, 469, 478, 479], "test_and4d": 268, "_and_broadcast": 268, "1d": [268, 288, 290, 291, 292, 294, 306, 369, 371, 373, 395, 412, 421, 422, 436, 444], "test_and_bcast3v1d": 268, "test_and_bcast3v2d": 268, "test_and_bcast4v2d": 268, "test_and_bcast4v3d": 268, "test_and_bcast4v4d": 268, "descript": [268, 307, 322, 339, 369, 444], "rule": [268, 280, 307, 310, 322, 339, 369, 398, 444], "indic": [269, 270, 276, 279, 284, 286, 287, 292, 293, 294, 303, 305, 310, 312, 314, 315, 316, 317, 318, 325, 326, 329, 336, 337, 342, 349, 351, 361, 362, 363, 365, 368, 371, 373, 376, 394, 395, 400, 401, 402, 403, 412, 419, 420, 428, 434, 437, 439, 440, 441, 443, 445, 447, 453, 454, 457, 458, 460, 461, 471], "along": [269, 270, 275, 286, 287, 292, 293, 294, 297, 299, 305, 314, 315, 316, 317, 329, 336, 342, 344, 345, 349, 351, 353, 359, 365, 371, 373, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 400, 401, 402, 419, 420, 425, 426, 436, 437, 440, 442, 450, 451, 455, 463, 464], "provid": [269, 270, 284, 287, 290, 294, 329, 342, 343, 344, 357, 361, 362, 368, 371, 378, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 401, 420, 421, 428, 440, 448, 452, 454, 457, 462, 465, 477, 479], "keepdim": [269, 270, 319, 321, 353, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 420, 426], "reduc": [269, 270, 305, 353, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 421, 463], "prune": [269, 270, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "select_last_index": [269, 270], "index": [269, 270, 287, 298, 311, 315, 316, 317, 324, 349, 351, 362, 365, 395, 396, 397, 400, 401, 402, 403, 405, 408, 409, 419, 421, 434, 437, 440, 441, 445, 447, 448, 449, 452, 456, 460, 461, 463, 479], "last": [269, 270, 314, 336, 337, 344, 365, 371, 376, 400, 403, 408, 412, 426, 445, 451], "occurr": [269, 270, 305, 329, 440, 465], "select": [269, 270, 287, 294, 329, 349, 362, 419, 428, 443, 445], "appear": [269, 270, 305, 437, 461, 465], "onc": [269, 270, 305, 400, 461], "integ": [269, 270, 278, 280, 284, 293, 300, 304, 314, 315, 316, 317, 336, 347, 353, 354, 357, 361, 362, 365, 371, 373, 374, 375, 376, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 398, 401, 402, 403, 419, 421, 428, 434, 437, 438, 441, 447, 448, 449, 450, 451, 452, 453, 456, 457, 460, 462, 463, 464, 466, 471], "arg": [269, 270, 425, 461, 478], "accept": [269, 270, 276, 284, 287, 288, 289, 300, 315, 316, 329, 342, 365, 371, 375, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 400, 401, 402, 405, 408, 409, 419, 420, 425, 426, 428, 429, 437, 440, 441, 471], "r": [269, 270, 284, 287, 288, 289, 300, 303, 312, 314, 315, 316, 317, 329, 336, 337, 342, 365, 371, 375, 376, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 400, 401, 402, 403, 412, 419, 420, 425, 428, 437, 440, 441, 463, 464, 465, 466], "keep": [269, 270, 324, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 426], "multipl": [269, 270, 276, 292, 318, 329, 343, 350, 358, 397, 400, 402, 403, 419, 434, 460, 461, 463, 464, 466], "_no_keepdim": [269, 270], "argmax_use_numpi": 269, "test_argmax_no_keepdims_exampl": 269, "test_argmax_no_keepdims_random": 269, "_keepdim": [269, 270, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "test_argmax_keepdims_exampl": 269, "test_argmax_keepdims_random": 269, "_default_axes_keepdim": [269, 270, 383, 384, 386, 387, 388, 389, 390, 391, 392], "test_argmax_default_axis_exampl": 269, "test_argmax_default_axis_random": 269, "_negative_axis_keepdim": [269, 270], "test_argmax_negative_axis_keepdims_exampl": 269, "test_argmax_negative_axis_keepdims_random": 269, "_no_keepdims_select_last_index": [269, 270], "argmax_use_numpy_select_last_index": 269, "test_argmax_no_keepdims_example_select_last_index": 269, "test_argmax_no_keepdims_random_select_last_index": 269, "_keepdims_select_last_index": [269, 270], "test_argmax_keepdims_example_select_last_index": 269, "test_argmax_keepdims_random_select_last_index": 269, "_default_axes_keepdims_select_last_index": [269, 270], "test_argmax_default_axis_example_select_last_index": 269, "test_argmax_default_axis_random_select_last_index": 269, "_negative_axis_keepdims_select_last_index": [269, 270], "test_argmax_negative_axis_keepdims_example_select_last_index": 269, "test_argmax_negative_axis_keepdims_random_select_last_index": 269, "content": [270, 312, 381, 471], "argmin_use_numpi": 270, "test_argmin_no_keepdims_exampl": 270, "test_argmin_no_keepdims_random": 270, "test_argmin_keepdims_exampl": 270, "test_argmin_keepdims_random": 270, "test_argmin_default_axis_exampl": 270, "test_argmin_default_axis_random": 270, "test_argmin_negative_axis_keepdims_exampl": 270, "test_argmin_negative_axis_keepdims_random": 270, "argmin_use_numpy_select_last_index": 270, "test_argmin_no_keepdims_example_select_last_index": 270, "test_argmin_no_keepdims_random_select_last_index": 270, "test_argmin_keepdims_example_select_last_index": 270, "test_argmin_keepdims_random_select_last_index": 270, "test_argmin_default_axis_example_select_last_index": 270, "test_argmin_default_axis_random_select_last_index": 270, "test_argmin_negative_axis_keepdims_example_select_last_index": 270, "test_argmin_negative_axis_keepdims_random_select_last_index": 270, "arcsin": [271, 272], "sine": [271, 416, 417], "test_asin_exampl": 271, "test_asin": 271, "arcsinh": 272, "88137358": 272, "test_asinh_exampl": 272, "test_asinh": 272, "arctang": [273, 274], "tangent": [273, 432, 433], "arctan": 273, "test_atan_exampl": 273, "test_atan": 273, "arctanh": 274, "54930615": 274, "test_atanh_exampl": 274, "test_atanh": 274, "consum": [275, 292, 293, 294, 300, 314, 319, 320, 321, 336, 343, 345, 349, 350, 373, 374, 375, 376, 397], "averag": [275, 319, 349, 361, 395, 461, 464], "pool": [275, 319, 320, 321, 345, 349, 350, 351, 397, 434], "across": [275, 276, 319, 320, 321, 335, 343, 345, 349, 350, 397, 400, 461], "accord": [275, 345, 349, 354, 359, 429, 438], "kernel": [275, 292, 293, 294, 319, 320, 321, 345, 349, 351, 373, 457, 458], "stride": [275, 286, 292, 293, 294, 345, 349, 351, 373, 419], "length": [275, 279, 287, 292, 293, 294, 298, 314, 325, 326, 336, 345, 349, 373, 376, 395, 396, 399, 400, 410, 411, 419, 425, 426, 434, 436, 447, 448, 449, 451, 454, 459, 460, 461], "consist": [275, 316, 343, 345, 349, 400, 439, 472, 479], "downsampl": [275, 345, 349, 395], "further": [275, 281, 345, 349, 429], "process": [275, 297, 345, 349, 400, 411, 440, 451], "spatial": [275, 276, 286, 292, 293, 294, 299, 319, 320, 321, 324, 345, 349, 350, 351, 373, 397, 424], "output_spatial_shap": [275, 349], "input_spatial_shap": [275, 349], "pad_shap": [275, 349], "kernel_spatial_shap": [275, 349], "strides_spatial_shap": [275, 349], "ceil_mod": [275, 349], "auto_pad": [275, 292, 293, 294, 345, 349, 351, 373], "deprec": [275, 345, 349, 401, 442], "you": [275, 310, 331, 343, 349, 463, 466], "current": [275, 324, 349, 400, 463, 466], "valid": [275, 292, 293, 294, 311, 345, 349, 373, 378, 380, 395, 429, 474], "same_upp": [275, 292, 293, 294, 345, 349, 373], "same_low": [275, 292, 293, 294, 345, 349, 373], "window": [275, 279, 284, 298, 325, 326, 349, 399], "divid": [275, 292, 293, 294, 352, 361, 373, 421, 463, 464], "number": [275, 276, 277, 280, 286, 292, 293, 294, 305, 314, 317, 319, 320, 321, 324, 331, 332, 335, 336, 343, 345, 349, 350, 351, 354, 359, 362, 365, 371, 373, 376, 381, 394, 395, 397, 399, 400, 405, 408, 409, 410, 411, 418, 419, 421, 426, 434, 436, 437, 439, 441, 442, 454, 458, 461, 463, 464, 466, 471], "exclud": [275, 297, 349, 439], "count_include_pad": 275, "zero": [275, 276, 280, 281, 284, 291, 292, 293, 294, 298, 300, 301, 303, 304, 311, 314, 318, 324, 332, 335, 336, 337, 347, 351, 354, 357, 359, 361, 363, 373, 374, 375, 376, 394, 400, 401, 402, 411, 421, 425, 434, 439, 449, 455, 456, 457, 458, 460, 461, 463, 464, 466], "notset": [275, 292, 293, 294, 345, 349, 373], "explicit": [275, 292, 293, 294, 305, 345, 349, 373], "so": [275, 278, 284, 292, 293, 294, 303, 333, 345, 349, 351, 370, 373, 395, 396, 419, 434, 452, 463, 464], "output_shap": [275, 292, 293, 294, 317, 345, 349, 351, 373], "input_shap": [275, 292, 293, 294, 345, 349, 373], "almost": [275, 292, 293, 294, 345, 349, 373], "depend": [275, 276, 292, 293, 294, 303, 317, 337, 343, 345, 349, 357, 373, 395, 400, 403, 419, 429, 443, 448, 451, 452, 457, 460], "even": [275, 277, 284, 292, 293, 294, 304, 345, 349, 373, 374, 375, 398, 452, 472], "odd": [275, 292, 293, 294, 345, 349, 373], "In": [275, 280, 287, 292, 293, 294, 297, 299, 300, 305, 329, 331, 342, 343, 345, 349, 351, 354, 357, 365, 373, 394, 395, 398, 402, 403, 420, 426, 434, 451, 453, 455, 463, 466], "case": [275, 276, 280, 287, 292, 293, 294, 300, 303, 304, 305, 316, 319, 320, 321, 329, 332, 335, 337, 342, 345, 349, 350, 351, 357, 361, 365, 367, 373, 394, 395, 398, 401, 402, 403, 412, 420, 421, 429, 453, 459, 463, 471, 472], "extra": [275, 276, 292, 293, 294, 345, 349, 373, 400, 456, 479], "ad": [275, 286, 292, 293, 294, 314, 336, 345, 349, 351, 365, 371, 373, 376, 412, 413, 419, 460, 461, 477, 479], "begin": [275, 286, 292, 293, 294, 305, 345, 349, 351, 371, 373, 381], "pixel": [275, 286, 292, 293, 294, 324, 345, 349, 351, 371, 373, 395, 397], "edg": [275, 354, 371, 479], "count": [275, 284, 287, 288, 294, 297, 300, 312, 315, 316, 329, 337, 342, 343, 365, 371, 375, 395, 400, 401, 402, 405, 408, 409, 412, 419, 420, 425, 426, 428, 434, 437, 440, 441, 456, 459, 463, 464, 466, 479], "kernel_shap": [275, 292, 293, 294, 345, 349, 351, 373], "requir": [275, 276, 278, 280, 286, 288, 289, 290, 299, 305, 318, 331, 335, 337, 343, 345, 349, 350, 351, 365, 371, 377, 379, 394, 400, 411, 419, 424, 434, 437, 441, 442, 453, 460, 463, 464, 465, 466, 471], "repres": [275, 280, 284, 286, 292, 293, 294, 298, 305, 317, 324, 331, 345, 349, 351, 359, 362, 365, 373, 399, 400, 419, 447, 465, 472, 479], "correspond": [275, 278, 279, 286, 292, 293, 294, 298, 305, 310, 314, 317, 324, 325, 326, 329, 331, 336, 342, 345, 349, 351, 354, 359, 362, 371, 373, 376, 394, 395, 397, 400, 401, 402, 403, 419, 420, 434, 437, 439, 440, 441, 449, 455, 462, 463, 464, 471], "format": [275, 286, 290, 292, 293, 294, 314, 336, 345, 349, 351, 362, 365, 371, 373, 376, 434, 472, 476], "x1_begin": [275, 286, 292, 293, 294, 345, 349, 351, 371, 373], "x2_begin": [275, 286, 292, 293, 294, 345, 349, 351, 371, 373], "x1_end": [275, 286, 292, 293, 294, 345, 349, 351, 371, 373], "x2_end": [275, 286, 292, 293, 294, 345, 349, 351, 371, 373], "xi_begin": [275, 286, 292, 293, 294, 345, 349, 351, 371, 373], "xi_end": [275, 286, 292, 293, 294, 345, 349, 351, 371, 373], "cannot": [275, 292, 293, 294, 331, 343, 345, 349, 351, 368, 373, 411, 419, 434, 447, 449, 465], "simultan": [275, 292, 293, 294, 345, 349, 351, 373], "present": [275, 276, 286, 292, 293, 294, 303, 314, 318, 331, 336, 345, 349, 351, 373, 376, 419, 434, 440, 449, 456, 479], "previou": [275, 276, 292, 293, 294, 314, 319, 320, 321, 332, 335, 336, 343, 345, 349, 350, 373, 376, 397, 466], "imag": [275, 276, 286, 292, 293, 294, 298, 319, 320, 321, 332, 335, 345, 349, 350, 351, 373, 395, 397, 399], "n": [275, 276, 286, 292, 293, 294, 298, 299, 300, 317, 318, 319, 320, 321, 324, 329, 331, 332, 335, 342, 343, 345, 346, 347, 349, 350, 351, 361, 363, 373, 374, 375, 395, 397, 400, 405, 408, 409, 411, 419, 420, 421, 424, 434, 439, 440, 442, 448, 451, 453, 454, 455, 457, 458, 459, 460, 461], "h": [275, 276, 292, 293, 294, 299, 314, 319, 320, 321, 324, 332, 335, 336, 345, 349, 350, 351, 373, 376, 397, 411, 424, 442, 463, 464, 465], "w": [275, 276, 292, 293, 294, 298, 299, 314, 319, 320, 321, 324, 332, 335, 336, 337, 345, 349, 350, 351, 373, 376, 397, 399, 411, 421, 424, 442, 465], "batch": [275, 276, 286, 292, 293, 294, 298, 299, 301, 314, 317, 319, 320, 321, 324, 329, 332, 335, 336, 342, 345, 349, 350, 351, 359, 362, 373, 376, 396, 397, 400, 420, 424, 439, 455, 479], "channel": [275, 276, 286, 292, 293, 294, 299, 319, 320, 321, 324, 332, 335, 345, 349, 350, 351, 353, 370, 373, 397, 424], "height": [275, 276, 292, 293, 294, 299, 319, 320, 321, 324, 332, 335, 345, 349, 350, 351, 362, 373, 397, 424, 442], "width": [275, 276, 292, 293, 294, 299, 319, 320, 321, 324, 332, 335, 345, 349, 350, 351, 362, 373, 397, 424, 442, 451], "non": [275, 276, 277, 280, 284, 303, 318, 319, 320, 321, 332, 335, 345, 349, 351, 356, 363, 365, 366, 395, 400, 419, 428, 441, 465], "form": [275, 276, 301, 305, 317, 319, 320, 321, 332, 335, 345, 349, 351, 425, 426, 460, 465], "d1": [275, 276, 292, 293, 294, 319, 320, 321, 332, 335, 345, 347, 349, 351, 361, 373, 374, 421], "d2": [275, 276, 292, 293, 294, 319, 320, 321, 332, 335, 345, 347, 349, 351, 361, 373, 374, 421], "dn": [275, 276, 292, 293, 294, 312, 319, 320, 321, 332, 335, 345, 349, 351, 373], "denot": [275, 292, 293, 317, 335, 349, 351, 373, 395, 397, 400, 403, 421, 429, 434, 464, 465], "effect": [275, 278, 292, 293, 335, 349, 351, 373, 395, 419, 434, 463], "arriv": [275, 292, 293, 335, 349, 351, 373], "data_batch": [275, 292, 293, 335, 349, 351, 373], "data_channel": [275, 292, 293, 335, 349, 351, 373], "data_featur": [275, 292, 293, 335, 349, 351, 373], "vari": [275, 345, 349], "variou": [275, 345, 349], "_averagepool_2d_precomputed_pad": 275, "8": [275, 278, 280, 281, 284, 286, 288, 290, 292, 293, 294, 299, 300, 301, 304, 314, 316, 319, 321, 324, 333, 336, 343, 347, 351, 354, 357, 365, 373, 374, 375, 376, 381, 383, 384, 387, 389, 390, 391, 392, 395, 396, 398, 399, 403, 409, 419, 424, 425, 429, 434, 437, 439, 443, 449, 456, 464, 466, 469, 478, 479], "9": [275, 284, 286, 288, 292, 293, 294, 297, 299, 304, 314, 315, 316, 319, 321, 324, 336, 347, 349, 362, 372, 373, 376, 381, 383, 384, 390, 391, 392, 395, 396, 398, 403, 409, 424, 425, 427, 431, 437, 439, 464, 469, 478], "13": [275, 286, 292, 294, 314, 324, 347, 349, 351, 373, 374, 376, 396, 469, 478, 479], "14": [275, 280, 286, 288, 292, 294, 299, 318, 324, 349, 391, 395, 396, 403, 424, 469, 478, 479], "15": [275, 284, 286, 288, 292, 293, 294, 297, 314, 324, 349, 351, 373, 376, 383, 395, 396, 403, 424, 469, 478], "16": [275, 278, 286, 288, 292, 293, 294, 314, 349, 354, 376, 384, 395, 399, 424, 469, 478], "17": [275, 286, 292, 293, 294, 314, 349, 376, 403, 424, 434, 469, 478], "18": [275, 292, 294, 299, 314, 349, 358, 373, 376, 388, 424, 469, 473], "19": [275, 286, 292, 294, 299, 349, 383, 424], "20": [275, 284, 286, 292, 294, 299, 349, 375, 386, 387, 388, 389, 391, 392, 403, 411, 419, 424], "21": [275, 286, 292, 294, 299, 349, 373, 424], "22": [275, 286, 292, 294, 299, 349, 391, 424], "23": [275, 286, 292, 294, 299, 349, 373, 383, 424], "25": [275, 286, 292, 294, 318, 325, 349, 372, 373, 382, 384, 388, 395], "test_averagepool_2d_precomputed_pad": 275, "_averagepool_2d_precomputed_pads_count_include_pad": 275, "5200": 275, "6000": [275, 324], "8000": [275, 324], "0800": 275, "2400": 275, "5600": 275, "4000": [275, 324], "0400": 275, "2000": [275, 324], "0000": [275, 324], "9600": 275, "9200": 275, "1200": 275, "8800": 275, "8400": 275, "test_averagepool_2d_precomputed_pads_count_include_pad": 275, "_averagepool_2d_precomputed_strid": 275, "test_averagepool_2d_precomputed_strid": 275, "_averagepool_2d_precomputed_same_upp": 275, "test_averagepool_2d_precomputed_same_upp": 275, "_averagepool_1d_default": 275, "32": [275, 278, 280, 286, 292, 293, 294, 299, 300, 308, 337, 347, 349, 372, 373, 374, 375, 403], "31": [275, 286, 292, 294, 299, 349], "x_shape": [275, 349], "out_shap": [275, 349], "get_output_shap": [275, 349], "avg": [275, 397], "test_averagepool_1d_default": 275, "_averagepool_2d_default": 275, "test_averagepool_2d_default": 275, "_averagepool_3d_default": 275, "test_averagepool_3d_default": 275, "_averagepool_2d_same_upp": 275, "get_pad_shap": [275, 349], "pad_top": [275, 349], "pad_bottom": [275, 349], "pad_left": [275, 349], "pad_right": [275, 349], "mode": [275, 276, 299, 303, 305, 324, 343, 349, 371, 395, 397, 434, 442, 455, 461, 465, 466], "constant_valu": [275, 349, 371], "nan": [275, 280, 281, 333, 334, 349, 427, 451, 452, 460, 461], "test_averagepool_2d_same_upp": 275, "_averagepool_2d_same_low": 275, "test_averagepool_2d_same_low": 275, "_averagepool_2d_pad": 275, "28": [275, 286, 292, 293, 294, 299, 349, 434], "30": [275, 286, 292, 294, 299, 349, 357, 386, 387, 388, 389, 411], "test_averagepool_2d_pad": 275, "_averagepool_2d_pads_count_include_pad": 275, "test_averagepool_2d_pads_count_include_pad": 275, "_averagepool_2d_strid": 275, "test_averagepool_2d_strid": 275, "_averagepool_2d_ceil": 275, "test_averagepool_2d_ceil": 275, "carri": [276, 332, 343, 400], "describ": [276, 279, 325, 326, 329, 332, 337, 342, 343, 395, 397, 420, 466], "paper": [276, 279, 325, 326, 332, 335, 397, 463], "http": [276, 279, 286, 287, 318, 324, 325, 326, 332, 335, 337, 343, 346, 347, 361, 363, 374, 375, 395, 397, 419, 440, 443, 463, 472], "arxiv": [276, 324, 332, 397], "org": [276, 279, 286, 287, 318, 324, 325, 326, 332, 346, 347, 361, 363, 374, 375, 395, 397, 419, 440, 443, 463], "1502": 276, "03167": 276, "being": [276, 287, 303, 324, 343, 357, 361, 362, 395, 451, 464], "There": [276, 280, 317, 343, 455, 460, 461, 462], "five": 276, "scale": [276, 300, 303, 304, 314, 332, 335, 336, 337, 350, 354, 373, 374, 375, 376, 377, 378, 395, 397, 404, 434, 442, 459, 466], "input_mean": 276, "input_var": 276, "note": [276, 280, 286, 292, 293, 294, 298, 303, 314, 336, 343, 345, 362, 373, 376, 395, 399, 400, 403, 412, 434, 463, 464, 465, 479], "estim": [276, 457, 463], "statist": 276, "training_mod": [276, 303], "train": [276, 303, 337, 434, 478], "we": [276, 277, 280, 303, 329, 342, 343, 359, 377, 378, 379, 380, 420, 426, 434, 440, 456, 463, 465, 466, 471], "running_mean": 276, "running_var": 276, "invalid": [276, 477], "current_mean": 276, "current_var": 276, "epsilon": [276, 332, 337, 463, 464], "all_except_channel_index": 276, "reducevar": 276, "notic": [276, 452], "refer": [276, 284, 287, 324, 337, 343, 346, 347, 363, 371, 374, 375, 395, 400, 419, 440, 443, 463], "popul": [276, 311], "varianc": [276, 332, 337, 353, 459], "sqrd": 276, "x_i": 276, "x_avg": 276, "formula": [276, 283, 286, 300, 304, 353, 354, 356, 374, 375, 413, 455], "doe": [276, 294, 303, 310, 329, 342, 361, 367, 400, 403, 420, 421, 429, 440, 441, 476], "sampl": [276, 324, 343, 354, 359, 361, 395, 397, 399, 400, 411, 421], "avoid": [276, 332, 337, 397, 463, 464], "overflow": [276, 293, 347, 374], "depreci": 276, "implementor": 276, "suggest": 276, "befor": [276, 286, 287, 314, 318, 365, 419, 440, 476, 479], "about": [276, 303, 314, 317, 318, 336, 376, 476], "represent": [276, 278, 280, 303, 314, 318, 336, 365, 376, 434, 451], "empti": [276, 285, 291, 301, 303, 314, 318, 331, 336, 343, 366, 367, 368, 371, 376, 391, 394, 395, 399, 400, 405, 407, 408, 409, 410, 426, 429, 465, 471, 474, 479], "mai": [276, 277, 280, 293, 303, 305, 314, 318, 331, 336, 347, 361, 374, 376, 395, 400, 421, 434, 451, 452, 460, 461, 463], "place": [276, 303, 314, 318, 336, 376, 456], "actual": [276, 278, 303, 314, 318, 336, 337, 343, 376, 394], "miss": [276, 303, 314, 318, 336, 376, 451, 460], "trail": [276, 303, 314, 318, 336, 376, 403], "those": [276, 303, 314, 318, 336, 365, 376, 395, 463, 464, 479], "simpli": [276, 303, 314, 318, 336, 376, 477], "omit": [276, 303, 314, 318, 336, 343, 376, 397, 400, 412, 419, 460, 461, 465], "divis": [276, 302, 332, 337, 426], "factor": [276, 350, 375, 395, 397, 463, 466], "g": [276, 280, 292, 301, 314, 336, 343, 354, 376, 397, 463, 464, 466, 479], "would": [276, 278, 280, 286, 291, 297, 303, 391, 429, 434, 452, 463, 464, 466], "over": [276, 305, 320, 335, 343, 345, 350, 362, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 397, 399, 400], "becom": [276, 324, 434, 466], "singl": [276, 288, 289, 362, 400, 403, 428, 437, 439, 441, 456, 463, 479], "bia": [276, 292, 294, 314, 332, 335, 336, 337, 373, 376, 400, 413], "t2": [276, 277, 279, 280, 281, 291, 293, 297, 298, 303, 304, 311, 324, 325, 326, 333, 334, 347, 351, 354, 359, 365, 373, 374, 375, 378, 380, 395, 397, 399, 400, 447, 448, 449, 452, 453, 457, 460, 463, 464, 465, 466], "var": [276, 337], "saved_mean": 276, "saved_var": 276, "save": [276, 337, 434, 479], "dure": [276, 303, 337, 349, 473], "speed": [276, 337], "up": [276, 298, 312, 337, 343, 381, 395, 400, 401, 434, 449, 452], "per": [276, 293, 300, 304, 332, 347, 354, 362, 373, 374, 375, 451, 453, 454, 457, 458, 463], "activ": [276, 314, 336, 356, 376], "featur": [276, 292, 293, 294, 373, 397, 451, 456, 459, 460, 461], "mini": 276, "1e": [276, 280, 332, 337, 353, 463, 464], "5f": [276, 332], "is_test": [276, 303], "9f": 276, "dimension": [276, 286, 317, 329, 332, 342, 346, 347, 374, 400, 403, 420, 421, 428, 441], "nchw": [276, 332], "draw": 277, "distribut": [277, 359, 377, 378, 379, 380], "probabl": [277, 359, 361, 421, 457], "p": [277, 320, 336, 344, 345, 421], "determinist": 277, "seed": [277, 303, 359, 361, 377, 378, 379, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392], "gener": [277, 279, 280, 281, 286, 287, 291, 294, 303, 311, 318, 324, 325, 326, 343, 346, 347, 351, 354, 359, 362, 363, 371, 374, 377, 378, 379, 380, 381, 395, 400, 434, 440, 443, 454, 463, 465, 473], "onli": [277, 286, 292, 293, 294, 297, 298, 304, 311, 324, 331, 344, 345, 347, 354, 365, 371, 374, 395, 399, 400, 413, 426, 429, 434, 447, 448, 449, 451, 452, 453, 456, 457, 460, 461, 462, 463, 464, 465, 466, 476], "_bernoulli_without_dtyp": 277, "bernoulli_reference_implement": 277, "test_bernoulli": 277, "_bernoulli_with_dtyp": 277, "tensorproto": [277, 279, 280, 281, 290, 291, 311, 325, 326, 330, 331, 343, 354, 367, 368, 377, 378, 379, 380, 400, 411, 471, 474, 476], "float64": [277, 297, 311, 357, 478], "test_bernoulli_doubl": 277, "_bernoulli_with_se": 277, "test_bernoulli_se": 277, "bitwis": 278, "shift": [278, 337, 397], "direct": [278, 297, 314, 336, 376, 400, 463, 464, 466], "move": [278, 299, 424, 463, 464], "toward": 278, "decreas": 278, "bit": [278, 280, 293, 300, 304, 337, 347, 349, 373, 374, 375, 387, 389, 452, 463, 464, 466], "increas": [278, 286, 461, 463], "anoth": [278, 286, 331, 400, 451, 452, 465], "amount": [278, 294], "becaus": [278, 280, 286, 298, 329, 342, 351, 399, 400, 420, 463, 464], "necessarili": [278, 434], "_right_unit8": 278, "test_bitshift_right_uint8": 278, "_right_unit16": 278, "test_bitshift_right_uint16": 278, "_right_unit32": 278, "test_bitshift_right_uint32": 278, "_right_unit64": 278, "test_bitshift_right_uint64": 278, "_left_unit8": 278, "test_bitshift_left_uint8": 278, "_left_unit16": 278, "test_bitshift_left_uint16": 278, "_left_unit32": 278, "test_bitshift_left_uint32": 278, "_left_unit64": 278, "test_bitshift_left_uint64": 278, "blackman": 279, "ieeexplor": [279, 325, 326, 395], "ieee": [279, 325, 326, 395], "1455106": [279, 325, 326], "output_datatyp": [279, 325, 326, 354], "strictli": [279, 280, 325, 326, 354], "datatyp": [279, 280, 291, 311, 325, 326, 354, 377, 378, 379, 380, 413, 474], "enum": [279, 280, 311, 325, 326, 354, 377, 378, 379, 380, 429, 461], "whose": [279, 285, 325, 326, 354, 396, 421, 434], "period": [279, 325, 326], "symmetr": [279, 325, 326], "hann": [279, 325, 326], "point": [279, 280, 293, 300, 301, 303, 304, 317, 324, 325, 326, 337, 343, 347, 357, 361, 373, 374, 375, 395, 397, 450, 460, 465], "int64_t": [279, 298, 325, 326, 399], "a0": [279, 325, 326, 399], "42": [279, 286, 294, 373], "a1": [279, 325, 326, 399], "a2": 279, "08": [279, 390], "1415": [279, 325, 326, 399], "arang": [279, 298, 301, 310, 315, 325, 326, 354, 357, 372, 383, 384, 399, 413, 438, 440], "test_blackmanwindow": 279, "test_blackmanwindow_symmetr": 279, "field": [280, 311, 324, 377, 378, 379, 380, 460, 461, 471, 472, 477], "messag": [280, 311, 377, 378, 379, 380, 470, 472, 476], "plain": 280, "1000": [280, 324, 375, 419], "scientif": 280, "1e8": 280, "100": [280, 286, 298, 311, 362, 375, 392], "some": [280, 294, 310, 314, 317, 336, 376, 395, 402, 403, 451, 463, 464, 465, 479], "liter": 280, "reserv": 280, "special": [280, 361, 463], "inf": [280, 281, 285, 306, 333, 338, 370, 393, 404, 435], "posit": [280, 316, 333, 365, 400, 401, 402, 403, 405, 408, 409, 411, 419, 426, 437, 439, 447], "infin": [280, 333], "respect": [280, 285, 337, 362, 401, 434, 463, 464, 465], "exactli": [280, 290, 305, 365, 397, 479], "insensit": 280, "wai": 280, "map": [280, 292, 293, 294, 317, 333, 354, 373, 397, 400, 434, 440, 446, 447, 448, 449, 452, 462, 466, 471, 474], "infinit": 280, "similarli": [280, 286, 400, 460], "314": 280, "15926": 280, "hello": 280, "world": 280, "undefin": [280, 284, 367, 371, 395, 400, 419, 437, 460, 461], "behavior": [280, 284, 289, 297, 357, 363, 367, 371, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 397, 400, 419, 463, 464, 466], "arithmet": [280, 463, 464], "718": 280, "int": [280, 281, 303, 312, 318, 335, 337, 343, 346, 354, 370, 372, 381, 397, 400, 434, 439, 448, 452, 456, 462, 471, 472, 473, 474, 478, 479], "convers": [280, 471, 479], "alwai": [280, 466], "awar": 280, "loss": [280, 361, 421, 465], "caus": [280, 294, 324, 351, 357], "64": [280, 286, 294, 299, 373, 403, 463, 464, 466], "1415926459": 280, "141592": 280, "36": [280, 286, 294, 299, 434], "truncat": [280, 434], "store": [280, 434, 464, 471, 476], "target": [280, 361, 395, 401, 402, 421, 454, 458, 461, 465, 479], "among": 280, "oor": 280, "fix": [280, 305], "els": [280, 281, 294, 311, 312, 314, 318, 329, 331, 336, 337, 342, 354, 368, 376, 391, 409, 420], "uint": 280, "discard": [280, 287], "higher": [280, 294, 439], "reinterpret": 280, "complement": 280, "200": [280, 300], "56": [280, 286, 294, 299, 347, 373], "complex": [280, 281, 298, 311, 399, 474], "test_cas": [280, 281, 288, 394, 409], "from_typ": [280, 281], "to_typ": [280, 281], "np_fp32": [280, 281], "47892547": [280, 281], "48033667": [280, 281], "49968487": [280, 281], "81910545": [280, 281], "47031248": [280, 281], "816468": [280, 281], "21087195": [280, 281], "7229038": [280, 281], "little_endisan": [280, 281], "byteord": [280, 281], "littl": [280, 281], "np_uint16_view": [280, 281], "view": [280, 281, 463, 465, 466], "np_bfp16": [280, 281], "assert": [280, 281, 317], "make_tensor_type_proto": [280, 281, 330, 331, 343, 367, 368, 411, 471], "bfloat": [280, 281, 443], "np_fp32_zero": [280, 281], "np_fp32_from_bfloat": [280, 281], "elif": [280, 281], "random_sampl": [280, 281, 312, 394, 424, 438], "tensor_type_to_np_typ": [280, 281], "getattr": [280, 281], "give": [280, 281, 351], "script": [280, 281, 324], "ss": [280, 281], "utf": [280, 281, 290, 429, 434], "su": [280, 281], "append": [280, 281, 400], "test_cast_": 280, "_to_": [280, 281], "target_typ": 281, "like": [281, 287, 329, 342, 346, 347, 357, 374, 400, 420, 443, 476], "test_castlike_": 281, "test_ceil_exampl": 282, "test_ceil": 282, "continu": [283, 368, 450], "differenti": [283, 465], "exponenti": [283, 309, 404, 420, 464], "linear": [283, 300, 314, 343, 351, 354, 356, 375, 393, 395, 404, 435, 442, 453, 454, 457, 458, 465], "unit": [283, 337, 356, 404, 459], "alpha": [283, 306, 314, 318, 327, 328, 335, 336, 338, 376, 404, 435, 464, 466], "control": [283, 294, 434, 479], "input_data": [283, 284, 353, 356], "8439683": [283, 353], "5665144": [283, 353], "05836735": [283, 353], "02916367": [283, 353], "12964272": [283, 353], "5060197": [283, 353], "79538304": [283, 353], "9411346": [283, 353], "9546573": [283, 353], "17730942": [283, 353], "46192095": [283, 353], "26480448": [283, 353], "6746842": [283, 353], "01665257": [283, 353], "62473077": [283, 353], "9240844": [283, 353], "9722341": [283, 353], "11965699": [283, 353], "41356155": [283, 353], "9129373": [283, 353], "59330076": [283, 353], "81929934": [283, 353], "7862604": [283, 353], "11799799": [283, 353], "69248444": [283, 353], "54119414": [283, 353], "07513223": [283, 353], "positive_input": 283, "maximum": [283, 285, 304, 329, 343, 348, 349, 362, 387, 400, 402, 403, 434], "negative_input": 283, "minimum": [283, 285, 304, 355, 389, 402, 403, 434, 471], "expected_output": [283, 317, 353, 356, 425], "test_celu": 283, "center": [284, 324, 354], "crop": 284, "ax": [284, 337, 343, 353, 371, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 412, 419, 428, 438, 441, 445], "bigger": 284, "extract": [284, 411, 419, 434, 472, 479], "back": [284, 286, 287, 288, 297, 300, 312, 315, 316, 329, 337, 342, 351, 365, 371, 375, 395, 400, 401, 402, 405, 408, 409, 412, 419, 420, 425, 426, 428, 437, 440, 441, 479], "repeat": [284, 305, 336, 371, 395, 419, 436], "tind": [284, 315, 316, 361, 371, 401, 402, 419, 421], "d": [284, 286, 293, 297, 300, 301, 310, 314, 316, 317, 324, 329, 336, 337, 342, 347, 349, 350, 351, 371, 373, 374, 375, 376, 381, 395, 397, 401, 402, 419, 420, 421, 426, 433, 434, 437, 439, 440, 442, 447, 449, 450, 465], "output_data": 284, "complex128": [284, 286, 287, 288, 289, 290, 299, 310, 312, 315, 316, 317, 324, 330, 331, 343, 363, 365, 366, 367, 368, 371, 378, 380, 394, 395, 396, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 418, 419, 424, 425, 426, 428, 436, 438, 439, 440, 441, 442, 443, 465, 478], "complex64": [284, 286, 287, 288, 289, 290, 298, 299, 310, 312, 315, 316, 317, 324, 330, 331, 343, 363, 365, 366, 367, 368, 371, 378, 380, 394, 395, 396, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 418, 419, 424, 425, 426, 428, 436, 438, 439, 440, 441, 442, 443, 465, 471, 478], "_center_crop_pad_crop": 284, "diff": [284, 337], "uneven": 284, "7": [284, 286, 288, 292, 293, 294, 297, 315, 316, 317, 319, 321, 324, 333, 347, 349, 351, 357, 365, 371, 373, 383, 384, 390, 391, 392, 395, 396, 398, 403, 409, 419, 424, 425, 434, 437, 439, 443, 464, 466, 469, 478, 479], "test_center_crop_pad_crop": 284, "_center_crop_pad_pad": 284, "test_center_crop_pad_pad": 284, "_center_crop_pad_crop_and_pad": 284, "third": [284, 351, 440, 443], "stai": 284, "test_center_crop_pad_crop_and_pad": 284, "_center_crop_pad_crop_axes_hwc": 284, "test_center_crop_pad_crop_axes_hwc": 284, "_center_crop_pad_crop_axes_chw": 284, "test_center_crop_pad_crop_axes_chw": 284, "interv": [285, 362], "thei": [285, 324, 354, 373, 374, 400, 412, 419, 440, 451, 457, 461, 463, 464], "numeric_limit": 285, "lowest": [285, 354], "under": [285, 476], "replac": [285, 403, 451, 456], "abov": [285, 314, 329, 336, 337, 342, 343, 361, 376, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 403, 420, 434, 439], "min_val": 285, "max_val": 285, "test_clip_exampl": 285, "test_clip": 285, "test_clip_inbound": 285, "test_clip_outbound": 285, "test_clip_splitbound": 285, "_clip_default": 285, "test_clip_default_min": 285, "no_min": 285, "suppli": [285, 343, 362, 399, 400], "test_clip_default_max": 285, "no_max": 285, "test_clip_default_inbound": 285, "_clip_default_int8": 285, "iinfo": 285, "test_clip_default_int8_min": 285, "test_clip_default_int8_max": 285, "test_clip_default_int8_inbound": 285, "rearrang": [286, 299, 424], "column": [286, 299, 349, 374, 462], "block": [286, 299, 424], "multidimension": 286, "behav": [286, 287, 346, 347, 357, 363, 374, 443], "pytorch": [286, 324, 361, 362, 395], "fold": [286, 400], "stabl": [286, 361, 419], "torch": [286, 316, 324, 361, 401, 402], "nn": [286, 324, 361], "html": [286, 287, 324, 346, 347, 361, 363, 374, 419, 440, 443], "multi": [286, 343], "com": [286, 337, 343, 440, 472], "f": [286, 306, 314, 336, 337, 338, 348, 354, 355, 370, 371, 372, 376, 402, 403, 451, 459, 460, 461, 476], "dangel": 286, "unfoldnd": 286, "although": 286, "image_shap": 286, "look": [286, 449, 452], "redund": 286, "could": [286, 293, 347, 373, 394, 411], "convolut": [286, 292, 293, 294, 335, 373], "advanc": 286, "scenario": [286, 426], "explain": 286, "blob": [286, 337, 425], "master": [286, 324], "aten": 286, "src": 286, "nativ": 286, "cpp": 286, "l10": 286, "dilat": [286, 292, 293, 294, 349, 373], "ari": 286, "product": [286, 293, 317, 318, 346, 347, 374, 390], "block_shap": 286, "l": [286, 421, 465], "enumer": 286, "lexicograph": 286, "order": [286, 298, 299, 314, 336, 343, 344, 349, 363, 371, 376, 403, 411, 437, 440, 441, 447, 450, 457, 458, 465], "least": [286, 428], "h_img": 286, "w_img": 286, "dim_i1": 286, "dim_i2": 286, "dim_in": 286, "h_block": 286, "w_block": 286, "dim_b1": 286, "dim_b2": 286, "dim_bn": 286, "11": [286, 293, 303, 314, 324, 347, 376, 396, 424, 469, 478], "test_col2im": 286, "_col2im_strid": 286, "test_col2im_strid": 286, "_col2im_pad": 286, "26": [286, 292, 294, 374], "41": [286, 294, 299, 373], "46": [286, 294, 299, 325], "51": [286, 292, 294, 374], "61": 286, "66": [286, 294, 299, 374], "71": 286, "27": [286, 292, 294, 299, 372], "37": [286, 294, 299], "47": [286, 294, 299], "52": [286, 294, 373], "57": [286, 294, 299, 361, 388], "62": 286, "67": [286, 294, 299, 373], "72": [286, 292, 294, 403], "33": [286, 292, 294], "38": [286, 294, 299, 347], "43": [286, 294, 373], "48": [286, 294, 299, 390], "53": [286, 294], "58": [286, 294, 299, 373], "63": [286, 292, 294, 299], "68": [286, 294, 299], "73": 286, "29": [286, 292, 294, 299, 374], "34": [286, 292, 294, 300, 304, 373], "39": [286, 294, 299, 373], "44": [286, 294, 347, 375], "49": [286, 294, 299], "54": [286, 292, 294, 299], "59": [286, 294, 299, 300, 373], "69": [286, 373], "74": [286, 300, 392], "35": [286, 294, 318, 388, 390], "40": [286, 294, 299, 373, 386, 387, 388, 389, 411], "45": [286, 294, 299], "50": [286, 294, 299, 347, 375], "55": [286, 294, 299, 386, 387, 388, 389], "60": [286, 294, 372, 373, 374, 386, 387, 388, 389, 403], "65": [286, 299], "70": 286, "75": [286, 303, 335, 362, 395], "111": [286, 292, 294], "114": [286, 294, 373, 374], "117": [286, 292, 294], "84": [286, 292, 300, 375, 403], "98": [286, 294, 347], "156": [286, 294], "159": [286, 294], "162": [286, 292, 294, 373, 375], "128": [286, 294, 300, 347, 373, 375, 399, 403], "201": 286, "204": 286, "207": [286, 292, 294], "144": [286, 292, 294], "test_col2im_pad": 286, "_col2im_dil": 286, "test_col2im_dil": 286, "_col2im_5d": 286, "76": [286, 294, 375], "81": [286, 292, 294, 373], "86": 286, "91": 286, "96": [286, 403], "101": [286, 362, 373], "106": [286, 294], "116": 286, "77": [286, 373], "82": 286, "87": [286, 294, 300, 373], "92": [286, 373], "97": 286, "102": [286, 294, 300, 373], "107": [286, 373], "112": [286, 292], "78": [286, 294, 383, 391], "83": [286, 347, 373], "88": [286, 294], "93": [286, 292, 294, 373], "103": 286, "108": [286, 292, 294], "113": [286, 294, 347, 374], "118": [286, 374], "79": 286, "89": [286, 300, 373], "94": [286, 434, 464, 466], "99": [286, 292, 294, 300, 390], "104": [286, 294], "109": 286, "119": 286, "80": [286, 373], "85": [286, 294, 464, 466], "90": [286, 294], "95": [286, 362, 373, 464, 466], "105": [286, 294, 403], "110": 286, "115": [286, 374], "120": [286, 294, 390], "test_col2im_5d": 286, "condit": [287, 317, 331, 343, 363, 443], "evalu": [287, 305, 454], "scipi": [287, 346, 347, 363, 374, 419, 440, 443], "Its": [287, 316, 361, 395, 401, 402, 403, 434, 448, 457, 466], "exceed": 287, "_compress_0": 287, "print": [287, 310, 315, 316, 361, 365, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 401, 402, 437, 440, 473], "test_compress_0": 287, "_compress_1": 287, "test_compress_1": 287, "_compress_default_axi": 287, "test_compress_default_axi": 287, "_compress_negative_axi": 287, "test_compress_negative_axi": 287, "alon": [287, 451], "concaten": [288, 289, 314, 315, 336, 343, 376, 400, 403, 450, 463, 465, 466, 479], "2147483647": [288, 305, 331, 343, 348, 352, 355, 400, 406, 411, 425, 431, 450, 463, 464, 465, 466], "variad": [288, 305, 331, 343, 348, 352, 355, 400, 406, 411, 425, 431, 450, 463, 464, 465, 466], "concat_result": [288, 289], "dict": [288, 471, 472, 474, 478], "values_": [288, 452], "item": [288, 368, 394, 409, 434, 449], "asarrai": [288, 440], "in_arg": 288, "k": [288, 311, 315, 316, 318, 329, 342, 343, 347, 361, 365, 374, 395, 400, 403, 411, 420, 421, 437, 439], "test_concat_": 288, "_axis_": 288, "_axis_negative_": 288, "new_axi": 289, "similar": [289, 310, 316, 357, 363, 371, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 400, 401, 402, 419, 438], "stack": [289, 298, 399], "insert": [289, 365, 371, 409, 441, 449, 465, 479], "do": [289, 297, 305, 318, 324, 343, 349, 351, 357, 375, 421, 437, 453, 460, 461, 465], "input_sequ": [289, 405, 408, 409, 410, 411], "seq": [289, 330, 331, 343, 366, 367, 368, 405, 406, 407, 408, 409, 410, 411, 426, 462], "sparse_valu": 290, "value_": [290, 452], "spars": [290, 434, 447, 476, 479], "value_float": 290, "sole": 290, "value_int": 290, "value_str": 290, "make_tensor": [290, 291, 343, 471], "const_tensor": [290, 343], "data_typ": [290, 343, 471], "val": [290, 343, 471], "test_const": 290, "taken": [291, 394], "_float_on": 291, "tensor_valu": [291, 478], "test_constantofshape_float_on": 291, "_int32_zero": 291, "test_constantofshape_int_zero": 291, "_int32_shape_zero": 291, "test_constantofshape_int_shape_zero": 291, "filter": [292, 293, 294, 349, 362, 373, 395, 472], "group": [292, 293, 294, 373], "layer": [292, 293, 294, 300, 304, 314, 329, 336, 337, 342, 343, 373, 375, 376, 420], "weight": [292, 293, 294, 314, 336, 354, 361, 373, 376, 395, 400, 421, 434, 453, 454, 460, 461], "m": [292, 293, 294, 298, 301, 318, 343, 347, 354, 373, 374, 399, 400, 411, 439, 454], "kh": [292, 293, 294, 373], "kw": [292, 293, 294, 373], "k1": [292, 293, 294, 373], "k2": [292, 293, 294, 373], "kn": [292, 293, 294, 373], "filter_out_channel": [292, 293, 373], "filter_in_channel": [292, 293, 373], "filter_spati": [292, 293, 373], "other": [292, 293, 297, 305, 319, 320, 321, 329, 333, 365, 373, 396, 400, 411, 439, 446, 451, 455, 463, 464, 465, 466, 473], "word": [292, 293, 373, 429, 434, 451, 455], "multipli": [292, 314, 318, 346, 347, 354, 374, 459], "node_with_pad": 292, "y_with_pad": 292, "153": [292, 304, 373], "123": [292, 294, 343, 373], "test_basic_conv_with_pad": 292, "without": [292, 293, 329, 342, 420, 460, 461], "node_without_pad": 292, "y_without_pad": 292, "test_basic_conv_without_pad": 292, "_conv_with_strid": 292, "198": [292, 294], "141": [292, 294, 373], "177": 292, "124": [292, 373], "test_conv_with_strides_pad": 292, "234": [292, 294, 373], "252": [292, 375], "test_conv_with_strides_no_pad": 292, "nxcxhxw": 292, "node_with_asymmetric_pad": 292, "y_with_asymmetric_pad": 292, "189": [292, 294], "171": [292, 294], "183": 292, "test_conv_with_strides_and_asymmetric_pad": 292, "_conv_with_autopad_sam": 292, "test_conv_with_autopad_sam": 292, "never": [293, 347, 374], "accumul": [293, 343, 347, 374, 400, 463, 464, 466], "ofpixel": [293, 373], "defaultsto": [293, 373], "x_zero_point": [293, 300, 373], "quantiz": [293, 300, 304, 347, 373, 374, 375, 397], "w_zero_point": [293, 373], "t3": [293, 347, 354, 365, 373, 374, 400, 463, 464, 466], "_without_pad": 293, "convinteger_nod": 293, "test_convinteger_without_pad": 293, "_with_pad": 293, "convinteger_node_with_pad": 293, "test_convinteger_with_pad": 293, "via": [294, 314, 336, 376, 403, 465], "equat": [294, 303, 305, 314, 316, 336, 337, 376, 395, 403], "input_s": [294, 314, 336, 376], "output_pad": 294, "start_i": 294, "end_i": 294, "explicitli": [294, 303, 329, 342, 345, 351, 371, 394, 395, 420], "total_pad": 294, "coordin": [294, 350, 353, 362, 395, 397, 434, 463], "vector": [294, 298, 308, 314, 324, 329, 336, 342, 347, 371, 374, 376, 420, 421, 434, 449, 453, 454, 457, 458], "directli": [294, 397, 400, 477, 479], "affect": 294, "remov": [294, 362, 371, 397, 408, 428, 429, 459], "contribut": [294, 361, 395, 421], "particip": 294, "adj": 294, "adjust": [294, 304, 395, 419], "framework": [294, 345], "ignor": [294, 300, 303, 343, 351, 361, 375, 421, 426, 434], "test_convtranspos": 294, "_convtranspose_1d": 294, "test_convtranspose_1d": 294, "_convtranspose_3d": 294, "174": [294, 373], "186": [294, 373], "288": 294, "306": 294, "324": 294, "222": 294, "246": [294, 374], "378": 294, "396": 294, "414": 294, "282": 294, "184": 294, "294": 294, "208": [294, 374], "168": [294, 373, 374, 403], "135": 294, "276": 294, "423": 294, "441": 294, "459": 294, "312": 294, "225": 294, "702": 294, "729": [294, 372], "756": 294, "513": 294, "261": 294, "270": [294, 375], "549": 294, "837": 294, "864": 294, "891": 294, "603": 294, "195": [294, 373], "621": 294, "639": 294, "432": 294, "219": 294, "213": [294, 373], "333": 294, "342": [294, 395], "231": 294, "122": 294, "192": 294, "134": [294, 373], "130": [294, 375], "264": 294, "402": 294, "426": 294, "146": 294, "210": 294, "648": 294, "666": 294, "684": 294, "462": 294, "240": [294, 373], "486": 294, "738": 294, "774": 294, "522": 294, "170": 294, "344": 294, "534": 294, "546": 294, "368": 294, "182": 294, "194": 294, "126": [294, 373, 403], "129": [294, 373, 375], "172": [294, 373], "267": 294, "273": 294, "291": 294, "147": [294, 403], "150": 294, "303": 294, "468": 294, "477": 294, "321": 294, "212": [294, 373], "327": 294, "224": 294, "test_convtranspose_3d": 294, "_convtranspose_attribut": 294, "test_convtranspose_output_shap": 294, "test_convtranspose_pad": 294, "test_convtranspose_kernel_shap": 294, "_convtranspose_pad": 294, "_convtranspose_dil": 294, "test_convtranspose_dil": 294, "_convtranspose_autopad_sam": 294, "test_convtranspose_autopad_sam": 294, "test_cos_exampl": 295, "test_co": 295, "54308069": 296, "test_cosh_exampl": 296, "test_cosh": 296, "cumul": 297, "inclus": [297, 317, 441], "copi": [297, 299, 303, 311, 330, 378, 380, 394, 396, 401, 402, 403, 405, 419, 424, 436, 450, 479], "through": [297, 343, 397, 419, 434], "exclus": [297, 312, 381, 412, 419], "summat": [297, 305], "opposit": 297, "revers": [297, 299, 314, 336, 376, 396, 400, 438, 465], "input_x": [297, 440], "top": [297, 354, 437, 460], "term": [297, 305, 354, 434], "j": [297, 316, 354, 365, 400, 401, 402], "th": [297, 337, 397, 400, 411, 434, 452, 464, 465], "_cumsum_1d": 297, "test_cumsum_1d": 297, "_cumsum_1d_exclus": 297, "test_cumsum_1d_exclus": 297, "_cumsum_1d_revers": 297, "test_cumsum_1d_revers": 297, "_cumsum_1d_reverse_exclus": 297, "test_cumsum_1d_reverse_exclus": 297, "_cumsum_2d_axis_0": 297, "test_cumsum_2d_axis_0": 297, "_cumsum_2d_axis_1": 297, "test_cumsum_2d_axis_1": 297, "_cumsum_2d_negative_axi": 297, "test_cumsum_2d_negative_axi": 297, "discret": 298, "fourier": [298, 399], "transform": [298, 299, 314, 324, 362, 395, 399, 434, 453, 454, 457, 458, 460, 461], "onesid": [298, 354, 399], "n_fft": [298, 399], "real": [298, 399], "satisfi": [298, 399], "conjug": [298, 399], "symmetri": [298, 399], "possibl": [298, 310, 331, 359, 399, 426, 465], "fast": [298, 399], "rfft": [298, 399], "invok": [298, 399, 466], "batch_idx": 298, "signal_dim1": 298, "signal_dim2": 298, "signal_dimn": 298, "diment": [298, 450], "signal": [298, 354, 399], "final": [298, 337, 343, 394, 400, 419, 421, 460, 461, 466], "imaginari": [298, 399], "dft_length": [298, 354], "signal_dim": 298, "fft": [298, 399], "test_dft": 298, "test_dft_axi": 298, "ifft": 298, "test_dft_invers": 298, "permut": [299, 438], "depth": [299, 365, 424], "specif": [299, 305, 401, 402, 403, 411, 424, 429, 434, 463, 464, 465, 466, 473], "dcr": 299, "row": [299, 347, 349, 351, 363, 374, 434, 455], "tmp": [299, 424], "blocksiz": [299, 424], "crd": 299, "arrang": 299, "_default_mode_exampl": 299, "test_depthtospace_exampl": 299, "_crd_mode_exampl": 299, "test_depthtospace_crd_mode_exampl": 299, "dequant": 300, "full": [300, 375], "x_scale": [300, 373], "suppos": 300, "de": 300, "255": [300, 304, 373, 374, 375], "256": 300, "250": 300, "254": [300, 374, 375], "test_dequantizelinear": 300, "_axi": [300, 375], "245": [300, 375], "142": 300, "121": [300, 373], "196": [300, 373, 375], "test_dequantizelinear_axi": 300, "both": [300, 331, 343, 395, 400, 434, 462, 479], "determin": [301, 316, 343, 381, 411, 434, 439, 452, 456, 465, 471], "squar": [301, 384, 392, 427, 463, 464, 466], "matrix": [301, 311, 312, 314, 318, 329, 336, 342, 344, 346, 347, 354, 374, 376, 420, 434, 439], "matric": [301, 439], "inner": [301, 312, 343, 400], "most": [301, 315, 316, 324, 329, 342, 394, 401, 402, 403, 420, 473], "submatric": 301, "_2d": [301, 425], "linalg": 301, "test_det_2d": 301, "_nd": 301, "test_det_nd": 301, "test_div_exampl": 302, "test_div": 302, "test_div_uint8": 302, "_div_broadcast": 302, "test_div_bcast": 302, "ratio": [303, 395], "mask": [303, 397], "wa": [303, 343, 456, 463], "simpl": [303, 376, 400, 452], "typic": [303, 351, 400, 451], "henc": [303, 403], "unless": 303, "mimic": 303, "noth": 303, "drop": [303, 429], "request": 303, "_default": [303, 314, 335, 336, 376, 435, 438], "test_dropout_default": 303, "_default_ratio": 303, "test_dropout_default_ratio": 303, "_default_mask": 303, "return_mask": 303, "test_dropout_default_mask": 303, "_default_mask_ratio": 303, "test_dropout_default_mask_ratio": 303, "_training_default": 303, "bool_": 303, "test_training_dropout_default": 303, "_training_default_ratio_mask": 303, "test_training_dropout_default_mask": 303, "_train": 303, "test_training_dropout": 303, "_training_ratio_mask": 303, "test_training_dropout_mask": 303, "_training_default_zero_ratio": 303, "test_training_dropout_zero_ratio": 303, "_training_default_zero_ratio_mask": 303, "test_training_dropout_zero_ratio_mask": 303, "old": 303, "_default_old": 303, "test_dropout_default_old": 303, "make_opsetid": [303, 330, 331, 343, 400, 401, 442, 463, 464, 466, 471], "_random_old": 303, "test_dropout_random_old": 303, "our": [303, 466], "phase": 303, "fill": [303, 317, 365, 371], "fuse": 304, "fp32": 304, "8bit": 304, "zeropoint": 304, "y_scale": [304, 373, 374, 375], "qmax": 304, "qmin": 304, "intermediate_zero_point": 304, "y_zero_point": [304, 373, 374, 375], "satur": [304, 374, 375], "itermediate_zero_point": 304, "127": [304, 373, 374, 375], "now": 304, "nearest": [304, 324, 374, 375, 395, 398, 442], "ti": [304, 374, 375], "unsign": 304, "0196078438": 304, "x_min": 304, "x_max": 304, "y_zeropoint": 304, "test_dynamicquantizelinear": 304, "0156862754": 304, "test_dynamicquantizelinear_max_adjust": 304, "345": 304, "test_dynamicquantizelinear_min_adjust": 304, "term1": 305, "term2": 305, "occur": [305, 440], "algebra": 305, "einstein": 305, "convent": 305, "comma": 305, "separ": 305, "lower": [305, 311, 354, 379, 380, 429, 437, 439], "letter": 305, "charact": 305, "classic": 305, "implicitli": [305, 343], "alphabet": 305, "sort": [305, 437, 440], "ellipsi": 305, "implicit": 305, "space": 305, "0020": 305, "express": [305, 460, 461], "_einsum_transpos": 305, "eqn": 305, "ij": 305, "ji": 305, "einsum_reference_implement": 305, "test_einsum_transpos": 305, "_einsum_sum": 305, "test_einsum_sum": 305, "_einsum_batch_diagon": 305, "ii": 305, "test_einsum_batch_diagon": 305, "_einsum_inner_prod": 305, "test_einsum_inner_prod": 305, "_einsum_batch_matmul": 305, "bij": 305, "bjk": 305, "bik": 305, "test_einsum_batch_matmul": 305, "coeffici": [306, 338, 395, 404, 453, 454, 457, 458, 463, 464, 466], "2642411": 306, "test_elu_exampl": 306, "test_elu": 306, "_elu_default": 306, "default_alpha": [306, 327, 338, 404, 435], "test_elu_default": 306, "test_equ": 307, "_equal_broadcast": 307, "test_equal_bcast": 307, "integr": [307, 359, 405, 408, 409, 410, 426], "math": [308, 335], "test_erf": 308, "36787945": 309, "71828175": 309, "test_exp_exampl": 309, "test_exp": 309, "align": [310, 397], "broadcast_to": 310, "major": [310, 349, 351, 363], "ndim": [310, 319, 321, 419, 436, 441], "want": [310, 324], "_dim_chang": 310, "new_shap": [310, 312], "prod": [310, 312, 383, 384, 390], "test_expand_dim_chang": 310, "_dim_unchang": 310, "test_expand_dim_unchang": 310, "diagon": [311, 343, 362, 439], "everywher": 311, "upper": [311, 379, 380, 381, 429, 439], "notspecifi": 311, "_without_dtyp": 311, "ey": 311, "test_eyelike_without_dtyp": 311, "_with_dtyp": 311, "test_eyelike_with_dtyp": 311, "_populate_off_main_diagon": 311, "off_diagonal_offset": 311, "test_eyelike_populate_off_main_diagon": 311, "d_0": 312, "d_1": [312, 361], "d_n": 312, "d_": 312, "d_axi": 312, "outer": [312, 315, 316, 400, 401, 402], "remain": [312, 394, 400, 403, 479], "test_flatten_axi": 312, "_flatten_with_default_axi": 312, "test_flatten_default_axi": 312, "_flatten_negative_axi": 312, "test_flatten_negative_axi": 312, "test_floor_exampl": 313, "test_floor": 313, "usual": [314, 336, 376, 463, 465], "custom": [314, 336, 376], "cudnn": [314, 336, 343, 376], "notat": [314, 336, 376, 400], "gate": [314, 336, 376], "reset": 314, "hidden": [314, 336, 376, 400], "step": [314, 336, 343, 376, 381, 399, 419], "zrh": 314, "recurr": [314, 336, 343, 376, 400], "wb": [314, 336, 476], "rb": [314, 336, 476], "backward": [314, 336, 376, 397, 400, 419], "wbb": [314, 336], "rbb": [314, 336], "state": [314, 336, 343, 376, 400], "num_direct": [314, 336, 376], "bidirect": [314, 336, 376, 400], "2x": [314, 336, 376], "affin": [314, 336, 376], "beta": [314, 318, 327, 328, 335, 336, 376, 464, 466], "scaledtanh": [314, 336, 376], "zt": 314, "xt": [314, 336, 351, 376], "wz": 314, "ht": [314, 336, 376, 400], "rz": 314, "wbz": 314, "rbz": 314, "rt": 314, "wr": [314, 376], "rr": [314, 376], "wbr": 314, "rbr": 314, "wh": 314, "rh": 314, "rbh": 314, "wbh": 314, "linear_before_reset": 314, "activation_alpha": [314, 336, 376], "01": [314, 336, 338, 376, 466], "activation_beta": [314, 336, 376], "cell": [314, 336, 376, 400], "threshold": [314, 336, 362, 376, 435, 446, 460, 461], "bound": [314, 315, 316, 317, 324, 336, 343, 354, 362, 376, 401, 402, 405, 408, 409], "No": [314, 336, 376, 412, 429, 442], "forward": [314, 336, 376, 400, 419, 465], "hidden_s": [314, 336, 376], "neuron": [314, 336, 376], "layout": [314, 336, 376], "initial_h": [314, 336, 376], "y_h": [314, 336, 376, 400], "seq_length": [314, 336, 376], "batch_siz": [314, 329, 336, 342, 359, 376, 396, 399, 400, 420, 421], "pack": [314, 336, 376, 447], "potenti": [314, 336, 376], "sequence_len": [314, 336, 376, 396, 400], "initi": [314, 336, 343, 376, 400, 419, 463, 464, 471, 476, 479], "intermedi": [314, 336, 376, 400, 429, 440, 465], "seq_len": [314, 336, 376], "weight_scal": [314, 336, 376], "number_of_g": [314, 336], "gru_help": 314, "_": [314, 336, 376, 395, 411], "test_gru_default": 314, "_initial_bia": [314, 336, 376], "custom_bia": [314, 336, 376], "w_b": [314, 336, 376], "r_b": [314, 336, 376], "test_gru_with_initial_bia": 314, "_seq_length": [314, 376], "test_gru_seq_length": 314, "_batchwis": [314, 336, 376], "test_gru_batchwis": 314, "output_sequ": [314, 336, 376, 406, 408, 409, 426], "q": [315, 317, 403], "entri": [315, 365, 381, 401, 402, 403, 426, 428, 441], "let": [315, 317, 337, 395, 403, 434, 452, 463, 464, 465, 466], "i_": 315, "Then": [315, 419], "j_": 315, "_gather_0": 315, "test_gather_0": 315, "_gather_1": 315, "test_gather_1": 315, "_gather_2d_indic": 315, "test_gather_2d_indic": 315, "_gather_negative_indic": 315, "test_gather_negative_indic": 315, "identifi": [316, 400, 401, 402, 465, 471], "instanc": [316, 332, 401, 402, 471, 475], "_gather_elements_0": 316, "gather_el": 316, "test_gather_elements_0": 316, "_gather_elements_1": 316, "test_gather_elements_1": 316, "_gather_elements_negative_indic": 316, "test_gather_elements_negative_indic": 316, "batch_dim": 317, "indices_shap": [317, 403], "best": 317, "thought": 317, "tupl": [317, 319, 321, 383, 384, 386, 387, 388, 389, 390, 391, 392, 403, 460, 461, 471, 478, 479], "lead": [317, 466], "salient": 317, "honor": [317, 394], "met": 317, "data_shap": 317, "obtain": [317, 362, 400, 401, 402], "think": 317, "indices_slic": 317, "locat": [317, 324, 365, 395, 397, 403, 472], "_int32": 317, "gather_nd_impl": 317, "array_equ": 317, "test_gathernd_example_int32": 317, "_float32": 317, "test_gathernd_example_float32": 317, "_int32_batchdim_1": 317, "test_gathernd_example_int32_batch_dim1": 317, "en": [318, 374, 375], "wikipedia": [318, 374, 375], "wiki": [318, 374, 375], "basic_linear_algebra_subprogram": 318, "level_3": 318, "transa": 318, "transb": 318, "unidirect": [318, 370], "_default_zero_bia": 318, "ranf": [318, 385], "gemm_reference_implement": 318, "test_gemm_default_zero_bia": 318, "_default_no_bia": 318, "test_gemm_default_no_bia": 318, "_default_scalar_bia": 318, "test_gemm_default_scalar_bia": 318, "_default_single_elem_vector_bia": 318, "test_gemm_default_single_elem_vector_bia": 318, "_default_vector_bia": 318, "test_gemm_default_vector_bia": 318, "_default_matrix_bia": 318, "test_gemm_default_matrix_bia": 318, "_transposea": 318, "test_gemm_transposea": 318, "_transposeb": 318, "test_gemm_transposeb": 318, "_alpha": 318, "test_gemm_alpha": 318, "_beta": 318, "test_gemm_beta": 318, "_all_attribut": 318, "test_gemm_all_attribut": 318, "inplac": [318, 479], "equival": [319, 320, 321, 343, 391, 400, 412, 429, 437], "while": [319, 320, 321, 343, 395, 397, 419, 450, 452, 462, 466], "test_globalaveragepool": 319, "_globalaveragepool_precomput": 319, "test_globalaveragepool_precomput": 319, "lp": [320, 344, 345], "norm": [320, 345, 383, 384, 455, 463, 464, 466], "test_globalmaxpool": 321, "_globalmaxpool_precomput": 321, "test_globalmaxpool_precomput": 321, "test_great": 322, "_greater_broadcast": 322, "test_greater_bcast": 322, "greater_equ": 323, "flow": [324, 479], "grid": [324, 397], "h_out": 324, "w_out": 324, "interpol": [324, 395, 397, 442], "often": [324, 329, 342, 420], "sampler": 324, "network": [324, 335, 343], "1506": 324, "02025": 324, "grid_sampl": 324, "align_corn": [324, 395], "extrema": 324, "consid": [324, 349, 351, 434, 452, 465], "corner": [324, 362], "instead": [324, 343, 363, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 460, 461], "resolut": 324, "agnost": [324, 362], "three": [324, 351, 371, 395, 401, 402, 403, 440, 443, 455], "bilinear": [324, 395, 397, 442], "bicub": [324, 395], "padding_mod": 324, "outsid": [324, 361, 365, 395, 421], "border": 324, "reflect": [324, 362, 371], "margin": 324, "far": 324, "awai": 324, "until": 324, "offset": [324, 459], "therefor": [324, 343, 449, 463, 465, 476], "handl": [324, 463, 466], "_gridsampl": 324, "1500": 324, "5500": 324, "9500": 324, "3500": 324, "7500": 324, "5000": 324, "3000": 324, "9000": 324, "7000": [324, 397], "test_gridsampl": 324, "_gridsample_paddingmod": 324, "y_zero": 324, "test_gridsample_zeros_pad": 324, "y_border": 324, "test_gridsample_border_pad": 324, "y_reflect": 324, "test_gridsample_reflection_pad": 324, "_gridsample_mode_aligncorn": 324, "y_bilinear": 324, "2500": 324, "test_gridsample_bilinear": 324, "y_align_corn": 324, "test_gridsample_aligncorners_tru": 324, "y_nearest": 324, "test_gridsample_nearest": 324, "y_bicub": 324, "1406": 324, "3828": 324, "7556": 324, "9688": 324, "1445": 324, "3906": 324, "test_gridsample_bicub": 324, "someon": 324, "who": 324, "comment": 324, "ci": 324, "packag": 324, "ham": 325, "test_hammingwindow": 325, "test_hammingwindow_symmetr": 325, "test_hannwindow": 326, "test_hannwindow_symmetr": 326, "test_hardsigmoid_exampl": 327, "test_hardsigmoid": 327, "_hardsigmoid_default": 327, "default_beta": 327, "test_hardsigmoid_default": 327, "test_hardswish": 328, "test_hardmax_exampl": 329, "maxim": [329, 351], "hot": [329, 365], "test_hardmax_one_hot": 329, "_hardmax_axi": 329, "test_hardmax_axis_0": 329, "test_hardmax_axis_1": 329, "test_hardmax_axis_2": 329, "test_hardmax_negative_axi": 329, "test_hardmax_default_axi": 329, "rather": [329, 342, 420], "coerc": [329, 342, 420], "arbitrari": [329, 342, 412, 418, 420], "a_0": [329, 342, 420], "a_1": [329, 342, 420, 437], "a_": [329, 342, 420, 437], "a_k": [329, 342, 420], "situat": [329, 342, 420, 451], "correctli": [329, 342, 420], "throw": [329, 342, 420, 477], "0th": [329, 342, 420], "nxd": [329, 342, 420], "origin": [329, 337, 342, 351, 354, 362, 395, 396, 397, 412, 420, 434, 437, 440, 441, 477, 479], "coercion": [329, 342, 420], "input_feature_dimens": [329, 342, 420], "test_ident": 330, "_sequenc": 330, "test_identity_sequ": 330, "_identity_opt": 330, "ten_in_tp": [330, 331, 343], "seq_in_tp": [330, 331, 343], "make_sequence_type_proto": [330, 331, 343, 367, 411, 471], "opt_in_tp": [330, 343], "make_optional_type_proto": [330, 331, 343, 367, 368, 471], "identity_nod": [330, 343], "opt_in": [330, 343], "opt_out": 330, "test_identity_opt": 330, "else_branch": [331, 343], "wish": [331, 343], "live": [331, 343], "enclos": [331, 343, 366, 406], "scope": [331, 343], "then_branch": [331, 343], "cond": [331, 343], "branch": [331, 460, 461, 472], "static": [331, 343], "s1": 331, "s2": 331, "variabl": [331, 337, 343, 353, 400, 463, 464, 465, 466], "compat": [331, 397], "union": [331, 362, 471, 476, 477, 479], "file": [331, 472, 473, 476], "neither": 331, "dim_valu": 331, "nor": 331, "dim_param": 331, "contrast": [331, 357, 434], "_if": 331, "then_out": 331, "make_tensor_value_info": [331, 343, 400, 411, 471], "else_out": 331, "then_const_nod": 331, "numpy_help": [331, 473], "from_arrai": [331, 474], "else_const_nod": 331, "then_bodi": [331, 343], "else_bodi": [331, 343], "if_nod": [331, 343], "test_if": 331, "_if_seq": 331, "make_tensor_sequence_value_info": [331, 343, 471], "then_seq_nod": 331, "else_seq_nod": 331, "test_if_seq": 331, "_if_opt": 331, "then_out_tensor_tp": 331, "then_out_seq_tp": 331, "then_out_opt_tp": 331, "make_value_info": [331, 343, 471], "optional_empti": 331, "else_out_tensor_tp": 331, "else_out_seq_tp": 331, "else_out_opt_tp": 331, "else_opt": 331, "compute_if_output": 331, "opt_empty_in": 331, "else_seq": 331, "else_optional_seq_nod": 331, "test_if_opt": 331, "1607": 332, "08022": 332, "detect_neg": 333, "induc": 333, "detect_posit": 333, "_infin": 333, "ninf": 333, "test_isinf": 333, "_positive_infinity_onli": 333, "isposinf": 333, "test_isinf_posit": 333, "_negative_infinity_onli": 333, "isneginf": 333, "test_isinf_neg": 333, "test_isnan": 334, "local": [335, 351, 429, 479], "respons": 335, "propos": [335, 397, 463], "alexnet": 335, "nip": 335, "cc": 335, "4824": 335, "imagenet": 335, "classif": [335, 453, 457, 460, 461], "deep": 335, "neural": [335, 343, 356], "pdf": [335, 463], "region": [335, 350, 397], "dk": [335, 361, 421], "square_sum": 335, "expon": [335, 372, 386], "0002": 335, "nsize": 335, "ndindex": [335, 403], "test_lrn": 335, "0001": 335, "test_lrn_default": 335, "o": [336, 366, 367, 368, 465, 478], "forget": 336, "iofc": 336, "iof": 336, "peephol": 336, "pb": 336, "wi": [336, 376, 400], "ri": [336, 376, 400], "pi": 336, "ct": 336, "wbi": [336, 376, 400], "rbi": [336, 376, 400], "ft": 336, "wf": 336, "rf": 336, "pf": 336, "wbf": 336, "rbf": [336, 457, 458], "wc": 336, "rc": 336, "wbc": 336, "rbc": 336, "ot": 336, "wo": 336, "ro": 336, "po": 336, "wbo": 336, "rbo": 336, "input_forget": 336, "coupl": 336, "initial_c": 336, "y_c": 336, "hidde_s": 336, "lstm_helper": 336, "test_lstm_default": 336, "test_lstm_with_initial_bia": 336, "_peephol": 336, "number_of_peephol": 336, "init_h": 336, "init_c": 336, "test_lstm_with_peephol": 336, "test_lstm_batchwis": 336, "overal": 337, "stage": 337, "standard": [337, 377, 378, 434, 459, 466], "normalized_ax": 337, "dd": 337, "varep": 337, "stddev": 337, "invstddev": 337, "stand": [337, 395], "deviat": [337, 377, 378], "stash_typ": 337, "happen": 337, "outcom": [337, 359, 446], "normalizedsc": 337, "syntax": 337, "definit": [337, 465], "normalized_shap": 337, "calculate_normalized_shap": 337, "inv_std_dev": 337, "_layer_norm": 337, "test_layer_normalization_4d_axis_negative_": 337, "test_layer_normalization_4d_axi": 337, "_default_axi": 337, "test_layer_normalization_default_axi": 337, "test_layer_normalization_2d_axis_negative_": 337, "test_layer_normalization_2d_axi": 337, "3d_epsilon": 337, "test_layer_normalization_3d_axis_negative_": 337, "_epsilon": 337, "test_layer_normalization_3d_axi": 337, "leakag": 338, "test_leakyrelu_exampl": 338, "test_leakyrelu": 338, "_leakyrelu_default": 338, "test_leakyrelu_default": 338, "test_less": 339, "_less_broadcast": 339, "test_less_bcast": 339, "less_equ": 340, "natur": 341, "30258512": 341, "test_log_exampl": 341, "test_log": 341, "4076061": 342, "407606": 342, "test_logsoftmax_example_1": 342, "_logsoftmax_axi": 342, "10000": [342, 356, 420], "10001": [342, 420], "10002": [342, 420], "10003": [342, 420], "4401896": 342, "44018966": 342, "test_logsoftmax_large_numb": 342, "test_logsoftmax_axis_0": 342, "test_logsoftmax_axis_1": 342, "test_logsoftmax_axis_2": 342, "test_logsoftmax_negative_axi": 342, "test_logsoftmax_default_axi": 342, "construct": [343, 366, 400, 406, 407, 434, 436, 440, 471], "termin": 343, "trip": 343, "iter": [343, 396, 400, 403, 463, 464, 466], "bodi": [343, 400, 411], "yield": [343, 443], "summar": 343, "code": [343, 400, 463, 464, 466], "max_trip_count": 343, "condition_var": 343, "analog": 343, "trip_count": 343, "well": [343, 400], "predict": [343, 351, 421, 458], "net": 343, "keepgo": 343, "keepgoing_out": 343, "b_out": 343, "user_defined_v": 343, "keepgoing_in": 343, "incom": 343, "b_in": 343, "my_loc": 343, "outgo": 343, "const": 343, "imagin": [343, 463, 466], "bind": 343, "formal": 343, "read": [343, 476], "fine": 343, "access": 343, "sever": [343, 351, 466], "thing": 343, "snippet": 343, "referenc": 343, "subsequ": [343, 466], "pair": [343, 362, 373, 471, 479], "eg": 343, "These": [343, 460], "scan_output": [343, 400], "mechan": 343, "semant": 343, "wavefront": 343, "execut": [343, 400, 411, 473], "devblog": 343, "nvidia": 343, "frontend": 343, "emit": 343, "seri": 343, "success": [343, 399], "possibli": 343, "go": 343, "residu": 343, "connect": [343, 479], "subgraph": [343, 400, 411, 471, 479], "figur": [343, 354, 463], "iteration_num": 343, "skip": [343, 434, 465], "v_initi": 343, "v_final_and_scan_output": 343, "_loop_11": 343, "x1": [343, 350, 362, 397, 400, 411, 463, 464, 466], "xn": [343, 400], "x2": [343, 350, 362, 397, 400, 463, 464, 466], "y_in": 343, "y_out": 343, "scan_out": [343, 400], "cond_in": 343, "cond_out": 343, "iter_count": 343, "x_const_nod": 343, "const_tensor_x": 343, "one_const_nod": 343, "const_tensor_on": 343, "i_add_nod": 343, "start_unsqueeze_nod": 343, "slice_start": 343, "end_unsqueeze_nod": 343, "slice_end": 343, "slice_nod": 343, "slice_out": 343, "y_add_nod": 343, "scan_identity_nod": 343, "loop_bodi": 343, "res_i": 343, "res_scan": 343, "test_loop11": 343, "_loop_13": 343, "seq_in": 343, "seq_out": 343, "zero_const_nod": 343, "const_tensor_zero": 343, "axes_nod": 343, "const_tensor_ax": 343, "add_nod": [343, 400], "insert_nod": 343, "seq_empti": 343, "seq_r": 343, "test_loop13_seq": 343, "_loop_16_non": 343, "x0": [343, 411], "opt_seq_in": 343, "optional_has_elem_nod": 343, "optional_has_elem": 343, "optional_is_non": 343, "optional_get_elem": 343, "constant_in": 343, "seq_const_in": 343, "init_seq_in": 343, "then_seq_out": 343, "else_seq_out": 343, "opt_seq": 343, "compute_loop_output": 343, "test_loop16_seq_non": 343, "write": [343, 401, 476], "declar": 343, "intend": [345, 351, 400], "author": 345, "encourag": 345, "test_matmul_2d": 346, "test_matmul_3d": 346, "test_matmul_4d": 346, "a_zero_point": [347, 374], "wherea": [347, 374], "zp_1": 347, "zp_2": 347, "zp_m": 347, "b_zero_point": [347, 374], "col": 347, "zp_n": 347, "test_matmulinteg": 347, "data_0": [348, 352, 355, 431], "data_1": [348, 352, 355, 431], "data_2": [348, 352, 355, 431], "test_max_exampl": 348, "test_max_one_input": 348, "test_max_two_input": 348, "_max_all_numeric_typ": 348, "op_dtyp": [348, 355], "all_numeric_dtyp": [348, 355], "test_max_": 348, "storage_ord": 349, "storag": [349, 351], "_maxpool_2d_uint8": 349, "test_maxpool_2d_uint8": 349, "_maxpool_2d_precomputed_pad": 349, "test_maxpool_2d_precomputed_pad": 349, "_maxpool_with_argmax_2d_precomputed_pad": 349, "test_maxpool_with_argmax_2d_precomputed_pad": 349, "_maxpool_2d_precomputed_strid": 349, "test_maxpool_2d_precomputed_strid": 349, "_maxpool_with_argmax_2d_precomputed_strid": 349, "test_maxpool_with_argmax_2d_precomputed_strid": 349, "_maxpool_2d_precomputed_same_upp": 349, "test_maxpool_2d_precomputed_same_upp": 349, "_maxpool_1d_default": 349, "test_maxpool_1d_default": 349, "_maxpool_2d_default": 349, "test_maxpool_2d_default": 349, "_maxpool_3d_default": 349, "test_maxpool_3d_default": 349, "_maxpool_2d_same_upp": 349, "test_maxpool_2d_same_upp": 349, "_maxpool_2d_same_low": 349, "test_maxpool_2d_same_low": 349, "_maxpool_2d_pad": 349, "test_maxpool_2d_pad": 349, "_maxpool_2d_strid": 349, "test_maxpool_2d_strid": 349, "_maxpool_2d_ceil": 349, "test_maxpool_2d_ceil": 349, "_maxpool_2d_dil": 349, "test_maxpool_2d_dil": 349, "roi": [350, 395, 397], "interest": [350, 397], "num_roi": [350, 397], "pooled_shap": 350, "spatial_scal": [350, 397], "translat": [350, 362, 397], "batch_id": 350, "y1": [350, 362, 397, 411], "y2": [350, 362, 397], "essenti": [351, 434], "partial": [351, 403, 465], "unpool": 351, "corrspond": 351, "ambigu": 351, "output_s": [351, 395], "meant": 351, "disambigu": 351, "known": [351, 395, 476], "exact": 351, "try": 351, "invert": 351, "_without_output_shap": 351, "xi": 351, "test_maxunpool_export_without_output_shap": 351, "_with_output_shap": 351, "test_maxunpool_export_with_output_shap": 351, "test_mean_exampl": 352, "test_mean_one_input": 352, "test_mean_two_input": 352, "br": [353, 395, 447, 448, 449, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462], "ex": 353, "cacul": [353, 421], "associ": [353, 395, 434, 460, 461, 472], "data_mean": 353, "data_mean_squar": 353, "power": [353, 354, 372, 464], "data_squar": 353, "data_squared_mean": 353, "std": 353, "test_mvn": 353, "linearli": 354, "frequenc": [354, 434], "spectra": 354, "num_mel_bin": 354, "lower_edge_hertz": 354, "upper_edge_hertz": 354, "mel": 354, "hertz": 354, "2595": 354, "log10": 354, "700": 354, "triangl": 354, "filterbank": 354, "peak": 354, "spectrogram": 354, "frame": [354, 399], "num_spectrogram_bin": 354, "spectrum": 354, "magnitud": 354, "band": 354, "understood": 354, "nonredund": 354, "bin": [354, 397], "sample_r": 354, "dictat": 354, "how": [354, 395, 400, 461], "triangular": [354, 439], "desir": [354, 447, 466], "highest": 354, "8192": 354, "frequency_bin": 354, "low_frequency_mel": 354, "high_frequency_mel": 354, "mel_step": 354, "flag": [354, 400, 458], "writeabl": 354, "lower_frequency_valu": 354, "center_frequency_point": 354, "higher_frequency_point": 354, "low_to_cent": 354, "center_to_high": 354, "000000": 354, "test_melweightmatrix": 354, "test_min_exampl": 355, "test_min_one_input": 355, "test_min_two_input": 355, "_min_all_numeric_typ": 355, "test_min_": 355, "self": 356, "regular": [356, 463, 464, 466], "monoton": 356, "ln": [356, 422], "linspac": 356, "log1p": 356, "test_mish": 356, "modulu": 357, "remaind": 357, "divisor": [357, 455], "fmod": 357, "howev": [357, 419], "dividend": 357, "forc": [357, 472], "platform": [357, 429], "treatment": 357, "_mod_mixed_sign_float64": 357, "test_mod_mixed_sign_float64": 357, "_mod_mixed_sign_float32": 357, "10000038": 357, "39999962": 357, "test_mod_mixed_sign_float32": 357, "_mod_mixed_sign_float16": 357, "10156": 357, "3984": 357, "test_mod_mixed_sign_float16": 357, "_mod_mixed_sign_int64": 357, "test_mod_mixed_sign_int64": 357, "_mod_mixed_sign_int32": 357, "test_mod_mixed_sign_int32": 357, "_mod_mixed_sign_int16": 357, "test_mod_mixed_sign_int16": 357, "_mod_mixed_sign_int8": 357, "test_mod_mixed_sign_int8": 357, "_mod_uint8": 357, "test_mod_uint8": 357, "_mod_uint16": 357, "test_mod_uint16": 357, "_mod_uint32": 357, "test_mod_uint32": 357, "_mod_uint64": 357, "test_mod_uint64": 357, "_mod_int64_fmod": 357, "test_mod_int64_fmod": 357, "_mod_broadcast": 357, "test_mod_broadcast": 357, "test_mul_exampl": 358, "test_mul": 358, "test_mul_uint8": 358, "_mul_broadcast": 358, "test_mul_bcast": 358, "sample_s": 359, "class_siz": [359, 421], "unnorm": 359, "flip": 360, "test_neg_exampl": 360, "test_neg": 360, "likelihood": 361, "d_2": 361, "d_k": 361, "label": [361, 421, 452, 453, 457, 460], "ignore_index": [361, 421], "classifi": [361, 453, 457, 460], "reduct": [361, 402, 403, 421], "nllloss": 361, "weight_tot": 361, "shall": [361, 421], "rescal": [361, 421, 459], "treat": [361, 403, 419, 421, 450, 453], "_input_shape_is_nc": 361, "negative_log_likelihood_loss": 361, "compute_negative_log_likelihood_loss": 361, "test_nllloss_nc": 361, "_input_shape_is_ncd1d2": 361, "dim1": 361, "dim2": 361, "test_nllloss_ncd1d2": 361, "_input_shape_is_ncd1d2_reduction_mean": 361, "test_nllloss_ncd1d2_reduction_mean": 361, "_input_shape_is_ncd1d2_reduction_sum": 361, "test_nllloss_ncd1d2_reduction_sum": 361, "_input_shape_is_ncd1d2_with_weight": 361, "test_nllloss_ncd1d2_with_weight": 361, "_input_shape_is_ncd1d2_with_weight_reduction_mean": 361, "test_nllloss_ncd1d2_with_weight_reduction_mean": 361, "_input_shape_is_ncd1d2_with_weight_reduction_sum": 361, "test_nllloss_ncd1d2_with_weight_reduction_sum": 361, "_input_shape_is_ncd1d2_with_weight_reduction_sum_ii": 361, "test_nllloss_ncd1d2_with_weight_reduction_sum_ii": 361, "_input_shape_is_ncd1d2_no_weight_reduction_mean_ii": 361, "test_nllloss_ncd1d2_no_weight_reduction_mean_ii": 361, "_input_shape_is_ncd1": 361, "test_nllloss_ncd1": 361, "_input_shape_is_ncd1_weight": 361, "test_nllloss_ncd1_weight": 361, "_input_shape_is_ncd1_ii": 361, "test_nllloss_ncd1_ii": 361, "_input_shape_is_ncd1_weight_ii": 361, "test_nllloss_ncd1_weight_ii": 361, "_input_shape_is_ncd1d2d3d4d5_mean_weight": 361, "dim3": 361, "dim4": 361, "dim5": 361, "test_nllloss_ncd1d2d3d4d5_mean_weight": 361, "_input_shape_is_ncd1d2d3d4d5_none_no_weight": 361, "test_nllloss_ncd1d2d3d4d5_none_no_weight": 361, "_input_shape_is_ncd1_mean_weight_negative_ii": 361, "test_nllloss_ncd1_mean_weight_negative_ii": 361, "_input_shape_is_ncd1d2d3_none_no_weight_negative_ii": 361, "test_nllloss_ncd1d2d3_none_no_weight_negative_ii": 361, "_input_shape_is_ncd1d2d3_sum_weight_high_ii": 361, "test_nllloss_ncd1d2d3_sum_weight_high_ii": 361, "box": 362, "intersect": 362, "iou": 362, "overlap": [362, 479], "previous": [362, 464], "score": [362, 421, 453, 457, 458, 460, 461], "score_threshold": 362, "center_point_box": 362, "algorithm": [362, 463, 464, 465, 466, 471], "system": [362, 395, 397], "invari": 362, "orthogon": 362, "thu": [362, 403, 412], "selected_indic": 362, "collect": [362, 434, 450, 453], "ly": 362, "mostli": 362, "tf": [362, 395, 434], "x_center": 362, "y_center": 362, "num_batch": 362, "spatial_dimens": 362, "num_class": 362, "max_output_boxes_per_class": 362, "iou_threshold": 362, "decid": [362, 429], "too": [362, 463, 466], "much": 362, "num_selected_indic": 362, "batch_index": 362, "class_index": 362, "box_index": 362, "_nonmaxsuppression_suppress_by_i": 362, "test_nonmaxsuppression_suppress_by_i": 362, "_nonmaxsuppression_suppress_by_iou_and_scor": 362, "test_nonmaxsuppression_suppress_by_iou_and_scor": 362, "_nonmaxsuppression_flipped_coordin": 362, "test_nonmaxsuppression_flipped_coordin": 362, "_nonmaxsuppression_limit_output_s": 362, "test_nonmaxsuppression_limit_output_s": 362, "_nonmaxsuppression_single_box": 362, "test_nonmaxsuppression_single_box": 362, "_nonmaxsuppression_identical_box": 362, "test_nonmaxsuppression_identical_box": 362, "_nonmaxsuppression_center_point_box_format": 362, "test_nonmaxsuppression_center_point_box_format": 362, "_nonmaxsuppression_two_class": 362, "test_nonmaxsuppression_two_class": 362, "_nonmaxsuppression_two_batch": 362, "test_nonmaxsuppression_two_batch": 362, "test_nonzero_exampl": 363, "negat": 364, "logical_not": 364, "test_not_2d": 364, "test_not_3d": 364, "test_not_4d": 364, "on_valu": 365, "off_valu": 365, "innermost": 365, "_without_axi": 365, "one_hot": 365, "test_onehot_without_axi": 365, "_with_axi": 365, "axisvalu": 365, "test_onehot_with_axi": 365, "_with_negative_indic": 365, "test_onehot_negative_indic": 365, "_with_negative_axi": 365, "test_onehot_with_negative_axi": 365, "certain": 366, "_get_element_tensor": 367, "tensor_type_proto": [367, 368], "elem_typ": [367, 368, 471], "optional_type_proto": [367, 368], "optional_input": [367, 368], "optional_get_element_reference_implement": 367, "test_optional_get_element_optional_tensor": 367, "test_optional_get_element_tensor": 367, "_get_element_sequ": 367, "seq_type_proto": 367, "test_optional_get_element_optional_sequ": 367, "test_optional_get_element_sequ": 367, "optional_has_element_reference_implement": 368, "test_nam": [368, 394, 409], "test_optional_has_element_": 368, "tensor_input": 368, "_empti": 368, "input_name_opt": 368, "empty_no_input_nam": 368, "empty_no_input": 368, "test_name_surfix": 368, "input_nam": [368, 479], "_optional_input": 368, "_tensor_input": 368, "logical_or": 369, "test_or2d": 369, "test_or3d": 369, "test_or4d": 369, "_or_broadcast": 369, "test_or_bcast3v1d": 369, "test_or_bcast3v2d": 369, "test_or_bcast4v2d": 369, "test_or_bcast4v3d": 369, "test_or_bcast4v4d": 369, "slope": 370, "test_prelu_exampl": 370, "_prelu_broadcast": 370, "test_prelu_broadcast": 370, "sharedacross": 370, "mirror": [371, 463], "num_ax": 371, "chosen": [371, 458], "input_rank": 371, "_constant_pad": 371, "pad_impl": 371, "test_constant_pad": 371, "_reflection_and_edge_pad": 371, "test_": 371, "_pad": 371, "_constant_pad_ax": 371, "test_constant_pad_ax": 371, "test_pow_exampl": 372, "test_pow": 372, "_pow_broadcast": 372, "test_pow_bcast_scalar": 372, "216": [372, 373], "test_pow_bcast_arrai": 372, "_type": 372, "test_pow_types_float32_int64": 372, "test_pow_types_int64_float32": 372, "test_pow_types_float32_int32": 372, "test_pow_types_int32_float32": 372, "test_pow_types_float32_uint64": 372, "test_pow_types_float32_uint32": 372, "test_pow_types_int64_int64": 372, "test_pow_types_int32_int32": 372, "compon": [372, 399], "relat": 373, "w_scale": 373, "t4": [373, 400], "zero_point": 373, "203": 373, "237": 373, "242": 373, "221": 373, "166": 373, "232": [373, 375], "178": 373, "188": 373, "230": 373, "154": 373, "148": 373, "247": [373, 374], "00369204697": 373, "132": 373, "00172794575": 373, "00162681262": 373, "197": 373, "160": 373, "191": 373, "199": 373, "243": 373, "131": 373, "175": 373, "214": [373, 374], "215": 373, "163": 373, "test_qlinearconv": 373, "v_1": 374, "v_2": 374, "v_m": 374, "v_k": 374, "a_scal": 374, "b_scale": 374, "236": 374, "238": 374, "0066": 374, "152": 374, "244": [374, 392], "00705": 374, "0107": 374, "151": 374, "test_qlinearmatmul_2d": 374, "test_qlinearmatmul_3d": 374, "low": [375, 379, 380, 436], "get": [375, 395, 472], "test_quantizelinear": 375, "485": 375, "960": 375, "375": [375, 395], "470": 375, "test_quantizelinear_axi": 375, "wbbi": 376, "rbbi": 376, "rnn_helper": 376, "test_simple_rnn_default": 376, "test_simple_rnn_with_initial_bia": 376, "test_rnn_seq_length": 376, "test_simple_rnn_batchwis": 376, "drawn": [377, 378, 379, 380], "boundari": [379, 380, 434], "increment": [381, 461], "delta": 381, "number_of_el": 381, "pseudocod": 381, "shown": [381, 465], "test_reciprocal_exampl": 382, "test_reciproc": 382, "l1": [383, 455], "_do_not_keepdim": [383, 384, 386, 387, 388, 389, 390, 391, 392], "test_reduce_l1_do_not_keepdims_exampl": 383, "test_reduce_l1_do_not_keepdims_random": 383, "test_reduce_l1_keep_dims_exampl": 383, "test_reduce_l1_keep_dims_random": 383, "test_reduce_l1_default_axes_keepdims_exampl": 383, "test_reduce_l1_default_axes_keepdims_random": 383, "_negative_axes_keepdim": [383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "test_reduce_l1_negative_axes_keep_dims_exampl": 383, "test_reduce_l1_negative_axes_keep_dims_random": 383, "l2": [384, 455, 463, 464, 466], "23606798": 384, "81024968": 384, "63014581": 384, "45362405": 384, "2788206": 384, "test_reduce_l2_do_not_keepdims_exampl": 384, "test_reduce_l2_do_not_keepdims_random": 384, "test_reduce_l2_keep_dims_exampl": 384, "test_reduce_l2_keep_dims_random": 384, "49509757": 384, "test_reduce_l2_default_axes_keepdims_exampl": 384, "test_reduce_l2_default_axes_keepdims_random": 384, "test_reduce_l2_negative_axes_keep_dims_exampl": 384, "test_reduce_l2_negative_axes_keep_dims_random": 384, "_nokeepdim": 385, "test_reduce_log_sum_desc_ax": 385, "test_reduce_log_sum_asc_ax": 385, "test_reduce_log_sum_default": 385, "test_reduce_log_sum_negative_ax": 385, "31326175": 386, "00004578": 386, "00671387": 386, "test_reduce_log_sum_exp_do_not_keepdims_exampl": 386, "test_reduce_log_sum_exp_do_not_keepdims_random": 386, "test_reduce_log_sum_exp_keepdims_exampl": 386, "test_reduce_log_sum_exp_keepdims_random": 386, "test_reduce_log_sum_exp_default_axes_keepdims_exampl": 386, "test_reduce_log_sum_exp_default_axes_keepdims_random": 386, "test_reduce_log_sum_exp_negative_axes_keepdims_exampl": 386, "test_reduce_log_sum_exp_negative_axes_keepdims_random": 386, "test_reduce_max_do_not_keepdims_exampl": 387, "test_reduce_max_do_not_keepdims_random": 387, "test_reduce_max_keepdims_exampl": 387, "test_reduce_max_keepdims_random": 387, "test_reduce_max_default_axes_keepdim_exampl": 387, "test_reduce_max_default_axes_keepdims_random": 387, "test_reduce_max_negative_axes_keepdims_exampl": 387, "test_reduce_max_negative_axes_keepdims_random": 387, "test_reduce_mean_do_not_keepdims_exampl": 388, "test_reduce_mean_do_not_keepdims_random": 388, "test_reduce_mean_keepdims_exampl": 388, "test_reduce_mean_keepdims_random": 388, "test_reduce_mean_default_axes_keepdims_exampl": 388, "test_reduce_mean_default_axes_keepdims_random": 388, "test_reduce_mean_negative_axes_keepdims_exampl": 388, "test_reduce_mean_negative_axes_keepdims_random": 388, "test_reduce_min_do_not_keepdims_exampl": 389, "test_reduce_min_do_not_keepdims_random": 389, "test_reduce_min_keepdims_exampl": 389, "test_reduce_min_keepdims_random": 389, "test_reduce_min_default_axes_keepdims_exampl": 389, "test_reduce_min_default_axes_keepdims_random": 389, "test_reduce_min_negative_axes_keepdims_exampl": 389, "test_reduce_min_negative_axes_keepdims_random": 389, "test_reduce_prod_do_not_keepdims_exampl": 390, "test_reduce_prod_do_not_keepdims_random": 390, "test_reduce_prod_keepdims_exampl": 390, "test_reduce_prod_keepdims_random": 390, "790016e": 390, "test_reduce_prod_default_axes_keepdims_exampl": 390, "test_reduce_prod_default_axes_keepdims_random": 390, "test_reduce_prod_negative_axes_keepdims_exampl": 390, "test_reduce_prod_negative_axes_keepdims_random": 390, "noop_with_empty_ax": 391, "behaviour": 391, "act": 391, "tolist": 391, "test_reduce_sum_do_not_keepdims_exampl": 391, "test_reduce_sum_do_not_keepdims_random": 391, "test_reduce_sum_keepdims_exampl": 391, "test_reduce_sum_keepdims_random": 391, "test_reduce_sum_default_axes_keepdims_exampl": 391, "test_reduce_sum_default_axes_keepdims_random": 391, "test_reduce_sum_negative_axes_keepdims_exampl": 391, "test_reduce_sum_negative_axes_keepdims_random": 391, "_empty_axes_input_noop": 391, "test_reduce_sum_empty_axes_input_noop_exampl": 391, "202": 392, "test_reduce_sum_square_do_not_keepdims_exampl": 392, "test_reduce_sum_square_do_not_keepdims_random": 392, "test_reduce_sum_square_keepdims_exampl": 392, "test_reduce_sum_square_keepdims_random": 392, "650": 392, "test_reduce_sum_square_default_axes_keepdims_exampl": 392, "test_reduce_sum_square_default_axes_keepdims_random": 392, "test_reduce_sum_square_negative_axes_keepdims_exampl": 392, "test_reduce_sum_square_negative_axes_keepdims_random": 392, "rectifi": [393, 435], "test_relu": 393, "At": [394, 463, 464], "unchang": [394, 429], "allowzero": 394, "dynam": 394, "_reshap": 394, "original_shap": 394, "reordered_all_dim": 394, "reordered_last_dim": 394, "reduced_dim": 394, "extended_dim": 394, "one_dim": 394, "negative_dim": 394, "negative_extended_dim": 394, "zero_dim": 394, "zero_and_negative_dim": 394, "reshape_reference_implement": 394, "test_reshape_": 394, "_allowzero": 394, "allowzero_reord": 394, "neighborhood": 395, "output_dimens": [395, 442], "input_dimens": [395, 442], "roi_end": 395, "roi_start": 395, "antialia": 395, "cubic": 395, "antialias": 395, "downscal": 395, "achiev": 395, "stretch": 395, "resampl": 395, "interpret": 395, "coordinate_transformation_mod": [395, 397], "individu": 395, "x_resiz": 395, "x_origin": 395, "length_origin": 395, "length_res": 395, "roi_x": 395, "start_x": 395, "end_x": 395, "half_pixel": [395, 397], "pytorch_half_pixel": 395, "asymmetr": 395, "tf_crop_and_res": 395, "cubic_coeff_a": 395, "choic": 395, "tensorflow": 395, "1163711": 395, "exclude_outsid": 395, "renorm": 395, "extrapolation_valu": 395, "0f": [395, 397], "keep_aspect_ratio_polici": 395, "regard": 395, "aspect": 395, "applic": [395, 466], "disregard": 395, "out_siz": 395, "not_larg": 395, "extent": [395, 479], "larger": [395, 419, 434], "in_siz": 395, "round_int": 395, "not_smal": 395, "halfwai": 395, "nearest_mod": 395, "four": 395, "round_prefer_floor": 395, "half": [395, 398], "down": 395, "round_prefer_ceil": 395, "start1": 395, "startn": 395, "end1": 395, "endn": 395, "_resize_upsample_scales_nearest": 395, "interpolate_nd": 395, "lambda": 395, "nearest_coeff": 395, "scale_factor": 395, "test_resize_upsample_scales_nearest": 395, "_resize_downsample_scales_nearest": 395, "test_resize_downsample_scales_nearest": 395, "_resize_upsample_sizes_nearest": 395, "test_resize_upsample_sizes_nearest": 395, "_resize_downsample_sizes_nearest": 395, "test_resize_downsample_sizes_nearest": 395, "_resize_upsample_scales_linear": 395, "linear_coeff": 395, "test_resize_upsample_scales_linear": 395, "_resize_upsample_scales_linear_align_corn": 395, "33333333": 395, "66666667": 395, "test_resize_upsample_scales_linear_align_corn": 395, "_resize_downsample_scales_linear": 395, "6666665": 395, "3333331": 395, "test_resize_downsample_scales_linear": 395, "_resize_downsample_scales_linear_align_corn": 395, "142857": 395, "test_resize_downsample_scales_linear_align_corn": 395, "_resize_upsample_scales_cub": 395, "47265625": 395, "76953125": 395, "24609375": 395, "875": 395, "28125": 395, "91015625": 395, "38671875": 395, "68359375": 395, "66015625": 395, "95703125": 395, "43359375": 395, "0625": 395, "46875": 395, "09765625": 395, "57421875": 395, "87109375": 395, "56640625": 395, "86328125": 395, "33984375": 395, "96875": 395, "00390625": 395, "48046875": 395, "77734375": 395, "08203125": 395, "37890625": 395, "85546875": 395, "484375": 395, "890625": 395, "51953125": 395, "99609375": 395, "29296875": 395, "70703125": 395, "109375": 395, "515625": 395, "14453125": 395, "62109375": 395, "91796875": 395, "22265625": 395, "625": 395, "03125": 395, "13671875": 395, "12890625": 395, "42578125": 395, "90234375": 395, "53125": 395, "9375": 395, "04296875": 395, "31640625": 395, "61328125": 395, "08984375": 395, "71875": 395, "125": 395, "75390625": 395, "23046875": 395, "52734375": 395, "cubic_coeff": 395, "test_resize_upsample_scales_cub": 395, "_resize_upsample_scales_cubic_align_corn": 395, "34110787": 395, "80029155": 395, "32944606": 395, "67055394": 395, "19970845": 395, "65889213": 395, "36443149": 395, "70553936": 395, "16472303": 395, "69387755": 395, "03498542": 395, "56413994": 395, "02332362": 395, "20116618": 395, "54227405": 395, "00145773": 395, "53061224": 395, "87172012": 395, "40087464": 395, "86005831": 395, "31778426": 395, "1180758": 395, "64723032": 395, "98833819": 395, "51749271": 395, "97667638": 395, "68221574": 395, "48250729": 395, "01166181": 395, "35276968": 395, "8819242": 395, "79883382": 395, "13994169": 395, "59912536": 395, "12827988": 395, "46938776": 395, "99854227": 395, "45772595": 395, "63556851": 395, "43586006": 395, "96501458": 395, "30612245": 395, "83527697": 395, "29446064": 395, "test_resize_upsample_scales_cubic_align_corn": 395, "_resize_downsample_scales_cub": 395, "47119141": 395, "78125": 395, "08251953": 395, "71142578": 395, "02148438": 395, "32275391": 395, "91650391": 395, "2265625": 395, "52783203": 395, "test_resize_downsample_scales_cub": 395, "_resize_downsample_scales_cubic_align_corn": 395, "39519159": 395, "79038317": 395, "58076634": 395, "97595793": 395, "37114951": 395, "16153268": 395, "55672427": 395, "95191585": 395, "test_resize_downsample_scales_cubic_align_corn": 395, "_resize_upsample_sizes_cub": 395, "45507922": 395, "64057922": 395, "97157922": 395, "42257922": 395, "90732922": 395, "22332922": 395, "70807922": 395, "15907922": 395, "49007922": 395, "67557922": 395, "39437963": 395, "57987963": 395, "91087963": 395, "36187963": 395, "84662963": 395, "16262963": 395, "64737963": 395, "09837963": 395, "42937963": 395, "61487963": 395, "95130693": 395, "13680693": 395, "46780693": 395, "91880693": 395, "40355693": 395, "71955693": 395, "20430693": 395, "65530693": 395, "98630693": 395, "17180693": 395, "20525069": 395, "39075069": 395, "72175069": 395, "17275069": 395, "65750069": 395, "97350069": 395, "45825069": 395, "90925069": 395, "24025069": 395, "42575069": 395, "88975": 395, "07525": 395, "40625": 395, "85725": 395, "658": 395, "14275": 395, "59375": 395, "92475": 395, "11025": 395, "57424931": 395, "75974931": 395, "09074931": 395, "54174931": 395, "02649931": 395, "34249931": 395, "82724931": 395, "27824931": 395, "60924931": 395, "79474931": 395, "82819307": 395, "01369307": 395, "34469307": 395, "79569307": 395, "28044307": 395, "59644307": 395, "08119307": 395, "53219307": 395, "86319307": 395, "04869307": 395, "38512037": 395, "57062037": 395, "90162037": 395, "35262037": 395, "83737037": 395, "15337037": 395, "63812037": 395, "08912037": 395, "42012037": 395, "60562037": 395, "32442078": 395, "50992078": 395, "84092078": 395, "29192078": 395, "77667078": 395, "09267078": 395, "57742078": 395, "02842078": 395, "35942078": 395, "54492078": 395, "test_resize_upsample_sizes_cub": 395, "_resize_downsample_sizes_cub": 395, "63078704": 395, "00462963": 395, "37847222": 395, "12615741": 395, "87384259": 395, "62152778": 395, "99537037": 395, "36921296": 395, "test_resize_downsample_sizes_cub": 395, "v1": [395, 464, 466], "half_pixel_cent": 395, "_resize_upsample_scales_cubic_a_n0p5_exclude_outsid": 395, "55882353": 395, "81494204": 395, "35698249": 395, "89705882": 395, "39705882": 395, "93713516": 395, "47917561": 395, "73529412": 395, "58329755": 395, "83941606": 395, "38145651": 395, "92153285": 395, "42153285": 395, "96160918": 395, "50364964": 395, "75976814": 395, "75145936": 395, "00757787": 395, "54961832": 395, "08969466": 395, "58969466": 395, "12977099": 395, "67181144": 395, "92792995": 395, "91176471": 395, "16788321": 395, "70992366": 395, "29007634": 395, "83211679": 395, "08823529": 395, "07207005": 395, "32818856": 395, "87022901": 395, "41030534": 395, "91030534": 395, "45038168": 395, "99242213": 395, "24854064": 395, "24023186": 395, "49635036": 395, "03839082": 395, "57846715": 395, "07846715": 395, "61854349": 395, "16058394": 395, "41670245": 395, "26470588": 395, "52082439": 395, "06286484": 395, "60294118": 395, "10294118": 395, "64301751": 395, "18505796": 395, "44117647": 395, "test_resize_upsample_scales_cubic_a_n0p5_exclude_outsid": 395, "_resize_downsample_scales_cubic_a_n0p5_exclude_outsid": 395, "36812675": 395, "6695014": 395, "0133367": 395, "57362535": 395, "2188353": 395, "94896657": 395, "25034122": 395, "59417652": 395, "test_resize_downsample_scales_cubic_a_n0p5_exclude_outsid": 395, "_resize_upsample_scales_cubic_asymmetr": 395, "09375": 395, "21875": 395, "test_resize_upsample_scales_cubic_asymmetr": 395, "_resize_tf_crop_and_res": 395, "inaccur": 395, "6000004": 395, "400001": 395, "test_resize_tf_crop_and_res": 395, "_resize_tf_crop_and_resize_extrapolation_valu": 395, "_resize_downsample_sizes_linear_pytorch_half_pixel": 395, "6666666": 395, "333333": 395, "test_resize_downsample_sizes_linear_pytorch_half_pixel": 395, "_resize_upsample_sizes_nearest_floor_align_corn": 395, "test_resize_upsample_sizes_nearest_floor_align_corn": 395, "_resize_upsample_sizes_nearest_round_prefer_ceil_asymmetr": 395, "test_resize_upsample_sizes_nearest_round_prefer_ceil_asymmetr": 395, "_resize_upsample_sizes_nearest_ceil_half_pixel": 395, "test_resize_upsample_sizes_nearest_ceil_half_pixel": 395, "_resize_downsample_scales_linear_antialia": 395, "linear_coeffs_antialia": 395, "test_resize_downsample_scales_linear_antialia": 395, "_resize_downsample_sizes_linear_antialia": 395, "3636363": 395, "590909": 395, "818182": 395, "2727275": 395, "727273": 395, "181818": 395, "409091": 395, "636364": 395, "test_resize_downsample_sizes_linear_antialia": 395, "_resize_downsample_scales_cubic_antialia": 395, "5180721": 395, "2858863": 395, "589329": 395, "357142": 395, "cubic_coeffs_antialia": 395, "test_resize_downsample_scales_cubic_antialia": 395, "_resize_downsample_sizes_cubic_antialia": 395, "7750092": 395, "1200073": 395, "4650054": 395, "1550016": 395, "844998": 395, "534994": 395, "8799925": 395, "224991": 395, "test_resize_downsample_sizes_cubic_antialia": 395, "_resize_upsample_scales_nearest_axes_2_3": 395, "test_resize_upsample_scales_nearest_axes_2_3": 395, "_resize_upsample_scales_nearest_axes_3_2": 395, "test_resize_upsample_scales_nearest_axes_3_2": 395, "_resize_upsample_sizes_nearest_axes_2_3": 395, "test_resize_upsample_sizes_nearest_axes_2_3": 395, "_resize_upsample_sizes_nearest_axes_3_2": 395, "test_resize_upsample_sizes_nearest_axes_3_2": 395, "_resize_tf_crop_and_resize_axes_2_3": 395, "test_resize_tf_crop_and_resize_axes_2_3": 395, "_resize_tf_crop_and_resize_axes_3_2": 395, "test_resize_tf_crop_and_resize_axes_3_2": 395, "_resize_upsample_sizes_nearest_not_larg": 395, "7x7": 395, "test_resize_upsample_sizes_nearest_not_larg": 395, "_resize_upsample_sizes_nearest_not_smal": 395, "8x8": 395, "_resize_downsample_sizes_nearest_not_larg": 395, "1x2": 395, "test_resize_downsample_sizes_nearest_not_larg": 395, "_resize_downsample_sizes_nearest_not_smal": 395, "2x3": 395, "test_resize_downsample_sizes_nearest_not_smal": 395, "tf_half_pixel_for_nn": 395, "trilinear": [395, 442], "etc": [395, 442, 472], "beyond": 396, "time_axi": 396, "batch_axi": 396, "_reversesequence_tim": 396, "test_reversesequence_tim": 396, "_reversesequence_batch": 396, "test_reversesequence_batch": 396, "cnn": 397, "1703": 397, "06870": 397, "output_height": [397, 442], "output_width": [397, 442], "misalign": 397, "output_half_pixel": 397, "recommend": [397, 419], "method": [397, 466, 476], "sampling_ratio": 397, "adapt": [397, 463, 479], "roi_width": 397, "likewis": 397, "rel": [397, 472], "batch_indic": 397, "_roialign_aligned_fals": 397, "get_roi_align_input_valu": 397, "4664": 397, "4466": 397, "3405": 397, "5688": 397, "6068": 397, "3714": 397, "4296": 397, "3835": 397, "5562": 397, "3510": 397, "2768": 397, "4883": 397, "5222": 397, "5528": 397, "4171": 397, "4713": 397, "4844": 397, "6904": 397, "4920": 397, "8774": 397, "6239": 397, "7125": 397, "6289": 397, "3355": 397, "3495": 397, "3022": 397, "4305": 397, "4696": 397, "3978": 397, "5423": 397, "3656": 397, "7050": 397, "5165": 397, "3172": 397, "7015": 397, "2912": 397, "5059": 397, "6476": 397, "6235": 397, "8299": 397, "5916": 397, "7389": 397, "7048": 397, "8372": 397, "8893": 397, "6227": 397, "6153": 397, "7097": 397, "6154": 397, "4585": 397, "2384": 397, "3379": 397, "3717": 397, "6100": 397, "7601": 397, "3767": 397, "3785": 397, "7147": 397, "9243": 397, "9727": 397, "5749": 397, "5826": 397, "5709": 397, "7619": 397, "8770": 397, "5355": 397, "2566": 397, "2141": 397, "2796": 397, "3600": 397, "4365": 397, "3504": 397, "2887": 397, "3661": 397, "2349": 397, "test_roialign_aligned_fals": 397, "_roialign_aligned_tru": 397, "5178": 397, "3434": 397, "3229": 397, "4474": 397, "6344": 397, "4031": 397, "5366": 397, "4428": 397, "4861": 397, "4023": 397, "2512": 397, "4002": 397, "5155": 397, "6954": 397, "3465": 397, "3350": 397, "4601": 397, "5881": 397, "3439": 397, "6849": 397, "4932": 397, "7141": 397, "8217": 397, "4719": 397, "4039": 397, "3070": 397, "2187": 397, "3337": 397, "4880": 397, "4870": 397, "1871": 397, "4914": 397, "5561": 397, "4192": 397, "3686": 397, "1433": 397, "4608": 397, "5971": 397, "5310": 397, "4982": 397, "2788": 397, "4386": 397, "6022": 397, "7524": 397, "5774": 397, "7024": 397, "7251": 397, "7338": 397, "8163": 397, "2393": 397, "4075": 397, "2525": 397, "4743": 397, "3671": 397, "2702": 397, "4105": 397, "6419": 397, "8308": 397, "5556": 397, "4543": 397, "5564": 397, "7502": 397, "9300": 397, "6626": 397, "5617": 397, "4813": 397, "4954": 397, "6663": 397, "6636": 397, "3721": 397, "2056": 397, "1928": 397, "2478": 397, "test_roialign_aligned_tru": 397, "find": [398, 440, 474], "test_round": 398, "short": 399, "signal_length": 399, "frame_step": 399, "slid": 399, "window_shap": 399, "frame_length": 399, "dft_unique_bin": 399, "onesided_length": 399, "no_window": 399, "nstft": 399, "stop": [399, 429, 477], "complex_out": 399, "test_stft": 399, "test_stft_with_window": 399, "scan_input": 400, "combin": [400, 401, 402, 434, 479], "idea": 400, "program": 400, "state_vari": 400, "context": 400, "scan_output_el": 400, "restrict": 400, "impos": 400, "effici": 400, "memori": [400, 476], "alloc": 400, "scan_input_direct": 400, "twice": 400, "scan_output_direct": 400, "prepend": 400, "scan_input_ax": 400, "scan_output_ax": 400, "togeth": 400, "num_scan_input": 400, "axis_1": 400, "axis_m": 400, "init_1": 400, "init_n": 400, "scan_1": 400, "scan_m": 400, "pseudo": [400, 463, 464, 466], "scan_i": 400, "axis_i": 400, "scan_j": 400, "axis_j": 400, "sequence_length": 400, "st_1": 400, "st_n": 400, "scan_out_1": 400, "scan_out_k": 400, "si_1": 400, "si_m": 400, "so_1": 400, "so_k": 400, "show": 400, "h_0": 400, "scanloop": 400, "nest": 400, "h_tminus1": 400, "x_t": 400, "t5": 400, "scan_input_elt": 400, "scan_output_elt": 400, "initial_state_and_scan_input": 400, "final_state_and_scan_output": 400, "_scan_8": 400, "sum_in": 400, "next": 400, "sum_out": 400, "id_nod": 400, "scan_bodi": 400, "no_sequence_len": 400, "test_scan_sum": 400, "_scan_9": 400, "test_scan9_sum": 400, "max_sequence_length": 400, "bst_1": 400, "bst_n": 400, "meaning": 400, "b_scan_out_1": 400, "b_scan_out_k": 400, "itself": [401, 402], "_scatter_without_axi": 401, "test_scatter_without_axi": 401, "_scatter_with_axi": 401, "test_scatter_with_axi": 401, "sourc": [401, 471, 472, 473, 474, 476, 477, 478, 479], "counter": 401, "duplic": [402, 403, 441], "idx1": [402, 403], "idx2": [402, 403], "_scatter_elements_without_axi": 402, "scatter_el": 402, "test_scatter_elements_without_axi": 402, "_scatter_elements_with_axi": 402, "test_scatter_elements_with_axi": 402, "_scatter_elements_with_negative_indic": 402, "test_scatter_elements_with_negative_indic": 402, "_scatter_elements_with_duplicate_indic": 402, "test_scatter_elements_with_duplicate_indic": 402, "_scatter_elements_with_reduction_max": 402, "test_scatter_elements_with_reduction_max": 402, "_scatter_elements_with_reduction_min": 402, "test_scatter_elements_with_reduction_min": 402, "That": [403, 437, 463, 464, 466], "update_indic": 403, "idx": 403, "particular": 403, "ensur": 403, "_scatternd": 403, "scatter_nd_impl": 403, "test_scatternd": 403, "_scatternd_add": 403, "test_scatternd_add": 403, "_scatternd_multipli": 403, "test_scatternd_multipli": 403, "_scatternd_max": 403, "test_scatternd_max": 403, "_scatternd_min": 403, "test_scatternd_min": 403, "gamma": [404, 457, 458], "67326319217681884765625": 404, "approxim": 404, "6732632423543772848170429916717": 404, "05070102214813232421875": 404, "0507009873554804934193349852946": 404, "79272318": 404, "test_selu_exampl": 404, "test_selu": 404, "_selu_default": 404, "default_gamma": 404, "test_selu_default": 404, "6732": 404, "0507": 404, "eras": 408, "at_back": 409, "at_front": 409, "test_input": 409, "sequence_insert_reference_implement": 409, "test_sequence_insert_": 409, "independ": [411, 455, 464, 465], "parallel": [411, 434, 452], "additional_input": 411, "out_sequ": 411, "_sequence_map_identity_1_sequ": 411, "in0": [411, 479], "out0": [411, 479], "seq_map_bodi": 411, "test_sequence_map_identity_1_sequ": 411, "_sequence_map_identity_2_sequ": 411, "in1": [411, 479], "out1": [411, 479], "y0": 411, "test_sequence_map_identity_2_sequ": 411, "_sequence_map_identity_1_sequence_1_tensor": 411, "test_sequence_map_identity_1_sequence_1_tensor": 411, "_sequence_map_add_2_sequ": 411, "test_sequence_map_add_2_sequ": 411, "_sequence_map_add_1_sequence_1_tensor": 411, "test_sequence_map_add_1_sequence_1_tensor": 411, "_sequence_map_extract_shap": 411, "in_seq": 411, "test_sequence_map_extract_shap": 411, "upto": 412, "clamp": [412, 419], "test_shap": 412, "_exampl": [412, 424], "preserv": 412, "_start_1": 412, "_end_1": 412, "_start_negative_1": 412, "_end_negative_1": 412, "_start_1_end_negative_1": 412, "_start_1_end_2": 412, "_clip_start": 412, "_clip_end": 412, "lambd": 413, "formul": 413, "_hard_shrink": 413, "test_shrink_hard": 413, "_soft_shrink": 413, "test_shrink_soft": 413, "26894143": 414, "7310586": 414, "test_sigmoid_exampl": 414, "test_sigmoid": 414, "test_sign": 415, "test_sin_exampl": 416, "test_sin": 416, "17520118": 417, "test_sinh_exampl": 417, "test_sinh": 417, "total": [418, 447, 454, 456, 461], "though": 418, "test_size_exampl": 418, "test_siz": 418, "basic": [419, 429], "highlight": 419, "made": 419, "negatv": 419, "accommod": 419, "unknown": 419, "int_max": 419, "int_min": 419, "_slice": 419, "test_slic": 419, "_slice_neg": 419, "test_slice_neg": 419, "_slice_start_out_of_bound": 419, "test_slice_start_out_of_bound": 419, "_slice_end_out_of_bound": 419, "test_slice_end_out_of_bound": 419, "_slice_default_ax": 419, "test_slice_default_ax": 419, "_slice_default_step": 419, "test_slice_default_step": 419, "_slice_neg_step": 419, "test_slice_neg_step": 419, "_slice_negative_ax": 419, "test_slice_negative_ax": 419, "09003058": 420, "24472848": 420, "66524094": 420, "test_softmax_exampl": 420, "_softmax_axi": 420, "032058604": 420, "08714432": 420, "23688284": 420, "6439143": 420, "test_softmax_large_numb": 420, "test_softmax_axis_0": 420, "test_softmax_axis_1": 420, "test_softmax_axis_2": 420, "test_softmax_negative_axi": 420, "test_softmax_default_axi": 420, "measur": 421, "cross": 421, "entropi": 421, "l_1": 421, "l_2": 421, "l_n": 421, "j_1": 421, "j_2": 421, "j_k": 421, "l_i": 421, "ground": 421, "truth": 421, "manual": 421, "assign": [421, 463, 465, 466], "log_prob": 421, "prob": 421, "31326166": 422, "69314718": 422, "31326163": 422, "test_softplus_exampl": 422, "test_softplu": 422, "test_softsign_exampl": 423, "test_softsign": 423, "test_spacetodepth": 424, "test_spacetodepth_exampl": 424, "_1d": 425, "output_1": 425, "output_2": 425, "output_3": 425, "test_split_equal_parts_1d": 425, "test_split_variable_parts_1d": 425, "test_split_equal_parts_2d": 425, "test_split_variable_parts_2d": 425, "_default_valu": 425, "test_split_equal_parts_default_axi": 425, "test_split_variable_parts_default_axi": 425, "_zero_size_split": 425, "emtpi": 425, "test_split_zero_size_split": 425, "chunk": 426, "root": [427, 463, 464, 472], "test_sqrt_exampl": 427, "test_sqrt": 427, "rais": [428, 479], "_squeez": 428, "test_squeez": 428, "_squeeze_negative_ax": 428, "test_squeeze_negative_ax": 428, "clean": 429, "examin": 429, "stopword": 429, "lowercas": 429, "uppercas": 429, "just": [429, 463, 471], "case_change_act": 429, "is_case_sensit": 429, "identif": 429, "sensit": [429, 472], "environ": 429, "en_u": 429, "_nostopwords_nochangecas": 429, "mondai": 429, "tuesdai": 429, "noop": 429, "test_strnormalizer_nostopwords_nochangecas": 429, "_monday_casesensintive_nochangecas": 429, "wednesdai": 429, "thursdai": 429, "test_strnormalizer_export_monday_casesensintive_nochangecas": 429, "_monday_casesensintive_low": 429, "test_strnormalizer_export_monday_casesensintive_low": 429, "_monday_casesensintive_upp": 429, "test_strnormalizer_export_monday_casesensintive_upp": 429, "_monday_empty_output": 429, "test_strnormalizer_export_monday_empty_output": 429, "_monday_insensintive_upper_twodim": 429, "cecedil": 429, "accent": 429, "german": 429, "umlaut": 429, "fail": [429, 456, 479], "eszett": 429, "test_strnormalizer_export_monday_insensintive_upper_twodim": 429, "subtract": 430, "test_sub_exampl": 430, "test_sub": 430, "test_sub_uint8": 430, "_sub_broadcast": 430, "test_sub_bcast": 430, "test_sum_exampl": 431, "test_sum_one_input": 431, "test_sum_two_input": 431, "test_tan_exampl": 432, "test_tan": 432, "76159418": 433, "test_tanh_exampl": 433, "test_tanh": 433, "gram": 434, "ngram_index": 434, "consecut": 434, "discontinu": 434, "token": 434, "pool_int64": 434, "ngram_count": 434, "pool_str": 434, "idf": 434, "tfidf": 434, "max_gram_length": 434, "max_skip_count": 434, "min_gram_length": 434, "skip_count": 434, "criteria": [434, 471], "csr": 434, "csc": 434, "choos": [434, 466, 471, 472], "due": 434, "popular": [434, 460, 461], "attributeproto": [434, 471], "pool_": 434, "learn": [434, 463, 464, 466, 473], "ngram": 434, "ether": 434, "_tf_only_bigrams_skip0": 434, "unigram": 434, "bigram": 434, "tfidfvectorizerhelp": 434, "make_node_noweight": 434, "test_tfidfvectorizer_tf_only_bigrams_skip0": 434, "_tf_batch_onlybigrams_skip0": 434, "test_tfidfvectorizer_tf_batch_onlybigrams_skip0": 434, "_tf_onlybigrams_levelempti": 434, "test_tfidfvectorizer_tf_onlybigrams_levelempti": 434, "_tf_onlybigrams_skip5": 434, "test_tfidfvectorizer_tf_onlybigrams_skip5": 434, "_tf_batch_onlybigrams_skip5": 434, "test_tfidfvectorizer_tf_batch_onlybigrams_skip5": 434, "_tf_uniandbigrams_skip5": 434, "test_tfidfvectorizer_tf_uniandbigrams_skip5": 434, "_tf_batch_uniandbigrams_skip5": 434, "test_tfidfvectorizer_tf_batch_uniandbigrams_skip5": 434, "test_thresholdedrelu_exampl": 435, "test_thresholdedrelu": 435, "test_thresholdedrelu_default": 435, "output_dim": 436, "input_dim": 436, "_tile": 436, "test_til": 436, "_tile_precomput": 436, "test_tile_precomput": 436, "retriev": 437, "largest": [437, 472], "smallest": 437, "a_2": 437, "a_n": 437, "tiebreak": 437, "_top_k": 437, "values_ref": 437, "indices_ref": 437, "topk_sorted_implement": 437, "test_top_k": 437, "_top_k_smallest": 437, "test_top_k_smallest": 437, "_top_k_negative_axi": 437, "test_top_k_negative_axi": 437, "perm": 438, "test_transpose_default": 438, "_all_permut": 438, "itertool": 438, "test_transpose_all_permutations_": 438, "retain": [439, 440], "_triu": 439, "triu_reference_implement": 439, "test_triu": 439, "_triu_neg": 439, "test_triu_neg": 439, "_triu_out_neg_out": 439, "test_triu_out_neg_out": 439, "_triu_po": 439, "test_triu_po": 439, "_triu_out_po": 439, "test_triu_out_po": 439, "_triu_squar": 439, "test_triu_squar": 439, "_triu_square_neg": 439, "test_triu_square_neg": 439, "_triu_one_row": 439, "test_triu_one_row": 439, "_triu_zero": 439, "test_triu_zero": 439, "_tril": 439, "tril_reference_implement": 439, "test_tril": 439, "_tril_neg": 439, "test_tril_neg": 439, "_tril_out_neg": 439, "test_tril_out_neg": 439, "_tril_po": 439, "test_tril_po": 439, "_tril_out_po": 439, "test_tril_out_po": 439, "_tril_squar": 439, "test_tril_squar": 439, "_tril_square_neg": 439, "test_tril_square_neg": 439, "_tril_one_row": 439, "test_tril_one_row_neg": 439, "_tril_zero": 439, "test_tril_zero": 439, "subtensor": 440, "inverse_indic": 440, "fourth": 440, "ascend": [440, 447], "attribute_sort": 440, "attribute_axi": 440, "output_i": 440, "output_indic": 440, "output_inverse_indic": 440, "output_count": 440, "better": [440, 464], "understand": 440, "maintain": [440, 442, 450], "_sorted_without_axi": 440, "node_sort": 440, "specify_int64": 440, "test_unique_sorted_without_axi": 440, "_not_sorted_without_axi": 440, "node_not_sort": 440, "issu": 440, "8621": 440, "recov": 440, "unsort": 440, "prepar": 440, "argsorted_indic": 440, "argsort": 440, "inverse_indices_map": 440, "si": 440, "test_unique_not_sorted_without_axi": 440, "_sorted_with_axi": 440, "test_unique_sorted_with_axi": 440, "_sorted_with_axis_3d": 440, "test_unique_sorted_with_axis_3d": 440, "_sorted_with_negative_axi": 440, "test_unique_sorted_with_negative_axi": 440, "output_rank": 441, "plu": 441, "matter": 441, "come": 441, "_unsqueeze_one_axi": 441, "expand_dim": 441, "test_unsqueeze_axis_": 441, "_unsqueeze_two_ax": 441, "test_unsqueeze_two_ax": 441, "_unsqueeze_three_ax": 441, "test_unsqueeze_three_ax": 441, "_unsqueeze_unsorted_ax": 441, "test_unsqueeze_unsorted_ax": 441, "_unsqueeze_negative_ax": 441, "test_unsqueeze_negative_ax": 441, "seen": 441, "_nearest": 442, "test_upsample_nearest": 442, "experiment": 442, "input_width": 442, "width_scal": 442, "input_height": 442, "height_scal": 442, "test_where_exampl": 443, "_long": 443, "test_where_long_exampl": 443, "logical_xor": 444, "test_xor2d": 444, "test_xor3d": 444, "test_xor4d": 444, "_xor_broadcast": 444, "test_xor_bcast3v1d": 444, "test_xor_bcast3v2d": 444, "test_xor_bcast4v2d": 444, "test_xor_bcast4v3d": 444, "test_xor_bcast4v4d": 444, "comparison": [446, 452, 460, 461], "against": [446, 465], "kei": [447, 449, 452, 462, 471], "dens": 447, "exce": 447, "max_map": 447, "cast_to": 447, "to_float": 447, "to_str": 447, "to_int64": 447, "map_form": 447, "vice": [448, 452], "versa": [448, 452], "cats_int64": [448, 456], "cats_str": [448, 456], "default_int64": [448, 452], "default_": [448, 452], "default_str": [448, 452], "dictionari": 449, "vocabulari": 449, "string_vocabulari": 449, "int64_vocabulari": 449, "hold": [449, 451], "inputdimens": 450, "leav": [451, 460, 461], "canon": 451, "extrem": 451, "imputed_value_float": 451, "imputed_value_int64": 451, "fit": 451, "replaced_value_float": 451, "replaced_value_int64": 451, "imputed_valu": 451, "keys_": 452, "impli": 452, "keys_str": 452, "ami": 452, "salli": 452, "values_int64": 452, "dori": 452, "default_float": 452, "keys_float": 452, "keys_int64": 452, "values_float": 452, "values_str": 452, "fetch": 452, "classes_str": 452, "classlabels_int": [453, 457], "classlabel": 453, "classlabels_str": [453, 457, 460, 462], "intercept": [453, 454], "multi_class": 453, "ovr": 453, "post_transform": [453, 454, 457, 458, 460, 461], "logist": [453, 454, 457, 458, 460, 461], "softmax_zero": [453, 454, 457, 458, 460, 461], "probit": [453, 454, 457, 458, 460, 461], "latter": 453, "regress": [454, 458, 461], "univari": 454, "infix": 455, "wide": [455, 465], "categori": 456, "lookup": 456, "cats_": 456, "machin": [457, 458, 473], "classlabels_": [457, 460, 462], "kernel_param": [457, 458], "coef0": [457, 458], "degre": [457, 458], "unus": [457, 458], "kernel_typ": [457, 458], "poli": [457, 458], "prob_a": 457, "prob_b": 457, "raw": [457, 471, 474], "rho": [457, 458], "support_vector": [457, 458], "vectors_per_class": 457, "bactch": 457, "svm": 458, "anomali": 458, "detect": 458, "n_support": 458, "one_class": 458, "regardless": 459, "tree": [460, 461], "ensembl": [460, 461], "nodes_x": 460, "prefix": [460, 461, 471], "class_": 460, "vote": [460, 461], "leaf": [460, 461], "class_weight": 460, "classlabels_int64": [460, 462], "class_id": 460, "_as_tensor": [460, 461], "base_valu": [460, 461], "unassign": [460, 461], "base_values_as_tensor": [460, 461], "class_nodeid": 460, "id": [460, 461, 471], "class_treeid": 460, "class_weights_as_tensor": 460, "nodes_falsenodeid": [460, 461], "child": [460, 461], "nodes_featureid": [460, 461], "nodes_hitr": [460, 461], "nodes_hitrates_as_tensor": [460, 461], "nodes_missing_value_tracks_tru": [460, 461], "what": [460, 461], "presenc": [460, 461], "defalt": [460, 461], "nodes_mod": [460, 461], "kind": [460, 461, 465], "branch_leq": [460, 461], "branch_lt": [460, 461], "branch_gt": [460, 461], "branch_eq": [460, 461], "branch_neq": [460, 461], "nodes_nodeid": [460, 461], "restart": [460, 461], "nodes_treeid": [460, 461], "nodes_truenodeid": [460, 461], "nodes_valu": [460, 461], "nodes_values_as_tensor": [460, 461], "regressor": 461, "nodes_": 461, "target_": 461, "target_weight": 461, "aggregate_funct": 461, "aggreg": 461, "n_target": 461, "sequenti": [461, 463, 466], "target_id": 461, "target_nodeid": 461, "target_treeid": 461, "target_weights_as_tensor": 461, "stochast": [463, 464, 466], "conduct": [463, 464, 466], "As": [463, 466], "rate": [463, 464, 466], "norm_coeffici": [463, 464, 466], "decai": [463, 466], "decay_factor": 463, "small": [463, 464], "x_new": [463, 464, 466], "h_new": [463, 464], "_2": [463, 464], "g_regular": [463, 464, 466], "h_adapt": 463, "x_1": [463, 464, 466], "x_2": [463, 464, 466], "jointli": [463, 466], "cours": [463, 466], "reus": [463, 465], "entir": 463, "jmlr": 463, "volume12": 463, "duchi11a": 463, "composit": 463, "descent": 463, "_adagrad": 463, "001": [463, 464, 466], "ai_onnx_preview_training_domain": [463, 464, 466], "apply_adagrad": 463, "test_adagrad": 463, "_adagrad_multipl": 463, "g1": [463, 464, 466, 479], "g2": [463, 464, 466, 479], "h1": [463, 464, 466], "h2": [463, 464, 466], "x1_new": [463, 464, 466], "x2_new": [463, 464, 466], "h1_new": [463, 464], "h2_new": [463, 464], "test_adagrad_multipl": 463, "histor": 464, "rest": 464, "moreov": 464, "v_new": [464, 466], "h_sqrt": 464, "r_adjust": 464, "post": 464, "x_final": 464, "norm_coefficient_post": 464, "999": 464, "aka": 464, "_adam": 464, "apply_adam": 464, "test_adam": 464, "_adam_multipl": 464, "v2": [464, 466], "v1_new": [464, 466], "v2_new": [464, 466], "test_adam_multipl": 464, "deriv": 465, "illustr": 465, "trainabl": 465, "sake": [465, 466], "simplic": [465, 466], "dy": 465, "dw": 465, "dz": 465, "1st": 465, "2nd": 465, "3rd": 465, "reason": 465, "concept": 465, "dh": 465, "2o": 465, "dx": 465, "h_1": 465, "z_1": 465, "y_1": 465, "minim": 465, "fed": 465, "symbol": 465, "substitut": 465, "sg": 466, "nesterov": 466, "beta_adjust": 466, "_momentum": 466, "apply_momentum": 466, "test_momentum": 466, "_nesterov_momentum": 466, "apply_nesterov": 466, "test_nesterov_momentum": 466, "_momentum_multipl": 466, "test_momentum_multipl": 466, "descriptor": 470, "googl": [470, 471], "_upb": 470, "_messag": 470, "protobuf": [470, 471, 476], "segment": 470, "find_min_ir_version_for": 471, "opsetidlist": 471, "operatorsetidproto": 471, "ir": [471, 479], "split_complex_to_pair": 471, "ca": 471, "make_attribut": 471, "doc_str": [471, 479], "make_empty_tensor_value_info": 471, "valueinfoproto": 471, "make_funct": 471, "fname": 471, "functionproto": 471, "value_info": [471, 477], "sparse_initi": 471, "sparsetensorproto": 471, "graphproto": [471, 479], "make_map": 471, "key_typ": 471, "sequenceproto": [471, 474], "mapproto": [471, 474], "make_model": 471, "modelproto": [471, 472, 475, 476, 477, 479], "make_opt": 471, "intern": 471, "enum_type_wrapp": 471, "enumtypewrapp": 471, "0x7fca6c5602e0": 471, "optionalproto": [471, 474], "inner_type_proto": 471, "typeproto": 471, "make_sequ": 471, "0x7fca80e707c0": 471, "make_sparse_tensor": 471, "make_sparse_tensor_type_proto": 471, "shape_denot": 471, "sparsetensor": 471, "make_sparse_tensor_value_info": 471, "raw_data": 471, "byte": [471, 476, 477, 479], "elem_shape_denot": 471, "make_training_info": 471, "algorithm_bind": 471, "initialization_bind": 471, "traininginfoproto": 471, "type_proto": 471, "get_attribute_valu": 471, "attr": 471, "printable_attribut": 471, "printable_dim": 471, "printable_graph": 471, "displai": 471, "printable_nod": 471, "printable_tensor_proto": 471, "printable_typ": 471, "printable_value_info": 471, "modelinfo": 472, "raw_model_info": 472, "properti": 472, "metadata": 472, "path": [472, 474, 477, 479], "sha": 472, "tag": 472, "model_path": [472, 477], "zoo": 472, "repo": 472, "io": [472, 476], "port": 472, "model_sha": 472, "sha256": 472, "digest": 472, "list_model": 472, "info": [472, 479], "search": 472, "get_model_info": 472, "manifest": 472, "load": 472, "force_reload": 472, "silent": 472, "download": 472, "automat": 472, "alreadi": [472, 477], "cach": 472, "suppress": 472, "warn": 472, "trust": 472, "documen": 473, "onnx_opset_vers": [473, 478], "__version__": 473, "dispatch": 473, "accress": 473, "shape_infer": 473, "hub": 473, "to_arrai": 474, "base_dir": 474, "extern": [474, 476], "exist": 474, "help": 474, "to_list": 474, "from_list": 474, "lst": 474, "to_dict": 474, "from_dict": 474, "to_opt": 474, "opt": 474, "from_opt": 474, "convert_endian": 474, "endia": 474, "combine_pairs_to_complex": 474, "fa": 474, "net_draw": 475, "getpydotgraph": 475, "getopnodeproduc": 475, "pydot_graph": 475, "model_onnx": 475, "rankdir": 475, "tp": 475, "node_produc": 475, "docstr": [475, 479], "write_dot": 475, "dot": 475, "load_external_data": 476, "directori": 476, "load_external_data_for_model": 476, "futur": 476, "onnx_model": 476, "open": 476, "signatur": 476, "load_model_from_str": 476, "load_tensor_from_str": 476, "epkg": 476, "restor": 476, "infer_shap": 477, "check_typ": 477, "strict_mod": 477, "data_prop": 477, "conflict": 477, "bug": 477, "unspecifi": 477, "stricter": 477, "propag": 477, "infer_shapes_path": 477, "output_path": [477, 479], "2gb": 477, "pprint": 478, "ml": 478, "preview": 478, "sparse_tensor_valu": 478, "sequence_valu": 478, "map_valu": 478, "optional_valu": 478, "float_data": 478, "int32_data": 478, "int64_data": 478, "string_data": 478, "double_data": 478, "uint64_data": 478, "get_all_schemas_with_histori": 478, "onnx_cpp2py_export": 478, "opschema": 478, "get_function_op": 478, "overload": 478, "max_inclusive_vers": 478, "schemaerror": 478, "get_all_schema": 478, "has_schema": 478, "schema_version_map": 478, "checker": 479, "full_check": 479, "version_convert": 479, "target_vers": 479, "runtimeerror": 479, "unsupport": 479, "util": 479, "input_path": 479, "output_nam": 479, "_boundari": 479, "model_": 479, "_cut": 479, "through_": 479, "_main": 479, "graph_": 479, "compos": 479, "io_map": 479, "prefix1": 479, "prefix2": 479, "undescor": 479, "delimit": 479, "m1": 479, "m2": 479, "producer_vers": 479, "model_vers": 479, "add_prefix_graph": 479, "rename_nod": 479, "rename_edg": 479, "rename_input": 479, "rename_output": 479, "rename_initi": 479, "rename_value_info": 479, "merg": 479, "mutat": 479, "add_prefix": 479, "rename_funct": 479, "_prefix": 479, "nane": 479, "expand_out_dim": 479, "dim_idx": 479, "expand_out_dim_graph": 479}, "objects": {"onnx": [[470, 0, 1, "", "AttributeProto"], [470, 0, 1, "", "FunctionProto"], [470, 0, 1, "", "GraphProto"], [470, 0, 1, "", "MapProto"], [476, 0, 1, "", "ModelProto"], [470, 0, 1, "", "NodeProto"], [470, 0, 1, "", "SequenceProto"], [470, 0, 1, "", "SparseTensorProto"], [476, 0, 1, "", "TensorProto"], [470, 0, 1, "", "TrainingInfoProto"], [470, 0, 1, "", "ValueInfoProto"], [3, 3, 0, "-", "checker"], [4, 3, 0, "-", "compose"], [5, 3, 0, "-", "external_data_helper"], [6, 3, 0, "-", "helper"], [7, 3, 0, "-", "hub"], [476, 4, 1, "", "load"], [476, 4, 1, "", "load_model_from_string"], [476, 4, 1, "", "load_tensor_from_string"], [8, 3, 0, "-", "numpy_helper"], [9, 3, 0, "-", "parser"], [10, 3, 0, "-", "utils"], [12, 3, 0, "-", "version_converter"]], "onnx.AttributeProto": [[470, 1, 1, "", "DESCRIPTOR"]], "onnx.FunctionProto": [[470, 1, 1, "", "DESCRIPTOR"]], "onnx.GraphProto": [[470, 1, 1, "", "DESCRIPTOR"]], "onnx.MapProto": [[470, 1, 1, "", "DESCRIPTOR"]], "onnx.ModelProto": [[470, 1, 1, "", "DESCRIPTOR"], [476, 2, 1, "", "SerializeToString"]], "onnx.NodeProto": [[470, 1, 1, "", "DESCRIPTOR"]], "onnx.SequenceProto": [[470, 1, 1, "", "DESCRIPTOR"]], "onnx.SparseTensorProto": [[470, 1, 1, "", "DESCRIPTOR"]], "onnx.TensorProto": [[470, 1, 1, "", "DESCRIPTOR"], [470, 0, 1, "", "Segment"], [476, 2, 1, "", "SerializeToString"]], "onnx.TensorProto.Segment": [[470, 1, 1, "", "DESCRIPTOR"]], "onnx.TrainingInfoProto": [[470, 1, 1, "", "DESCRIPTOR"]], "onnx.ValueInfoProto": [[470, 1, 1, "", "DESCRIPTOR"]], "onnx.checker": [[479, 4, 1, "", "check_model"]], "onnx.compose": [[479, 4, 1, "", "add_prefix"], [479, 4, 1, "", "add_prefix_graph"], [479, 4, 1, "", "expand_out_dim"], [479, 4, 1, "", "expand_out_dim_graph"], [479, 4, 1, "", "merge_graphs"], [479, 4, 1, "", "merge_models"]], "onnx.defs": [[478, 4, 1, "", "get_all_schemas_with_history"], [478, 4, 1, "", "get_function_ops"], [478, 4, 1, "", "get_schema"], [478, 4, 1, "", "onnx_opset_version"]], "onnx.helper": [[471, 4, 1, "", "find_min_ir_version_for"], [471, 4, 1, "", "get_attribute_value"], [471, 4, 1, "", "make_attribute"], [471, 4, 1, "", "make_empty_tensor_value_info"], [471, 4, 1, "", "make_function"], [471, 4, 1, "", "make_graph"], [471, 4, 1, "", "make_map"], [471, 4, 1, "", "make_model"], [471, 4, 1, "", "make_node"], [471, 4, 1, "", "make_operatorsetid"], [471, 4, 1, "", "make_opsetid"], [471, 4, 1, "", "make_optional"], [471, 4, 1, "", "make_optional_type_proto"], [471, 4, 1, "", "make_sequence"], [471, 4, 1, "", "make_sequence_type_proto"], [471, 4, 1, "", "make_sparse_tensor"], [471, 4, 1, "", "make_sparse_tensor_type_proto"], [471, 4, 1, "", "make_sparse_tensor_value_info"], [471, 4, 1, "", "make_tensor"], [471, 4, 1, "", "make_tensor_sequence_value_info"], [471, 4, 1, "id0", "make_tensor_type_proto"], [471, 4, 1, "", "make_tensor_value_info"], [471, 4, 1, "", "make_training_info"], [471, 4, 1, "", "make_value_info"], [471, 4, 1, "", "printable_attribute"], [471, 4, 1, "", "printable_dim"], [471, 4, 1, "", "printable_graph"], [471, 4, 1, "", "printable_node"], [471, 4, 1, "", "printable_tensor_proto"], [471, 4, 1, "", "printable_type"], [471, 4, 1, "", "printable_value_info"], [471, 4, 1, "", "split_complex_to_pairs"]], "onnx.hub": [[472, 0, 1, "", "ModelInfo"], [472, 4, 1, "", "get_model_info"], [472, 4, 1, "", "list_models"], [472, 4, 1, "", "load"]], "onnx.hub.ModelInfo": [[472, 1, 1, "", "metadata"], [472, 1, 1, "", "model"], [472, 1, 1, "", "model_path"], [472, 1, 1, "", "model_sha"], [472, 1, 1, "", "opset"], [472, 1, 1, "", "tags"]], "onnx.numpy_helper": [[474, 4, 1, "", "combine_pairs_to_complex"], [474, 4, 1, "", "convert_endian"], [474, 4, 1, "", "from_array"], [474, 4, 1, "", "from_dict"], [474, 4, 1, "", "from_list"], [474, 4, 1, "", "from_optional"], [474, 4, 1, "", "to_array"], [474, 4, 1, "", "to_dict"], [474, 4, 1, "", "to_list"], [474, 4, 1, "", "to_optional"]], "onnx.onnx_cpp2py_export": [[478, 3, 0, "-", "defs"]], "onnx.onnx_cpp2py_export.defs": [[478, 5, 1, "", "SchemaError"], [478, 4, 1, "", "get_all_schemas"], [478, 4, 1, "", "get_all_schemas_with_history"], [478, 4, 1, "", "get_schema"], [478, 4, 1, "", "has_schema"], [478, 4, 1, "", "schema_version_map"]], "onnx.shape_inference": [[477, 4, 1, "", "infer_shapes"], [477, 4, 1, "", "infer_shapes_path"]], "onnx.utils": [[479, 4, 1, "", "extract_model"]], "onnx.version": [[11, 6, 1, "", "version"]], "onnx.version_converter": [[479, 4, 1, "", "convert_version"]]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:module", "4": "py:function", "5": "py:exception", "6": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "module", "Python module"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"], "6": ["py", "data", "Python data"]}, "titleterms": {"function": [0, 471, 473, 478], "expect": 0, "onnx": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 263, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 474, 475, 477], "static": 1, "content": 1, "gener": 1, "submodul": 2, "summari": 2, "checker": 3, "compos": 4, "external_data_help": 5, "helper": [6, 471, 475], "hub": [7, 472], "numpy_help": [8, 474], "parser": 9, "util": 10, "version": [11, 478], "version_convert": 12, "ab": [13, 14, 264], "1": [13, 16, 19, 22, 25, 27, 30, 34, 37, 41, 45, 49, 51, 52, 55, 58, 63, 66, 68, 71, 75, 77, 79, 86, 88, 92, 94, 97, 99, 102, 105, 106, 108, 109, 111, 112, 115, 119, 120, 124, 125, 127, 131, 135, 139, 143, 148, 151, 159, 160, 166, 170, 173, 175, 178, 180, 182, 184, 187, 189, 192, 194, 196, 198, 200, 203, 219, 221, 222, 225, 228, 231, 232, 234, 236, 239, 241, 244, 247, 249, 252, 253, 254, 255, 257, 258, 262, 264, 267, 268, 269, 270, 275, 276, 280, 282, 285, 288, 290, 292, 294, 299, 302, 303, 306, 307, 309, 312, 313, 314, 315, 318, 319, 320, 321, 322, 327, 329, 330, 331, 332, 335, 336, 338, 339, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 355, 358, 360, 364, 369, 370, 371, 372, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 404, 412, 414, 418, 419, 420, 422, 423, 424, 425, 427, 428, 430, 431, 433, 436, 437, 438, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "v": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "6": [13, 14, 16, 17, 30, 31, 34, 35, 37, 38, 41, 42, 58, 59, 63, 64, 66, 71, 72, 77, 78, 88, 89, 97, 106, 112, 113, 120, 121, 135, 136, 139, 140, 143, 144, 148, 149, 151, 152, 160, 161, 175, 176, 200, 201, 219, 222, 223, 236, 237, 241, 242, 244, 245, 247, 248, 249, 250, 264, 267, 276, 280, 282, 285, 302, 303, 306, 309, 313, 318, 327, 332, 338, 341, 348, 352, 355, 358, 360, 370, 382, 393, 404, 414, 427, 430, 431, 433, 436], "13": [14, 15, 18, 21, 24, 36, 38, 40, 44, 48, 54, 56, 57, 60, 62, 67, 70, 72, 73, 74, 78, 82, 84, 85, 87, 96, 98, 100, 102, 103, 104, 107, 108, 117, 118, 121, 122, 123, 128, 134, 138, 141, 142, 146, 147, 150, 152, 153, 155, 164, 165, 168, 169, 172, 176, 177, 179, 181, 183, 186, 188, 191, 193, 195, 197, 199, 201, 202, 204, 206, 207, 212, 213, 215, 216, 220, 221, 223, 224, 225, 227, 229, 230, 232, 233, 237, 238, 240, 243, 246, 248, 250, 253, 256, 264, 267, 269, 270, 280, 282, 285, 288, 290, 299, 300, 302, 303, 307, 308, 309, 310, 312, 313, 315, 316, 317, 318, 322, 329, 330, 331, 334, 335, 339, 341, 342, 343, 346, 348, 352, 353, 355, 357, 358, 360, 361, 363, 371, 372, 375, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 402, 403, 412, 414, 415, 418, 419, 420, 421, 424, 425, 427, 428, 430, 431, 433, 436, 438, 441], "add": [15, 16, 17, 18, 267], "14": [15, 29, 33, 53, 57, 81, 100, 101, 110, 147, 174, 199, 202, 240, 267, 276, 297, 302, 314, 328, 330, 336, 358, 376, 393, 394, 430, 439], "7": [17, 18, 19, 27, 28, 31, 32, 59, 60, 64, 65, 68, 69, 80, 81, 89, 90, 94, 95, 109, 110, 115, 116, 149, 150, 159, 161, 162, 170, 171, 173, 174, 242, 243, 258, 259, 262, 265, 267, 268, 271, 273, 275, 276, 295, 302, 303, 307, 314, 318, 322, 336, 339, 358, 359, 369, 370, 372, 376, 416, 430, 432, 442, 444], "And": [19, 268], "argmax": [20, 21, 22, 269], "11": [20, 22, 23, 25, 26, 39, 42, 43, 44, 46, 47, 50, 51, 52, 53, 54, 55, 67, 69, 74, 76, 82, 83, 85, 86, 87, 91, 98, 99, 103, 105, 118, 119, 122, 124, 126, 129, 130, 133, 154, 156, 164, 167, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 205, 206, 209, 211, 212, 215, 218, 226, 227, 230, 231, 233, 235, 238, 239, 251, 256, 257, 269, 270, 275, 278, 285, 287, 288, 289, 290, 292, 294, 297, 299, 301, 304, 307, 312, 315, 316, 317, 318, 329, 331, 342, 343, 345, 349, 351, 362, 365, 371, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 398, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 419, 420, 425, 426, 428, 437, 440, 441], "12": [20, 21, 23, 24, 39, 40, 47, 48, 61, 62, 83, 84, 93, 114, 130, 134, 137, 142, 145, 153, 168, 171, 185, 186, 190, 191, 229, 269, 270, 283, 285, 290, 303, 305, 317, 323, 340, 348, 349, 355, 361, 372, 387, 389, 421], "argmin": [23, 24, 25, 270], "averagepool": [26, 27, 28, 275], "10": [26, 28, 56, 61, 65, 129, 132, 146, 154, 172, 205, 208, 226, 228, 251, 252, 260, 275, 293, 300, 303, 333, 347, 349, 357, 362, 373, 374, 375, 395, 396, 397, 419, 429, 435, 437, 442], "batchnorm": [29, 30, 31, 32, 33, 276], "15": [29, 157, 158, 169, 220, 276, 277, 281, 366, 367, 368, 372, 412], "9": [32, 33, 35, 36, 43, 49, 50, 70, 75, 76, 90, 91, 95, 96, 107, 116, 117, 127, 128, 133, 138, 155, 156, 162, 163, 210, 211, 218, 224, 259, 260, 261, 266, 272, 274, 276, 280, 287, 290, 291, 296, 308, 311, 312, 318, 322, 334, 339, 346, 351, 353, 363, 365, 370, 400, 401, 413, 415, 417, 434, 442, 443], "cast": [34, 35, 36, 280], "ceil": [37, 38, 282], "clip": [39, 40, 41, 42, 285], "compress": [43, 287], "concat": [44, 45, 46, 288], "4": [45, 46, 288], "constant": [47, 48, 49, 50, 290], "convtranspos": [51, 294], "conv": [52, 292], "cumsum": [53, 297], "depthtospac": [54, 55, 299], "dequantizelinear": [56, 300], "div": [57, 58, 59, 60, 302], "dropout": [61, 62, 63, 64, 65, 303], "elu": [66, 306], "equal": [67, 68, 69, 307], "erf": [70, 308], "exp": [71, 72, 309], "expand": [73, 310], "8": [73, 131, 132, 136, 137, 140, 141, 144, 145, 210, 245, 246, 310, 348, 349, 352, 355, 400, 431], "flatten": [74, 75, 76, 312], "floor": [77, 78, 313], "gru": [79, 80, 81, 314], "3": [79, 80, 254, 255, 314, 460, 461], "gatherel": [82, 316], "gathernd": [83, 84, 317], "gather": [85, 86, 315], "gemm": [87, 88, 89, 90, 91, 318], "globallppool": [92, 320], "2": [92, 111, 125, 126, 166, 167, 234, 235, 320, 345, 371, 425, 452], "greaterorequ": [93, 323], "16": [93, 101, 104, 113, 114, 123, 163, 208, 209, 213, 214, 216, 217, 261, 323, 324, 330, 331, 338, 340, 343, 370, 397, 400, 402, 403, 443], "greater": [94, 95, 96, 322], "hardsigmoid": [97, 327], "hardmax": [98, 99, 329], "ident": [100, 101, 102, 330], "If": [103, 104, 105, 331], "instancenorm": [106, 332], "isnan": [107, 334], "lrn": [108, 335], "lstm": [109, 110, 336], "labelencod": [111, 452], "leakyrelu": [112, 113, 338], "lessorequ": [114, 340], "less": [115, 116, 117, 339], "logsoftmax": [118, 119, 342], "log": [120, 121, 341], "loop": [122, 123, 124, 343], "lppool": [125, 126, 345], "matmul": [127, 128, 346], "maxpool": [129, 130, 131, 132, 349], "maxunpool": [133, 351], "max": [134, 135, 136, 137, 348], "meanvariancenorm": [138, 353], "mean": [139, 140, 141, 352], "min": [142, 143, 144, 145, 355], "mod": [146, 357], "mul": [147, 148, 149, 150, 358], "neg": [151, 152, 360], "negativeloglikelihoodloss": [153, 361], "nonmaxsuppress": [154, 362], "nonzero": [155, 363], "onehot": [156, 365], "optionalgetel": [157, 367], "18": [157, 158, 165, 207, 214, 217, 284, 286, 356, 367, 368, 371, 395, 402, 403], "optionalhasel": [158, 368], "Or": [159, 369], "prelu": [160, 161, 162, 163, 370], "pad": [164, 165, 166, 167, 371], "pow": [168, 169, 170, 171, 372], "quantizelinear": [172, 375], "rnn": [173, 174, 376], "reciproc": [175, 176, 382], "reducel1": [177, 178, 383], "reducel2": [179, 180, 384], "reducelogsumexp": [181, 182, 386], "reducelogsum": [183, 184, 385], "reducemax": [185, 186, 187, 387], "reducemean": [188, 189, 388], "reducemin": [190, 191, 192, 389], "reduceprod": [193, 194, 390], "reducesumsquar": [195, 196, 392], "reducesum": [197, 198, 391], "relu": [199, 200, 201, 393], "reshap": [202, 203, 204, 394], "5": [203, 204, 394], "resiz": [205, 206, 207, 395], "roialign": [208, 397], "scan": [209, 210, 211, 400], "scatterel": [212, 213, 214, 402], "scatternd": [215, 216, 217, 403], "scatter": [218, 401], "selu": [219, 404], "shape": [220, 221, 412], "sigmoid": [222, 223, 414], "sign": [224, 415], "size": [225, 418], "slice": [226, 227, 228, 419], "softmaxcrossentropyloss": [229, 421], "softmax": [230, 231, 420], "spacetodepth": [232, 424], "split": [233, 234, 235, 425], "sqrt": [236, 237, 427], "squeez": [238, 239, 428], "sub": [240, 241, 242, 243, 430], "sum": [244, 245, 246, 431], "tanh": [247, 248, 433], "tile": [249, 250, 436], "topk": [251, 252, 437], "transpos": [253, 438], "treeensembleclassifi": [254, 460], "treeensembleregressor": [255, 461], "unsqueez": [256, 257, 441], "upsampl": [258, 259, 260, 442], "where": [261, 443], "xor": [262, 444], "oper": [263, 467, 468, 469, 478], "main": [263, 469], "ai": [263, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "ml": [263, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 467], "preview": [263, 463, 464, 465, 466, 468], "train": [263, 463, 464, 465, 466, 468], "tabl": [263, 467, 468, 469], "aco": 265, "acosh": 266, "asin": 271, "asinh": 272, "atan": 273, "atanh": 274, "bernoulli": 277, "bitshift": 278, "blackmanwindow": 279, "17": [279, 298, 325, 326, 337, 354, 399, 411], "castlik": 281, "celu": 283, "centercroppad": 284, "col2im": 286, "concatfromsequ": 289, "constantofshap": 291, "convinteg": 293, "co": 295, "cosh": 296, "dft": 298, "det": 301, "dynamicquantizelinear": 304, "einsum": 305, "eyelik": 311, "globalaveragepool": 319, "globalmaxpool": 321, "gridsampl": 324, "hammingwindow": 325, "hannwindow": 326, "hardswish": 328, "isinf": 333, "layernorm": 337, "lpnormal": 344, "matmulinteg": 347, "maxroipool": 350, "melweightmatrix": 354, "mish": 356, "multinomi": 359, "Not": 364, "option": [366, 474], "qlinearconv": 373, "qlinearmatmul": 374, "randomnorm": 377, "randomnormallik": 378, "randomuniform": 379, "randomuniformlik": 380, "rang": 381, "reversesequ": 396, "round": 398, "stft": 399, "sequenceat": 405, "sequenceconstruct": 406, "sequenceempti": 407, "sequenceeras": 408, "sequenceinsert": 409, "sequencelength": 410, "sequencemap": 411, "shrink": 413, "sin": 416, "sinh": 417, "softplu": 422, "softsign": 423, "splittosequ": 426, "stringnorm": 429, "tan": 432, "tfidfvector": 434, "thresholdedrelu": 435, "trilu": 439, "uniqu": 440, "arrayfeatureextractor": 445, "binar": 446, "castmap": 447, "categorymapp": 448, "dictvector": 449, "featurevector": 450, "imput": 451, "linearclassifi": 453, "linearregressor": 454, "normal": 455, "onehotencod": 456, "svmclassifi": 457, "svmregressor": 458, "scaler": 459, "zipmap": 462, "adagrad": 463, "adam": 464, "gradient": 465, "momentum": 466, "domain": [467, 468, 469], "class": 470, "attributeproto": 470, "functionproto": 470, "graphproto": 470, "mapproto": 470, "modelproto": 470, "nodeproto": 470, "sequenceproto": 470, "sparsetensorproto": 470, "tensorproto": 470, "traininginfoproto": 470, "valueinfoproto": 470, "tool": [471, 474, 479], "make": 471, "getter": 471, "print": 471, "arrai": 474, "sequenc": 474, "dictionari": 474, "graph": 475, "serial": 476, "load": 476, "model": 476, "save": 476, "data": 476, "perform": 476, "shape_infer": 477, "specif": 478, "type": 478, "map": 478, "np_type_to_tensor_typ": 478, "op_set_id_version_map": 478, "optional_element_type_to_field": 478, "storage_element_type_to_field": 478, "storage_tensor_type_to_field": 478, "tensor_type_to_np_typ": 478, "tensor_type_to_storage_tensor_typ": 478, "opset": 478, "schema": 478, "intern": 478, "modul": 478, "check_model": 479, "convert_vers": 479, "extract_model": 479, "merge_graph": 479, "merge_model": 479, "prefix": 479, "dimens": 479}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 56}})