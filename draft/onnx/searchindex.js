Search.setIndex({"docnames": ["expect_onnxruntime", "index", "onnx_doc_folder/index", "onnx_doc_folder/onnx__Abs", "onnx_doc_folder/onnx__Acos", "onnx_doc_folder/onnx__Acosh", "onnx_doc_folder/onnx__Add", "onnx_doc_folder/onnx__And", "onnx_doc_folder/onnx__ArgMax", "onnx_doc_folder/onnx__ArgMin", "onnx_doc_folder/onnx__Asin", "onnx_doc_folder/onnx__Asinh", "onnx_doc_folder/onnx__Atan", "onnx_doc_folder/onnx__Atanh", "onnx_doc_folder/onnx__AttributeHasValue", "onnx_doc_folder/onnx__AveragePool", "onnx_doc_folder/onnx__BatchNormalization", "onnx_doc_folder/onnx__Bernoulli", "onnx_doc_folder/onnx__BitShift", "onnx_doc_folder/onnx__BlackmanWindow", "onnx_doc_folder/onnx__Cast", "onnx_doc_folder/onnx__CastLike", "onnx_doc_folder/onnx__Ceil", "onnx_doc_folder/onnx__Celu", "onnx_doc_folder/onnx__CenterCropPad", "onnx_doc_folder/onnx__Clip", "onnx_doc_folder/onnx__Col2Im", "onnx_doc_folder/onnx__Compress", "onnx_doc_folder/onnx__Concat", "onnx_doc_folder/onnx__ConcatFromSequence", "onnx_doc_folder/onnx__Constant", "onnx_doc_folder/onnx__ConstantOfShape", "onnx_doc_folder/onnx__Conv", "onnx_doc_folder/onnx__ConvInteger", "onnx_doc_folder/onnx__ConvTranspose", "onnx_doc_folder/onnx__Cos", "onnx_doc_folder/onnx__Cosh", "onnx_doc_folder/onnx__CumSum", "onnx_doc_folder/onnx__DFT", "onnx_doc_folder/onnx__DepthToSpace", "onnx_doc_folder/onnx__DequantizeLinear", "onnx_doc_folder/onnx__Det", "onnx_doc_folder/onnx__Div", "onnx_doc_folder/onnx__Dropout", "onnx_doc_folder/onnx__DynamicQuantizeLinear", "onnx_doc_folder/onnx__Einsum", "onnx_doc_folder/onnx__Elu", "onnx_doc_folder/onnx__Equal", "onnx_doc_folder/onnx__Erf", "onnx_doc_folder/onnx__Exp", "onnx_doc_folder/onnx__Expand", "onnx_doc_folder/onnx__EyeLike", "onnx_doc_folder/onnx__Flatten", "onnx_doc_folder/onnx__Floor", "onnx_doc_folder/onnx__GRU", "onnx_doc_folder/onnx__Gather", "onnx_doc_folder/onnx__GatherElements", "onnx_doc_folder/onnx__GatherND", "onnx_doc_folder/onnx__Gemm", "onnx_doc_folder/onnx__GlobalAveragePool", "onnx_doc_folder/onnx__GlobalLpPool", "onnx_doc_folder/onnx__GlobalMaxPool", "onnx_doc_folder/onnx__Greater", "onnx_doc_folder/onnx__GreaterOrEqual", "onnx_doc_folder/onnx__GridSample", "onnx_doc_folder/onnx__HammingWindow", "onnx_doc_folder/onnx__HannWindow", "onnx_doc_folder/onnx__HardSigmoid", "onnx_doc_folder/onnx__HardSwish", "onnx_doc_folder/onnx__Hardmax", "onnx_doc_folder/onnx__Identity", "onnx_doc_folder/onnx__If", "onnx_doc_folder/onnx__InstanceNormalization", "onnx_doc_folder/onnx__IsInf", "onnx_doc_folder/onnx__IsNaN", "onnx_doc_folder/onnx__LRN", "onnx_doc_folder/onnx__LSTM", "onnx_doc_folder/onnx__LayerNormalization", "onnx_doc_folder/onnx__LeakyRelu", "onnx_doc_folder/onnx__Less", "onnx_doc_folder/onnx__LessOrEqual", "onnx_doc_folder/onnx__Log", "onnx_doc_folder/onnx__LogSoftmax", "onnx_doc_folder/onnx__Loop", "onnx_doc_folder/onnx__LpNormalization", "onnx_doc_folder/onnx__LpPool", "onnx_doc_folder/onnx__MatMul", "onnx_doc_folder/onnx__MatMulInteger", "onnx_doc_folder/onnx__Max", "onnx_doc_folder/onnx__MaxPool", "onnx_doc_folder/onnx__MaxRoiPool", "onnx_doc_folder/onnx__MaxUnpool", "onnx_doc_folder/onnx__Mean", "onnx_doc_folder/onnx__MeanVarianceNormalization", "onnx_doc_folder/onnx__MelWeightMatrix", "onnx_doc_folder/onnx__Min", "onnx_doc_folder/onnx__Mish", "onnx_doc_folder/onnx__Mod", "onnx_doc_folder/onnx__Mul", "onnx_doc_folder/onnx__Multinomial", "onnx_doc_folder/onnx__Neg", "onnx_doc_folder/onnx__NegativeLogLikelihoodLoss", "onnx_doc_folder/onnx__NonMaxSuppression", "onnx_doc_folder/onnx__NonZero", "onnx_doc_folder/onnx__Not", "onnx_doc_folder/onnx__OneHot", "onnx_doc_folder/onnx__Optional", "onnx_doc_folder/onnx__OptionalGetElement", "onnx_doc_folder/onnx__OptionalHasElement", "onnx_doc_folder/onnx__Or", "onnx_doc_folder/onnx__PRelu", "onnx_doc_folder/onnx__Pad", "onnx_doc_folder/onnx__Pow", "onnx_doc_folder/onnx__QLinearConv", "onnx_doc_folder/onnx__QLinearMatMul", "onnx_doc_folder/onnx__QuantizeLinear", "onnx_doc_folder/onnx__RNN", "onnx_doc_folder/onnx__RandomNormal", "onnx_doc_folder/onnx__RandomNormalLike", "onnx_doc_folder/onnx__RandomUniform", "onnx_doc_folder/onnx__RandomUniformLike", "onnx_doc_folder/onnx__Range", "onnx_doc_folder/onnx__Reciprocal", "onnx_doc_folder/onnx__ReduceL1", "onnx_doc_folder/onnx__ReduceL2", "onnx_doc_folder/onnx__ReduceLogSum", "onnx_doc_folder/onnx__ReduceLogSumExp", "onnx_doc_folder/onnx__ReduceMax", "onnx_doc_folder/onnx__ReduceMean", "onnx_doc_folder/onnx__ReduceMin", "onnx_doc_folder/onnx__ReduceProd", "onnx_doc_folder/onnx__ReduceSum", "onnx_doc_folder/onnx__ReduceSumSquare", "onnx_doc_folder/onnx__Relu", "onnx_doc_folder/onnx__Reshape", "onnx_doc_folder/onnx__Resize", "onnx_doc_folder/onnx__ReverseSequence", "onnx_doc_folder/onnx__RoiAlign", "onnx_doc_folder/onnx__Round", "onnx_doc_folder/onnx__STFT", "onnx_doc_folder/onnx__Scan", "onnx_doc_folder/onnx__Scatter", "onnx_doc_folder/onnx__ScatterElements", "onnx_doc_folder/onnx__ScatterND", "onnx_doc_folder/onnx__Selu", "onnx_doc_folder/onnx__SequenceAt", "onnx_doc_folder/onnx__SequenceConstruct", "onnx_doc_folder/onnx__SequenceEmpty", "onnx_doc_folder/onnx__SequenceErase", "onnx_doc_folder/onnx__SequenceInsert", "onnx_doc_folder/onnx__SequenceLength", "onnx_doc_folder/onnx__SequenceMap", "onnx_doc_folder/onnx__Shape", "onnx_doc_folder/onnx__Shrink", "onnx_doc_folder/onnx__Sigmoid", "onnx_doc_folder/onnx__Sign", "onnx_doc_folder/onnx__Sin", "onnx_doc_folder/onnx__Sinh", "onnx_doc_folder/onnx__Size", "onnx_doc_folder/onnx__Slice", "onnx_doc_folder/onnx__Softmax", "onnx_doc_folder/onnx__SoftmaxCrossEntropyLoss", "onnx_doc_folder/onnx__Softplus", "onnx_doc_folder/onnx__Softsign", "onnx_doc_folder/onnx__SpaceToDepth", "onnx_doc_folder/onnx__Split", "onnx_doc_folder/onnx__SplitToSequence", "onnx_doc_folder/onnx__Sqrt", "onnx_doc_folder/onnx__Squeeze", "onnx_doc_folder/onnx__StringNormalizer", "onnx_doc_folder/onnx__Sub", "onnx_doc_folder/onnx__Sum", "onnx_doc_folder/onnx__Tan", "onnx_doc_folder/onnx__Tanh", "onnx_doc_folder/onnx__TfIdfVectorizer", "onnx_doc_folder/onnx__ThresholdedRelu", "onnx_doc_folder/onnx__Tile", "onnx_doc_folder/onnx__TopK", "onnx_doc_folder/onnx__Transpose", "onnx_doc_folder/onnx__Trilu", "onnx_doc_folder/onnx__Unique", "onnx_doc_folder/onnx__Unsqueeze", "onnx_doc_folder/onnx__Upsample", "onnx_doc_folder/onnx__Where", "onnx_doc_folder/onnx__Xor", "onnx_doc_folder/onnx_aionnxml_ArrayFeatureExtractor", "onnx_doc_folder/onnx_aionnxml_Binarizer", "onnx_doc_folder/onnx_aionnxml_CastMap", "onnx_doc_folder/onnx_aionnxml_CategoryMapper", "onnx_doc_folder/onnx_aionnxml_DictVectorizer", "onnx_doc_folder/onnx_aionnxml_FeatureVectorizer", "onnx_doc_folder/onnx_aionnxml_Imputer", "onnx_doc_folder/onnx_aionnxml_LabelEncoder", "onnx_doc_folder/onnx_aionnxml_LinearClassifier", "onnx_doc_folder/onnx_aionnxml_LinearRegressor", "onnx_doc_folder/onnx_aionnxml_Normalizer", "onnx_doc_folder/onnx_aionnxml_OneHotEncoder", "onnx_doc_folder/onnx_aionnxml_SVMClassifier", "onnx_doc_folder/onnx_aionnxml_SVMRegressor", "onnx_doc_folder/onnx_aionnxml_Scaler", "onnx_doc_folder/onnx_aionnxml_TreeEnsembleClassifier", "onnx_doc_folder/onnx_aionnxml_TreeEnsembleRegressor", "onnx_doc_folder/onnx_aionnxml_ZipMap", "onnx_doc_folder/onnx_aionnxpreviewtraining_Adagrad", "onnx_doc_folder/onnx_aionnxpreviewtraining_Adam", "onnx_doc_folder/onnx_aionnxpreviewtraining_Gradient", "onnx_doc_folder/onnx_aionnxpreviewtraining_Momentum", "onnx_doc_folder/text_diff_Abs_1_13", "onnx_doc_folder/text_diff_Abs_1_6", "onnx_doc_folder/text_diff_Abs_6_13", "onnx_doc_folder/text_diff_Add_13_14", "onnx_doc_folder/text_diff_Add_1_13", "onnx_doc_folder/text_diff_Add_1_14", "onnx_doc_folder/text_diff_Add_1_6", "onnx_doc_folder/text_diff_Add_1_7", "onnx_doc_folder/text_diff_Add_6_13", "onnx_doc_folder/text_diff_Add_6_14", "onnx_doc_folder/text_diff_Add_6_7", "onnx_doc_folder/text_diff_Add_7_13", "onnx_doc_folder/text_diff_Add_7_14", "onnx_doc_folder/text_diff_And_1_7", "onnx_doc_folder/text_diff_ArgMax_11_12", "onnx_doc_folder/text_diff_ArgMax_11_13", "onnx_doc_folder/text_diff_ArgMax_12_13", "onnx_doc_folder/text_diff_ArgMax_1_11", "onnx_doc_folder/text_diff_ArgMax_1_12", "onnx_doc_folder/text_diff_ArgMax_1_13", "onnx_doc_folder/text_diff_ArgMin_11_12", "onnx_doc_folder/text_diff_ArgMin_11_13", "onnx_doc_folder/text_diff_ArgMin_12_13", "onnx_doc_folder/text_diff_ArgMin_1_11", "onnx_doc_folder/text_diff_ArgMin_1_12", "onnx_doc_folder/text_diff_ArgMin_1_13", "onnx_doc_folder/text_diff_AveragePool_10_11", "onnx_doc_folder/text_diff_AveragePool_1_10", "onnx_doc_folder/text_diff_AveragePool_1_11", "onnx_doc_folder/text_diff_AveragePool_1_7", "onnx_doc_folder/text_diff_AveragePool_7_10", "onnx_doc_folder/text_diff_AveragePool_7_11", "onnx_doc_folder/text_diff_BatchNormalization_14_15", "onnx_doc_folder/text_diff_BatchNormalization_1_14", "onnx_doc_folder/text_diff_BatchNormalization_1_15", "onnx_doc_folder/text_diff_BatchNormalization_1_6", "onnx_doc_folder/text_diff_BatchNormalization_1_7", "onnx_doc_folder/text_diff_BatchNormalization_1_9", "onnx_doc_folder/text_diff_BatchNormalization_6_14", "onnx_doc_folder/text_diff_BatchNormalization_6_15", "onnx_doc_folder/text_diff_BatchNormalization_6_7", "onnx_doc_folder/text_diff_BatchNormalization_6_9", "onnx_doc_folder/text_diff_BatchNormalization_7_14", "onnx_doc_folder/text_diff_BatchNormalization_7_15", "onnx_doc_folder/text_diff_BatchNormalization_7_9", "onnx_doc_folder/text_diff_BatchNormalization_9_14", "onnx_doc_folder/text_diff_BatchNormalization_9_15", "onnx_doc_folder/text_diff_Cast_1_13", "onnx_doc_folder/text_diff_Cast_1_6", "onnx_doc_folder/text_diff_Cast_1_9", "onnx_doc_folder/text_diff_Cast_6_13", "onnx_doc_folder/text_diff_Cast_6_9", "onnx_doc_folder/text_diff_Cast_9_13", "onnx_doc_folder/text_diff_Ceil_1_13", "onnx_doc_folder/text_diff_Ceil_1_6", "onnx_doc_folder/text_diff_Ceil_6_13", "onnx_doc_folder/text_diff_Clip_11_12", "onnx_doc_folder/text_diff_Clip_11_13", "onnx_doc_folder/text_diff_Clip_12_13", "onnx_doc_folder/text_diff_Clip_1_11", "onnx_doc_folder/text_diff_Clip_1_12", "onnx_doc_folder/text_diff_Clip_1_13", "onnx_doc_folder/text_diff_Clip_1_6", "onnx_doc_folder/text_diff_Clip_6_11", "onnx_doc_folder/text_diff_Clip_6_12", "onnx_doc_folder/text_diff_Clip_6_13", "onnx_doc_folder/text_diff_Compress_9_11", "onnx_doc_folder/text_diff_Concat_11_13", "onnx_doc_folder/text_diff_Concat_1_11", "onnx_doc_folder/text_diff_Concat_1_13", "onnx_doc_folder/text_diff_Concat_1_4", "onnx_doc_folder/text_diff_Concat_4_11", "onnx_doc_folder/text_diff_Concat_4_13", "onnx_doc_folder/text_diff_Constant_11_12", "onnx_doc_folder/text_diff_Constant_11_13", "onnx_doc_folder/text_diff_Constant_12_13", "onnx_doc_folder/text_diff_Constant_1_11", "onnx_doc_folder/text_diff_Constant_1_12", "onnx_doc_folder/text_diff_Constant_1_13", "onnx_doc_folder/text_diff_Constant_1_9", "onnx_doc_folder/text_diff_Constant_9_11", "onnx_doc_folder/text_diff_Constant_9_12", "onnx_doc_folder/text_diff_Constant_9_13", "onnx_doc_folder/text_diff_ConvTranspose_1_11", "onnx_doc_folder/text_diff_Conv_1_11", "onnx_doc_folder/text_diff_CumSum_11_14", "onnx_doc_folder/text_diff_DepthToSpace_11_13", "onnx_doc_folder/text_diff_DepthToSpace_1_11", "onnx_doc_folder/text_diff_DepthToSpace_1_13", "onnx_doc_folder/text_diff_DequantizeLinear_10_13", "onnx_doc_folder/text_diff_Div_13_14", "onnx_doc_folder/text_diff_Div_1_13", "onnx_doc_folder/text_diff_Div_1_14", "onnx_doc_folder/text_diff_Div_1_6", "onnx_doc_folder/text_diff_Div_1_7", "onnx_doc_folder/text_diff_Div_6_13", "onnx_doc_folder/text_diff_Div_6_14", "onnx_doc_folder/text_diff_Div_6_7", "onnx_doc_folder/text_diff_Div_7_13", "onnx_doc_folder/text_diff_Div_7_14", "onnx_doc_folder/text_diff_Dropout_10_12", "onnx_doc_folder/text_diff_Dropout_10_13", "onnx_doc_folder/text_diff_Dropout_12_13", "onnx_doc_folder/text_diff_Dropout_1_10", "onnx_doc_folder/text_diff_Dropout_1_12", "onnx_doc_folder/text_diff_Dropout_1_13", "onnx_doc_folder/text_diff_Dropout_1_6", "onnx_doc_folder/text_diff_Dropout_1_7", "onnx_doc_folder/text_diff_Dropout_6_10", "onnx_doc_folder/text_diff_Dropout_6_12", "onnx_doc_folder/text_diff_Dropout_6_13", "onnx_doc_folder/text_diff_Dropout_6_7", "onnx_doc_folder/text_diff_Dropout_7_10", "onnx_doc_folder/text_diff_Dropout_7_12", "onnx_doc_folder/text_diff_Dropout_7_13", "onnx_doc_folder/text_diff_Elu_1_6", "onnx_doc_folder/text_diff_Equal_11_13", "onnx_doc_folder/text_diff_Equal_1_11", "onnx_doc_folder/text_diff_Equal_1_13", "onnx_doc_folder/text_diff_Equal_1_7", "onnx_doc_folder/text_diff_Equal_7_11", "onnx_doc_folder/text_diff_Equal_7_13", "onnx_doc_folder/text_diff_Erf_9_13", "onnx_doc_folder/text_diff_Exp_1_13", "onnx_doc_folder/text_diff_Exp_1_6", "onnx_doc_folder/text_diff_Exp_6_13", "onnx_doc_folder/text_diff_Expand_8_13", "onnx_doc_folder/text_diff_Flatten_11_13", "onnx_doc_folder/text_diff_Flatten_1_11", "onnx_doc_folder/text_diff_Flatten_1_13", "onnx_doc_folder/text_diff_Flatten_1_9", "onnx_doc_folder/text_diff_Flatten_9_11", "onnx_doc_folder/text_diff_Flatten_9_13", "onnx_doc_folder/text_diff_Floor_1_13", "onnx_doc_folder/text_diff_Floor_1_6", "onnx_doc_folder/text_diff_Floor_6_13", "onnx_doc_folder/text_diff_GRU_1_14", "onnx_doc_folder/text_diff_GRU_1_3", "onnx_doc_folder/text_diff_GRU_1_7", "onnx_doc_folder/text_diff_GRU_3_14", "onnx_doc_folder/text_diff_GRU_3_7", "onnx_doc_folder/text_diff_GRU_7_14", "onnx_doc_folder/text_diff_GatherElements_11_13", "onnx_doc_folder/text_diff_GatherND_11_12", "onnx_doc_folder/text_diff_GatherND_11_13", "onnx_doc_folder/text_diff_GatherND_12_13", "onnx_doc_folder/text_diff_Gather_11_13", "onnx_doc_folder/text_diff_Gather_1_11", "onnx_doc_folder/text_diff_Gather_1_13", "onnx_doc_folder/text_diff_Gemm_11_13", "onnx_doc_folder/text_diff_Gemm_1_11", "onnx_doc_folder/text_diff_Gemm_1_13", "onnx_doc_folder/text_diff_Gemm_1_6", "onnx_doc_folder/text_diff_Gemm_1_7", "onnx_doc_folder/text_diff_Gemm_1_9", "onnx_doc_folder/text_diff_Gemm_6_11", "onnx_doc_folder/text_diff_Gemm_6_13", "onnx_doc_folder/text_diff_Gemm_6_7", "onnx_doc_folder/text_diff_Gemm_6_9", "onnx_doc_folder/text_diff_Gemm_7_11", "onnx_doc_folder/text_diff_Gemm_7_13", "onnx_doc_folder/text_diff_Gemm_7_9", "onnx_doc_folder/text_diff_Gemm_9_11", "onnx_doc_folder/text_diff_Gemm_9_13", "onnx_doc_folder/text_diff_GlobalLpPool_1_2", "onnx_doc_folder/text_diff_GreaterOrEqual_12_16", "onnx_doc_folder/text_diff_Greater_1_13", "onnx_doc_folder/text_diff_Greater_1_7", "onnx_doc_folder/text_diff_Greater_1_9", "onnx_doc_folder/text_diff_Greater_7_13", "onnx_doc_folder/text_diff_Greater_7_9", "onnx_doc_folder/text_diff_Greater_9_13", "onnx_doc_folder/text_diff_HardSigmoid_1_6", "onnx_doc_folder/text_diff_Hardmax_11_13", "onnx_doc_folder/text_diff_Hardmax_1_11", "onnx_doc_folder/text_diff_Hardmax_1_13", "onnx_doc_folder/text_diff_Identity_13_14", "onnx_doc_folder/text_diff_Identity_13_16", "onnx_doc_folder/text_diff_Identity_14_16", "onnx_doc_folder/text_diff_Identity_1_13", "onnx_doc_folder/text_diff_Identity_1_14", "onnx_doc_folder/text_diff_Identity_1_16", "onnx_doc_folder/text_diff_If_11_13", "onnx_doc_folder/text_diff_If_11_16", "onnx_doc_folder/text_diff_If_13_16", "onnx_doc_folder/text_diff_If_1_11", "onnx_doc_folder/text_diff_If_1_13", "onnx_doc_folder/text_diff_If_1_16", "onnx_doc_folder/text_diff_InstanceNormalization_1_6", "onnx_doc_folder/text_diff_IsNaN_9_13", "onnx_doc_folder/text_diff_LRN_1_13", "onnx_doc_folder/text_diff_LSTM_1_14", "onnx_doc_folder/text_diff_LSTM_1_7", "onnx_doc_folder/text_diff_LSTM_7_14", "onnx_doc_folder/text_diff_LabelEncoder_1_2", "onnx_doc_folder/text_diff_LeakyRelu_1_16", "onnx_doc_folder/text_diff_LeakyRelu_1_6", "onnx_doc_folder/text_diff_LeakyRelu_6_16", "onnx_doc_folder/text_diff_LessOrEqual_12_16", "onnx_doc_folder/text_diff_Less_1_13", "onnx_doc_folder/text_diff_Less_1_7", "onnx_doc_folder/text_diff_Less_1_9", "onnx_doc_folder/text_diff_Less_7_13", "onnx_doc_folder/text_diff_Less_7_9", "onnx_doc_folder/text_diff_Less_9_13", "onnx_doc_folder/text_diff_LogSoftmax_11_13", "onnx_doc_folder/text_diff_LogSoftmax_1_11", "onnx_doc_folder/text_diff_LogSoftmax_1_13", "onnx_doc_folder/text_diff_Log_1_13", "onnx_doc_folder/text_diff_Log_1_6", "onnx_doc_folder/text_diff_Log_6_13", "onnx_doc_folder/text_diff_Loop_11_13", "onnx_doc_folder/text_diff_Loop_11_16", "onnx_doc_folder/text_diff_Loop_13_16", "onnx_doc_folder/text_diff_Loop_1_11", "onnx_doc_folder/text_diff_Loop_1_13", "onnx_doc_folder/text_diff_Loop_1_16", "onnx_doc_folder/text_diff_LpPool_1_11", "onnx_doc_folder/text_diff_LpPool_1_2", "onnx_doc_folder/text_diff_LpPool_2_11", "onnx_doc_folder/text_diff_MatMul_1_13", "onnx_doc_folder/text_diff_MatMul_1_9", "onnx_doc_folder/text_diff_MatMul_9_13", "onnx_doc_folder/text_diff_MaxPool_10_11", "onnx_doc_folder/text_diff_MaxPool_10_12", "onnx_doc_folder/text_diff_MaxPool_11_12", "onnx_doc_folder/text_diff_MaxPool_1_10", "onnx_doc_folder/text_diff_MaxPool_1_11", "onnx_doc_folder/text_diff_MaxPool_1_12", "onnx_doc_folder/text_diff_MaxPool_1_8", "onnx_doc_folder/text_diff_MaxPool_8_10", "onnx_doc_folder/text_diff_MaxPool_8_11", "onnx_doc_folder/text_diff_MaxPool_8_12", "onnx_doc_folder/text_diff_MaxUnpool_9_11", "onnx_doc_folder/text_diff_Max_12_13", "onnx_doc_folder/text_diff_Max_1_12", "onnx_doc_folder/text_diff_Max_1_13", "onnx_doc_folder/text_diff_Max_1_6", "onnx_doc_folder/text_diff_Max_1_8", "onnx_doc_folder/text_diff_Max_6_12", "onnx_doc_folder/text_diff_Max_6_13", "onnx_doc_folder/text_diff_Max_6_8", "onnx_doc_folder/text_diff_Max_8_12", "onnx_doc_folder/text_diff_Max_8_13", "onnx_doc_folder/text_diff_MeanVarianceNormalization_9_13", "onnx_doc_folder/text_diff_Mean_1_13", "onnx_doc_folder/text_diff_Mean_1_6", "onnx_doc_folder/text_diff_Mean_1_8", "onnx_doc_folder/text_diff_Mean_6_13", "onnx_doc_folder/text_diff_Mean_6_8", "onnx_doc_folder/text_diff_Mean_8_13", "onnx_doc_folder/text_diff_Min_12_13", "onnx_doc_folder/text_diff_Min_1_12", "onnx_doc_folder/text_diff_Min_1_13", "onnx_doc_folder/text_diff_Min_1_6", "onnx_doc_folder/text_diff_Min_1_8", "onnx_doc_folder/text_diff_Min_6_12", "onnx_doc_folder/text_diff_Min_6_13", "onnx_doc_folder/text_diff_Min_6_8", "onnx_doc_folder/text_diff_Min_8_12", "onnx_doc_folder/text_diff_Min_8_13", "onnx_doc_folder/text_diff_Mod_10_13", "onnx_doc_folder/text_diff_Mul_13_14", "onnx_doc_folder/text_diff_Mul_1_13", "onnx_doc_folder/text_diff_Mul_1_14", "onnx_doc_folder/text_diff_Mul_1_6", "onnx_doc_folder/text_diff_Mul_1_7", "onnx_doc_folder/text_diff_Mul_6_13", "onnx_doc_folder/text_diff_Mul_6_14", "onnx_doc_folder/text_diff_Mul_6_7", "onnx_doc_folder/text_diff_Mul_7_13", "onnx_doc_folder/text_diff_Mul_7_14", "onnx_doc_folder/text_diff_Neg_1_13", "onnx_doc_folder/text_diff_Neg_1_6", "onnx_doc_folder/text_diff_Neg_6_13", "onnx_doc_folder/text_diff_NegativeLogLikelihoodLoss_12_13", "onnx_doc_folder/text_diff_NonMaxSuppression_10_11", "onnx_doc_folder/text_diff_NonZero_9_13", "onnx_doc_folder/text_diff_OneHot_9_11", "onnx_doc_folder/text_diff_OptionalGetElement_15_18", "onnx_doc_folder/text_diff_OptionalHasElement_15_18", "onnx_doc_folder/text_diff_Or_1_7", "onnx_doc_folder/text_diff_PRelu_1_16", "onnx_doc_folder/text_diff_PRelu_1_6", "onnx_doc_folder/text_diff_PRelu_1_7", "onnx_doc_folder/text_diff_PRelu_1_9", "onnx_doc_folder/text_diff_PRelu_6_16", "onnx_doc_folder/text_diff_PRelu_6_7", "onnx_doc_folder/text_diff_PRelu_6_9", "onnx_doc_folder/text_diff_PRelu_7_16", "onnx_doc_folder/text_diff_PRelu_7_9", "onnx_doc_folder/text_diff_PRelu_9_16", "onnx_doc_folder/text_diff_Pad_11_13", "onnx_doc_folder/text_diff_Pad_11_18", "onnx_doc_folder/text_diff_Pad_13_18", "onnx_doc_folder/text_diff_Pad_1_11", "onnx_doc_folder/text_diff_Pad_1_13", "onnx_doc_folder/text_diff_Pad_1_18", "onnx_doc_folder/text_diff_Pad_1_2", "onnx_doc_folder/text_diff_Pad_2_11", "onnx_doc_folder/text_diff_Pad_2_13", "onnx_doc_folder/text_diff_Pad_2_18", "onnx_doc_folder/text_diff_Pow_12_13", "onnx_doc_folder/text_diff_Pow_12_15", "onnx_doc_folder/text_diff_Pow_13_15", "onnx_doc_folder/text_diff_Pow_1_12", "onnx_doc_folder/text_diff_Pow_1_13", "onnx_doc_folder/text_diff_Pow_1_15", "onnx_doc_folder/text_diff_Pow_1_7", "onnx_doc_folder/text_diff_Pow_7_12", "onnx_doc_folder/text_diff_Pow_7_13", "onnx_doc_folder/text_diff_Pow_7_15", "onnx_doc_folder/text_diff_QuantizeLinear_10_13", "onnx_doc_folder/text_diff_RNN_1_14", "onnx_doc_folder/text_diff_RNN_1_7", "onnx_doc_folder/text_diff_RNN_7_14", "onnx_doc_folder/text_diff_Reciprocal_1_13", "onnx_doc_folder/text_diff_Reciprocal_1_6", "onnx_doc_folder/text_diff_Reciprocal_6_13", "onnx_doc_folder/text_diff_ReduceL1_11_13", "onnx_doc_folder/text_diff_ReduceL1_1_11", "onnx_doc_folder/text_diff_ReduceL1_1_13", "onnx_doc_folder/text_diff_ReduceL2_11_13", "onnx_doc_folder/text_diff_ReduceL2_1_11", "onnx_doc_folder/text_diff_ReduceL2_1_13", "onnx_doc_folder/text_diff_ReduceLogSumExp_11_13", "onnx_doc_folder/text_diff_ReduceLogSumExp_1_11", "onnx_doc_folder/text_diff_ReduceLogSumExp_1_13", "onnx_doc_folder/text_diff_ReduceLogSum_11_13", "onnx_doc_folder/text_diff_ReduceLogSum_1_11", "onnx_doc_folder/text_diff_ReduceLogSum_1_13", "onnx_doc_folder/text_diff_ReduceMax_11_12", "onnx_doc_folder/text_diff_ReduceMax_11_13", "onnx_doc_folder/text_diff_ReduceMax_12_13", "onnx_doc_folder/text_diff_ReduceMax_1_11", "onnx_doc_folder/text_diff_ReduceMax_1_12", "onnx_doc_folder/text_diff_ReduceMax_1_13", "onnx_doc_folder/text_diff_ReduceMean_11_13", "onnx_doc_folder/text_diff_ReduceMean_1_11", "onnx_doc_folder/text_diff_ReduceMean_1_13", "onnx_doc_folder/text_diff_ReduceMin_11_12", "onnx_doc_folder/text_diff_ReduceMin_11_13", "onnx_doc_folder/text_diff_ReduceMin_12_13", "onnx_doc_folder/text_diff_ReduceMin_1_11", "onnx_doc_folder/text_diff_ReduceMin_1_12", "onnx_doc_folder/text_diff_ReduceMin_1_13", "onnx_doc_folder/text_diff_ReduceProd_11_13", "onnx_doc_folder/text_diff_ReduceProd_1_11", "onnx_doc_folder/text_diff_ReduceProd_1_13", "onnx_doc_folder/text_diff_ReduceSumSquare_11_13", "onnx_doc_folder/text_diff_ReduceSumSquare_1_11", "onnx_doc_folder/text_diff_ReduceSumSquare_1_13", "onnx_doc_folder/text_diff_ReduceSum_11_13", "onnx_doc_folder/text_diff_ReduceSum_1_11", "onnx_doc_folder/text_diff_ReduceSum_1_13", "onnx_doc_folder/text_diff_Relu_13_14", "onnx_doc_folder/text_diff_Relu_1_13", "onnx_doc_folder/text_diff_Relu_1_14", "onnx_doc_folder/text_diff_Relu_1_6", "onnx_doc_folder/text_diff_Relu_6_13", "onnx_doc_folder/text_diff_Relu_6_14", "onnx_doc_folder/text_diff_Reshape_13_14", "onnx_doc_folder/text_diff_Reshape_1_13", "onnx_doc_folder/text_diff_Reshape_1_14", "onnx_doc_folder/text_diff_Reshape_1_5", "onnx_doc_folder/text_diff_Reshape_5_13", "onnx_doc_folder/text_diff_Reshape_5_14", "onnx_doc_folder/text_diff_Resize_10_11", "onnx_doc_folder/text_diff_Resize_10_13", "onnx_doc_folder/text_diff_Resize_10_18", "onnx_doc_folder/text_diff_Resize_11_13", "onnx_doc_folder/text_diff_Resize_11_18", "onnx_doc_folder/text_diff_Resize_13_18", "onnx_doc_folder/text_diff_RoiAlign_10_16", "onnx_doc_folder/text_diff_Scan_11_16", "onnx_doc_folder/text_diff_Scan_8_11", "onnx_doc_folder/text_diff_Scan_8_16", "onnx_doc_folder/text_diff_Scan_8_9", "onnx_doc_folder/text_diff_Scan_9_11", "onnx_doc_folder/text_diff_Scan_9_16", "onnx_doc_folder/text_diff_ScatterElements_11_13", "onnx_doc_folder/text_diff_ScatterElements_11_16", "onnx_doc_folder/text_diff_ScatterElements_11_18", "onnx_doc_folder/text_diff_ScatterElements_13_16", "onnx_doc_folder/text_diff_ScatterElements_13_18", "onnx_doc_folder/text_diff_ScatterElements_16_18", "onnx_doc_folder/text_diff_ScatterND_11_13", "onnx_doc_folder/text_diff_ScatterND_11_16", "onnx_doc_folder/text_diff_ScatterND_11_18", "onnx_doc_folder/text_diff_ScatterND_13_16", "onnx_doc_folder/text_diff_ScatterND_13_18", "onnx_doc_folder/text_diff_ScatterND_16_18", "onnx_doc_folder/text_diff_Scatter_9_11", "onnx_doc_folder/text_diff_Selu_1_6", "onnx_doc_folder/text_diff_Shape_13_15", "onnx_doc_folder/text_diff_Shape_1_13", "onnx_doc_folder/text_diff_Shape_1_15", "onnx_doc_folder/text_diff_Sigmoid_1_13", "onnx_doc_folder/text_diff_Sigmoid_1_6", "onnx_doc_folder/text_diff_Sigmoid_6_13", "onnx_doc_folder/text_diff_Sign_9_13", "onnx_doc_folder/text_diff_Size_1_13", "onnx_doc_folder/text_diff_Slice_10_11", "onnx_doc_folder/text_diff_Slice_10_13", "onnx_doc_folder/text_diff_Slice_11_13", "onnx_doc_folder/text_diff_Slice_1_10", "onnx_doc_folder/text_diff_Slice_1_11", "onnx_doc_folder/text_diff_Slice_1_13", "onnx_doc_folder/text_diff_SoftmaxCrossEntropyLoss_12_13", "onnx_doc_folder/text_diff_Softmax_11_13", "onnx_doc_folder/text_diff_Softmax_1_11", "onnx_doc_folder/text_diff_Softmax_1_13", "onnx_doc_folder/text_diff_SpaceToDepth_1_13", "onnx_doc_folder/text_diff_Split_11_13", "onnx_doc_folder/text_diff_Split_1_11", "onnx_doc_folder/text_diff_Split_1_13", "onnx_doc_folder/text_diff_Split_1_2", "onnx_doc_folder/text_diff_Split_2_11", "onnx_doc_folder/text_diff_Split_2_13", "onnx_doc_folder/text_diff_Sqrt_1_13", "onnx_doc_folder/text_diff_Sqrt_1_6", "onnx_doc_folder/text_diff_Sqrt_6_13", "onnx_doc_folder/text_diff_Squeeze_11_13", "onnx_doc_folder/text_diff_Squeeze_1_11", "onnx_doc_folder/text_diff_Squeeze_1_13", "onnx_doc_folder/text_diff_Sub_13_14", "onnx_doc_folder/text_diff_Sub_1_13", "onnx_doc_folder/text_diff_Sub_1_14", "onnx_doc_folder/text_diff_Sub_1_6", "onnx_doc_folder/text_diff_Sub_1_7", "onnx_doc_folder/text_diff_Sub_6_13", "onnx_doc_folder/text_diff_Sub_6_14", "onnx_doc_folder/text_diff_Sub_6_7", "onnx_doc_folder/text_diff_Sub_7_13", "onnx_doc_folder/text_diff_Sub_7_14", "onnx_doc_folder/text_diff_Sum_1_13", "onnx_doc_folder/text_diff_Sum_1_6", "onnx_doc_folder/text_diff_Sum_1_8", "onnx_doc_folder/text_diff_Sum_6_13", "onnx_doc_folder/text_diff_Sum_6_8", "onnx_doc_folder/text_diff_Sum_8_13", "onnx_doc_folder/text_diff_Tanh_1_13", "onnx_doc_folder/text_diff_Tanh_1_6", "onnx_doc_folder/text_diff_Tanh_6_13", "onnx_doc_folder/text_diff_Tile_1_13", "onnx_doc_folder/text_diff_Tile_1_6", "onnx_doc_folder/text_diff_Tile_6_13", "onnx_doc_folder/text_diff_TopK_10_11", "onnx_doc_folder/text_diff_TopK_1_10", "onnx_doc_folder/text_diff_TopK_1_11", "onnx_doc_folder/text_diff_Transpose_1_13", "onnx_doc_folder/text_diff_TreeEnsembleClassifier_1_3", "onnx_doc_folder/text_diff_TreeEnsembleRegressor_1_3", "onnx_doc_folder/text_diff_Unsqueeze_11_13", "onnx_doc_folder/text_diff_Unsqueeze_1_11", "onnx_doc_folder/text_diff_Unsqueeze_1_13", "onnx_doc_folder/text_diff_Upsample_1_10", "onnx_doc_folder/text_diff_Upsample_1_7", "onnx_doc_folder/text_diff_Upsample_1_9", "onnx_doc_folder/text_diff_Upsample_7_10", "onnx_doc_folder/text_diff_Upsample_7_9", "onnx_doc_folder/text_diff_Upsample_9_10", "onnx_doc_folder/text_diff_Where_9_16", "onnx_doc_folder/text_diff_Xor_1_7", "onnx_python/backend", "onnx_python/checker", "onnx_python/classes", "onnx_python/compose", "onnx_python/defs", "onnx_python/external_data_helper", "onnx_python/helper", "onnx_python/hub", "onnx_python/index", "onnx_python/mapping", "onnx_python/numpy_helper", "onnx_python/parser", "onnx_python/printer", "onnx_python/serialization", "onnx_python/shape_inference", "onnx_python/tools", "onnx_python/utils", "onnx_python/version_converter", "tutorial_python/concepts", "tutorial_python/converters", "tutorial_python/index", "tutorial_python/python"], "filenames": ["expect_onnxruntime.rst", "index.rst", "onnx_doc_folder/index.rst", "onnx_doc_folder/onnx__Abs.rst", "onnx_doc_folder/onnx__Acos.rst", "onnx_doc_folder/onnx__Acosh.rst", "onnx_doc_folder/onnx__Add.rst", "onnx_doc_folder/onnx__And.rst", "onnx_doc_folder/onnx__ArgMax.rst", "onnx_doc_folder/onnx__ArgMin.rst", "onnx_doc_folder/onnx__Asin.rst", "onnx_doc_folder/onnx__Asinh.rst", "onnx_doc_folder/onnx__Atan.rst", "onnx_doc_folder/onnx__Atanh.rst", "onnx_doc_folder/onnx__AttributeHasValue.rst", "onnx_doc_folder/onnx__AveragePool.rst", "onnx_doc_folder/onnx__BatchNormalization.rst", "onnx_doc_folder/onnx__Bernoulli.rst", "onnx_doc_folder/onnx__BitShift.rst", "onnx_doc_folder/onnx__BlackmanWindow.rst", "onnx_doc_folder/onnx__Cast.rst", "onnx_doc_folder/onnx__CastLike.rst", "onnx_doc_folder/onnx__Ceil.rst", "onnx_doc_folder/onnx__Celu.rst", "onnx_doc_folder/onnx__CenterCropPad.rst", "onnx_doc_folder/onnx__Clip.rst", "onnx_doc_folder/onnx__Col2Im.rst", "onnx_doc_folder/onnx__Compress.rst", "onnx_doc_folder/onnx__Concat.rst", "onnx_doc_folder/onnx__ConcatFromSequence.rst", "onnx_doc_folder/onnx__Constant.rst", "onnx_doc_folder/onnx__ConstantOfShape.rst", "onnx_doc_folder/onnx__Conv.rst", "onnx_doc_folder/onnx__ConvInteger.rst", "onnx_doc_folder/onnx__ConvTranspose.rst", "onnx_doc_folder/onnx__Cos.rst", "onnx_doc_folder/onnx__Cosh.rst", "onnx_doc_folder/onnx__CumSum.rst", "onnx_doc_folder/onnx__DFT.rst", "onnx_doc_folder/onnx__DepthToSpace.rst", "onnx_doc_folder/onnx__DequantizeLinear.rst", "onnx_doc_folder/onnx__Det.rst", "onnx_doc_folder/onnx__Div.rst", "onnx_doc_folder/onnx__Dropout.rst", "onnx_doc_folder/onnx__DynamicQuantizeLinear.rst", "onnx_doc_folder/onnx__Einsum.rst", "onnx_doc_folder/onnx__Elu.rst", "onnx_doc_folder/onnx__Equal.rst", "onnx_doc_folder/onnx__Erf.rst", "onnx_doc_folder/onnx__Exp.rst", "onnx_doc_folder/onnx__Expand.rst", "onnx_doc_folder/onnx__EyeLike.rst", "onnx_doc_folder/onnx__Flatten.rst", "onnx_doc_folder/onnx__Floor.rst", "onnx_doc_folder/onnx__GRU.rst", "onnx_doc_folder/onnx__Gather.rst", "onnx_doc_folder/onnx__GatherElements.rst", "onnx_doc_folder/onnx__GatherND.rst", "onnx_doc_folder/onnx__Gemm.rst", "onnx_doc_folder/onnx__GlobalAveragePool.rst", "onnx_doc_folder/onnx__GlobalLpPool.rst", "onnx_doc_folder/onnx__GlobalMaxPool.rst", "onnx_doc_folder/onnx__Greater.rst", "onnx_doc_folder/onnx__GreaterOrEqual.rst", "onnx_doc_folder/onnx__GridSample.rst", "onnx_doc_folder/onnx__HammingWindow.rst", "onnx_doc_folder/onnx__HannWindow.rst", "onnx_doc_folder/onnx__HardSigmoid.rst", "onnx_doc_folder/onnx__HardSwish.rst", "onnx_doc_folder/onnx__Hardmax.rst", "onnx_doc_folder/onnx__Identity.rst", "onnx_doc_folder/onnx__If.rst", "onnx_doc_folder/onnx__InstanceNormalization.rst", "onnx_doc_folder/onnx__IsInf.rst", "onnx_doc_folder/onnx__IsNaN.rst", "onnx_doc_folder/onnx__LRN.rst", "onnx_doc_folder/onnx__LSTM.rst", "onnx_doc_folder/onnx__LayerNormalization.rst", "onnx_doc_folder/onnx__LeakyRelu.rst", "onnx_doc_folder/onnx__Less.rst", "onnx_doc_folder/onnx__LessOrEqual.rst", "onnx_doc_folder/onnx__Log.rst", "onnx_doc_folder/onnx__LogSoftmax.rst", "onnx_doc_folder/onnx__Loop.rst", "onnx_doc_folder/onnx__LpNormalization.rst", "onnx_doc_folder/onnx__LpPool.rst", "onnx_doc_folder/onnx__MatMul.rst", "onnx_doc_folder/onnx__MatMulInteger.rst", "onnx_doc_folder/onnx__Max.rst", "onnx_doc_folder/onnx__MaxPool.rst", "onnx_doc_folder/onnx__MaxRoiPool.rst", "onnx_doc_folder/onnx__MaxUnpool.rst", "onnx_doc_folder/onnx__Mean.rst", "onnx_doc_folder/onnx__MeanVarianceNormalization.rst", "onnx_doc_folder/onnx__MelWeightMatrix.rst", "onnx_doc_folder/onnx__Min.rst", "onnx_doc_folder/onnx__Mish.rst", "onnx_doc_folder/onnx__Mod.rst", "onnx_doc_folder/onnx__Mul.rst", "onnx_doc_folder/onnx__Multinomial.rst", "onnx_doc_folder/onnx__Neg.rst", "onnx_doc_folder/onnx__NegativeLogLikelihoodLoss.rst", "onnx_doc_folder/onnx__NonMaxSuppression.rst", "onnx_doc_folder/onnx__NonZero.rst", "onnx_doc_folder/onnx__Not.rst", "onnx_doc_folder/onnx__OneHot.rst", "onnx_doc_folder/onnx__Optional.rst", "onnx_doc_folder/onnx__OptionalGetElement.rst", "onnx_doc_folder/onnx__OptionalHasElement.rst", "onnx_doc_folder/onnx__Or.rst", "onnx_doc_folder/onnx__PRelu.rst", "onnx_doc_folder/onnx__Pad.rst", "onnx_doc_folder/onnx__Pow.rst", "onnx_doc_folder/onnx__QLinearConv.rst", "onnx_doc_folder/onnx__QLinearMatMul.rst", "onnx_doc_folder/onnx__QuantizeLinear.rst", "onnx_doc_folder/onnx__RNN.rst", "onnx_doc_folder/onnx__RandomNormal.rst", "onnx_doc_folder/onnx__RandomNormalLike.rst", "onnx_doc_folder/onnx__RandomUniform.rst", "onnx_doc_folder/onnx__RandomUniformLike.rst", "onnx_doc_folder/onnx__Range.rst", "onnx_doc_folder/onnx__Reciprocal.rst", "onnx_doc_folder/onnx__ReduceL1.rst", "onnx_doc_folder/onnx__ReduceL2.rst", "onnx_doc_folder/onnx__ReduceLogSum.rst", "onnx_doc_folder/onnx__ReduceLogSumExp.rst", "onnx_doc_folder/onnx__ReduceMax.rst", "onnx_doc_folder/onnx__ReduceMean.rst", "onnx_doc_folder/onnx__ReduceMin.rst", "onnx_doc_folder/onnx__ReduceProd.rst", "onnx_doc_folder/onnx__ReduceSum.rst", "onnx_doc_folder/onnx__ReduceSumSquare.rst", "onnx_doc_folder/onnx__Relu.rst", "onnx_doc_folder/onnx__Reshape.rst", "onnx_doc_folder/onnx__Resize.rst", "onnx_doc_folder/onnx__ReverseSequence.rst", "onnx_doc_folder/onnx__RoiAlign.rst", "onnx_doc_folder/onnx__Round.rst", "onnx_doc_folder/onnx__STFT.rst", "onnx_doc_folder/onnx__Scan.rst", "onnx_doc_folder/onnx__Scatter.rst", "onnx_doc_folder/onnx__ScatterElements.rst", "onnx_doc_folder/onnx__ScatterND.rst", "onnx_doc_folder/onnx__Selu.rst", "onnx_doc_folder/onnx__SequenceAt.rst", "onnx_doc_folder/onnx__SequenceConstruct.rst", "onnx_doc_folder/onnx__SequenceEmpty.rst", "onnx_doc_folder/onnx__SequenceErase.rst", "onnx_doc_folder/onnx__SequenceInsert.rst", "onnx_doc_folder/onnx__SequenceLength.rst", "onnx_doc_folder/onnx__SequenceMap.rst", "onnx_doc_folder/onnx__Shape.rst", "onnx_doc_folder/onnx__Shrink.rst", "onnx_doc_folder/onnx__Sigmoid.rst", "onnx_doc_folder/onnx__Sign.rst", "onnx_doc_folder/onnx__Sin.rst", "onnx_doc_folder/onnx__Sinh.rst", "onnx_doc_folder/onnx__Size.rst", "onnx_doc_folder/onnx__Slice.rst", "onnx_doc_folder/onnx__Softmax.rst", "onnx_doc_folder/onnx__SoftmaxCrossEntropyLoss.rst", "onnx_doc_folder/onnx__Softplus.rst", "onnx_doc_folder/onnx__Softsign.rst", "onnx_doc_folder/onnx__SpaceToDepth.rst", "onnx_doc_folder/onnx__Split.rst", "onnx_doc_folder/onnx__SplitToSequence.rst", "onnx_doc_folder/onnx__Sqrt.rst", "onnx_doc_folder/onnx__Squeeze.rst", "onnx_doc_folder/onnx__StringNormalizer.rst", "onnx_doc_folder/onnx__Sub.rst", "onnx_doc_folder/onnx__Sum.rst", "onnx_doc_folder/onnx__Tan.rst", "onnx_doc_folder/onnx__Tanh.rst", "onnx_doc_folder/onnx__TfIdfVectorizer.rst", "onnx_doc_folder/onnx__ThresholdedRelu.rst", "onnx_doc_folder/onnx__Tile.rst", "onnx_doc_folder/onnx__TopK.rst", "onnx_doc_folder/onnx__Transpose.rst", "onnx_doc_folder/onnx__Trilu.rst", "onnx_doc_folder/onnx__Unique.rst", "onnx_doc_folder/onnx__Unsqueeze.rst", "onnx_doc_folder/onnx__Upsample.rst", "onnx_doc_folder/onnx__Where.rst", "onnx_doc_folder/onnx__Xor.rst", "onnx_doc_folder/onnx_aionnxml_ArrayFeatureExtractor.rst", "onnx_doc_folder/onnx_aionnxml_Binarizer.rst", "onnx_doc_folder/onnx_aionnxml_CastMap.rst", "onnx_doc_folder/onnx_aionnxml_CategoryMapper.rst", "onnx_doc_folder/onnx_aionnxml_DictVectorizer.rst", "onnx_doc_folder/onnx_aionnxml_FeatureVectorizer.rst", "onnx_doc_folder/onnx_aionnxml_Imputer.rst", "onnx_doc_folder/onnx_aionnxml_LabelEncoder.rst", "onnx_doc_folder/onnx_aionnxml_LinearClassifier.rst", "onnx_doc_folder/onnx_aionnxml_LinearRegressor.rst", "onnx_doc_folder/onnx_aionnxml_Normalizer.rst", "onnx_doc_folder/onnx_aionnxml_OneHotEncoder.rst", "onnx_doc_folder/onnx_aionnxml_SVMClassifier.rst", "onnx_doc_folder/onnx_aionnxml_SVMRegressor.rst", "onnx_doc_folder/onnx_aionnxml_Scaler.rst", "onnx_doc_folder/onnx_aionnxml_TreeEnsembleClassifier.rst", "onnx_doc_folder/onnx_aionnxml_TreeEnsembleRegressor.rst", "onnx_doc_folder/onnx_aionnxml_ZipMap.rst", "onnx_doc_folder/onnx_aionnxpreviewtraining_Adagrad.rst", "onnx_doc_folder/onnx_aionnxpreviewtraining_Adam.rst", "onnx_doc_folder/onnx_aionnxpreviewtraining_Gradient.rst", "onnx_doc_folder/onnx_aionnxpreviewtraining_Momentum.rst", "onnx_doc_folder/text_diff_Abs_1_13.rst", "onnx_doc_folder/text_diff_Abs_1_6.rst", "onnx_doc_folder/text_diff_Abs_6_13.rst", "onnx_doc_folder/text_diff_Add_13_14.rst", "onnx_doc_folder/text_diff_Add_1_13.rst", "onnx_doc_folder/text_diff_Add_1_14.rst", "onnx_doc_folder/text_diff_Add_1_6.rst", "onnx_doc_folder/text_diff_Add_1_7.rst", "onnx_doc_folder/text_diff_Add_6_13.rst", "onnx_doc_folder/text_diff_Add_6_14.rst", "onnx_doc_folder/text_diff_Add_6_7.rst", "onnx_doc_folder/text_diff_Add_7_13.rst", "onnx_doc_folder/text_diff_Add_7_14.rst", "onnx_doc_folder/text_diff_And_1_7.rst", "onnx_doc_folder/text_diff_ArgMax_11_12.rst", "onnx_doc_folder/text_diff_ArgMax_11_13.rst", "onnx_doc_folder/text_diff_ArgMax_12_13.rst", "onnx_doc_folder/text_diff_ArgMax_1_11.rst", "onnx_doc_folder/text_diff_ArgMax_1_12.rst", "onnx_doc_folder/text_diff_ArgMax_1_13.rst", "onnx_doc_folder/text_diff_ArgMin_11_12.rst", "onnx_doc_folder/text_diff_ArgMin_11_13.rst", "onnx_doc_folder/text_diff_ArgMin_12_13.rst", "onnx_doc_folder/text_diff_ArgMin_1_11.rst", "onnx_doc_folder/text_diff_ArgMin_1_12.rst", "onnx_doc_folder/text_diff_ArgMin_1_13.rst", "onnx_doc_folder/text_diff_AveragePool_10_11.rst", "onnx_doc_folder/text_diff_AveragePool_1_10.rst", "onnx_doc_folder/text_diff_AveragePool_1_11.rst", "onnx_doc_folder/text_diff_AveragePool_1_7.rst", "onnx_doc_folder/text_diff_AveragePool_7_10.rst", "onnx_doc_folder/text_diff_AveragePool_7_11.rst", "onnx_doc_folder/text_diff_BatchNormalization_14_15.rst", "onnx_doc_folder/text_diff_BatchNormalization_1_14.rst", "onnx_doc_folder/text_diff_BatchNormalization_1_15.rst", "onnx_doc_folder/text_diff_BatchNormalization_1_6.rst", "onnx_doc_folder/text_diff_BatchNormalization_1_7.rst", "onnx_doc_folder/text_diff_BatchNormalization_1_9.rst", "onnx_doc_folder/text_diff_BatchNormalization_6_14.rst", "onnx_doc_folder/text_diff_BatchNormalization_6_15.rst", "onnx_doc_folder/text_diff_BatchNormalization_6_7.rst", "onnx_doc_folder/text_diff_BatchNormalization_6_9.rst", "onnx_doc_folder/text_diff_BatchNormalization_7_14.rst", "onnx_doc_folder/text_diff_BatchNormalization_7_15.rst", "onnx_doc_folder/text_diff_BatchNormalization_7_9.rst", "onnx_doc_folder/text_diff_BatchNormalization_9_14.rst", "onnx_doc_folder/text_diff_BatchNormalization_9_15.rst", "onnx_doc_folder/text_diff_Cast_1_13.rst", "onnx_doc_folder/text_diff_Cast_1_6.rst", "onnx_doc_folder/text_diff_Cast_1_9.rst", "onnx_doc_folder/text_diff_Cast_6_13.rst", "onnx_doc_folder/text_diff_Cast_6_9.rst", "onnx_doc_folder/text_diff_Cast_9_13.rst", "onnx_doc_folder/text_diff_Ceil_1_13.rst", "onnx_doc_folder/text_diff_Ceil_1_6.rst", "onnx_doc_folder/text_diff_Ceil_6_13.rst", "onnx_doc_folder/text_diff_Clip_11_12.rst", "onnx_doc_folder/text_diff_Clip_11_13.rst", "onnx_doc_folder/text_diff_Clip_12_13.rst", "onnx_doc_folder/text_diff_Clip_1_11.rst", "onnx_doc_folder/text_diff_Clip_1_12.rst", "onnx_doc_folder/text_diff_Clip_1_13.rst", "onnx_doc_folder/text_diff_Clip_1_6.rst", "onnx_doc_folder/text_diff_Clip_6_11.rst", "onnx_doc_folder/text_diff_Clip_6_12.rst", "onnx_doc_folder/text_diff_Clip_6_13.rst", "onnx_doc_folder/text_diff_Compress_9_11.rst", "onnx_doc_folder/text_diff_Concat_11_13.rst", "onnx_doc_folder/text_diff_Concat_1_11.rst", "onnx_doc_folder/text_diff_Concat_1_13.rst", "onnx_doc_folder/text_diff_Concat_1_4.rst", "onnx_doc_folder/text_diff_Concat_4_11.rst", "onnx_doc_folder/text_diff_Concat_4_13.rst", "onnx_doc_folder/text_diff_Constant_11_12.rst", "onnx_doc_folder/text_diff_Constant_11_13.rst", "onnx_doc_folder/text_diff_Constant_12_13.rst", "onnx_doc_folder/text_diff_Constant_1_11.rst", "onnx_doc_folder/text_diff_Constant_1_12.rst", "onnx_doc_folder/text_diff_Constant_1_13.rst", "onnx_doc_folder/text_diff_Constant_1_9.rst", "onnx_doc_folder/text_diff_Constant_9_11.rst", "onnx_doc_folder/text_diff_Constant_9_12.rst", "onnx_doc_folder/text_diff_Constant_9_13.rst", "onnx_doc_folder/text_diff_ConvTranspose_1_11.rst", "onnx_doc_folder/text_diff_Conv_1_11.rst", "onnx_doc_folder/text_diff_CumSum_11_14.rst", "onnx_doc_folder/text_diff_DepthToSpace_11_13.rst", "onnx_doc_folder/text_diff_DepthToSpace_1_11.rst", "onnx_doc_folder/text_diff_DepthToSpace_1_13.rst", "onnx_doc_folder/text_diff_DequantizeLinear_10_13.rst", "onnx_doc_folder/text_diff_Div_13_14.rst", "onnx_doc_folder/text_diff_Div_1_13.rst", "onnx_doc_folder/text_diff_Div_1_14.rst", "onnx_doc_folder/text_diff_Div_1_6.rst", "onnx_doc_folder/text_diff_Div_1_7.rst", "onnx_doc_folder/text_diff_Div_6_13.rst", "onnx_doc_folder/text_diff_Div_6_14.rst", "onnx_doc_folder/text_diff_Div_6_7.rst", "onnx_doc_folder/text_diff_Div_7_13.rst", "onnx_doc_folder/text_diff_Div_7_14.rst", "onnx_doc_folder/text_diff_Dropout_10_12.rst", "onnx_doc_folder/text_diff_Dropout_10_13.rst", "onnx_doc_folder/text_diff_Dropout_12_13.rst", "onnx_doc_folder/text_diff_Dropout_1_10.rst", "onnx_doc_folder/text_diff_Dropout_1_12.rst", "onnx_doc_folder/text_diff_Dropout_1_13.rst", "onnx_doc_folder/text_diff_Dropout_1_6.rst", "onnx_doc_folder/text_diff_Dropout_1_7.rst", "onnx_doc_folder/text_diff_Dropout_6_10.rst", "onnx_doc_folder/text_diff_Dropout_6_12.rst", "onnx_doc_folder/text_diff_Dropout_6_13.rst", "onnx_doc_folder/text_diff_Dropout_6_7.rst", "onnx_doc_folder/text_diff_Dropout_7_10.rst", "onnx_doc_folder/text_diff_Dropout_7_12.rst", "onnx_doc_folder/text_diff_Dropout_7_13.rst", "onnx_doc_folder/text_diff_Elu_1_6.rst", "onnx_doc_folder/text_diff_Equal_11_13.rst", "onnx_doc_folder/text_diff_Equal_1_11.rst", "onnx_doc_folder/text_diff_Equal_1_13.rst", "onnx_doc_folder/text_diff_Equal_1_7.rst", "onnx_doc_folder/text_diff_Equal_7_11.rst", "onnx_doc_folder/text_diff_Equal_7_13.rst", "onnx_doc_folder/text_diff_Erf_9_13.rst", "onnx_doc_folder/text_diff_Exp_1_13.rst", "onnx_doc_folder/text_diff_Exp_1_6.rst", "onnx_doc_folder/text_diff_Exp_6_13.rst", "onnx_doc_folder/text_diff_Expand_8_13.rst", "onnx_doc_folder/text_diff_Flatten_11_13.rst", "onnx_doc_folder/text_diff_Flatten_1_11.rst", "onnx_doc_folder/text_diff_Flatten_1_13.rst", "onnx_doc_folder/text_diff_Flatten_1_9.rst", "onnx_doc_folder/text_diff_Flatten_9_11.rst", "onnx_doc_folder/text_diff_Flatten_9_13.rst", "onnx_doc_folder/text_diff_Floor_1_13.rst", "onnx_doc_folder/text_diff_Floor_1_6.rst", "onnx_doc_folder/text_diff_Floor_6_13.rst", "onnx_doc_folder/text_diff_GRU_1_14.rst", "onnx_doc_folder/text_diff_GRU_1_3.rst", "onnx_doc_folder/text_diff_GRU_1_7.rst", "onnx_doc_folder/text_diff_GRU_3_14.rst", "onnx_doc_folder/text_diff_GRU_3_7.rst", "onnx_doc_folder/text_diff_GRU_7_14.rst", "onnx_doc_folder/text_diff_GatherElements_11_13.rst", "onnx_doc_folder/text_diff_GatherND_11_12.rst", "onnx_doc_folder/text_diff_GatherND_11_13.rst", "onnx_doc_folder/text_diff_GatherND_12_13.rst", "onnx_doc_folder/text_diff_Gather_11_13.rst", "onnx_doc_folder/text_diff_Gather_1_11.rst", "onnx_doc_folder/text_diff_Gather_1_13.rst", "onnx_doc_folder/text_diff_Gemm_11_13.rst", "onnx_doc_folder/text_diff_Gemm_1_11.rst", "onnx_doc_folder/text_diff_Gemm_1_13.rst", "onnx_doc_folder/text_diff_Gemm_1_6.rst", "onnx_doc_folder/text_diff_Gemm_1_7.rst", "onnx_doc_folder/text_diff_Gemm_1_9.rst", "onnx_doc_folder/text_diff_Gemm_6_11.rst", "onnx_doc_folder/text_diff_Gemm_6_13.rst", "onnx_doc_folder/text_diff_Gemm_6_7.rst", "onnx_doc_folder/text_diff_Gemm_6_9.rst", "onnx_doc_folder/text_diff_Gemm_7_11.rst", "onnx_doc_folder/text_diff_Gemm_7_13.rst", "onnx_doc_folder/text_diff_Gemm_7_9.rst", "onnx_doc_folder/text_diff_Gemm_9_11.rst", "onnx_doc_folder/text_diff_Gemm_9_13.rst", "onnx_doc_folder/text_diff_GlobalLpPool_1_2.rst", "onnx_doc_folder/text_diff_GreaterOrEqual_12_16.rst", "onnx_doc_folder/text_diff_Greater_1_13.rst", "onnx_doc_folder/text_diff_Greater_1_7.rst", "onnx_doc_folder/text_diff_Greater_1_9.rst", "onnx_doc_folder/text_diff_Greater_7_13.rst", "onnx_doc_folder/text_diff_Greater_7_9.rst", "onnx_doc_folder/text_diff_Greater_9_13.rst", "onnx_doc_folder/text_diff_HardSigmoid_1_6.rst", "onnx_doc_folder/text_diff_Hardmax_11_13.rst", "onnx_doc_folder/text_diff_Hardmax_1_11.rst", "onnx_doc_folder/text_diff_Hardmax_1_13.rst", "onnx_doc_folder/text_diff_Identity_13_14.rst", "onnx_doc_folder/text_diff_Identity_13_16.rst", "onnx_doc_folder/text_diff_Identity_14_16.rst", "onnx_doc_folder/text_diff_Identity_1_13.rst", "onnx_doc_folder/text_diff_Identity_1_14.rst", "onnx_doc_folder/text_diff_Identity_1_16.rst", "onnx_doc_folder/text_diff_If_11_13.rst", "onnx_doc_folder/text_diff_If_11_16.rst", "onnx_doc_folder/text_diff_If_13_16.rst", "onnx_doc_folder/text_diff_If_1_11.rst", "onnx_doc_folder/text_diff_If_1_13.rst", "onnx_doc_folder/text_diff_If_1_16.rst", "onnx_doc_folder/text_diff_InstanceNormalization_1_6.rst", "onnx_doc_folder/text_diff_IsNaN_9_13.rst", "onnx_doc_folder/text_diff_LRN_1_13.rst", "onnx_doc_folder/text_diff_LSTM_1_14.rst", "onnx_doc_folder/text_diff_LSTM_1_7.rst", "onnx_doc_folder/text_diff_LSTM_7_14.rst", "onnx_doc_folder/text_diff_LabelEncoder_1_2.rst", "onnx_doc_folder/text_diff_LeakyRelu_1_16.rst", "onnx_doc_folder/text_diff_LeakyRelu_1_6.rst", "onnx_doc_folder/text_diff_LeakyRelu_6_16.rst", "onnx_doc_folder/text_diff_LessOrEqual_12_16.rst", "onnx_doc_folder/text_diff_Less_1_13.rst", "onnx_doc_folder/text_diff_Less_1_7.rst", "onnx_doc_folder/text_diff_Less_1_9.rst", "onnx_doc_folder/text_diff_Less_7_13.rst", "onnx_doc_folder/text_diff_Less_7_9.rst", "onnx_doc_folder/text_diff_Less_9_13.rst", "onnx_doc_folder/text_diff_LogSoftmax_11_13.rst", "onnx_doc_folder/text_diff_LogSoftmax_1_11.rst", "onnx_doc_folder/text_diff_LogSoftmax_1_13.rst", "onnx_doc_folder/text_diff_Log_1_13.rst", "onnx_doc_folder/text_diff_Log_1_6.rst", "onnx_doc_folder/text_diff_Log_6_13.rst", "onnx_doc_folder/text_diff_Loop_11_13.rst", "onnx_doc_folder/text_diff_Loop_11_16.rst", "onnx_doc_folder/text_diff_Loop_13_16.rst", "onnx_doc_folder/text_diff_Loop_1_11.rst", "onnx_doc_folder/text_diff_Loop_1_13.rst", "onnx_doc_folder/text_diff_Loop_1_16.rst", "onnx_doc_folder/text_diff_LpPool_1_11.rst", "onnx_doc_folder/text_diff_LpPool_1_2.rst", "onnx_doc_folder/text_diff_LpPool_2_11.rst", "onnx_doc_folder/text_diff_MatMul_1_13.rst", "onnx_doc_folder/text_diff_MatMul_1_9.rst", "onnx_doc_folder/text_diff_MatMul_9_13.rst", "onnx_doc_folder/text_diff_MaxPool_10_11.rst", "onnx_doc_folder/text_diff_MaxPool_10_12.rst", "onnx_doc_folder/text_diff_MaxPool_11_12.rst", "onnx_doc_folder/text_diff_MaxPool_1_10.rst", "onnx_doc_folder/text_diff_MaxPool_1_11.rst", "onnx_doc_folder/text_diff_MaxPool_1_12.rst", "onnx_doc_folder/text_diff_MaxPool_1_8.rst", "onnx_doc_folder/text_diff_MaxPool_8_10.rst", "onnx_doc_folder/text_diff_MaxPool_8_11.rst", "onnx_doc_folder/text_diff_MaxPool_8_12.rst", "onnx_doc_folder/text_diff_MaxUnpool_9_11.rst", "onnx_doc_folder/text_diff_Max_12_13.rst", "onnx_doc_folder/text_diff_Max_1_12.rst", "onnx_doc_folder/text_diff_Max_1_13.rst", "onnx_doc_folder/text_diff_Max_1_6.rst", "onnx_doc_folder/text_diff_Max_1_8.rst", "onnx_doc_folder/text_diff_Max_6_12.rst", "onnx_doc_folder/text_diff_Max_6_13.rst", "onnx_doc_folder/text_diff_Max_6_8.rst", "onnx_doc_folder/text_diff_Max_8_12.rst", "onnx_doc_folder/text_diff_Max_8_13.rst", "onnx_doc_folder/text_diff_MeanVarianceNormalization_9_13.rst", "onnx_doc_folder/text_diff_Mean_1_13.rst", "onnx_doc_folder/text_diff_Mean_1_6.rst", "onnx_doc_folder/text_diff_Mean_1_8.rst", "onnx_doc_folder/text_diff_Mean_6_13.rst", "onnx_doc_folder/text_diff_Mean_6_8.rst", "onnx_doc_folder/text_diff_Mean_8_13.rst", "onnx_doc_folder/text_diff_Min_12_13.rst", "onnx_doc_folder/text_diff_Min_1_12.rst", "onnx_doc_folder/text_diff_Min_1_13.rst", "onnx_doc_folder/text_diff_Min_1_6.rst", "onnx_doc_folder/text_diff_Min_1_8.rst", "onnx_doc_folder/text_diff_Min_6_12.rst", "onnx_doc_folder/text_diff_Min_6_13.rst", "onnx_doc_folder/text_diff_Min_6_8.rst", "onnx_doc_folder/text_diff_Min_8_12.rst", "onnx_doc_folder/text_diff_Min_8_13.rst", "onnx_doc_folder/text_diff_Mod_10_13.rst", "onnx_doc_folder/text_diff_Mul_13_14.rst", "onnx_doc_folder/text_diff_Mul_1_13.rst", "onnx_doc_folder/text_diff_Mul_1_14.rst", "onnx_doc_folder/text_diff_Mul_1_6.rst", "onnx_doc_folder/text_diff_Mul_1_7.rst", "onnx_doc_folder/text_diff_Mul_6_13.rst", "onnx_doc_folder/text_diff_Mul_6_14.rst", "onnx_doc_folder/text_diff_Mul_6_7.rst", "onnx_doc_folder/text_diff_Mul_7_13.rst", "onnx_doc_folder/text_diff_Mul_7_14.rst", "onnx_doc_folder/text_diff_Neg_1_13.rst", "onnx_doc_folder/text_diff_Neg_1_6.rst", "onnx_doc_folder/text_diff_Neg_6_13.rst", "onnx_doc_folder/text_diff_NegativeLogLikelihoodLoss_12_13.rst", "onnx_doc_folder/text_diff_NonMaxSuppression_10_11.rst", "onnx_doc_folder/text_diff_NonZero_9_13.rst", "onnx_doc_folder/text_diff_OneHot_9_11.rst", "onnx_doc_folder/text_diff_OptionalGetElement_15_18.rst", "onnx_doc_folder/text_diff_OptionalHasElement_15_18.rst", "onnx_doc_folder/text_diff_Or_1_7.rst", "onnx_doc_folder/text_diff_PRelu_1_16.rst", "onnx_doc_folder/text_diff_PRelu_1_6.rst", "onnx_doc_folder/text_diff_PRelu_1_7.rst", "onnx_doc_folder/text_diff_PRelu_1_9.rst", "onnx_doc_folder/text_diff_PRelu_6_16.rst", "onnx_doc_folder/text_diff_PRelu_6_7.rst", "onnx_doc_folder/text_diff_PRelu_6_9.rst", "onnx_doc_folder/text_diff_PRelu_7_16.rst", "onnx_doc_folder/text_diff_PRelu_7_9.rst", "onnx_doc_folder/text_diff_PRelu_9_16.rst", "onnx_doc_folder/text_diff_Pad_11_13.rst", "onnx_doc_folder/text_diff_Pad_11_18.rst", "onnx_doc_folder/text_diff_Pad_13_18.rst", "onnx_doc_folder/text_diff_Pad_1_11.rst", "onnx_doc_folder/text_diff_Pad_1_13.rst", "onnx_doc_folder/text_diff_Pad_1_18.rst", "onnx_doc_folder/text_diff_Pad_1_2.rst", "onnx_doc_folder/text_diff_Pad_2_11.rst", "onnx_doc_folder/text_diff_Pad_2_13.rst", "onnx_doc_folder/text_diff_Pad_2_18.rst", "onnx_doc_folder/text_diff_Pow_12_13.rst", "onnx_doc_folder/text_diff_Pow_12_15.rst", "onnx_doc_folder/text_diff_Pow_13_15.rst", "onnx_doc_folder/text_diff_Pow_1_12.rst", "onnx_doc_folder/text_diff_Pow_1_13.rst", "onnx_doc_folder/text_diff_Pow_1_15.rst", "onnx_doc_folder/text_diff_Pow_1_7.rst", "onnx_doc_folder/text_diff_Pow_7_12.rst", "onnx_doc_folder/text_diff_Pow_7_13.rst", "onnx_doc_folder/text_diff_Pow_7_15.rst", "onnx_doc_folder/text_diff_QuantizeLinear_10_13.rst", "onnx_doc_folder/text_diff_RNN_1_14.rst", "onnx_doc_folder/text_diff_RNN_1_7.rst", "onnx_doc_folder/text_diff_RNN_7_14.rst", "onnx_doc_folder/text_diff_Reciprocal_1_13.rst", "onnx_doc_folder/text_diff_Reciprocal_1_6.rst", "onnx_doc_folder/text_diff_Reciprocal_6_13.rst", "onnx_doc_folder/text_diff_ReduceL1_11_13.rst", "onnx_doc_folder/text_diff_ReduceL1_1_11.rst", "onnx_doc_folder/text_diff_ReduceL1_1_13.rst", "onnx_doc_folder/text_diff_ReduceL2_11_13.rst", "onnx_doc_folder/text_diff_ReduceL2_1_11.rst", "onnx_doc_folder/text_diff_ReduceL2_1_13.rst", "onnx_doc_folder/text_diff_ReduceLogSumExp_11_13.rst", "onnx_doc_folder/text_diff_ReduceLogSumExp_1_11.rst", "onnx_doc_folder/text_diff_ReduceLogSumExp_1_13.rst", "onnx_doc_folder/text_diff_ReduceLogSum_11_13.rst", "onnx_doc_folder/text_diff_ReduceLogSum_1_11.rst", "onnx_doc_folder/text_diff_ReduceLogSum_1_13.rst", "onnx_doc_folder/text_diff_ReduceMax_11_12.rst", "onnx_doc_folder/text_diff_ReduceMax_11_13.rst", "onnx_doc_folder/text_diff_ReduceMax_12_13.rst", "onnx_doc_folder/text_diff_ReduceMax_1_11.rst", "onnx_doc_folder/text_diff_ReduceMax_1_12.rst", "onnx_doc_folder/text_diff_ReduceMax_1_13.rst", "onnx_doc_folder/text_diff_ReduceMean_11_13.rst", "onnx_doc_folder/text_diff_ReduceMean_1_11.rst", "onnx_doc_folder/text_diff_ReduceMean_1_13.rst", "onnx_doc_folder/text_diff_ReduceMin_11_12.rst", "onnx_doc_folder/text_diff_ReduceMin_11_13.rst", "onnx_doc_folder/text_diff_ReduceMin_12_13.rst", "onnx_doc_folder/text_diff_ReduceMin_1_11.rst", "onnx_doc_folder/text_diff_ReduceMin_1_12.rst", "onnx_doc_folder/text_diff_ReduceMin_1_13.rst", "onnx_doc_folder/text_diff_ReduceProd_11_13.rst", "onnx_doc_folder/text_diff_ReduceProd_1_11.rst", "onnx_doc_folder/text_diff_ReduceProd_1_13.rst", "onnx_doc_folder/text_diff_ReduceSumSquare_11_13.rst", "onnx_doc_folder/text_diff_ReduceSumSquare_1_11.rst", "onnx_doc_folder/text_diff_ReduceSumSquare_1_13.rst", "onnx_doc_folder/text_diff_ReduceSum_11_13.rst", "onnx_doc_folder/text_diff_ReduceSum_1_11.rst", "onnx_doc_folder/text_diff_ReduceSum_1_13.rst", "onnx_doc_folder/text_diff_Relu_13_14.rst", "onnx_doc_folder/text_diff_Relu_1_13.rst", "onnx_doc_folder/text_diff_Relu_1_14.rst", "onnx_doc_folder/text_diff_Relu_1_6.rst", "onnx_doc_folder/text_diff_Relu_6_13.rst", "onnx_doc_folder/text_diff_Relu_6_14.rst", "onnx_doc_folder/text_diff_Reshape_13_14.rst", "onnx_doc_folder/text_diff_Reshape_1_13.rst", "onnx_doc_folder/text_diff_Reshape_1_14.rst", "onnx_doc_folder/text_diff_Reshape_1_5.rst", "onnx_doc_folder/text_diff_Reshape_5_13.rst", "onnx_doc_folder/text_diff_Reshape_5_14.rst", "onnx_doc_folder/text_diff_Resize_10_11.rst", "onnx_doc_folder/text_diff_Resize_10_13.rst", "onnx_doc_folder/text_diff_Resize_10_18.rst", "onnx_doc_folder/text_diff_Resize_11_13.rst", "onnx_doc_folder/text_diff_Resize_11_18.rst", "onnx_doc_folder/text_diff_Resize_13_18.rst", "onnx_doc_folder/text_diff_RoiAlign_10_16.rst", "onnx_doc_folder/text_diff_Scan_11_16.rst", "onnx_doc_folder/text_diff_Scan_8_11.rst", "onnx_doc_folder/text_diff_Scan_8_16.rst", "onnx_doc_folder/text_diff_Scan_8_9.rst", "onnx_doc_folder/text_diff_Scan_9_11.rst", "onnx_doc_folder/text_diff_Scan_9_16.rst", "onnx_doc_folder/text_diff_ScatterElements_11_13.rst", "onnx_doc_folder/text_diff_ScatterElements_11_16.rst", "onnx_doc_folder/text_diff_ScatterElements_11_18.rst", "onnx_doc_folder/text_diff_ScatterElements_13_16.rst", "onnx_doc_folder/text_diff_ScatterElements_13_18.rst", "onnx_doc_folder/text_diff_ScatterElements_16_18.rst", "onnx_doc_folder/text_diff_ScatterND_11_13.rst", "onnx_doc_folder/text_diff_ScatterND_11_16.rst", "onnx_doc_folder/text_diff_ScatterND_11_18.rst", "onnx_doc_folder/text_diff_ScatterND_13_16.rst", "onnx_doc_folder/text_diff_ScatterND_13_18.rst", "onnx_doc_folder/text_diff_ScatterND_16_18.rst", "onnx_doc_folder/text_diff_Scatter_9_11.rst", "onnx_doc_folder/text_diff_Selu_1_6.rst", "onnx_doc_folder/text_diff_Shape_13_15.rst", "onnx_doc_folder/text_diff_Shape_1_13.rst", "onnx_doc_folder/text_diff_Shape_1_15.rst", "onnx_doc_folder/text_diff_Sigmoid_1_13.rst", "onnx_doc_folder/text_diff_Sigmoid_1_6.rst", "onnx_doc_folder/text_diff_Sigmoid_6_13.rst", "onnx_doc_folder/text_diff_Sign_9_13.rst", "onnx_doc_folder/text_diff_Size_1_13.rst", "onnx_doc_folder/text_diff_Slice_10_11.rst", "onnx_doc_folder/text_diff_Slice_10_13.rst", "onnx_doc_folder/text_diff_Slice_11_13.rst", "onnx_doc_folder/text_diff_Slice_1_10.rst", "onnx_doc_folder/text_diff_Slice_1_11.rst", "onnx_doc_folder/text_diff_Slice_1_13.rst", "onnx_doc_folder/text_diff_SoftmaxCrossEntropyLoss_12_13.rst", "onnx_doc_folder/text_diff_Softmax_11_13.rst", "onnx_doc_folder/text_diff_Softmax_1_11.rst", "onnx_doc_folder/text_diff_Softmax_1_13.rst", "onnx_doc_folder/text_diff_SpaceToDepth_1_13.rst", "onnx_doc_folder/text_diff_Split_11_13.rst", "onnx_doc_folder/text_diff_Split_1_11.rst", "onnx_doc_folder/text_diff_Split_1_13.rst", "onnx_doc_folder/text_diff_Split_1_2.rst", "onnx_doc_folder/text_diff_Split_2_11.rst", "onnx_doc_folder/text_diff_Split_2_13.rst", "onnx_doc_folder/text_diff_Sqrt_1_13.rst", "onnx_doc_folder/text_diff_Sqrt_1_6.rst", "onnx_doc_folder/text_diff_Sqrt_6_13.rst", "onnx_doc_folder/text_diff_Squeeze_11_13.rst", "onnx_doc_folder/text_diff_Squeeze_1_11.rst", "onnx_doc_folder/text_diff_Squeeze_1_13.rst", "onnx_doc_folder/text_diff_Sub_13_14.rst", "onnx_doc_folder/text_diff_Sub_1_13.rst", "onnx_doc_folder/text_diff_Sub_1_14.rst", "onnx_doc_folder/text_diff_Sub_1_6.rst", "onnx_doc_folder/text_diff_Sub_1_7.rst", "onnx_doc_folder/text_diff_Sub_6_13.rst", "onnx_doc_folder/text_diff_Sub_6_14.rst", "onnx_doc_folder/text_diff_Sub_6_7.rst", "onnx_doc_folder/text_diff_Sub_7_13.rst", "onnx_doc_folder/text_diff_Sub_7_14.rst", "onnx_doc_folder/text_diff_Sum_1_13.rst", "onnx_doc_folder/text_diff_Sum_1_6.rst", "onnx_doc_folder/text_diff_Sum_1_8.rst", "onnx_doc_folder/text_diff_Sum_6_13.rst", "onnx_doc_folder/text_diff_Sum_6_8.rst", "onnx_doc_folder/text_diff_Sum_8_13.rst", "onnx_doc_folder/text_diff_Tanh_1_13.rst", "onnx_doc_folder/text_diff_Tanh_1_6.rst", "onnx_doc_folder/text_diff_Tanh_6_13.rst", "onnx_doc_folder/text_diff_Tile_1_13.rst", "onnx_doc_folder/text_diff_Tile_1_6.rst", "onnx_doc_folder/text_diff_Tile_6_13.rst", "onnx_doc_folder/text_diff_TopK_10_11.rst", "onnx_doc_folder/text_diff_TopK_1_10.rst", "onnx_doc_folder/text_diff_TopK_1_11.rst", "onnx_doc_folder/text_diff_Transpose_1_13.rst", "onnx_doc_folder/text_diff_TreeEnsembleClassifier_1_3.rst", "onnx_doc_folder/text_diff_TreeEnsembleRegressor_1_3.rst", "onnx_doc_folder/text_diff_Unsqueeze_11_13.rst", "onnx_doc_folder/text_diff_Unsqueeze_1_11.rst", "onnx_doc_folder/text_diff_Unsqueeze_1_13.rst", "onnx_doc_folder/text_diff_Upsample_1_10.rst", "onnx_doc_folder/text_diff_Upsample_1_7.rst", "onnx_doc_folder/text_diff_Upsample_1_9.rst", "onnx_doc_folder/text_diff_Upsample_7_10.rst", "onnx_doc_folder/text_diff_Upsample_7_9.rst", "onnx_doc_folder/text_diff_Upsample_9_10.rst", "onnx_doc_folder/text_diff_Where_9_16.rst", "onnx_doc_folder/text_diff_Xor_1_7.rst", "onnx_python/backend.rst", "onnx_python/checker.rst", "onnx_python/classes.rst", "onnx_python/compose.rst", "onnx_python/defs.rst", "onnx_python/external_data_helper.rst", "onnx_python/helper.rst", "onnx_python/hub.rst", "onnx_python/index.rst", "onnx_python/mapping.rst", "onnx_python/numpy_helper.rst", "onnx_python/parser.rst", "onnx_python/printer.rst", "onnx_python/serialization.rst", "onnx_python/shape_inference.rst", "onnx_python/tools.rst", "onnx_python/utils.rst", "onnx_python/version_converter.rst", "tutorial_python/concepts.rst", "tutorial_python/converters.rst", "tutorial_python/index.rst", "tutorial_python/python.rst"], "titles": ["Sample operator test code", "Python Documentation of ONNX", "ONNX Operators", "Abs", "Acos", "Acosh", "Add", "And", "ArgMax", "ArgMin", "Asin", "Asinh", "Atan", "Atanh", "AttributeHasValue", "AveragePool", "BatchNormalization", "Bernoulli", "BitShift", "BlackmanWindow", "Cast", "CastLike", "Ceil", "Celu", "CenterCropPad", "Clip", "Col2Im", "Compress", "Concat", "ConcatFromSequence", "Constant", "ConstantOfShape", "Conv", "ConvInteger", "ConvTranspose", "Cos", "Cosh", "CumSum", "DFT", "DepthToSpace", "DequantizeLinear", "Det", "Div", "Dropout", "DynamicQuantizeLinear", "Einsum", "Elu", "Equal", "Erf", "Exp", "Expand", "EyeLike", "Flatten", "Floor", "GRU", "Gather", "GatherElements", "GatherND", "Gemm", "GlobalAveragePool", "GlobalLpPool", "GlobalMaxPool", "Greater", "GreaterOrEqual", "GridSample", "HammingWindow", "HannWindow", "HardSigmoid", "HardSwish", "Hardmax", "Identity", "If", "InstanceNormalization", "IsInf", "IsNaN", "LRN", "LSTM", "LayerNormalization", "LeakyRelu", "Less", "LessOrEqual", "Log", "LogSoftmax", "Loop", "LpNormalization", "LpPool", "MatMul", "MatMulInteger", "Max", "MaxPool", "MaxRoiPool", "MaxUnpool", "Mean", "MeanVarianceNormalization", "MelWeightMatrix", "Min", "Mish", "Mod", "Mul", "Multinomial", "Neg", "NegativeLogLikelihoodLoss", "NonMaxSuppression", "NonZero", "Not", "OneHot", "Optional", "OptionalGetElement", "OptionalHasElement", "Or", "PRelu", "Pad", "Pow", "QLinearConv", "QLinearMatMul", "QuantizeLinear", "RNN", "RandomNormal", "RandomNormalLike", "RandomUniform", "RandomUniformLike", "Range", "Reciprocal", "ReduceL1", "ReduceL2", "ReduceLogSum", "ReduceLogSumExp", "ReduceMax", "ReduceMean", "ReduceMin", "ReduceProd", "ReduceSum", "ReduceSumSquare", "Relu", "Reshape", "Resize", "ReverseSequence", "RoiAlign", "Round", "STFT", "Scan", "Scatter", "ScatterElements", "ScatterND", "Selu", "SequenceAt", "SequenceConstruct", "SequenceEmpty", "SequenceErase", "SequenceInsert", "SequenceLength", "SequenceMap", "Shape", "Shrink", "Sigmoid", "Sign", "Sin", "Sinh", "Size", "Slice", "Softmax", "SoftmaxCrossEntropyLoss", "Softplus", "Softsign", "SpaceToDepth", "Split", "SplitToSequence", "Sqrt", "Squeeze", "StringNormalizer", "Sub", "Sum", "Tan", "Tanh", "TfIdfVectorizer", "ThresholdedRelu", "Tile", "TopK", "Transpose", "Trilu", "Unique", "Unsqueeze", "Upsample", "Where", "Xor", "ai.onnx.ml - ArrayFeatureExtractor", "ai.onnx.ml - Binarizer", "ai.onnx.ml - CastMap", "ai.onnx.ml - CategoryMapper", "ai.onnx.ml - DictVectorizer", "ai.onnx.ml - FeatureVectorizer", "ai.onnx.ml - Imputer", "ai.onnx.ml - LabelEncoder", "ai.onnx.ml - LinearClassifier", "ai.onnx.ml - LinearRegressor", "ai.onnx.ml - Normalizer", "ai.onnx.ml - OneHotEncoder", "ai.onnx.ml - SVMClassifier", "ai.onnx.ml - SVMRegressor", "ai.onnx.ml - Scaler", "ai.onnx.ml - TreeEnsembleClassifier", "ai.onnx.ml - TreeEnsembleRegressor", "ai.onnx.ml - ZipMap", "ai.onnx.preview.training - Adagrad", "ai.onnx.preview.training - Adam", "ai.onnx.preview.training - Gradient", "ai.onnx.preview.training - Momentum", "Abs - 1 vs 13", "Abs - 1 vs 6", "Abs - 6 vs 13", "Add - 13 vs 14", "Add - 1 vs 13", "Add - 1 vs 14", "Add - 1 vs 6", "Add - 1 vs 7", "Add - 6 vs 13", "Add - 6 vs 14", "Add - 6 vs 7", "Add - 7 vs 13", "Add - 7 vs 14", "And - 1 vs 7", "ArgMax - 11 vs 12", "ArgMax - 11 vs 13", "ArgMax - 12 vs 13", "ArgMax - 1 vs 11", "ArgMax - 1 vs 12", "ArgMax - 1 vs 13", "ArgMin - 11 vs 12", "ArgMin - 11 vs 13", "ArgMin - 12 vs 13", "ArgMin - 1 vs 11", "ArgMin - 1 vs 12", "ArgMin - 1 vs 13", "AveragePool - 10 vs 11", "AveragePool - 1 vs 10", "AveragePool - 1 vs 11", "AveragePool - 1 vs 7", "AveragePool - 7 vs 10", "AveragePool - 7 vs 11", "BatchNormalization - 14 vs 15", "BatchNormalization - 1 vs 14", "BatchNormalization - 1 vs 15", "BatchNormalization - 1 vs 6", "BatchNormalization - 1 vs 7", "BatchNormalization - 1 vs 9", "BatchNormalization - 6 vs 14", "BatchNormalization - 6 vs 15", "BatchNormalization - 6 vs 7", "BatchNormalization - 6 vs 9", "BatchNormalization - 7 vs 14", "BatchNormalization - 7 vs 15", "BatchNormalization - 7 vs 9", "BatchNormalization - 9 vs 14", "BatchNormalization - 9 vs 15", "Cast - 1 vs 13", "Cast - 1 vs 6", "Cast - 1 vs 9", "Cast - 6 vs 13", "Cast - 6 vs 9", "Cast - 9 vs 13", "Ceil - 1 vs 13", "Ceil - 1 vs 6", "Ceil - 6 vs 13", "Clip - 11 vs 12", "Clip - 11 vs 13", "Clip - 12 vs 13", "Clip - 1 vs 11", "Clip - 1 vs 12", "Clip - 1 vs 13", "Clip - 1 vs 6", "Clip - 6 vs 11", "Clip - 6 vs 12", "Clip - 6 vs 13", "Compress - 9 vs 11", "Concat - 11 vs 13", "Concat - 1 vs 11", "Concat - 1 vs 13", "Concat - 1 vs 4", "Concat - 4 vs 11", "Concat - 4 vs 13", "Constant - 11 vs 12", "Constant - 11 vs 13", "Constant - 12 vs 13", "Constant - 1 vs 11", "Constant - 1 vs 12", "Constant - 1 vs 13", "Constant - 1 vs 9", "Constant - 9 vs 11", "Constant - 9 vs 12", "Constant - 9 vs 13", "ConvTranspose - 1 vs 11", "Conv - 1 vs 11", "CumSum - 11 vs 14", "DepthToSpace - 11 vs 13", "DepthToSpace - 1 vs 11", "DepthToSpace - 1 vs 13", "DequantizeLinear - 10 vs 13", "Div - 13 vs 14", "Div - 1 vs 13", "Div - 1 vs 14", "Div - 1 vs 6", "Div - 1 vs 7", "Div - 6 vs 13", "Div - 6 vs 14", "Div - 6 vs 7", "Div - 7 vs 13", "Div - 7 vs 14", "Dropout - 10 vs 12", "Dropout - 10 vs 13", "Dropout - 12 vs 13", "Dropout - 1 vs 10", "Dropout - 1 vs 12", "Dropout - 1 vs 13", "Dropout - 1 vs 6", "Dropout - 1 vs 7", "Dropout - 6 vs 10", "Dropout - 6 vs 12", "Dropout - 6 vs 13", "Dropout - 6 vs 7", "Dropout - 7 vs 10", "Dropout - 7 vs 12", "Dropout - 7 vs 13", "Elu - 1 vs 6", "Equal - 11 vs 13", "Equal - 1 vs 11", "Equal - 1 vs 13", "Equal - 1 vs 7", "Equal - 7 vs 11", "Equal - 7 vs 13", "Erf - 9 vs 13", "Exp - 1 vs 13", "Exp - 1 vs 6", "Exp - 6 vs 13", "Expand - 8 vs 13", "Flatten - 11 vs 13", "Flatten - 1 vs 11", "Flatten - 1 vs 13", "Flatten - 1 vs 9", "Flatten - 9 vs 11", "Flatten - 9 vs 13", "Floor - 1 vs 13", "Floor - 1 vs 6", "Floor - 6 vs 13", "GRU - 1 vs 14", "GRU - 1 vs 3", "GRU - 1 vs 7", "GRU - 3 vs 14", "GRU - 3 vs 7", "GRU - 7 vs 14", "GatherElements - 11 vs 13", "GatherND - 11 vs 12", "GatherND - 11 vs 13", "GatherND - 12 vs 13", "Gather - 11 vs 13", "Gather - 1 vs 11", "Gather - 1 vs 13", "Gemm - 11 vs 13", "Gemm - 1 vs 11", "Gemm - 1 vs 13", "Gemm - 1 vs 6", "Gemm - 1 vs 7", "Gemm - 1 vs 9", "Gemm - 6 vs 11", "Gemm - 6 vs 13", "Gemm - 6 vs 7", "Gemm - 6 vs 9", "Gemm - 7 vs 11", "Gemm - 7 vs 13", "Gemm - 7 vs 9", "Gemm - 9 vs 11", "Gemm - 9 vs 13", "GlobalLpPool - 1 vs 2", "GreaterOrEqual - 12 vs 16", "Greater - 1 vs 13", "Greater - 1 vs 7", "Greater - 1 vs 9", "Greater - 7 vs 13", "Greater - 7 vs 9", "Greater - 9 vs 13", "HardSigmoid - 1 vs 6", "Hardmax - 11 vs 13", "Hardmax - 1 vs 11", "Hardmax - 1 vs 13", "Identity - 13 vs 14", "Identity - 13 vs 16", "Identity - 14 vs 16", "Identity - 1 vs 13", "Identity - 1 vs 14", "Identity - 1 vs 16", "If - 11 vs 13", "If - 11 vs 16", "If - 13 vs 16", "If - 1 vs 11", "If - 1 vs 13", "If - 1 vs 16", "InstanceNormalization - 1 vs 6", "IsNaN - 9 vs 13", "LRN - 1 vs 13", "LSTM - 1 vs 14", "LSTM - 1 vs 7", "LSTM - 7 vs 14", "LabelEncoder - 1 vs 2", "LeakyRelu - 1 vs 16", "LeakyRelu - 1 vs 6", "LeakyRelu - 6 vs 16", "LessOrEqual - 12 vs 16", "Less - 1 vs 13", "Less - 1 vs 7", "Less - 1 vs 9", "Less - 7 vs 13", "Less - 7 vs 9", "Less - 9 vs 13", "LogSoftmax - 11 vs 13", "LogSoftmax - 1 vs 11", "LogSoftmax - 1 vs 13", "Log - 1 vs 13", "Log - 1 vs 6", "Log - 6 vs 13", "Loop - 11 vs 13", "Loop - 11 vs 16", "Loop - 13 vs 16", "Loop - 1 vs 11", "Loop - 1 vs 13", "Loop - 1 vs 16", "LpPool - 1 vs 11", "LpPool - 1 vs 2", "LpPool - 2 vs 11", "MatMul - 1 vs 13", "MatMul - 1 vs 9", "MatMul - 9 vs 13", "MaxPool - 10 vs 11", "MaxPool - 10 vs 12", "MaxPool - 11 vs 12", "MaxPool - 1 vs 10", "MaxPool - 1 vs 11", "MaxPool - 1 vs 12", "MaxPool - 1 vs 8", "MaxPool - 8 vs 10", "MaxPool - 8 vs 11", "MaxPool - 8 vs 12", "MaxUnpool - 9 vs 11", "Max - 12 vs 13", "Max - 1 vs 12", "Max - 1 vs 13", "Max - 1 vs 6", "Max - 1 vs 8", "Max - 6 vs 12", "Max - 6 vs 13", "Max - 6 vs 8", "Max - 8 vs 12", "Max - 8 vs 13", "MeanVarianceNormalization - 9 vs 13", "Mean - 1 vs 13", "Mean - 1 vs 6", "Mean - 1 vs 8", "Mean - 6 vs 13", "Mean - 6 vs 8", "Mean - 8 vs 13", "Min - 12 vs 13", "Min - 1 vs 12", "Min - 1 vs 13", "Min - 1 vs 6", "Min - 1 vs 8", "Min - 6 vs 12", "Min - 6 vs 13", "Min - 6 vs 8", "Min - 8 vs 12", "Min - 8 vs 13", "Mod - 10 vs 13", "Mul - 13 vs 14", "Mul - 1 vs 13", "Mul - 1 vs 14", "Mul - 1 vs 6", "Mul - 1 vs 7", "Mul - 6 vs 13", "Mul - 6 vs 14", "Mul - 6 vs 7", "Mul - 7 vs 13", "Mul - 7 vs 14", "Neg - 1 vs 13", "Neg - 1 vs 6", "Neg - 6 vs 13", "NegativeLogLikelihoodLoss - 12 vs 13", "NonMaxSuppression - 10 vs 11", "NonZero - 9 vs 13", "OneHot - 9 vs 11", "OptionalGetElement - 15 vs 18", "OptionalHasElement - 15 vs 18", "Or - 1 vs 7", "PRelu - 1 vs 16", "PRelu - 1 vs 6", "PRelu - 1 vs 7", "PRelu - 1 vs 9", "PRelu - 6 vs 16", "PRelu - 6 vs 7", "PRelu - 6 vs 9", "PRelu - 7 vs 16", "PRelu - 7 vs 9", "PRelu - 9 vs 16", "Pad - 11 vs 13", "Pad - 11 vs 18", "Pad - 13 vs 18", "Pad - 1 vs 11", "Pad - 1 vs 13", "Pad - 1 vs 18", "Pad - 1 vs 2", "Pad - 2 vs 11", "Pad - 2 vs 13", "Pad - 2 vs 18", "Pow - 12 vs 13", "Pow - 12 vs 15", "Pow - 13 vs 15", "Pow - 1 vs 12", "Pow - 1 vs 13", "Pow - 1 vs 15", "Pow - 1 vs 7", "Pow - 7 vs 12", "Pow - 7 vs 13", "Pow - 7 vs 15", "QuantizeLinear - 10 vs 13", "RNN - 1 vs 14", "RNN - 1 vs 7", "RNN - 7 vs 14", "Reciprocal - 1 vs 13", "Reciprocal - 1 vs 6", "Reciprocal - 6 vs 13", "ReduceL1 - 11 vs 13", "ReduceL1 - 1 vs 11", "ReduceL1 - 1 vs 13", "ReduceL2 - 11 vs 13", "ReduceL2 - 1 vs 11", "ReduceL2 - 1 vs 13", "ReduceLogSumExp - 11 vs 13", "ReduceLogSumExp - 1 vs 11", "ReduceLogSumExp - 1 vs 13", "ReduceLogSum - 11 vs 13", "ReduceLogSum - 1 vs 11", "ReduceLogSum - 1 vs 13", "ReduceMax - 11 vs 12", "ReduceMax - 11 vs 13", "ReduceMax - 12 vs 13", "ReduceMax - 1 vs 11", "ReduceMax - 1 vs 12", "ReduceMax - 1 vs 13", "ReduceMean - 11 vs 13", "ReduceMean - 1 vs 11", "ReduceMean - 1 vs 13", "ReduceMin - 11 vs 12", "ReduceMin - 11 vs 13", "ReduceMin - 12 vs 13", "ReduceMin - 1 vs 11", "ReduceMin - 1 vs 12", "ReduceMin - 1 vs 13", "ReduceProd - 11 vs 13", "ReduceProd - 1 vs 11", "ReduceProd - 1 vs 13", "ReduceSumSquare - 11 vs 13", "ReduceSumSquare - 1 vs 11", "ReduceSumSquare - 1 vs 13", "ReduceSum - 11 vs 13", "ReduceSum - 1 vs 11", "ReduceSum - 1 vs 13", "Relu - 13 vs 14", "Relu - 1 vs 13", "Relu - 1 vs 14", "Relu - 1 vs 6", "Relu - 6 vs 13", "Relu - 6 vs 14", "Reshape - 13 vs 14", "Reshape - 1 vs 13", "Reshape - 1 vs 14", "Reshape - 1 vs 5", "Reshape - 5 vs 13", "Reshape - 5 vs 14", "Resize - 10 vs 11", "Resize - 10 vs 13", "Resize - 10 vs 18", "Resize - 11 vs 13", "Resize - 11 vs 18", "Resize - 13 vs 18", "RoiAlign - 10 vs 16", "Scan - 11 vs 16", "Scan - 8 vs 11", "Scan - 8 vs 16", "Scan - 8 vs 9", "Scan - 9 vs 11", "Scan - 9 vs 16", "ScatterElements - 11 vs 13", "ScatterElements - 11 vs 16", "ScatterElements - 11 vs 18", "ScatterElements - 13 vs 16", "ScatterElements - 13 vs 18", "ScatterElements - 16 vs 18", "ScatterND - 11 vs 13", "ScatterND - 11 vs 16", "ScatterND - 11 vs 18", "ScatterND - 13 vs 16", "ScatterND - 13 vs 18", "ScatterND - 16 vs 18", "Scatter - 9 vs 11", "Selu - 1 vs 6", "Shape - 13 vs 15", "Shape - 1 vs 13", "Shape - 1 vs 15", "Sigmoid - 1 vs 13", "Sigmoid - 1 vs 6", "Sigmoid - 6 vs 13", "Sign - 9 vs 13", "Size - 1 vs 13", "Slice - 10 vs 11", "Slice - 10 vs 13", "Slice - 11 vs 13", "Slice - 1 vs 10", "Slice - 1 vs 11", "Slice - 1 vs 13", "SoftmaxCrossEntropyLoss - 12 vs 13", "Softmax - 11 vs 13", "Softmax - 1 vs 11", "Softmax - 1 vs 13", "SpaceToDepth - 1 vs 13", "Split - 11 vs 13", "Split - 1 vs 11", "Split - 1 vs 13", "Split - 1 vs 2", "Split - 2 vs 11", "Split - 2 vs 13", "Sqrt - 1 vs 13", "Sqrt - 1 vs 6", "Sqrt - 6 vs 13", "Squeeze - 11 vs 13", "Squeeze - 1 vs 11", "Squeeze - 1 vs 13", "Sub - 13 vs 14", "Sub - 1 vs 13", "Sub - 1 vs 14", "Sub - 1 vs 6", "Sub - 1 vs 7", "Sub - 6 vs 13", "Sub - 6 vs 14", "Sub - 6 vs 7", "Sub - 7 vs 13", "Sub - 7 vs 14", "Sum - 1 vs 13", "Sum - 1 vs 6", "Sum - 1 vs 8", "Sum - 6 vs 13", "Sum - 6 vs 8", "Sum - 8 vs 13", "Tanh - 1 vs 13", "Tanh - 1 vs 6", "Tanh - 6 vs 13", "Tile - 1 vs 13", "Tile - 1 vs 6", "Tile - 6 vs 13", "TopK - 10 vs 11", "TopK - 1 vs 10", "TopK - 1 vs 11", "Transpose - 1 vs 13", "TreeEnsembleClassifier - 1 vs 3", "TreeEnsembleRegressor - 1 vs 3", "Unsqueeze - 11 vs 13", "Unsqueeze - 1 vs 11", "Unsqueeze - 1 vs 13", "Upsample - 1 vs 10", "Upsample - 1 vs 7", "Upsample - 1 vs 9", "Upsample - 7 vs 10", "Upsample - 7 vs 9", "Upsample - 9 vs 10", "Where - 9 vs 16", "Xor - 1 vs 7", "onnx.backend", "onnx.checker", "Protos", "onnx.compose", "onnx.defs", "onnx.external_data_helper", "onnx.helper", "onnx.hub", "API Reference", "onnx.mapping", "onnx.numpy_helper", "onnx.parser", "onnx.printer", "Serialization", "onnx.shape_inference", "onnx.tools", "onnx.utils", "onnx.version_converter", "ONNX Concepts", "Converters", "Introduction to ONNX", "ONNX with Python"], "terms": {"mani": [0, 140, 151, 187, 202, 673, 689, 690, 692], "exampl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 671, 673, 674, 679, 684, 686, 689, 690, 691], "from": [0, 7, 15, 16, 17, 19, 20, 21, 24, 26, 27, 28, 31, 32, 33, 34, 37, 39, 40, 43, 47, 51, 52, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72, 75, 77, 79, 80, 82, 83, 85, 86, 87, 89, 90, 91, 94, 99, 102, 103, 105, 109, 111, 113, 114, 115, 117, 118, 119, 120, 134, 135, 137, 140, 141, 142, 145, 148, 149, 151, 152, 159, 160, 164, 165, 166, 168, 169, 174, 177, 180, 181, 183, 184, 189, 192, 196, 202, 203, 205, 671, 673, 674, 675, 676, 677, 678, 679, 680, 684, 686, 687, 688, 689, 691, 692], "document": [0, 19, 21, 65, 66, 135, 174, 673, 677, 689, 691, 692], "end": [0, 2, 15, 26, 32, 33, 34, 83, 85, 89, 91, 111, 113, 140, 152, 159, 174, 200, 201, 673, 679, 689, 692], "call": [0, 2, 34, 203, 204, 205, 206, 673, 676, 681, 684, 689, 690, 692], "function": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 671, 672, 673, 674, 676, 684, 686, 691], "expect": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 203, 204, 206, 674, 690, 692], "check": [0, 2, 6, 7, 18, 42, 47, 58, 62, 63, 79, 80, 88, 92, 95, 97, 98, 109, 110, 112, 135, 170, 171, 183, 184, 203, 204, 206, 671, 672, 685, 690, 692], "runtim": [0, 1, 2, 83, 689, 690, 692], "return": [0, 7, 14, 17, 19, 20, 37, 38, 47, 62, 63, 65, 66, 71, 74, 79, 80, 83, 94, 103, 104, 107, 108, 109, 139, 140, 152, 167, 169, 177, 179, 180, 183, 184, 196, 200, 201, 671, 673, 674, 675, 676, 677, 678, 680, 681, 682, 684, 685, 688, 689, 692], "output": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 671, 673, 674, 677, 679, 684, 685, 686, 687, 690, 691, 692], "given": [0, 4, 5, 10, 11, 12, 13, 20, 21, 24, 25, 27, 31, 35, 36, 37, 44, 48, 49, 50, 55, 57, 64, 69, 71, 81, 82, 83, 84, 90, 101, 111, 135, 137, 140, 141, 147, 149, 155, 156, 157, 160, 161, 163, 166, 172, 173, 176, 177, 178, 179, 181, 182, 189, 203, 204, 205, 677, 678, 692], "here": [0, 83, 140, 174, 684, 689, 690, 692], "i": [0, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 75, 76, 77, 78, 79, 80, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 684, 685, 686, 687, 688, 691, 692], "one": [0, 3, 14, 17, 19, 20, 22, 30, 31, 32, 34, 41, 43, 45, 46, 50, 51, 53, 54, 55, 56, 65, 66, 67, 68, 69, 76, 77, 78, 82, 83, 85, 94, 99, 100, 101, 105, 110, 112, 116, 117, 118, 119, 120, 122, 133, 134, 135, 136, 138, 140, 141, 144, 151, 152, 153, 154, 160, 161, 162, 167, 168, 169, 174, 175, 179, 180, 181, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 202, 203, 204, 205, 206, 671, 673, 674, 676, 679, 684, 689, 690, 692], "implement": [0, 1, 2, 17, 26, 43, 54, 76, 77, 83, 116, 169, 679, 684, 689, 690, 691], "base": [0, 2, 15, 32, 33, 34, 83, 85, 89, 94, 102, 105, 112, 113, 174, 185, 186, 187, 200, 201, 203, 204, 205, 206, 671, 673, 676, 677, 679, 689, 692], "onnxruntim": [0, 2, 689, 692], "type": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 671, 673, 676, 679, 680, 681, 684, 685, 690, 691, 692], "import": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 203, 204, 206, 674, 675, 679, 680, 684, 686, 689, 692], "ani": [0, 1, 6, 14, 15, 20, 26, 28, 29, 32, 33, 34, 37, 42, 55, 56, 57, 83, 85, 89, 91, 94, 98, 102, 105, 112, 113, 118, 120, 134, 136, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 159, 170, 176, 180, 181, 185, 189, 192, 205, 671, 676, 677, 678, 681, 685, 686, 689, 690, 692], "sequenc": [0, 28, 29, 45, 54, 70, 71, 76, 83, 106, 107, 108, 116, 121, 136, 140, 145, 146, 147, 148, 149, 150, 151, 166, 174, 188, 194, 200, 202, 671, 673, 677, 689], "numpi": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 203, 204, 206, 677, 680, 681, 689, 690, 692], "np": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 203, 204, 206, 690], "onnx": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 673, 679, 684, 690], "def": [0, 14, 77, 679, 680, 681, 689, 690, 692], "node": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 200, 201, 203, 204, 205, 206, 671, 673, 674, 677, 684, 686, 690, 691, 692], "nodeproto": [0, 671, 677, 679, 684, 686, 692], "input": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 671, 673, 674, 677, 679, 681, 684, 685, 686, 687, 688, 690, 691], "ndarrai": [0, 681, 692], "name": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 673, 674, 675, 676, 677, 678, 679, 680, 681, 684, 686, 687, 689, 690, 692], "str": [0, 14, 20, 21, 28, 52, 178, 181, 671, 672, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 689], "kwarg": [0, 14, 671, 675, 677, 680, 686], "none": [0, 14, 20, 21, 77, 83, 101, 108, 123, 124, 126, 127, 128, 129, 130, 131, 132, 142, 143, 161, 169, 174, 180, 193, 194, 197, 198, 200, 201, 671, 672, 674, 676, 677, 678, 681, 684, 685, 686, 687, 692], "build": [0, 1, 682, 689, 692], "model": [0, 43, 71, 83, 102, 193, 194, 205, 206, 671, 672, 673, 674, 676, 678, 679, 685, 686, 687, 688, 689, 690], "present_input": 0, "x": [0, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 89, 90, 91, 93, 96, 97, 98, 100, 101, 103, 104, 109, 110, 111, 112, 113, 114, 115, 116, 122, 133, 135, 136, 137, 138, 139, 140, 144, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 684, 689, 692], "present_output": 0, "input_type_proto": [0, 20, 21, 70, 83, 107, 108, 151], "len": [0, 20, 21, 28, 52, 77, 149, 159, 178, 180, 689], "del": [0, 692], "output_type_proto": [0, 20, 21, 70, 71, 151], "inputs_vi": 0, "_extract_value_info": 0, "arr": [0, 681], "arr_nam": 0, "input_typ": 0, "zip": [0, 140, 180], "outputs_vi": 0, "output_typ": [0, 105], "graph": [0, 1, 14, 71, 83, 140, 151, 205, 673, 674, 675, 677, 679, 680, 684, 685, 686, 689, 692], "helper": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 203, 204, 206, 673, 679, 680, 692], "make_graph": [0, 71, 83, 140, 151, 677, 692], "producer_nam": [0, 673, 674, 689, 692], "backend": [0, 679, 690], "opset_import": [0, 43, 70, 71, 83, 140, 141, 182, 203, 204, 206, 673, 677, 692], "To": [0, 97, 205, 676], "make": [0, 64, 77, 83, 91, 176, 200, 201, 689, 690, 692], "sure": 0, "produc": [0, 2, 3, 17, 20, 21, 22, 26, 30, 43, 45, 46, 53, 56, 67, 68, 71, 78, 83, 90, 91, 100, 103, 105, 110, 112, 122, 133, 137, 140, 141, 142, 143, 144, 150, 153, 154, 159, 162, 167, 174, 175, 189, 673, 674, 689, 692], "same": [0, 6, 8, 9, 16, 17, 20, 21, 24, 28, 29, 30, 37, 40, 42, 45, 48, 50, 51, 54, 56, 58, 59, 60, 61, 64, 69, 71, 72, 76, 77, 82, 88, 89, 91, 92, 93, 95, 97, 98, 102, 105, 110, 112, 113, 114, 115, 116, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 140, 141, 142, 143, 146, 149, 151, 153, 155, 160, 168, 170, 171, 176, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 199, 200, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 673, 674, 677, 684, 685, 689, 690, 692], "opset_vers": [0, 673], "after": [0, 16, 26, 38, 83, 84, 111, 135, 152, 161, 165, 166, 169, 182, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 676, 690, 692], "opset": [0, 6, 42, 98, 142, 143, 170, 677, 678, 679, 688, 691], "chang": [0, 6, 20, 34, 37, 42, 83, 98, 140, 142, 143, 170, 191, 673, 689, 690, 692], "By": [0, 29, 34, 37, 38, 39, 51, 134, 174, 178, 205, 674], "default": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 188, 192, 193, 194, 203, 204, 673, 674, 677, 678, 685, 689, 691], "us": [0, 15, 16, 17, 19, 20, 23, 32, 33, 34, 38, 39, 43, 45, 51, 54, 58, 60, 64, 65, 66, 72, 76, 77, 83, 85, 89, 90, 91, 93, 94, 96, 99, 102, 105, 111, 113, 116, 118, 120, 135, 137, 140, 141, 142, 143, 152, 159, 165, 166, 174, 177, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 205, 206, 671, 673, 674, 676, 677, 681, 684, 689, 690, 691, 692], "since_vers": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 673], "produce_opset_vers": 0, "get_schema": [0, 675, 680], "op_typ": [0, 673, 675, 677, 680, 684, 692], "domain": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 673, 674, 675, 677, 680, 691, 692], "make_operatorsetid": [0, 677, 692], "make_model_gen_vers": [0, 692], "ar": [0, 6, 15, 16, 18, 20, 24, 26, 27, 32, 33, 34, 38, 39, 40, 42, 44, 45, 50, 51, 54, 55, 56, 57, 59, 60, 61, 64, 71, 72, 74, 75, 76, 77, 83, 84, 85, 89, 90, 91, 93, 94, 98, 102, 103, 105, 111, 112, 113, 116, 118, 120, 134, 135, 137, 139, 140, 141, 142, 145, 148, 149, 152, 159, 164, 169, 170, 174, 177, 179, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192, 194, 195, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 673, 674, 677, 685, 689, 690, 692], "ones": [0, 31, 43, 50, 51, 54, 76, 101, 116, 161, 196, 692], "sess": [0, 692], "inferencesess": [0, 692], "serializetostr": [0, 684, 692], "feed": [0, 205], "valu": [0, 5, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 43, 44, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 69, 71, 72, 73, 76, 77, 82, 83, 85, 87, 89, 91, 94, 99, 101, 102, 105, 106, 107, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 148, 149, 152, 153, 157, 159, 160, 161, 163, 164, 165, 166, 168, 169, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 196, 200, 201, 202, 203, 204, 205, 206, 673, 674, 676, 677, 681, 685, 686, 689, 691], "result": [0, 6, 7, 8, 9, 18, 20, 32, 33, 34, 42, 47, 62, 63, 69, 79, 80, 86, 87, 88, 91, 92, 95, 97, 98, 102, 103, 105, 109, 113, 114, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 159, 169, 170, 171, 174, 177, 179, 184, 194, 203, 204, 206, 671, 685, 689, 690, 692], "run": [0, 16, 43, 71, 83, 140, 151, 204, 671, 687, 689, 690, 692], "assert_allclos": 0, "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 673, 676, 677, 678, 680, 684, 686, 689, 690, 691, 692], "introduc": [1, 690, 692], "packag": [1, 64, 675, 689, 690, 692], "A": [1, 6, 7, 14, 19, 28, 30, 37, 42, 44, 47, 50, 52, 54, 58, 62, 63, 65, 66, 76, 79, 80, 83, 86, 87, 93, 96, 97, 98, 101, 108, 109, 111, 112, 116, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 140, 161, 165, 166, 170, 176, 177, 178, 179, 180, 184, 187, 188, 189, 191, 192, 193, 200, 201, 203, 204, 205, 206, 673, 674, 678, 679, 684, 689, 691], "tutori": 1, "show": [1, 140, 679, 684, 689, 690, 691, 692], "how": [1, 94, 135, 140, 201, 679, 684, 689, 691, 692], "an": [1, 6, 8, 9, 14, 15, 16, 17, 20, 24, 25, 26, 27, 32, 33, 34, 37, 38, 42, 43, 45, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 69, 71, 75, 76, 78, 82, 83, 85, 87, 89, 90, 91, 97, 98, 101, 102, 106, 107, 108, 111, 112, 113, 114, 116, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 142, 143, 145, 147, 148, 149, 152, 158, 159, 160, 161, 168, 170, 174, 176, 177, 178, 180, 181, 185, 187, 188, 189, 190, 192, 196, 199, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 684, 687, 691, 692], "through": [1, 37, 83, 137, 159, 174, 680, 689, 692], "api": [1, 689, 691, 692], "can": [1, 2, 6, 15, 18, 20, 24, 26, 27, 32, 33, 34, 37, 38, 40, 42, 43, 51, 57, 58, 77, 83, 85, 89, 91, 94, 97, 98, 102, 110, 112, 113, 115, 134, 135, 136, 139, 140, 141, 142, 143, 151, 152, 158, 161, 165, 166, 169, 170, 174, 180, 181, 191, 192, 199, 200, 201, 203, 204, 205, 206, 671, 672, 673, 674, 677, 679, 680, 681, 684, 686, 689, 690, 692], "consum": [1, 15, 32, 33, 34, 40, 54, 59, 60, 61, 76, 83, 85, 89, 90, 113, 114, 115, 116, 137, 690], "specif": [1, 39, 45, 141, 142, 143, 151, 164, 169, 174, 203, 204, 205, 206, 673, 675, 679, 680, 689, 690, 692], "describ": [1, 16, 19, 65, 66, 69, 72, 77, 82, 83, 135, 137, 160, 206, 671, 673, 679, 684, 689, 690, 691, 692], "last": [1, 8, 9, 54, 76, 77, 84, 105, 111, 116, 140, 143, 148, 152, 166, 185, 191, 692], "section": [1, 2, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 679, 684, 689, 690, 692], "It": [1, 16, 18, 25, 33, 34, 37, 38, 40, 43, 44, 48, 50, 54, 55, 56, 57, 75, 76, 83, 87, 101, 102, 107, 113, 114, 115, 116, 134, 135, 136, 139, 140, 141, 142, 145, 148, 149, 150, 151, 153, 155, 159, 161, 166, 169, 174, 181, 182, 189, 192, 203, 204, 205, 206, 673, 674, 677, 678, 689, 690, 691, 692], "list": [1, 2, 16, 28, 54, 76, 83, 88, 92, 93, 95, 111, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 140, 159, 165, 168, 169, 171, 174, 178, 181, 190, 192, 196, 197, 198, 200, 203, 204, 205, 206, 671, 673, 674, 675, 677, 678, 679, 680, 681, 684, 686, 687, 690, 691, 692], "all": [1, 2, 3, 6, 8, 9, 15, 16, 17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 39, 41, 42, 43, 45, 47, 48, 50, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 69, 70, 71, 76, 77, 79, 80, 83, 85, 88, 89, 91, 92, 93, 94, 95, 98, 99, 101, 103, 105, 106, 107, 111, 116, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 140, 141, 142, 143, 146, 152, 155, 159, 161, 164, 165, 166, 168, 169, 170, 171, 174, 176, 178, 179, 180, 181, 182, 183, 189, 190, 191, 195, 196, 199, 200, 201, 203, 204, 205, 206, 671, 673, 674, 675, 676, 677, 678, 679, 680, 689, 690, 692], "exist": [1, 675, 680, 681, 684, 689, 692], "oper": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 674, 677, 679, 685, 687, 691, 692], "follow": [1, 6, 15, 16, 20, 26, 32, 33, 34, 38, 39, 42, 43, 45, 50, 54, 56, 57, 58, 76, 77, 85, 89, 91, 94, 98, 111, 112, 113, 116, 139, 140, 143, 159, 161, 170, 203, 204, 205, 673, 679, 684, 686, 689, 690, 692], "version": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 673, 674, 677, 678, 688, 690, 691, 692], "below": [1, 16, 39, 54, 57, 76, 83, 116, 121, 141, 142, 179, 180, 203, 204, 205, 689], "introduct": 1, "concept": [1, 205, 691], "convert": [1, 20, 21, 43, 44, 134, 137, 187, 188, 189, 192, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 673, 676, 677, 681, 688, 689, 691, 692], "refer": [1, 16, 24, 27, 64, 77, 83, 86, 87, 103, 111, 114, 115, 135, 140, 159, 180, 183, 203, 673, 692], "data": [1, 3, 8, 9, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 32, 33, 34, 39, 43, 44, 46, 50, 51, 53, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 75, 78, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 102, 105, 110, 111, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 141, 142, 143, 144, 146, 147, 149, 152, 153, 154, 158, 159, 162, 164, 167, 168, 171, 175, 178, 180, 181, 182, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 671, 673, 676, 677, 681, 684, 685, 689, 690], "structur": [1, 673, 689, 692], "out": [2, 16, 20, 55, 56, 57, 64, 71, 72, 83, 94, 102, 135, 141, 142, 145, 148, 149, 152, 673, 690], "For": [2, 6, 15, 16, 18, 20, 26, 32, 33, 34, 37, 38, 42, 54, 56, 59, 60, 61, 64, 69, 71, 72, 75, 76, 77, 82, 85, 89, 91, 98, 111, 112, 113, 114, 115, 116, 135, 136, 139, 140, 141, 142, 151, 152, 159, 160, 170, 174, 176, 178, 181, 189, 192, 195, 196, 200, 201, 203, 204, 205, 206, 671, 673, 679, 687, 692], "each": [2, 15, 16, 18, 24, 26, 27, 32, 33, 34, 45, 56, 57, 64, 69, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 111, 113, 135, 136, 137, 138, 140, 141, 142, 143, 151, 159, 160, 161, 165, 166, 171, 174, 180, 181, 182, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 203, 204, 205, 671, 673, 674, 676, 689, 690, 692], "usag": [2, 83, 140], "guid": 2, "paramet": [2, 34, 54, 75, 76, 83, 116, 117, 118, 120, 140, 168, 183, 189, 200, 201, 203, 204, 206, 672, 674, 676, 677, 678, 681, 682, 684, 685, 686, 687, 688, 689, 692], "line": [2, 677, 689, 690, 692], "histori": [2, 78, 110, 183], "also": [2, 16, 34, 37, 43, 50, 51, 54, 56, 58, 64, 76, 77, 83, 91, 97, 101, 105, 116, 134, 140, 165, 174, 203, 205, 673, 676, 689, 690, 692], "includ": [2, 6, 15, 37, 42, 44, 94, 98, 112, 134, 135, 152, 170, 176, 179, 182, 183, 205, 674, 684, 689, 690, 692], "tabl": [2, 83, 673], "detail": [2, 6, 7, 16, 18, 20, 21, 34, 42, 43, 47, 54, 58, 62, 63, 76, 79, 80, 88, 92, 95, 97, 98, 109, 110, 112, 114, 115, 116, 135, 170, 171, 183, 184, 188, 206, 691], "its": [2, 6, 18, 33, 42, 56, 75, 83, 98, 110, 112, 113, 114, 140, 141, 142, 143, 159, 161, 170, 174, 180, 189, 192, 203, 205, 206, 673, 678, 689, 690, 692], "done": [2, 43, 58, 195, 205, 690, 692], "md": [2, 77, 690], "which": [2, 8, 9, 15, 16, 18, 20, 23, 25, 27, 28, 29, 32, 33, 34, 37, 38, 40, 43, 44, 52, 55, 56, 64, 69, 74, 75, 77, 82, 83, 84, 85, 89, 91, 93, 94, 102, 103, 105, 111, 113, 115, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 140, 141, 142, 143, 151, 158, 160, 165, 166, 169, 174, 176, 177, 181, 188, 189, 191, 192, 195, 197, 199, 200, 203, 204, 205, 671, 673, 676, 677, 684, 687, 689, 690, 692], "One": [2, 111, 116, 135, 165, 166, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 690], "found": [2, 26, 174, 188, 189, 192, 196, 205, 671, 678, 692], "sampl": [2, 16, 64, 83, 94, 99, 101, 135, 137, 139, 140, 151, 161], "test": [2, 14, 16, 19, 34, 43, 64, 65, 66, 139, 152, 671, 672, 673, 690, 691], "code": [2, 83, 140, 203, 204, 206, 684, 689, 690, 692], "ai": [2, 675, 680, 689, 692], "ml": [2, 673, 675, 689, 690, 692], "preview": [2, 675], "train": [2, 16, 43, 77, 174, 673, 675, 689, 692], "differ": [2, 17, 20, 50, 71, 77, 83, 103, 110, 135, 136, 205, 206, 673, 689, 690, 692], "ab": [2, 16, 28, 52, 64, 72, 82, 123, 137, 160, 163, 167, 688, 689, 692], "13": [2, 15, 26, 32, 34, 54, 64, 87, 89, 91, 113, 114, 116, 136, 680, 688, 689, 692], "6": [2, 7, 15, 26, 27, 28, 31, 32, 33, 34, 37, 39, 44, 50, 54, 56, 57, 59, 61, 64, 68, 73, 76, 83, 87, 89, 91, 97, 101, 102, 104, 109, 112, 116, 121, 123, 124, 130, 131, 132, 135, 136, 140, 143, 149, 152, 155, 158, 159, 164, 165, 169, 174, 177, 179, 183, 184, 192, 204, 206, 680, 688, 689, 692], "1": [2, 5, 11, 12, 13, 14, 17, 18, 19, 21, 23, 24, 26, 27, 29, 31, 33, 35, 36, 37, 38, 40, 41, 44, 45, 48, 50, 51, 56, 57, 64, 65, 66, 68, 73, 77, 87, 91, 93, 94, 96, 97, 101, 102, 103, 105, 106, 107, 108, 113, 114, 115, 121, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 151, 153, 155, 156, 157, 161, 166, 169, 172, 174, 175, 179, 180, 183, 671, 674, 679, 680, 686, 688, 689, 690, 692], "aco": 2, "7": [2, 14, 24, 26, 28, 32, 33, 34, 37, 55, 56, 57, 59, 61, 64, 73, 87, 89, 91, 97, 105, 111, 113, 123, 124, 130, 131, 132, 135, 136, 138, 143, 149, 159, 164, 165, 174, 177, 179, 183, 204, 206, 680, 688, 689, 692], "acosh": 2, "9": [2, 14, 15, 24, 26, 28, 32, 33, 34, 37, 39, 44, 54, 55, 56, 59, 61, 64, 76, 87, 89, 102, 112, 113, 116, 121, 123, 124, 130, 131, 132, 135, 136, 138, 143, 149, 164, 165, 167, 171, 177, 179, 204, 680, 689, 690, 692], "add": [2, 7, 15, 32, 34, 47, 62, 77, 78, 79, 83, 85, 89, 92, 109, 110, 111, 140, 142, 143, 151, 171, 183, 184, 203, 204, 206, 674, 677, 684, 688, 689, 690, 692], "14": [2, 15, 20, 26, 28, 32, 34, 39, 58, 64, 89, 131, 135, 136, 143, 164, 680, 688, 689, 692], "And": [2, 15, 89, 688, 689, 692], "argmax": [2, 690], "12": [2, 15, 26, 28, 32, 33, 34, 37, 39, 54, 64, 87, 105, 113, 116, 123, 124, 128, 130, 131, 132, 134, 135, 136, 140, 143, 149, 164, 165, 170, 171, 174, 679, 680, 689, 692], "11": [2, 26, 33, 43, 54, 64, 87, 116, 136, 164, 680, 689, 690, 692], "argmin": 2, "asin": 2, "asinh": 2, "atan": 2, "atanh": 2, "attributehasvalu": 2, "18": [2, 15, 32, 34, 39, 54, 89, 98, 113, 116, 128, 164, 679, 689, 692], "averagepool": [2, 59, 688], "10": [2, 5, 8, 9, 14, 17, 19, 24, 26, 28, 31, 32, 34, 37, 38, 39, 47, 54, 55, 58, 64, 65, 66, 81, 83, 94, 96, 98, 101, 105, 116, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 141, 143, 149, 151, 152, 164, 165, 176, 179, 204, 680, 689, 690, 692], "batchnorm": [2, 688], "15": [2, 15, 24, 26, 28, 32, 33, 34, 37, 54, 64, 89, 91, 113, 116, 123, 135, 136, 143, 164, 680, 689, 690, 692], "bernoulli": 2, "bitshift": 2, "blackmanwindow": 2, "17": [2, 15, 26, 32, 33, 34, 54, 89, 116, 143, 164, 174], "cast": [2, 21, 44, 77, 105, 187, 196, 688, 689, 690, 692], "castlik": 2, "ceil": [2, 15, 32, 33, 75, 85, 89, 113, 121, 135, 137, 688], "celu": 2, "centercroppad": 2, "clip": [2, 44, 46, 54, 67, 76, 78, 110, 116, 133, 144, 175, 688], "col2im": 2, "compress": 2, "concat": [2, 29, 54, 76, 116, 140, 688], "4": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 95, 97, 98, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 112, 115, 116, 121, 122, 123, 124, 125, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 196, 203, 204, 206, 680, 686, 688, 689, 692], "concatfromsequ": 2, "constant": [2, 15, 71, 83, 89, 111, 140, 203, 204, 673, 689, 692], "constantofshap": 2, "conv": [2, 205, 673, 689], "convinteg": 2, "convtranspos": 2, "co": [2, 19, 65, 66, 139], "cosh": 2, "cumsum": 2, "dft": [2, 94, 139], "depthtospac": 2, "dequantizelinear": 2, "det": 2, "div": [2, 688], "dropout": [2, 83, 688, 689], "dynamicquantizelinear": 2, "einsum": 2, "elu": [2, 54, 76, 116, 688], "equal": [2, 6, 8, 9, 15, 16, 24, 26, 32, 33, 34, 38, 40, 42, 50, 57, 59, 60, 61, 85, 89, 91, 98, 101, 112, 113, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 140, 143, 158, 161, 165, 166, 168, 170, 174, 182, 183, 188, 189, 191, 200, 685, 688, 689, 690, 692], "erf": [2, 690], "exp": [2, 23, 46, 81, 96, 126, 144, 154, 160, 162, 688], "expand": [2, 181], "8": [2, 15, 18, 20, 21, 24, 26, 28, 30, 32, 33, 34, 39, 40, 41, 44, 54, 56, 59, 61, 64, 73, 76, 83, 87, 91, 94, 97, 105, 113, 114, 115, 116, 121, 123, 124, 127, 129, 130, 131, 132, 135, 136, 138, 139, 143, 149, 159, 164, 165, 169, 174, 177, 179, 183, 189, 196, 204, 206, 679, 680, 688, 689, 692], "eyelik": 2, "flatten": [2, 14, 16, 20, 21, 27, 30, 83, 89, 91, 180, 692], "floor": [2, 15, 38, 75, 89, 94, 135, 139, 182, 688], "gru": [2, 205, 688], "3": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 95, 97, 98, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 197, 198, 203, 204, 206, 680, 686, 688, 689, 690, 692], "gather": [2, 56, 57, 102], "gatherel": [2, 141, 142], "gathernd": [2, 102, 143], "gemm": [2, 205, 688, 689], "globalaveragepool": 2, "globallppool": [2, 688], "2": [2, 5, 6, 8, 9, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 69, 70, 71, 73, 75, 76, 77, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 105, 107, 108, 112, 113, 115, 116, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149, 152, 153, 158, 159, 160, 161, 164, 166, 167, 168, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 190, 195, 203, 204, 205, 206, 673, 680, 688, 689, 690, 692], "globalmaxpool": 2, "greater": [2, 15, 26, 32, 33, 34, 38, 83, 85, 89, 91, 105, 113, 135, 182, 186, 688, 689, 692], "greaterorequ": 2, "16": [2, 15, 18, 26, 28, 32, 33, 34, 54, 89, 94, 116, 124, 135, 139, 164, 680, 689, 690, 692], "gridsampl": 2, "hammingwindow": 2, "hannwindow": 2, "hardsigmoid": [2, 54, 68, 76, 116, 688], "hardswish": 2, "hardmax": 2, "ident": [2, 14, 18, 83, 131, 140, 151, 161, 174, 192, 692], "If": [2, 6, 7, 8, 9, 14, 15, 16, 18, 19, 24, 26, 27, 31, 32, 33, 34, 37, 38, 42, 43, 45, 47, 51, 52, 54, 57, 58, 62, 64, 65, 66, 76, 77, 79, 83, 85, 87, 89, 91, 97, 98, 101, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 152, 153, 155, 159, 161, 165, 166, 167, 168, 169, 170, 174, 177, 179, 180, 184, 187, 188, 191, 192, 194, 196, 197, 203, 204, 205, 206, 673, 674, 676, 677, 678, 684, 685, 687, 690], "instancenorm": [2, 688], "isinf": 2, "isnan": [2, 689], "lrn": 2, "lstm": [2, 54, 116, 205, 688], "layernorm": 2, "leakyrelu": [2, 54, 76, 116, 688], "less": [2, 27, 34, 38, 102, 135, 140, 143, 688, 690, 692], "lessorequ": 2, "log": [2, 54, 76, 82, 99, 101, 116, 125, 126, 161, 162, 688], "logsoftmax": 2, "loop": [2, 140, 141, 143, 673, 687, 691], "lpnormal": 2, "lppool": [2, 60, 688], "matmul": [2, 87, 114, 689, 690, 692], "matmulinteg": 2, "max": [2, 8, 15, 23, 25, 44, 54, 61, 67, 68, 75, 76, 89, 90, 116, 121, 127, 133, 135, 137, 140, 142, 143, 168, 174, 195, 201, 688], "maxpool": [2, 61, 91, 688, 689], "maxroipool": 2, "maxunpool": 2, "mean": [2, 8, 9, 15, 16, 24, 27, 28, 29, 32, 33, 34, 37, 40, 44, 52, 54, 55, 56, 59, 69, 72, 76, 77, 82, 84, 85, 89, 93, 97, 101, 102, 105, 111, 113, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 138, 140, 141, 142, 145, 148, 149, 152, 159, 160, 161, 165, 166, 168, 177, 180, 181, 199, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 673, 674, 679, 684, 685, 688, 689, 690, 692], "meanvariancenorm": 2, "melweightmatrix": 2, "min": [2, 9, 23, 25, 44, 54, 57, 67, 68, 75, 76, 116, 129, 135, 142, 143, 201, 688], "mish": 2, "mod": [2, 32], "mul": [2, 77, 142, 143, 688], "multinomi": [2, 193], "neg": [2, 20, 24, 27, 28, 37, 40, 52, 55, 56, 69, 73, 77, 82, 101, 105, 111, 115, 135, 140, 141, 142, 145, 148, 149, 152, 154, 159, 160, 165, 166, 167, 168, 177, 179, 180, 181, 674, 686, 688], "negativeloglikelihoodloss": 2, "nonmaxsuppress": 2, "nonzero": [2, 16, 20, 43, 183], "Not": [2, 77, 83], "onehot": 2, "option": [2, 15, 16, 17, 25, 27, 31, 32, 33, 34, 38, 40, 43, 51, 54, 56, 58, 70, 71, 73, 75, 76, 77, 83, 87, 89, 91, 99, 101, 102, 105, 107, 108, 111, 113, 115, 116, 117, 118, 119, 120, 131, 134, 135, 136, 139, 140, 141, 142, 143, 147, 148, 149, 152, 159, 161, 165, 166, 168, 179, 180, 194, 205, 671, 673, 674, 675, 676, 677, 678, 679, 680, 684, 686, 689, 690, 692], "optionalgetel": [2, 83], "optionalhasel": [2, 83], "Or": [2, 32, 33, 113, 684, 688], "prelu": [2, 688], "pad": [2, 15, 24, 26, 32, 33, 34, 38, 54, 64, 76, 85, 89, 91, 113, 116, 140, 688], "pow": [2, 688], "qlinearconv": 2, "qlinearmatmul": 2, "quantizelinear": 2, "rnn": [2, 54, 76, 83, 140, 205, 688, 689], "randomnorm": 2, "randomnormallik": 2, "randomuniform": 2, "randomuniformlik": 2, "rang": [2, 8, 9, 17, 20, 24, 27, 28, 29, 37, 40, 44, 52, 54, 55, 56, 59, 61, 64, 69, 76, 77, 82, 91, 94, 101, 102, 105, 111, 115, 116, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 139, 140, 141, 142, 145, 148, 149, 151, 152, 155, 159, 160, 161, 165, 166, 168, 177, 178, 180, 181], "reciproc": [2, 77, 688], "reducel1": 2, "reducel2": 2, "reducelogsum": 2, "reducelogsumexp": 2, "reducemax": 2, "reducemean": [2, 16, 77, 161, 692], "reducemin": [2, 689], "reduceprod": 2, "reducesum": [2, 160, 161, 689, 692], "reducesumsquar": [2, 692], "relu": [2, 54, 76, 116, 688, 689], "reshap": [2, 20, 21, 33, 37, 38, 39, 40, 41, 44, 50, 52, 83, 97, 112, 113, 115, 123, 124, 139, 140, 164, 168, 169, 181, 688, 689, 690, 692], "5": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 19, 20, 22, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 81, 82, 83, 87, 88, 89, 90, 91, 95, 97, 98, 100, 101, 102, 104, 105, 109, 110, 111, 112, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 170, 172, 173, 174, 175, 176, 177, 179, 181, 184, 192, 203, 204, 206, 680, 686, 688, 689, 692], "resiz": [2, 83, 182], "reversesequ": 2, "roialign": 2, "round": [2, 20, 44, 114, 115, 135], "stft": [2, 94], "scan": [2, 83, 174], "scatter": [2, 142], "scatterel": [2, 56, 141], "scatternd": [2, 57], "selu": [2, 688], "sequenceat": 2, "sequenceconstruct": [2, 71, 83], "sequenceempti": 2, "sequenceeras": 2, "sequenceinsert": [2, 83], "sequencelength": 2, "sequencemap": 2, "shape": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 671, 672, 673, 677, 685, 686, 690, 691], "shrink": 2, "sigmoid": [2, 54, 76, 116, 197, 198, 688], "sign": [2, 20, 97, 100, 133, 159, 692], "sin": 2, "sinh": 2, "size": [2, 6, 15, 16, 19, 20, 26, 27, 28, 29, 32, 33, 34, 40, 42, 50, 51, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 72, 75, 82, 85, 89, 90, 91, 94, 98, 101, 105, 110, 112, 113, 134, 135, 137, 139, 140, 141, 142, 152, 159, 160, 165, 166, 170, 174, 176, 179, 190, 196, 197, 200, 201, 676, 678, 686, 689, 692], "slice": [2, 27, 57, 83, 136, 143, 152, 180], "softmax": [2, 82, 161, 193, 194, 197, 198, 200, 201, 689], "softmaxcrossentropyloss": 2, "softplu": [2, 54, 76, 96, 116], "softsign": [2, 54, 76, 116], "spacetodepth": [2, 39], "split": [2, 15, 32, 33, 34, 77, 85, 89, 113, 166, 200, 201, 688], "splittosequ": 2, "sqrt": [2, 16, 72, 77, 93, 124, 195, 203, 204, 688, 692], "squeez": 2, "stringnorm": 2, "sub": [2, 77, 83, 140, 151, 159, 205, 687, 688, 689, 692], "sum": [2, 6, 15, 16, 37, 45, 75, 83, 89, 101, 123, 124, 125, 126, 131, 132, 135, 140, 161, 165, 166, 195, 201, 206, 688, 692], "tan": 2, "tanh": [2, 54, 76, 96, 116, 140], "tfidfvector": 2, "thresholdedrelu": [2, 54, 76, 116], "tile": [2, 50, 688], "topk": [2, 692], "transpos": [2, 34, 39, 58, 164, 689, 692], "trilu": 2, "uniqu": [2, 71, 139, 673, 677, 686, 689], "unsqueez": [2, 83, 674], "upsampl": [2, 135, 688], "where": [2, 3, 8, 9, 15, 16, 17, 22, 24, 26, 27, 28, 29, 32, 33, 34, 39, 40, 41, 43, 44, 45, 46, 52, 53, 55, 56, 57, 58, 59, 60, 61, 64, 67, 68, 69, 72, 75, 77, 78, 82, 85, 89, 90, 91, 99, 100, 101, 102, 105, 110, 111, 112, 113, 115, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 139, 140, 141, 142, 143, 144, 145, 148, 149, 152, 154, 159, 160, 161, 162, 164, 165, 167, 168, 175, 177, 179, 180, 181, 189, 191, 196, 200, 201, 203, 204, 205, 206, 673, 676, 689, 692], "xor": [2, 688], "arrayfeatureextractor": [2, 692], "binar": 2, "castmap": 2, "categorymapp": 2, "dictvector": 2, "featurevector": 2, "imput": [2, 689], "labelencod": [2, 689], "linearclassifi": 2, "linearregressor": 2, "normal": [2, 16, 64, 72, 75, 77, 84, 93, 102, 117, 118, 135, 160, 169], "onehotencod": [2, 689], "svmclassifi": 2, "svmregressor": [2, 689], "scaler": 2, "treeensembleclassifi": 2, "treeensembleregressor": [2, 690], "zipmap": 2, "adagrad": 2, "adam": 2, "gradient": [2, 16, 77, 101, 161, 203, 204, 206], "momentum": [2, 16, 204], "github": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 671, 678], "main": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 671, 678, 689, 690, 692], "fals": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 672, 674, 676, 677, 678, 685, 686], "support_level": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "supporttyp": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 675, 680], "common": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 675, 680, 689, 690], "infer": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 672, 685, 690, 691], "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 192, 193, 196, 197, 200, 201, 202, 203, 204, 206, 672, 674, 676, 677, 684, 687, 692], "ha": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 673, 679, 684, 689, 690, 692], "been": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 673], "avail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 673, 684, 690, 691, 692], "sinc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "summari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 690, 692], "absolut": [3, 102, 689], "take": [3, 15, 22, 26, 27, 32, 33, 34, 41, 43, 46, 53, 55, 56, 67, 68, 78, 85, 89, 91, 100, 108, 110, 112, 113, 122, 133, 134, 135, 138, 140, 141, 142, 143, 144, 152, 153, 154, 158, 162, 167, 168, 175, 179, 180, 181, 182, 671, 673, 685, 689, 692], "tensor": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 673, 675, 676, 677, 679, 680, 681, 684, 687, 692], "t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 95, 96, 97, 98, 100, 101, 103, 104, 109, 110, 111, 112, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 194, 195, 196, 198, 199, 201, 202, 203, 204, 205, 206, 673, 677, 690, 692], "y": [3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 96, 97, 98, 100, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 116, 122, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 684, 689, 690, 692], "appli": [3, 15, 16, 20, 22, 26, 46, 53, 54, 59, 60, 61, 67, 68, 76, 78, 84, 85, 89, 90, 100, 101, 110, 111, 112, 116, 122, 133, 137, 142, 143, 144, 151, 154, 159, 161, 162, 165, 167, 175, 180, 185, 191, 193, 194, 197, 198, 199, 200, 201, 204, 685, 688, 689, 690], "elementwis": [3, 7, 22, 46, 47, 53, 62, 63, 67, 68, 78, 79, 80, 100, 109, 110, 112, 122, 133, 144, 154, 162, 167, 175, 184], "heterogen": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206], "constraint": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 689], "bfloat16": [3, 6, 8, 9, 16, 17, 19, 20, 21, 22, 24, 25, 26, 28, 30, 37, 38, 39, 42, 43, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 62, 63, 65, 66, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 82, 83, 86, 88, 92, 93, 94, 95, 97, 98, 100, 103, 110, 111, 112, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 142, 143, 152, 154, 155, 158, 159, 160, 161, 164, 165, 167, 168, 170, 171, 173, 176, 178, 179, 181, 183, 680, 689], "doubl": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 680, 689], "float": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 673, 675, 677, 680, 689, 690, 692], "float16": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 110, 111, 112, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 205, 680, 689, 692], "int16": [3, 6, 8, 9, 17, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 39, 42, 45, 47, 48, 50, 51, 52, 55, 56, 57, 62, 63, 64, 65, 66, 70, 71, 79, 80, 83, 88, 94, 95, 97, 98, 100, 103, 105, 106, 107, 108, 111, 112, 118, 120, 121, 133, 134, 135, 136, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 164, 165, 166, 168, 170, 176, 177, 178, 179, 180, 181, 182, 183, 205, 673, 680, 689, 692], "int32": [3, 6, 8, 9, 17, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 42, 45, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 70, 71, 76, 79, 80, 83, 86, 87, 88, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 110, 111, 112, 113, 115, 116, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 161, 164, 165, 166, 168, 170, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 673, 680, 689, 692], "int64": [3, 6, 8, 9, 14, 17, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 37, 38, 39, 42, 43, 45, 47, 48, 50, 51, 52, 55, 56, 57, 58, 62, 63, 64, 65, 66, 70, 71, 79, 80, 83, 86, 88, 89, 91, 94, 95, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 161, 164, 165, 166, 168, 170, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 673, 680, 689, 692], "int8": [3, 6, 8, 9, 17, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 39, 40, 42, 44, 45, 47, 48, 50, 51, 52, 55, 56, 57, 62, 63, 64, 65, 66, 70, 71, 79, 80, 83, 87, 88, 89, 94, 95, 97, 98, 100, 103, 105, 106, 107, 108, 111, 112, 113, 114, 115, 118, 120, 127, 129, 133, 134, 135, 136, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 164, 165, 166, 168, 170, 176, 177, 178, 179, 180, 181, 182, 183, 205, 673, 680, 689, 692], "uint16": [3, 6, 8, 9, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 39, 42, 45, 47, 48, 50, 51, 52, 55, 56, 57, 62, 63, 64, 65, 66, 70, 71, 79, 80, 83, 88, 94, 95, 97, 98, 103, 105, 106, 107, 108, 111, 112, 118, 120, 134, 135, 136, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 164, 165, 166, 168, 170, 176, 177, 178, 179, 180, 181, 182, 183, 205, 673, 680, 689, 692], "uint32": [3, 6, 8, 9, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 37, 39, 42, 45, 47, 48, 50, 51, 52, 55, 56, 57, 58, 62, 63, 64, 65, 66, 70, 71, 79, 80, 83, 86, 88, 94, 95, 97, 98, 103, 105, 106, 107, 108, 110, 111, 112, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 164, 165, 166, 168, 170, 176, 177, 178, 179, 180, 181, 182, 183, 205, 673, 680, 689, 692], "uint64": [3, 6, 8, 9, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 37, 39, 42, 45, 47, 48, 50, 51, 52, 55, 56, 57, 58, 62, 63, 64, 65, 66, 70, 71, 79, 80, 83, 86, 88, 94, 95, 97, 98, 103, 105, 106, 107, 108, 110, 111, 112, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 164, 165, 166, 168, 170, 176, 177, 178, 179, 180, 181, 182, 183, 205, 673, 680, 689, 692], "uint8": [3, 6, 8, 9, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 39, 40, 42, 44, 45, 47, 48, 50, 51, 52, 55, 56, 57, 62, 63, 64, 65, 66, 70, 71, 79, 80, 83, 87, 88, 89, 94, 95, 97, 98, 103, 105, 106, 107, 108, 111, 112, 113, 114, 115, 118, 120, 127, 129, 134, 135, 136, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 164, 165, 166, 168, 170, 176, 177, 178, 179, 180, 181, 182, 183, 205, 673, 680, 689, 692], "constrain": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 203, 204, 206], "numer": [3, 6, 8, 9, 17, 19, 20, 25, 26, 31, 37, 42, 45, 47, 48, 62, 63, 65, 66, 79, 80, 88, 93, 94, 95, 97, 98, 100, 105, 111, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 153, 155, 170, 177, 185, 186, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 673, 680, 689], "make_nod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 203, 204, 206, 677, 692], "random": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 24, 25, 30, 35, 36, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 58, 59, 61, 62, 67, 68, 69, 75, 77, 78, 79, 81, 82, 86, 89, 98, 99, 100, 101, 104, 109, 110, 111, 112, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 144, 151, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 167, 168, 170, 172, 173, 175, 176, 178, 179, 181, 184, 692], "randn": [3, 6, 7, 11, 12, 14, 15, 22, 24, 25, 30, 35, 36, 42, 43, 45, 46, 47, 48, 49, 53, 54, 55, 59, 61, 62, 67, 68, 69, 75, 77, 78, 79, 81, 82, 86, 89, 98, 100, 104, 109, 110, 111, 112, 116, 133, 144, 152, 154, 156, 157, 158, 159, 160, 162, 163, 167, 168, 170, 172, 173, 175, 181, 184, 692], "astyp": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 59, 61, 62, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 81, 82, 83, 86, 88, 89, 92, 94, 95, 97, 98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 112, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 144, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 184, 690, 692], "float32": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 203, 204, 206, 680, 690, 692], "test_ab": 3, "v": [3, 6, 7, 8, 9, 15, 16, 20, 22, 25, 27, 28, 30, 32, 34, 37, 39, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 91, 92, 93, 95, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 151, 152, 154, 155, 158, 159, 160, 161, 164, 165, 167, 168, 170, 171, 173, 176, 177, 178, 181, 182, 183, 184, 192, 200, 201, 204, 205, 206, 677], "attribut": [3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 42, 43, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 65, 66, 67, 69, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 105, 106, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 147, 151, 152, 153, 154, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 673, 676, 677, 679, 680, 687, 691], "consumed_input": [3, 6, 16, 22, 25, 42, 43, 46, 49, 53, 67, 72, 78, 81, 88, 92, 95, 98, 100, 110, 122, 133, 134, 144, 154, 167, 170, 171, 173], "legaci": [3, 6, 16, 22, 25, 42, 43, 46, 49, 53, 67, 72, 78, 81, 85, 88, 92, 95, 98, 100, 110, 122, 133, 134, 144, 154, 167, 170, 171, 173], "optim": [3, 6, 16, 22, 25, 42, 43, 46, 49, 53, 67, 72, 78, 81, 83, 88, 92, 95, 98, 100, 110, 122, 133, 134, 144, 154, 167, 170, 171, 173, 203, 204, 205, 206, 689, 690, 692], "calcul": [4, 5, 10, 11, 12, 13, 15, 16, 23, 26, 34, 35, 36, 41, 44, 49, 81, 93, 96, 97, 101, 135, 143, 155, 156, 157, 163, 172, 173], "arccosin": [4, 5], "invers": [4, 10, 12, 38, 56, 57, 77, 91, 141, 142, 143, 174, 690], "cosin": [4, 35, 36], "element": [4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 23, 25, 27, 30, 31, 33, 34, 35, 36, 37, 39, 42, 48, 49, 51, 54, 56, 57, 69, 71, 74, 75, 76, 77, 81, 83, 87, 88, 89, 91, 92, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 143, 151, 155, 156, 157, 158, 159, 161, 163, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 182, 183, 185, 186, 187, 189, 190, 191, 192, 195, 196, 197, 198, 200, 201, 203, 204, 206, 671, 673, 674, 677, 681, 692], "wise": [4, 5, 6, 10, 11, 12, 13, 18, 23, 35, 36, 42, 48, 49, 81, 83, 88, 92, 95, 96, 97, 98, 104, 138, 155, 156, 157, 163, 170, 171, 172, 173, 186, 192, 195, 203, 204, 206], "The": [4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 54, 57, 58, 59, 60, 61, 64, 65, 66, 69, 71, 72, 75, 76, 77, 81, 82, 83, 84, 85, 87, 89, 91, 93, 94, 97, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 147, 151, 152, 153, 155, 156, 157, 159, 160, 161, 163, 165, 166, 170, 172, 173, 174, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 673, 674, 676, 677, 678, 679, 684, 686, 687, 689, 690, 692], "comput": [4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 19, 32, 33, 34, 35, 36, 38, 39, 40, 48, 49, 54, 57, 58, 64, 65, 66, 69, 72, 76, 77, 81, 82, 83, 85, 89, 91, 101, 113, 114, 115, 116, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 139, 140, 151, 152, 155, 156, 157, 159, 160, 161, 163, 172, 173, 174, 203, 204, 205, 206, 671, 673, 685, 689, 690, 692], "arrai": [4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 64, 67, 69, 70, 71, 73, 74, 76, 78, 81, 82, 83, 87, 88, 89, 91, 92, 93, 95, 97, 98, 100, 102, 103, 105, 107, 108, 111, 112, 113, 114, 115, 116, 122, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 185, 189, 190, 191, 194, 196, 197, 200, 201, 203, 204, 206, 677, 684, 689, 690, 692], "0": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 49, 51, 52, 54, 55, 56, 57, 58, 60, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 193, 196, 200, 201, 203, 204, 206, 674, 676, 679, 689, 690, 692], "arcco": 4, "test_acos_exampl": 4, "rand": [4, 10, 42, 101, 122, 176], "test_aco": 4, "hyperbol": [5, 11, 13, 36, 157, 173], "e": [5, 6, 7, 16, 18, 20, 38, 41, 42, 44, 47, 51, 54, 57, 62, 63, 76, 77, 79, 80, 83, 88, 91, 92, 93, 94, 95, 96, 97, 98, 102, 105, 107, 109, 112, 116, 134, 137, 139, 144, 169, 170, 171, 183, 184, 193, 200, 206, 671, 673, 687, 692], "arccosh": 5, "99322295": 5, "65745449": 5, "test_acosh_exampl": 5, "uniform": [5, 8, 9, 13, 17, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 132, 151], "test_acosh": 5, "perform": [6, 7, 18, 23, 37, 38, 42, 45, 47, 62, 63, 69, 77, 79, 80, 82, 93, 96, 97, 98, 109, 139, 140, 141, 142, 160, 169, 170, 184, 194, 200, 201, 671, 673, 685], "binari": [6, 17, 18, 42, 97, 98, 170, 684, 690], "addit": [6, 34, 91, 105, 142, 143, 151, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 673, 678, 689, 690, 692], "style": [6, 7, 18, 42, 47, 62, 63, 79, 80, 83, 88, 92, 95, 97, 98, 109, 112, 170, 171, 183, 184, 203, 204, 206], "broadcast": [6, 7, 18, 42, 45, 47, 50, 58, 62, 63, 79, 80, 88, 92, 95, 97, 98, 109, 110, 112, 170, 171, 176, 183, 184, 191, 203, 204, 206], "support": [6, 7, 18, 20, 21, 26, 42, 44, 47, 51, 54, 58, 62, 63, 64, 76, 79, 80, 83, 84, 85, 88, 92, 95, 97, 98, 109, 110, 111, 112, 116, 137, 140, 143, 170, 171, 183, 184, 187, 197, 198, 203, 204, 206, 671, 675, 679, 685, 688, 690, 691], "multidirect": [6, 7, 18, 42, 47, 62, 63, 79, 80, 88, 92, 95, 97, 98, 109, 112, 170, 171, 183, 184], "more": [6, 7, 8, 9, 16, 18, 20, 26, 32, 33, 34, 39, 41, 42, 43, 47, 54, 58, 62, 63, 64, 76, 79, 80, 88, 92, 95, 97, 98, 102, 109, 110, 112, 113, 116, 135, 140, 143, 164, 165, 166, 170, 171, 174, 179, 183, 184, 196, 203, 205, 206, 671, 673, 679, 689, 690, 692], "pleas": [6, 7, 18, 42, 47, 58, 62, 63, 79, 80, 88, 92, 95, 97, 98, 109, 110, 112, 141, 170, 171, 183, 184], "extend": [6, 42, 98, 121, 170, 203, 206, 684, 689], "first": [6, 7, 8, 9, 18, 19, 21, 24, 37, 38, 42, 47, 57, 59, 60, 61, 62, 63, 65, 66, 69, 71, 77, 79, 80, 83, 91, 98, 109, 110, 111, 112, 121, 134, 136, 140, 141, 143, 151, 161, 169, 170, 174, 177, 180, 184, 185, 197, 199, 203, 204, 205, 206, 671, 673, 674, 689, 690, 692], "operand": [6, 7, 18, 42, 45, 47, 62, 63, 79, 80, 98, 109, 112, 170, 184], "b": [6, 7, 14, 16, 32, 34, 39, 42, 47, 52, 54, 57, 58, 62, 63, 71, 72, 76, 77, 79, 80, 83, 86, 87, 97, 98, 108, 109, 112, 113, 114, 116, 164, 170, 176, 180, 183, 184, 189, 205, 686, 692], "second": [6, 7, 18, 21, 24, 42, 47, 62, 63, 77, 79, 80, 91, 94, 98, 109, 111, 112, 134, 165, 170, 174, 180, 183, 184, 190, 197, 199, 204, 671, 674, 689, 690, 692], "c": [6, 7, 15, 16, 26, 32, 33, 34, 39, 42, 47, 58, 59, 60, 61, 62, 63, 64, 71, 72, 75, 76, 79, 80, 83, 85, 86, 89, 90, 91, 93, 97, 98, 101, 109, 113, 137, 151, 161, 164, 169, 170, 174, 182, 184, 188, 189, 190, 191, 193, 195, 197, 198, 205, 673, 689, 690], "two": [6, 15, 20, 30, 32, 33, 34, 42, 43, 50, 56, 59, 60, 61, 77, 85, 89, 93, 98, 105, 113, 114, 116, 135, 137, 143, 153, 170, 174, 177, 182, 188, 192, 203, 204, 206, 673, 674, 689, 690, 692], "test_add": 6, "_add_uint8": 6, "randint": [6, 42, 51, 98, 101, 151, 170, 176, 179], "24": [6, 15, 26, 32, 33, 34, 40, 42, 52, 89, 98, 115, 134, 170], "dtype": [6, 8, 9, 17, 19, 20, 21, 23, 24, 28, 31, 38, 40, 42, 50, 51, 56, 57, 64, 65, 66, 70, 73, 74, 87, 88, 91, 93, 95, 96, 97, 98, 99, 103, 105, 111, 113, 114, 115, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 141, 142, 143, 147, 151, 153, 159, 168, 170, 176, 177, 180, 182, 183, 203, 204, 206, 671, 677, 680, 681, 690, 692], "test_add_uint8": 6, "_add_broadcast": 6, "test_add_bcast": 6, "high": [6, 37, 42, 97, 98, 101, 102, 115, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 170, 176, 205, 690], "precis": [6, 20, 37, 40, 42, 77, 97, 98, 115, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 170, 689, 692], "limit": [6, 25, 42, 98, 121, 170, 685, 692], "necessari": [6, 42, 98, 112, 170, 205, 206, 688, 689, 692], "right": [6, 7, 18, 42, 44, 45, 47, 50, 62, 79, 94, 98, 109, 112, 170, 184, 689, 690], "hand": [6, 7, 42, 45, 47, 62, 79, 98, 109, 112, 170, 184], "side": [6, 7, 15, 18, 24, 32, 33, 34, 42, 45, 47, 62, 79, 85, 89, 98, 109, 112, 113, 170, 184, 689], "argument": [6, 7, 16, 20, 25, 42, 43, 47, 51, 54, 58, 62, 76, 78, 79, 91, 98, 105, 109, 112, 116, 117, 118, 119, 120, 134, 165, 166, 170, 177, 181, 184, 190, 674, 677, 692], "match": [6, 7, 15, 20, 32, 34, 40, 42, 47, 58, 62, 69, 71, 79, 82, 83, 85, 89, 98, 109, 112, 115, 143, 151, 160, 170, 184, 192, 194, 197, 678, 689], "left": [6, 7, 18, 42, 45, 47, 62, 79, 94, 98, 109, 112, 170, 184, 200, 201, 690, 692], "when": [6, 15, 16, 19, 20, 29, 38, 40, 41, 42, 45, 50, 52, 54, 65, 66, 69, 82, 90, 98, 101, 102, 105, 112, 113, 131, 134, 135, 137, 139, 140, 142, 143, 159, 160, 161, 170, 174, 178, 180, 183, 188, 192, 193, 202, 205, 673, 674, 676, 679, 681, 688, 689, 690, 691, 692], "specifi": [6, 14, 17, 18, 19, 20, 24, 25, 26, 27, 30, 31, 34, 38, 40, 42, 43, 51, 54, 58, 64, 65, 66, 69, 76, 77, 83, 85, 91, 98, 99, 101, 105, 106, 111, 112, 115, 116, 117, 118, 119, 120, 134, 135, 136, 140, 141, 142, 143, 145, 148, 152, 159, 161, 165, 166, 169, 170, 174, 177, 179, 180, 192, 202, 205, 673, 674, 676, 677, 681, 692], "either": [6, 15, 18, 30, 32, 33, 34, 40, 42, 43, 83, 85, 89, 98, 101, 106, 112, 113, 114, 115, 151, 161, 166, 170, 174, 180, 183, 186, 187, 188, 189, 191, 192, 197, 198, 202, 206, 673, 692], "scalar": [6, 14, 19, 25, 30, 31, 33, 38, 40, 41, 42, 43, 44, 57, 58, 65, 66, 71, 83, 87, 98, 101, 102, 103, 105, 108, 111, 112, 113, 114, 115, 121, 134, 139, 145, 148, 149, 150, 158, 161, 166, 170, 192, 203, 204, 206], "rank": [6, 8, 9, 24, 27, 28, 29, 37, 40, 42, 51, 52, 55, 56, 57, 59, 60, 61, 69, 71, 77, 82, 98, 105, 111, 112, 115, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 141, 142, 143, 152, 159, 160, 165, 166, 168, 170, 177, 179, 180, 181, 182, 673, 692], "smaller": [6, 24, 42, 50, 98, 110, 112, 135, 166, 170, 692], "than": [6, 8, 9, 15, 24, 26, 27, 32, 33, 34, 38, 42, 50, 85, 89, 91, 98, 102, 105, 112, 113, 135, 140, 143, 159, 170, 174, 182, 186, 196, 689, 690, 692], "have": [6, 8, 9, 17, 21, 28, 29, 40, 42, 50, 52, 54, 57, 58, 64, 69, 71, 76, 77, 82, 87, 88, 91, 92, 94, 95, 98, 101, 102, 105, 107, 112, 113, 114, 115, 116, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 139, 140, 142, 143, 146, 149, 151, 153, 159, 160, 161, 170, 171, 191, 192, 195, 196, 200, 201, 673, 674, 676, 677, 686, 689, 690, 692], "contigu": [6, 42, 98, 112, 170, 194, 684, 689, 690], "subset": [6, 15, 24, 42, 85, 89, 98, 112, 135, 170, 690], "": [6, 8, 9, 16, 18, 20, 21, 26, 28, 29, 33, 37, 38, 40, 42, 43, 44, 54, 55, 56, 57, 58, 64, 69, 71, 76, 77, 82, 87, 94, 98, 101, 103, 111, 112, 113, 115, 116, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 159, 160, 161, 166, 170, 174, 176, 179, 189, 191, 192, 193, 194, 203, 204, 205, 206, 671, 673, 676, 677, 678, 684, 686, 689, 690, 692], "start": [6, 15, 26, 32, 33, 34, 42, 57, 85, 89, 91, 98, 111, 112, 113, 121, 139, 152, 159, 170, 174, 201], "mutual": [6, 42, 98, 112, 170], "axi": [6, 7, 8, 9, 15, 16, 24, 26, 27, 28, 29, 32, 33, 34, 37, 38, 39, 40, 42, 47, 52, 54, 55, 56, 57, 59, 61, 62, 69, 77, 79, 82, 84, 85, 89, 91, 93, 98, 99, 105, 109, 111, 112, 113, 115, 116, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 141, 142, 152, 159, 160, 164, 165, 166, 168, 170, 176, 177, 180, 181, 184, 195, 689, 690], "set": [6, 7, 16, 34, 37, 38, 42, 43, 45, 47, 51, 62, 64, 71, 73, 79, 83, 91, 97, 98, 101, 102, 109, 112, 131, 134, 135, 137, 142, 143, 159, 169, 170, 174, 179, 184, 188, 189, 192, 194, 196, 197, 205, 206, 673, 674, 676, 677, 678, 686, 689, 690, 692], "suffix": [6, 42, 98, 112, 170, 200, 201, 679], "assum": [6, 16, 24, 32, 33, 34, 42, 54, 76, 91, 98, 111, 112, 113, 116, 135, 140, 151, 170, 174, 192, 196, 200, 201, 203, 204, 206, 689, 692], "dim": [6, 14, 24, 30, 42, 83, 98, 112, 159, 165, 168, 170, 673, 677, 686, 689, 692], "expans": [6, 42, 98, 112, 170], "doesn": [6, 15, 34, 42, 77, 98, 112, 170, 203], "work": [6, 42, 98, 112, 170, 671, 684, 692], "yet": [6, 20, 42, 98, 112, 170], "need": [6, 34, 42, 43, 69, 82, 83, 91, 98, 112, 135, 140, 160, 169, 170, 180, 191, 203, 205, 673, 684, 689, 690, 692], "pass": [6, 42, 43, 83, 98, 112, 140, 159, 170, 185, 194, 196, 204, 205, 671, 678], "enabl": [6, 7, 15, 38, 42, 45, 47, 62, 79, 89, 98, 109, 112, 139, 140, 170, 184, 685], "defin": [6, 7, 42, 47, 57, 62, 64, 75, 77, 79, 83, 91, 94, 98, 109, 112, 131, 170, 184, 188, 189, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 673, 674, 675, 677, 679, 680, 687, 689, 690, 692], "dimens": [6, 7, 8, 9, 15, 16, 24, 26, 27, 28, 29, 32, 33, 34, 37, 38, 39, 40, 41, 42, 45, 47, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 69, 72, 75, 76, 77, 79, 82, 83, 85, 88, 89, 90, 91, 92, 95, 98, 103, 105, 109, 111, 112, 113, 115, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 140, 141, 142, 143, 152, 159, 160, 161, 164, 165, 166, 168, 170, 171, 176, 177, 178, 179, 180, 181, 182, 184, 185, 191, 196, 199, 673, 677, 686, 689, 692], "see": [6, 7, 16, 21, 34, 42, 43, 47, 54, 58, 62, 64, 76, 79, 83, 98, 101, 109, 112, 116, 165, 170, 184, 673, 679, 689, 690, 692], "doc": [6, 7, 26, 27, 34, 42, 47, 62, 64, 77, 79, 86, 87, 98, 101, 103, 109, 112, 114, 159, 170, 180, 183, 184, 690], "should": [6, 15, 16, 17, 20, 26, 31, 32, 33, 34, 42, 52, 57, 58, 64, 71, 73, 83, 85, 89, 90, 91, 97, 98, 101, 110, 111, 113, 135, 140, 142, 143, 151, 158, 161, 165, 170, 174, 181, 182, 188, 191, 192, 203, 204, 206, 671, 674, 676, 677, 687, 689, 690, 692], "share": [6, 42, 98, 170, 673, 692], "With": [6, 42, 98, 170, 689], "disabl": [6, 42, 98, 170, 692], "logic": [7, 47, 62, 63, 79, 80, 109, 184, 673], "t1": [7, 16, 17, 19, 20, 21, 27, 31, 33, 38, 43, 44, 47, 51, 54, 62, 63, 64, 65, 66, 73, 74, 76, 79, 80, 87, 91, 94, 99, 105, 109, 112, 113, 114, 115, 116, 118, 120, 135, 137, 139, 140, 152, 158, 174, 176, 184, 187, 188, 189, 190, 192, 193, 197, 200, 203, 204, 205, 206], "bool": [7, 14, 17, 20, 21, 24, 26, 27, 28, 29, 30, 31, 39, 43, 47, 50, 51, 52, 55, 56, 57, 62, 63, 64, 70, 71, 73, 74, 79, 80, 83, 103, 104, 105, 106, 107, 108, 109, 111, 118, 120, 134, 135, 136, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 158, 159, 164, 165, 166, 168, 176, 178, 179, 180, 181, 182, 183, 184, 205, 671, 672, 674, 675, 676, 677, 678, 680, 684, 685, 686, 687, 689, 692], "boolean": [7, 14, 20, 27, 43, 47, 62, 63, 73, 74, 79, 80, 83, 104, 108, 109, 169, 179, 183, 184, 692], "2d": [7, 28, 32, 33, 34, 51, 52, 69, 77, 82, 86, 87, 104, 109, 111, 113, 114, 135, 160, 184, 689, 692], "z": [7, 18, 42, 43, 45, 47, 54, 62, 79, 89, 97, 98, 109, 112, 140, 170, 176, 183, 184, 185, 189, 193, 197, 200, 202, 205, 684, 689, 690, 692], "logical_and": 7, "test_and2d": 7, "3d": [7, 28, 86, 104, 109, 114, 184], "test_and3d": 7, "4d": [7, 86, 104, 109, 184], "test_and4d": 7, "_and_broadcast": 7, "1d": [7, 28, 30, 31, 32, 34, 46, 109, 111, 113, 135, 152, 161, 162, 176, 184, 692], "test_and_bcast3v1d": 7, "test_and_bcast3v2d": 7, "test_and_bcast4v2d": 7, "test_and_bcast4v3d": 7, "test_and_bcast4v4d": 7, "descript": [7, 47, 62, 79, 109, 184, 673], "rule": [7, 20, 47, 50, 62, 79, 109, 138, 184, 689, 690], "indic": [8, 9, 14, 16, 19, 24, 26, 27, 32, 33, 34, 43, 45, 50, 52, 54, 55, 56, 57, 58, 65, 66, 69, 76, 77, 82, 89, 91, 101, 102, 103, 105, 108, 111, 113, 116, 134, 135, 140, 141, 142, 143, 152, 159, 160, 168, 174, 177, 179, 180, 181, 183, 185, 187, 193, 194, 197, 198, 200, 201, 673, 677, 689, 692], "along": [8, 9, 15, 26, 27, 32, 33, 34, 37, 39, 45, 54, 55, 56, 57, 69, 76, 82, 84, 85, 89, 91, 93, 99, 105, 111, 113, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 140, 141, 142, 159, 160, 165, 166, 176, 177, 180, 182, 190, 191, 195, 203, 204, 689, 692], "provid": [8, 9, 14, 24, 27, 30, 34, 69, 82, 83, 84, 97, 101, 102, 108, 111, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 141, 160, 161, 168, 180, 188, 192, 194, 197, 202, 205, 674, 685, 686, 689, 692], "keepdim": [8, 9, 59, 61, 93, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 160, 166, 690, 692], "reduc": [8, 9, 45, 93, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 161, 203], "prune": [8, 9, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "select_last_index": [8, 9], "index": [8, 9, 27, 38, 51, 55, 56, 57, 64, 89, 91, 102, 105, 135, 136, 137, 140, 141, 142, 143, 145, 148, 149, 159, 161, 174, 177, 180, 181, 185, 187, 188, 189, 192, 196, 200, 201, 203, 674, 690], "occurr": [8, 9, 45, 69, 180, 205], "select": [8, 9, 27, 34, 69, 89, 102, 159, 168, 183, 185], "appear": [8, 9, 45, 177, 201, 205], "onc": [8, 9, 45, 140, 201, 689, 690], "otherwis": [8, 9, 27, 32, 33, 34, 37, 69, 71, 101, 105, 108, 113, 135, 153, 161, 165, 166, 175, 178, 179, 180, 183, 197, 206, 674, 677, 685], "integ": [8, 9, 18, 20, 24, 33, 40, 44, 54, 55, 56, 57, 76, 87, 93, 94, 97, 101, 102, 105, 111, 113, 114, 115, 116, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 138, 141, 142, 143, 159, 161, 168, 174, 177, 178, 181, 187, 188, 189, 190, 191, 192, 193, 196, 197, 200, 202, 203, 204, 206, 673, 677, 689, 692], "arg": [8, 9, 165, 201, 675, 680], "accept": [8, 9, 16, 24, 27, 28, 29, 40, 55, 56, 69, 82, 105, 111, 115, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 140, 141, 142, 145, 148, 149, 159, 160, 165, 166, 168, 169, 177, 180, 181, 677], "r": [8, 9, 24, 27, 28, 29, 40, 43, 52, 54, 55, 56, 57, 69, 76, 77, 82, 105, 111, 115, 116, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 152, 159, 160, 165, 168, 177, 180, 181, 203, 204, 205, 206, 675, 679, 690, 692], "keep": [8, 9, 64, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 166, 689, 690], "whether": [8, 9, 15, 32, 33, 34, 38, 43, 58, 73, 83, 85, 89, 97, 102, 113, 140, 169, 177, 179, 180, 187, 191, 193, 198, 671, 673, 674, 678, 687, 690], "multipl": [8, 9, 16, 32, 58, 69, 83, 90, 98, 137, 140, 142, 143, 159, 174, 200, 201, 203, 204, 206, 690], "_no_keepdim": [8, 9], "argmax_use_numpi": 8, "test_argmax_no_keepdims_exampl": 8, "test_argmax_no_keepdims_random": 8, "_keepdim": [8, 9, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "test_argmax_keepdims_exampl": 8, "test_argmax_keepdims_random": 8, "_default_axes_keepdim": [8, 9, 123, 124, 126, 127, 128, 129, 130, 131, 132], "test_argmax_default_axis_exampl": 8, "test_argmax_default_axis_random": 8, "_negative_axis_keepdim": [8, 9], "test_argmax_negative_axis_keepdims_exampl": 8, "test_argmax_negative_axis_keepdims_random": 8, "_no_keepdims_select_last_index": [8, 9], "argmax_use_numpy_select_last_index": 8, "test_argmax_no_keepdims_example_select_last_index": 8, "test_argmax_no_keepdims_random_select_last_index": 8, "_keepdims_select_last_index": [8, 9], "test_argmax_keepdims_example_select_last_index": 8, "test_argmax_keepdims_random_select_last_index": 8, "_default_axes_keepdims_select_last_index": [8, 9], "test_argmax_default_axis_example_select_last_index": 8, "test_argmax_default_axis_random_select_last_index": 8, "_negative_axis_keepdims_select_last_index": [8, 9], "test_argmax_negative_axis_keepdims_example_select_last_index": 8, "test_argmax_negative_axis_keepdims_random_select_last_index": 8, "content": [9, 52, 121, 673, 677, 684, 692], "argmin_use_numpi": 9, "test_argmin_no_keepdims_exampl": 9, "test_argmin_no_keepdims_random": 9, "test_argmin_keepdims_exampl": 9, "test_argmin_keepdims_random": 9, "test_argmin_default_axis_exampl": 9, "test_argmin_default_axis_random": 9, "test_argmin_negative_axis_keepdims_exampl": 9, "test_argmin_negative_axis_keepdims_random": 9, "argmin_use_numpy_select_last_index": 9, "test_argmin_no_keepdims_example_select_last_index": 9, "test_argmin_no_keepdims_random_select_last_index": 9, "test_argmin_keepdims_example_select_last_index": 9, "test_argmin_keepdims_random_select_last_index": 9, "test_argmin_default_axis_example_select_last_index": 9, "test_argmin_default_axis_random_select_last_index": 9, "test_argmin_negative_axis_keepdims_example_select_last_index": 9, "test_argmin_negative_axis_keepdims_random_select_last_index": 9, "arcsin": [10, 11], "sine": [10, 156, 157], "test_asin_exampl": 10, "test_asin": 10, "arcsinh": 11, "88137358": 11, "test_asinh_exampl": 11, "test_asinh": 11, "arctang": [12, 13], "tangent": [12, 172, 173], "arctan": 12, "test_atan_exampl": 12, "test_atan": 12, "arctanh": 13, "54930615": 13, "test_atanh_exampl": 13, "test_atanh": 13, "least": [14, 26, 168, 690], "value_float": [14, 30], "value_graph": 14, "value_int": [14, 30], "int": [14, 20, 21, 43, 52, 58, 75, 77, 83, 86, 94, 110, 112, 121, 137, 140, 174, 179, 188, 192, 196, 202, 671, 673, 674, 675, 676, 677, 678, 680, 681, 686, 688, 692], "value_sparse_tensor": 14, "sparse_tensor": [14, 673, 675, 680], "value_str": [14, 30], "string": [14, 16, 20, 21, 24, 26, 27, 28, 29, 30, 39, 43, 45, 50, 51, 52, 54, 55, 56, 57, 58, 64, 70, 71, 76, 83, 103, 105, 106, 107, 108, 111, 116, 118, 120, 134, 135, 136, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 158, 159, 164, 165, 166, 168, 169, 174, 176, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 192, 193, 196, 197, 200, 202, 205, 673, 674, 675, 676, 677, 680, 682, 684, 687, 689, 692], "value_tensor": 14, "value_type_proto": 14, "type_proto": [14, 673, 675, 677, 680], "test_one_attribut": 14, "f": [14, 26, 46, 54, 76, 77, 78, 88, 94, 95, 110, 111, 112, 116, 142, 143, 191, 199, 200, 201, 673, 675, 679, 684, 689, 692], "test_attribute_has_": 14, "_fals": 14, "_true": 14, "tensor_valu": [14, 31, 673], "make_tensor": [14, 30, 31, 83, 677, 692], "const_tensor": [14, 30, 83], "data_typ": [14, 30, 83, 673, 677, 692], "tensorproto": [14, 17, 19, 20, 21, 30, 31, 51, 65, 66, 70, 71, 83, 94, 107, 108, 117, 118, 119, 120, 140, 151, 676, 677, 679, 680, 681, 684, 689, 692], "val": [14, 30, 83, 677], "parser": [14, 679, 692], "parse_graph": 14, "agraph": [14, 692], "make_sparse_tensor": [14, 677, 692], "make_tensor_type_proto": [14, 20, 21, 70, 71, 83, 107, 108, 151, 677, 692], "averag": [15, 59, 89, 101, 135, 201, 204], "pool": [15, 59, 60, 61, 85, 89, 90, 91, 137, 174], "across": [15, 16, 59, 60, 61, 75, 83, 85, 89, 90, 137, 140, 201], "accord": [15, 85, 89, 94, 99, 169, 178, 676, 692], "kernel": [15, 32, 33, 34, 59, 60, 61, 85, 89, 91, 113, 197, 198], "stride": [15, 26, 32, 33, 34, 85, 89, 91, 113, 159, 689], "length": [15, 19, 27, 32, 33, 34, 38, 54, 65, 66, 76, 85, 89, 113, 116, 135, 136, 139, 140, 150, 151, 159, 165, 166, 174, 176, 187, 188, 189, 191, 194, 199, 200, 201, 676], "consist": [15, 56, 83, 85, 89, 140, 179, 672, 673, 678, 692], "downsampl": [15, 85, 89, 135], "further": [15, 21, 85, 89, 169, 692], "process": [15, 37, 85, 89, 140, 151, 180, 191, 689, 692], "spatial": [15, 16, 26, 32, 33, 34, 39, 59, 60, 61, 64, 85, 89, 90, 91, 113, 137, 164], "output_spatial_shap": [15, 89], "input_spatial_shap": [15, 89], "pad_shap": [15, 89], "kernel_spatial_shap": [15, 89], "strides_spatial_shap": [15, 89], "ceil_mod": [15, 89], "auto_pad": [15, 32, 33, 34, 85, 89, 91, 113], "deprec": [15, 85, 89, 141, 182, 690], "you": [15, 50, 71, 83, 89, 203, 206, 689, 692], "them": [15, 50, 55, 89, 138, 159, 174, 204, 673, 679, 689, 690, 692], "current": [15, 64, 89, 140, 203, 206, 675, 680, 684, 689], "valid": [15, 32, 33, 34, 51, 85, 89, 113, 118, 120, 135, 169, 681, 690, 692], "same_upp": [15, 32, 33, 34, 85, 89, 113], "same_low": [15, 32, 33, 34, 85, 89, 113], "window": [15, 19, 24, 38, 65, 66, 89, 139, 690], "divid": [15, 32, 33, 34, 92, 101, 113, 161, 203, 204], "number": [15, 16, 17, 20, 26, 32, 33, 34, 45, 54, 57, 59, 60, 61, 64, 71, 72, 75, 76, 83, 85, 89, 90, 91, 94, 99, 102, 105, 111, 113, 116, 121, 134, 135, 137, 139, 140, 145, 148, 149, 150, 151, 158, 159, 161, 166, 174, 176, 177, 179, 181, 182, 194, 198, 201, 203, 204, 206, 677, 689, 690, 692], "exclud": [15, 37, 89, 179], "count_include_pad": 15, "zero": [15, 16, 20, 21, 24, 31, 32, 33, 34, 38, 40, 41, 43, 44, 51, 54, 58, 64, 72, 75, 76, 77, 87, 91, 94, 97, 99, 101, 103, 113, 114, 115, 116, 134, 140, 141, 142, 151, 161, 165, 174, 179, 189, 195, 196, 197, 198, 200, 201, 203, 204, 206, 673, 692], "must": [15, 16, 19, 20, 25, 28, 29, 30, 31, 32, 33, 34, 37, 40, 45, 50, 51, 52, 54, 57, 65, 66, 69, 71, 76, 77, 82, 83, 85, 87, 88, 89, 91, 92, 94, 95, 97, 105, 110, 113, 114, 115, 116, 117, 118, 119, 120, 135, 136, 139, 140, 143, 145, 146, 148, 149, 150, 151, 159, 160, 165, 166, 171, 174, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 673, 677, 681, 684, 689, 690, 692], "notset": [15, 32, 33, 34, 85, 89, 113], "explicit": [15, 32, 33, 34, 45, 85, 89, 113, 689], "so": [15, 18, 24, 32, 33, 34, 43, 73, 85, 89, 91, 110, 113, 135, 136, 159, 174, 192, 203, 204, 690], "output_shap": [15, 32, 33, 34, 57, 85, 89, 91, 113], "input_shap": [15, 32, 33, 34, 85, 89, 113], "between": [15, 16, 20, 25, 28, 32, 33, 34, 38, 40, 43, 45, 54, 57, 58, 71, 76, 77, 83, 85, 87, 88, 89, 91, 92, 95, 101, 102, 106, 108, 111, 113, 115, 116, 131, 135, 139, 140, 146, 148, 149, 151, 159, 161, 165, 166, 168, 171, 174, 179, 180, 188, 190, 203, 204, 205, 206, 680, 689, 692], "almost": [15, 32, 33, 34, 85, 89, 113, 690, 692], "depend": [15, 16, 32, 33, 34, 43, 57, 77, 83, 85, 89, 97, 113, 135, 140, 143, 159, 169, 183, 188, 191, 192, 197, 200, 673, 689, 692], "even": [15, 17, 24, 32, 33, 34, 44, 85, 89, 113, 114, 115, 138, 192, 678, 689, 692], "odd": [15, 32, 33, 34, 85, 89, 113], "In": [15, 20, 27, 32, 33, 34, 37, 39, 40, 45, 69, 71, 82, 83, 85, 89, 91, 94, 97, 105, 113, 134, 135, 138, 142, 143, 160, 166, 174, 191, 193, 195, 203, 206, 671, 673, 689, 692], "case": [15, 16, 20, 27, 32, 33, 34, 40, 43, 44, 45, 56, 59, 60, 61, 69, 72, 75, 77, 82, 85, 89, 90, 91, 97, 101, 105, 107, 113, 134, 135, 138, 141, 142, 143, 152, 160, 161, 169, 193, 199, 203, 671, 673, 677, 678, 689, 690, 692], "extra": [15, 16, 32, 33, 34, 85, 89, 113, 140, 196, 674], "ad": [15, 26, 32, 33, 34, 54, 76, 85, 89, 91, 105, 111, 113, 116, 152, 153, 159, 200, 201, 674, 679, 685, 689, 692], "begin": [15, 26, 32, 33, 34, 45, 85, 89, 91, 111, 113, 121, 673], "pixel": [15, 26, 32, 33, 34, 64, 85, 89, 91, 111, 113, 135, 137], "edg": [15, 94, 111, 674], "count": [15, 24, 27, 28, 34, 37, 40, 52, 55, 56, 69, 77, 82, 83, 105, 111, 115, 135, 140, 141, 142, 145, 148, 149, 152, 159, 160, 165, 166, 168, 174, 177, 180, 181, 196, 199, 203, 204, 206, 674], "kernel_shap": [15, 32, 33, 34, 85, 89, 91, 113], "requir": [15, 16, 18, 20, 26, 28, 29, 30, 39, 45, 58, 71, 75, 77, 83, 85, 89, 90, 91, 105, 111, 117, 119, 134, 140, 151, 159, 164, 174, 177, 181, 182, 193, 200, 203, 204, 205, 206, 677, 689, 690, 692], "repres": [15, 20, 24, 26, 32, 33, 34, 38, 45, 57, 64, 71, 85, 89, 91, 99, 102, 105, 113, 139, 140, 159, 187, 205, 673, 674, 678, 679, 689, 692], "part": [15, 26, 32, 33, 34, 38, 85, 89, 91, 105, 113, 165, 166, 179, 203, 673, 689, 690, 692], "correspond": [15, 18, 19, 26, 32, 33, 34, 38, 45, 50, 54, 57, 64, 65, 66, 69, 71, 76, 82, 85, 89, 91, 94, 99, 102, 111, 113, 116, 134, 135, 137, 140, 141, 142, 143, 159, 160, 174, 177, 179, 180, 181, 189, 195, 202, 203, 204, 671, 673, 677, 680, 689], "format": [15, 26, 30, 32, 33, 34, 54, 76, 85, 89, 91, 102, 105, 111, 113, 116, 174, 673, 678, 679, 682, 684, 690, 692], "x1_begin": [15, 26, 32, 33, 34, 85, 89, 91, 111, 113], "x2_begin": [15, 26, 32, 33, 34, 85, 89, 91, 111, 113], "x1_end": [15, 26, 32, 33, 34, 85, 89, 91, 111, 113], "x2_end": [15, 26, 32, 33, 34, 85, 89, 91, 111, 113], "xi_begin": [15, 26, 32, 33, 34, 85, 89, 91, 111, 113], "xi_end": [15, 26, 32, 33, 34, 85, 89, 91, 111, 113], "cannot": [15, 32, 33, 34, 71, 83, 85, 89, 91, 108, 113, 151, 159, 174, 187, 189, 205, 689, 692], "simultan": [15, 32, 33, 34, 85, 89, 91, 113], "present": [15, 16, 26, 32, 33, 34, 43, 54, 58, 71, 76, 85, 89, 91, 113, 116, 159, 174, 180, 189, 196, 673, 674], "previou": [15, 16, 32, 33, 34, 54, 59, 60, 61, 72, 75, 76, 83, 85, 89, 90, 113, 116, 137, 206, 679, 689, 690, 692], "imag": [15, 16, 26, 32, 33, 34, 38, 59, 60, 61, 72, 75, 85, 89, 90, 91, 113, 135, 137, 139, 673, 689, 692], "n": [15, 16, 26, 32, 33, 34, 38, 39, 40, 57, 58, 59, 60, 61, 64, 69, 71, 72, 75, 82, 83, 85, 86, 87, 89, 90, 91, 101, 103, 113, 114, 115, 135, 137, 140, 145, 148, 149, 151, 159, 160, 161, 164, 174, 179, 180, 182, 188, 191, 193, 194, 195, 197, 198, 199, 200, 201, 673, 690, 692], "h": [15, 16, 32, 33, 34, 39, 54, 59, 60, 61, 64, 72, 75, 76, 85, 89, 90, 91, 113, 116, 137, 151, 164, 182, 203, 204, 205, 686, 690, 692], "w": [15, 16, 32, 33, 34, 38, 39, 54, 59, 60, 61, 64, 72, 75, 76, 77, 85, 89, 90, 91, 113, 116, 137, 139, 151, 161, 164, 182, 205, 686, 689, 692], "batch": [15, 16, 26, 32, 33, 34, 38, 39, 41, 54, 57, 59, 60, 61, 64, 69, 72, 75, 76, 82, 85, 89, 90, 91, 99, 102, 113, 116, 136, 137, 140, 160, 164, 179, 195, 674, 692], "channel": [15, 16, 26, 32, 33, 34, 39, 59, 60, 61, 64, 72, 75, 85, 89, 90, 91, 93, 110, 113, 137, 164], "height": [15, 16, 32, 33, 34, 39, 59, 60, 61, 64, 72, 75, 85, 89, 90, 91, 102, 113, 137, 164, 182], "width": [15, 16, 32, 33, 34, 39, 59, 60, 61, 64, 72, 75, 85, 89, 90, 91, 102, 113, 137, 164, 182, 191], "non": [15, 16, 17, 20, 24, 43, 58, 59, 60, 61, 72, 75, 85, 89, 91, 96, 103, 105, 106, 135, 140, 159, 168, 181, 205, 673, 676], "form": [15, 16, 41, 45, 57, 59, 60, 61, 72, 75, 85, 89, 91, 165, 166, 200, 205, 673, 692], "d1": [15, 16, 32, 33, 34, 59, 60, 61, 72, 75, 85, 87, 89, 91, 101, 113, 114, 161], "d2": [15, 16, 32, 33, 34, 59, 60, 61, 72, 75, 85, 87, 89, 91, 101, 113, 114, 161], "dn": [15, 16, 32, 33, 34, 52, 59, 60, 61, 72, 75, 85, 89, 91, 113, 673, 689], "denot": [15, 32, 33, 57, 75, 89, 91, 113, 135, 137, 140, 143, 161, 169, 174, 204, 205, 673], "effect": [15, 18, 32, 33, 75, 89, 91, 113, 135, 159, 174, 203, 673], "arriv": [15, 32, 33, 75, 89, 91, 113], "data_batch": [15, 32, 33, 75, 89, 91, 113], "data_channel": [15, 32, 33, 75, 89, 91, 113], "data_featur": [15, 32, 33, 75, 89, 91, 113], "vari": [15, 85, 89], "variou": [15, 85, 89], "_averagepool_2d_precomputed_pad": 15, "19": [15, 26, 32, 34, 39, 89, 123, 164], "20": [15, 24, 26, 32, 34, 39, 89, 115, 126, 127, 128, 129, 131, 132, 143, 151, 159, 164, 692], "21": [15, 26, 32, 34, 39, 89, 113, 164, 692], "22": [15, 26, 32, 34, 39, 89, 131, 164], "23": [15, 26, 32, 34, 39, 89, 113, 123, 164, 692], "25": [15, 26, 32, 34, 58, 65, 89, 112, 113, 122, 124, 128, 135], "test_averagepool_2d_precomputed_pad": 15, "_averagepool_2d_precomputed_pads_count_include_pad": 15, "5200": 15, "6000": [15, 64], "8000": [15, 64], "0800": 15, "2400": [15, 692], "5600": 15, "4000": [15, 64], "0400": 15, "2000": [15, 64], "0000": [15, 64], "9600": 15, "9200": 15, "1200": 15, "8800": 15, "8400": 15, "test_averagepool_2d_precomputed_pads_count_include_pad": 15, "_averagepool_2d_precomputed_strid": 15, "test_averagepool_2d_precomputed_strid": 15, "_averagepool_2d_precomputed_same_upp": 15, "test_averagepool_2d_precomputed_same_upp": 15, "_averagepool_1d_default": 15, "32": [15, 18, 20, 26, 32, 33, 34, 39, 40, 48, 77, 87, 89, 112, 113, 114, 115, 143, 689], "31": [15, 26, 32, 34, 39, 89], "x_shape": [15, 89], "out_shap": [15, 89], "get_output_shap": [15, 89], "avg": [15, 137], "test_averagepool_1d_default": 15, "_averagepool_2d_default": 15, "test_averagepool_2d_default": 15, "_averagepool_3d_default": 15, "test_averagepool_3d_default": 15, "_averagepool_2d_same_upp": 15, "get_pad_shap": [15, 89], "pad_top": [15, 89], "pad_bottom": [15, 89], "pad_left": [15, 89], "pad_right": [15, 89], "mode": [15, 16, 39, 43, 45, 64, 83, 89, 111, 135, 137, 174, 182, 195, 201, 205, 206], "constant_valu": [15, 89, 111], "nan": [15, 20, 21, 73, 74, 89, 167, 191, 192, 200, 201], "test_averagepool_2d_same_upp": 15, "_averagepool_2d_same_low": 15, "test_averagepool_2d_same_low": 15, "_averagepool_2d_pad": 15, "28": [15, 26, 32, 33, 34, 39, 89, 174], "30": [15, 26, 32, 34, 39, 89, 97, 126, 127, 128, 129, 151], "test_averagepool_2d_pad": 15, "_averagepool_2d_pads_count_include_pad": 15, "test_averagepool_2d_pads_count_include_pad": 15, "_averagepool_2d_strid": 15, "test_averagepool_2d_strid": 15, "_averagepool_2d_ceil": 15, "test_averagepool_2d_ceil": 15, "carri": [16, 72, 83, 140], "paper": [16, 19, 65, 66, 72, 75, 137, 203], "http": [16, 19, 26, 27, 58, 64, 65, 66, 72, 75, 77, 83, 86, 87, 101, 103, 114, 115, 135, 137, 159, 180, 183, 203, 671, 678], "arxiv": [16, 64, 72, 137], "org": [16, 19, 26, 27, 58, 64, 65, 66, 72, 86, 87, 101, 103, 114, 115, 135, 137, 159, 180, 183, 203, 689], "1502": 16, "03167": 16, "being": [16, 27, 43, 64, 83, 97, 101, 102, 135, 191, 204, 692], "There": [16, 20, 57, 83, 195, 200, 201, 202, 689, 690, 692], "five": [16, 690], "scale": [16, 40, 43, 44, 54, 72, 75, 76, 77, 90, 94, 113, 114, 115, 116, 117, 118, 135, 137, 144, 174, 182, 199, 206], "input_mean": 16, "input_var": 16, "note": [16, 20, 26, 32, 33, 34, 38, 43, 54, 76, 83, 85, 102, 113, 116, 135, 139, 140, 143, 152, 174, 203, 204, 205, 676, 687], "estim": [16, 197, 203, 692], "statist": [16, 690], "training_mod": [16, 43], "we": [16, 17, 20, 43, 69, 82, 83, 99, 117, 118, 119, 120, 160, 166, 174, 180, 196, 203, 205, 206, 677, 686, 692], "running_mean": 16, "running_var": 16, "invalid": [16, 685, 690], "updat": [16, 54, 140, 141, 142, 143, 203, 204, 206, 673, 686, 689], "current_mean": 16, "current_var": 16, "epsilon": [16, 72, 77, 203, 204], "all_except_channel_index": 16, "reducevar": 16, "notic": [16, 192], "popul": [16, 51], "varianc": [16, 72, 77, 93, 199], "sqrd": 16, "x_i": [16, 689, 692], "x_avg": 16, "formula": [16, 23, 26, 40, 44, 93, 94, 96, 114, 115, 153, 195], "doe": [16, 34, 43, 50, 69, 82, 101, 107, 140, 143, 160, 161, 169, 180, 181, 671, 676, 684, 689, 690, 692], "avoid": [16, 72, 77, 137, 203, 204, 689, 692], "overflow": [16, 33, 87, 114], "depreci": 16, "implementor": 16, "suggest": 16, "befor": [16, 26, 27, 54, 58, 105, 159, 180, 674, 684, 692], "op": [16, 39, 51, 83, 91, 108, 131, 140, 142, 143, 164, 182, 692], "about": [16, 43, 54, 57, 58, 76, 116, 684, 690, 692], "represent": [16, 18, 20, 43, 54, 58, 76, 105, 116, 174, 191, 679], "empti": [16, 25, 31, 41, 43, 54, 58, 71, 76, 83, 106, 107, 108, 111, 116, 131, 134, 135, 139, 140, 145, 147, 148, 149, 150, 166, 169, 205, 673, 674, 677, 681, 689, 692], "mai": [16, 17, 20, 33, 43, 45, 54, 58, 71, 76, 87, 101, 114, 116, 135, 140, 161, 174, 191, 192, 200, 201, 203, 673, 689, 690, 692], "place": [16, 43, 54, 58, 76, 116, 196, 676], "actual": [16, 18, 43, 54, 58, 76, 77, 83, 116, 134], "miss": [16, 43, 54, 58, 76, 116, 191, 200, 689, 690, 692], "trail": [16, 43, 54, 58, 76, 116, 143], "those": [16, 43, 54, 58, 76, 105, 116, 135, 203, 204, 674, 689], "simpli": [16, 43, 54, 58, 76, 116, 685], "omit": [16, 43, 54, 58, 76, 83, 116, 137, 140, 152, 159, 200, 201, 205, 673], "divis": [16, 42, 72, 77, 166], "factor": [16, 90, 115, 135, 137, 203, 206], "g": [16, 20, 32, 41, 54, 76, 83, 94, 116, 137, 203, 204, 206, 671, 673, 687, 692], "would": [16, 18, 20, 26, 31, 37, 43, 131, 169, 174, 192, 203, 204, 206, 689, 692], "everi": [16, 45, 135, 140, 196, 673, 676, 677, 679, 684, 689, 690, 692], "over": [16, 45, 60, 75, 83, 85, 90, 102, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 139, 140, 689, 692], "becom": [16, 64, 174, 206, 679, 692], "singl": [16, 28, 29, 102, 140, 143, 168, 177, 179, 181, 196, 203, 674, 675, 680, 689, 692], "bia": [16, 32, 34, 54, 72, 75, 76, 77, 113, 116, 140, 153, 673, 689, 692], "t2": [16, 17, 19, 20, 21, 31, 33, 37, 38, 43, 44, 51, 64, 65, 66, 73, 74, 87, 91, 94, 99, 105, 113, 114, 115, 118, 120, 135, 137, 139, 140, 187, 188, 189, 192, 193, 197, 200, 203, 204, 205, 206], "u": [16, 45, 57, 77], "allow": [16, 20, 50, 77, 78, 110, 137, 140, 142, 143, 183, 205, 689, 692], "var": [16, 77], "saved_mean": 16, "saved_var": 16, "save": [16, 77, 174, 676, 686, 687, 689, 692], "dure": [16, 43, 77, 89], "speed": [16, 77], "up": [16, 38, 52, 77, 83, 121, 135, 140, 141, 174, 189, 192, 673, 690], "per": [16, 33, 40, 44, 72, 87, 94, 102, 113, 114, 115, 191, 193, 194, 197, 198, 203, 690], "activ": [16, 54, 76, 96, 116, 689], "featur": [16, 32, 33, 34, 113, 137, 191, 196, 199, 200, 201, 689, 690, 692], "mini": 16, "1e": [16, 20, 72, 77, 93, 203, 204], "5f": [16, 72], "is_test": [16, 43], "9f": 16, "dimension": [16, 26, 57, 69, 72, 82, 86, 87, 114, 140, 143, 160, 161, 168, 181], "nchw": [16, 72], "draw": 17, "distribut": [17, 99, 117, 118, 119, 120], "contain": [17, 26, 30, 32, 33, 34, 41, 43, 45, 57, 69, 82, 91, 94, 101, 105, 106, 108, 111, 113, 121, 136, 146, 149, 150, 151, 152, 160, 166, 174, 177, 179, 180, 181, 197, 198, 205, 206, 671, 673, 676, 677, 684, 689, 690, 692], "probabl": [17, 99, 101, 161, 197], "p": [17, 60, 76, 84, 85, 161, 692], "determinist": 17, "seed": [17, 43, 99, 101, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 132], "gener": [17, 19, 20, 21, 26, 27, 31, 34, 43, 51, 58, 64, 65, 66, 83, 86, 87, 91, 94, 99, 102, 103, 111, 114, 117, 118, 119, 120, 121, 135, 140, 174, 180, 183, 194, 203, 205, 689, 690, 692], "auto": [17, 34, 43, 91, 99, 117, 118, 119, 120, 205], "onli": [17, 26, 32, 33, 34, 37, 38, 44, 51, 64, 71, 84, 85, 87, 94, 105, 111, 114, 135, 139, 140, 153, 166, 169, 174, 187, 188, 189, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 673, 676, 684, 689, 690, 692], "_bernoulli_without_dtyp": 17, "bernoulli_reference_implement": 17, "test_bernoulli": 17, "_bernoulli_with_dtyp": 17, "float64": [17, 37, 51, 97, 680, 690, 692], "test_bernoulli_doubl": 17, "_bernoulli_with_se": 17, "test_bernoulli_se": 17, "bitwis": 18, "shift": [18, 77, 137], "direct": [18, 37, 54, 76, 116, 140, 203, 204, 206, 673], "move": [18, 39, 164, 203, 204, 691], "toward": 18, "decreas": 18, "bit": [18, 20, 33, 40, 44, 77, 87, 89, 113, 114, 115, 127, 129, 192, 203, 204, 206, 689], "increas": [18, 26, 201, 203, 673, 679, 689], "anoth": [18, 26, 71, 140, 191, 192, 205, 689, 690, 692], "amount": [18, 34], "becaus": [18, 20, 26, 38, 69, 82, 91, 139, 140, 160, 203, 204, 679, 692], "necessarili": [18, 174], "_right_unit8": 18, "test_bitshift_right_uint8": 18, "_right_unit16": 18, "test_bitshift_right_uint16": 18, "_right_unit32": 18, "test_bitshift_right_uint32": 18, "_right_unit64": 18, "test_bitshift_right_uint64": 18, "_left_unit8": 18, "test_bitshift_left_uint8": 18, "_left_unit16": 18, "test_bitshift_left_uint16": 18, "_left_unit32": 18, "test_bitshift_left_uint32": 18, "_left_unit64": 18, "test_bitshift_left_uint64": 18, "blackman": 19, "ieeexplor": [19, 65, 66, 135], "ieee": [19, 65, 66, 135], "1455106": [19, 65, 66], "output_datatyp": [19, 65, 66, 94], "strictli": [19, 20, 65, 66, 94], "datatyp": [19, 20, 31, 51, 65, 66, 94, 117, 118, 119, 120, 153, 681], "enum": [19, 20, 51, 65, 66, 94, 117, 118, 119, 120, 169, 201], "whose": [19, 25, 65, 66, 94, 136, 161, 174], "period": [19, 65, 66], "symmetr": [19, 65, 66], "hann": [19, 65, 66], "point": [19, 20, 33, 40, 41, 43, 44, 57, 64, 65, 66, 77, 83, 87, 97, 101, 113, 114, 115, 135, 137, 190, 200, 205], "int64_t": [19, 38, 65, 66, 139], "a0": [19, 65, 66, 139], "42": [19, 26, 34, 113, 692], "a1": [19, 65, 66, 139], "a2": 19, "08": [19, 130], "1415": [19, 65, 66, 139], "arang": [19, 38, 41, 50, 55, 65, 66, 94, 97, 112, 123, 124, 139, 153, 178, 180], "test_blackmanwindow": 19, "test_blackmanwindow_symmetr": 19, "field": [20, 51, 64, 117, 118, 119, 120, 200, 201, 673, 676, 677, 678, 685, 692], "messag": [20, 51, 117, 118, 119, 120, 673, 678, 679, 684], "plain": 20, "1000": [20, 64, 115, 159], "scientif": 20, "1e8": 20, "100": [20, 26, 38, 51, 102, 115, 132], "some": [20, 34, 50, 54, 57, 76, 116, 135, 142, 143, 191, 203, 204, 205, 673, 688, 689, 690, 691, 692], "liter": 20, "reserv": 20, "special": [20, 101, 203, 689, 690], "inf": [20, 21, 25, 46, 73, 78, 110, 133, 144, 175], "posit": [20, 56, 73, 105, 140, 141, 142, 143, 145, 148, 149, 151, 159, 166, 177, 179, 187, 692], "infin": [20, 73], "respect": [20, 25, 77, 102, 141, 174, 203, 204, 205], "exactli": [20, 30, 45, 105, 137, 687, 692], "insensit": 20, "wai": [20, 689, 690, 692], "map": [20, 32, 33, 34, 57, 73, 94, 113, 137, 140, 174, 180, 186, 187, 188, 189, 192, 202, 206, 673, 679, 681, 689, 690, 692], "infinit": [20, 689], "similarli": [20, 26, 140, 200], "314": [20, 692], "15926": 20, "hello": 20, "world": 20, "undefin": [20, 24, 107, 111, 135, 140, 159, 177, 200, 201, 689, 692], "behavior": [20, 24, 29, 37, 97, 103, 107, 111, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 140, 159, 203, 204, 206], "arithmet": [20, 203, 204], "718": 20, "convers": [20, 677, 688, 690], "alwai": [20, 206], "user": [20, 43, 83, 135, 151, 159, 205, 671, 673, 678, 684, 689, 690], "awar": 20, "loss": [20, 101, 161, 205], "caus": [20, 34, 64, 91, 97], "64": [20, 26, 34, 39, 113, 143, 203, 204, 206], "1415926459": 20, "141592": 20, "36": [20, 26, 34, 39, 174], "truncat": [20, 174], "store": [20, 174, 204, 673, 676, 677, 684, 689, 692], "target": [20, 101, 135, 141, 142, 161, 194, 198, 201, 205, 673, 688], "among": [20, 690, 692], "oor": 20, "fix": [20, 45, 689, 690], "els": [20, 21, 34, 51, 52, 54, 58, 69, 71, 76, 77, 82, 94, 108, 116, 131, 149, 160, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 689, 692], "uint": 20, "discard": [20, 27], "higher": [20, 34, 179, 679], "reinterpret": 20, "complement": 20, "200": [20, 40, 692], "56": [20, 26, 34, 39, 87, 113, 692], "complex": [20, 21, 38, 51, 139, 681, 689, 690, 692], "test_cas": [20, 21, 28, 134, 149], "from_typ": [20, 21], "to_typ": [20, 21], "np_fp32": [20, 21], "47892547": [20, 21], "48033667": [20, 21], "49968487": [20, 21], "81910545": [20, 21], "47031248": [20, 21], "816468": [20, 21], "21087195": [20, 21], "7229038": [20, 21], "little_endisan": [20, 21], "sy": [20, 21], "byteord": [20, 21], "littl": [20, 21], "np_uint16_view": [20, 21], "view": [20, 21, 203, 205, 206, 689], "np_bfp16": [20, 21], "assert": [20, 21, 57], "bfloat": [20, 21, 183], "np_fp32_zero": [20, 21], "np_fp32_from_bfloat": [20, 21], "elif": [20, 21], "random_sampl": [20, 21, 52, 134, 164, 178], "tensor_dtype_to_np_dtyp": [20, 21, 677], "getattr": [20, 21, 689, 692], "give": [20, 21, 91, 689, 690, 692], "object": [20, 21, 169, 673, 676, 677, 679, 681, 684, 692], "script": [20, 21, 64, 689], "ss": [20, 21], "encod": [20, 21, 101, 140, 195, 196, 673, 674, 689], "utf": [20, 21, 30, 169, 174], "su": [20, 21], "decod": [20, 21, 201], "append": [20, 21, 140, 692], "test_cast_": 20, "_to_": [20, 21], "target_typ": 21, "like": [21, 27, 69, 82, 86, 87, 97, 114, 140, 160, 183, 673, 684, 689, 690, 692], "test_castlike_": 21, "test_ceil_exampl": 22, "test_ceil": 22, "continu": [23, 108, 190, 689], "differenti": [23, 205, 675, 680], "exponenti": [23, 49, 144, 160, 204], "linear": [23, 40, 54, 83, 91, 94, 96, 115, 133, 135, 144, 175, 182, 193, 194, 197, 198, 205, 689, 690, 691], "unit": [23, 77, 96, 144, 199, 690], "alpha": [23, 46, 54, 58, 67, 68, 75, 76, 78, 116, 144, 175, 204, 206, 689], "control": [23, 34, 174, 687, 692], "input_data": [23, 24, 93, 96], "8439683": [23, 93], "5665144": [23, 93], "05836735": [23, 93], "02916367": [23, 93], "12964272": [23, 93], "5060197": [23, 93], "79538304": [23, 93], "9411346": [23, 93], "9546573": [23, 93], "17730942": [23, 93], "46192095": [23, 93], "26480448": [23, 93], "6746842": [23, 93], "01665257": [23, 93], "62473077": [23, 93], "9240844": [23, 93], "9722341": [23, 93], "11965699": [23, 93], "41356155": [23, 93], "9129373": [23, 93], "59330076": [23, 93], "81929934": [23, 93], "7862604": [23, 93], "11799799": [23, 93], "69248444": [23, 93], "54119414": [23, 93], "07513223": [23, 93], "positive_input": 23, "maximum": [23, 25, 44, 69, 83, 88, 89, 102, 127, 140, 142, 143, 174], "negative_input": 23, "minimum": [23, 25, 44, 95, 129, 142, 143, 174, 677], "expected_output": [23, 57, 93, 96, 165], "test_celu": 23, "center": [24, 64, 94], "crop": 24, "ax": [24, 77, 83, 93, 111, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 152, 159, 168, 178, 181, 185, 689, 690, 692], "bigger": [24, 692], "extract": [24, 151, 159, 174, 678, 687, 690, 692], "back": [24, 26, 27, 28, 37, 40, 52, 55, 56, 69, 77, 82, 91, 105, 111, 115, 135, 140, 141, 142, 145, 148, 149, 152, 159, 160, 165, 166, 168, 177, 180, 181, 673, 674], "repeat": [24, 45, 76, 111, 135, 159, 176, 671, 673], "tind": [24, 55, 56, 101, 111, 141, 142, 159, 161], "d": [24, 26, 33, 37, 40, 41, 50, 54, 56, 57, 64, 69, 76, 77, 82, 87, 89, 90, 91, 111, 113, 114, 115, 116, 121, 135, 137, 141, 142, 159, 160, 161, 166, 173, 174, 177, 179, 180, 182, 187, 189, 190, 205, 686, 692], "output_data": 24, "complex128": [24, 26, 27, 28, 29, 30, 39, 50, 52, 55, 56, 57, 64, 70, 71, 83, 103, 105, 106, 107, 108, 111, 118, 120, 134, 135, 136, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 158, 159, 164, 165, 166, 168, 176, 178, 179, 180, 181, 182, 183, 205, 680, 689, 692], "complex64": [24, 26, 27, 28, 29, 30, 38, 39, 50, 52, 55, 56, 57, 64, 70, 71, 83, 103, 105, 106, 107, 108, 111, 118, 120, 134, 135, 136, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 158, 159, 164, 165, 166, 168, 176, 178, 179, 180, 181, 182, 183, 205, 677, 680, 689, 692], "_center_crop_pad_crop": 24, "diff": [24, 77], "uneven": 24, "test_center_crop_pad_crop": 24, "_center_crop_pad_pad": 24, "test_center_crop_pad_pad": 24, "_center_crop_pad_crop_and_pad": 24, "third": [24, 91, 180, 183], "stai": 24, "test_center_crop_pad_crop_and_pad": 24, "_center_crop_pad_crop_axes_hwc": 24, "test_center_crop_pad_crop_axes_hwc": 24, "_center_crop_pad_crop_axes_chw": 24, "test_center_crop_pad_crop_axes_chw": 24, "within": [25, 45, 55, 56, 57, 141, 142, 181, 191, 201, 689], "interv": [25, 102, 690], "thei": [25, 64, 94, 113, 114, 140, 152, 159, 180, 191, 197, 201, 203, 204, 673, 689, 690, 692], "numeric_limit": 25, "lowest": [25, 94], "under": [25, 684, 689], "replac": [25, 143, 191, 196, 692], "abov": [25, 54, 69, 76, 77, 82, 83, 101, 116, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 143, 160, 174, 179, 690], "min_val": 25, "max_val": 25, "test_clip_exampl": 25, "test_clip": 25, "test_clip_inbound": 25, "test_clip_outbound": 25, "test_clip_splitbound": 25, "_clip_default": 25, "test_clip_default_min": 25, "no_min": 25, "suppli": [25, 83, 102, 139, 140], "test_clip_default_max": 25, "no_max": 25, "test_clip_default_inbound": 25, "_clip_default_int8": 25, "iinfo": 25, "test_clip_default_int8_min": 25, "test_clip_default_int8_max": 25, "test_clip_default_int8_inbound": 25, "rearrang": [26, 39, 164], "column": [26, 39, 89, 114, 202, 692], "block": [26, 39, 164, 673, 689], "multidimension": [26, 689], "behav": [26, 27, 86, 87, 97, 103, 114, 183, 689], "pytorch": [26, 64, 101, 102, 135, 690], "fold": [26, 140], "stabl": [26, 101, 159], "torch": [26, 56, 64, 101, 141, 142, 690], "nn": [26, 64, 101], "html": [26, 27, 64, 86, 87, 101, 103, 114, 159, 180, 183], "multi": [26, 83], "python": [26, 64, 681, 689, 690, 691], "com": [26, 77, 83, 180, 671, 678], "dangel": 26, "unfoldnd": 26, "although": 26, "image_shap": 26, "look": [26, 189, 192, 689, 690, 692], "redund": 26, "could": [26, 33, 87, 113, 134, 151, 689, 690, 692], "convolut": [26, 32, 33, 34, 75, 113], "advanc": 26, "scenario": [26, 166, 689], "explain": [26, 690, 691], "blob": [26, 77, 165, 671], "master": [26, 64], "aten": 26, "src": 26, "nativ": 26, "cpp": 26, "l10": 26, "dilat": [26, 32, 33, 34, 89, 113], "ari": 26, "product": [26, 33, 57, 58, 86, 87, 114, 130, 689, 690, 691], "block_shap": 26, "l": [26, 161, 205, 690], "enumer": 26, "lexicograph": 26, "order": [26, 38, 39, 54, 76, 83, 84, 89, 103, 111, 116, 143, 151, 177, 180, 181, 187, 190, 197, 198, 205, 673, 690], "h_img": 26, "w_img": 26, "dim_i1": 26, "dim_i2": 26, "dim_in": 26, "h_block": 26, "w_block": 26, "dim_b1": 26, "dim_b2": 26, "dim_bn": 26, "test_col2im": 26, "_col2im_strid": 26, "test_col2im_strid": 26, "_col2im_pad": 26, "26": [26, 32, 34, 114], "41": [26, 34, 39, 113], "46": [26, 34, 39, 65], "51": [26, 32, 34, 114], "61": 26, "66": [26, 34, 39, 114, 692], "71": 26, "27": [26, 32, 34, 39, 112], "37": [26, 34, 39], "47": [26, 34, 39], "52": [26, 34, 113], "57": [26, 34, 39, 101, 128, 692], "62": 26, "67": [26, 34, 39, 113, 692], "72": [26, 32, 34, 143], "33": [26, 32, 34, 692], "38": [26, 34, 39, 87], "43": [26, 34, 113], "48": [26, 34, 39, 130], "53": [26, 34], "58": [26, 34, 39, 113], "63": [26, 32, 34, 39], "68": [26, 34, 39], "73": [26, 692], "29": [26, 32, 34, 39, 114, 692], "34": [26, 32, 34, 40, 44, 113], "39": [26, 34, 39, 113], "44": [26, 34, 87, 115, 692], "49": [26, 34, 39], "54": [26, 32, 34, 39], "59": [26, 34, 39, 40, 113], "69": [26, 113], "74": [26, 40, 132], "35": [26, 34, 58, 128, 130], "40": [26, 34, 39, 113, 126, 127, 128, 129, 151], "45": [26, 34, 39], "50": [26, 34, 39, 87, 115], "55": [26, 34, 39, 126, 127, 128, 129], "60": [26, 34, 112, 113, 114, 126, 127, 128, 129, 143], "65": [26, 39, 692], "70": [26, 692], "75": [26, 43, 75, 102, 135], "111": [26, 32, 34, 692], "114": [26, 34, 113, 114], "117": [26, 32, 34], "84": [26, 32, 40, 115, 143], "98": [26, 34, 87], "156": [26, 34], "159": [26, 34], "162": [26, 32, 34, 113, 115], "128": [26, 34, 40, 87, 113, 115, 139, 143], "201": [26, 692], "204": [26, 692], "207": [26, 32, 34, 692], "144": [26, 32, 34, 692], "test_col2im_pad": 26, "_col2im_dil": 26, "test_col2im_dil": 26, "_col2im_5d": 26, "76": [26, 34, 115], "81": [26, 32, 34, 113], "86": 26, "91": 26, "96": [26, 143], "101": [26, 102, 113], "106": [26, 34], "116": 26, "77": [26, 113, 692], "82": 26, "87": [26, 34, 40, 113, 692], "92": [26, 113], "97": 26, "102": [26, 34, 40, 113], "107": [26, 113], "112": [26, 32, 692], "78": [26, 34, 123, 131, 692], "83": [26, 87, 113], "88": [26, 34, 692], "93": [26, 32, 34, 113], "103": 26, "108": [26, 32, 34, 692], "113": [26, 34, 87, 114, 692], "118": [26, 114], "79": 26, "89": [26, 40, 113], "94": [26, 174, 204, 206], "99": [26, 32, 34, 40, 130], "104": [26, 34], "109": 26, "119": 26, "80": [26, 113], "85": [26, 34, 204, 206], "90": [26, 34, 692], "95": [26, 102, 113, 204, 206], "105": [26, 34, 143], "110": 26, "115": [26, 114], "120": [26, 34, 130, 692], "test_col2im_5d": 26, "condit": [27, 57, 71, 83, 103, 183, 689, 692], "evalu": [27, 45, 194, 689], "scipi": [27, 86, 87, 103, 114, 159, 180, 183, 690], "Its": [27, 56, 101, 135, 141, 142, 143, 174, 188, 197, 206], "exceed": 27, "_compress_0": 27, "print": [27, 50, 55, 56, 101, 105, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 141, 142, 177, 180, 673, 675, 679, 684, 689, 692], "test_compress_0": 27, "_compress_1": 27, "test_compress_1": 27, "_compress_default_axi": 27, "test_compress_default_axi": 27, "_compress_negative_axi": 27, "test_compress_negative_axi": 27, "alon": [27, 191], "concaten": [28, 29, 54, 55, 76, 83, 116, 140, 143, 190, 203, 205, 206, 674, 689], "except": [28, 29, 83, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 151, 672, 680, 688, 692], "2147483647": [28, 45, 71, 83, 88, 92, 95, 140, 146, 151, 165, 171, 190, 203, 204, 205, 206], "variad": [28, 45, 71, 83, 88, 92, 95, 140, 146, 151, 165, 171, 190, 203, 204, 205, 206, 675, 680], "concat_result": [28, 29], "dict": [28, 671, 677, 678, 680, 681, 686, 692], "values_": [28, 192], "item": [28, 108, 134, 149, 174, 189, 689, 692], "asarrai": [28, 180], "in_arg": 28, "k": [28, 51, 55, 56, 58, 69, 82, 83, 87, 101, 105, 114, 135, 140, 143, 151, 160, 161, 177, 179, 692], "test_concat_": 28, "_axis_": 28, "_axis_negative_": 28, "new_axi": 29, "similar": [29, 50, 56, 97, 103, 111, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 140, 141, 142, 159, 178, 689, 690], "stack": [29, 38, 139], "insert": [29, 105, 111, 149, 181, 189, 205, 674, 689, 692], "new": [29, 134, 140, 149, 203, 204, 206, 679, 689, 690, 692], "do": [29, 37, 45, 58, 64, 83, 89, 91, 97, 115, 161, 177, 193, 200, 201, 205, 689, 690, 692], "input_sequ": [29, 145, 148, 149, 150, 151], "seq": [29, 70, 71, 83, 106, 107, 108, 145, 146, 147, 148, 149, 150, 151, 166, 202], "sparse_valu": 30, "value_": [30, 192], "spars": [30, 174, 187, 673, 674, 684, 692], "sole": 30, "test_const": 30, "taken": [31, 134], "_float_on": 31, "test_constantofshape_float_on": 31, "_int32_zero": 31, "test_constantofshape_int_zero": 31, "_int32_shape_zero": 31, "test_constantofshape_int_shape_zero": 31, "filter": [32, 33, 34, 89, 102, 113, 135, 673, 678], "group": [32, 33, 34, 113, 692], "layer": [32, 33, 34, 40, 44, 54, 69, 76, 77, 82, 83, 113, 115, 116, 160, 673, 689, 690], "weight": [32, 33, 34, 54, 76, 94, 101, 113, 116, 135, 140, 161, 174, 193, 194, 200, 201], "m": [32, 33, 34, 38, 41, 58, 83, 87, 94, 113, 114, 139, 140, 151, 179, 194, 673, 689, 692], "kh": [32, 33, 34, 113], "kw": [32, 33, 34, 113], "k1": [32, 33, 34, 113], "k2": [32, 33, 34, 113], "kn": [32, 33, 34, 113], "filter_out_channel": [32, 33, 113], "filter_in_channel": [32, 33, 113], "filter_spati": [32, 33, 113], "other": [32, 33, 37, 45, 59, 60, 61, 69, 73, 105, 113, 136, 140, 151, 179, 186, 191, 195, 203, 204, 205, 206, 684, 691, 692], "word": [32, 33, 113, 169, 174, 191, 195], "multipli": [32, 54, 58, 86, 87, 94, 114, 199, 690, 692], "node_with_pad": 32, "y_with_pad": 32, "153": [32, 44, 113], "123": [32, 34, 83, 113], "test_basic_conv_with_pad": 32, "without": [32, 33, 69, 82, 160, 200, 201, 689, 690, 692], "node_without_pad": 32, "y_without_pad": 32, "test_basic_conv_without_pad": 32, "_conv_with_strid": 32, "198": [32, 34], "141": [32, 34, 113], "177": 32, "124": [32, 113], "test_conv_with_strides_pad": 32, "234": [32, 34, 113, 692], "252": [32, 115, 692], "test_conv_with_strides_no_pad": 32, "nxcxhxw": 32, "node_with_asymmetric_pad": 32, "y_with_asymmetric_pad": 32, "189": [32, 34], "171": [32, 34], "183": 32, "test_conv_with_strides_and_asymmetric_pad": 32, "_conv_with_autopad_sam": 32, "test_conv_with_autopad_sam": 32, "never": [33, 87, 114, 689, 692], "accumul": [33, 83, 87, 114, 140, 203, 204, 206], "ofpixel": [33, 113], "defaultsto": [33, 113], "x_zero_point": [33, 40, 113], "quantiz": [33, 40, 44, 87, 113, 114, 115, 137], "w_zero_point": [33, 113], "t3": [33, 87, 94, 105, 113, 114, 140, 203, 204, 206], "_without_pad": 33, "convinteger_nod": 33, "test_convinteger_without_pad": 33, "_with_pad": 33, "convinteger_node_with_pad": 33, "test_convinteger_with_pad": 33, "via": [34, 54, 76, 116, 143, 205], "equat": [34, 43, 45, 54, 56, 76, 77, 116, 135, 143], "input_s": [34, 54, 76, 116], "output_pad": 34, "start_i": 34, "end_i": 34, "explicitli": [34, 43, 69, 82, 85, 91, 111, 134, 135, 160], "total_pad": 34, "coordin": [34, 90, 93, 102, 135, 137, 174, 203, 673], "vector": [34, 38, 48, 54, 64, 69, 76, 82, 87, 111, 114, 116, 160, 161, 174, 189, 193, 194, 197, 198], "directli": [34, 137, 140, 673, 674, 679, 685], "affect": 34, "remov": [34, 102, 111, 137, 148, 168, 169, 199, 676, 679, 692], "contribut": [34, 101, 135, 161], "particip": 34, "adj": 34, "adjust": [34, 44, 135, 159], "framework": [34, 85, 673, 689, 690], "ignor": [34, 40, 43, 83, 91, 101, 115, 161, 166, 174, 676], "test_convtranspos": 34, "_convtranspose_1d": 34, "test_convtranspose_1d": 34, "_convtranspose_3d": 34, "174": [34, 113], "186": [34, 113], "288": 34, "306": [34, 692], "324": [34, 692], "222": 34, "246": [34, 114], "378": 34, "396": 34, "414": 34, "282": 34, "184": 34, "294": 34, "208": [34, 114], "168": [34, 113, 114, 143], "135": 34, "276": [34, 692], "423": 34, "441": 34, "459": 34, "312": [34, 692], "225": [34, 692], "702": 34, "729": [34, 112], "756": 34, "513": 34, "261": [34, 692], "270": [34, 115, 692], "549": 34, "837": 34, "864": 34, "891": 34, "603": 34, "195": [34, 113], "621": 34, "639": 34, "432": 34, "219": 34, "213": [34, 113, 692], "333": [34, 692], "342": [34, 135, 692], "231": [34, 692], "122": [34, 692], "192": 34, "134": [34, 113], "130": [34, 115], "264": [34, 692], "402": 34, "426": 34, "146": 34, "210": [34, 692], "648": 34, "666": 34, "684": 34, "462": 34, "240": [34, 113, 692], "486": 34, "738": 34, "774": 34, "522": 34, "170": 34, "344": 34, "534": 34, "546": 34, "368": 34, "182": [34, 692], "194": 34, "126": [34, 113, 143], "129": [34, 113, 115], "172": [34, 113], "267": 34, "273": 34, "291": 34, "147": [34, 143, 692], "150": 34, "303": [34, 692], "468": 34, "477": 34, "321": 34, "212": [34, 113, 692], "327": [34, 692], "224": [34, 692], "test_convtranspose_3d": 34, "_convtranspose_attribut": 34, "test_convtranspose_output_shap": 34, "test_convtranspose_pad": 34, "test_convtranspose_kernel_shap": 34, "_convtranspose_pad": 34, "_convtranspose_dil": 34, "test_convtranspose_dil": 34, "_convtranspose_autopad_sam": 34, "test_convtranspose_autopad_sam": 34, "test_cos_exampl": 35, "test_co": 35, "54308069": 36, "test_cosh_exampl": 36, "test_cosh": 36, "cumul": 37, "inclus": [37, 57, 181], "copi": [37, 39, 43, 51, 70, 118, 120, 134, 136, 141, 142, 143, 145, 159, 164, 176, 190, 674, 690], "exclus": [37, 52, 121, 152, 159], "summat": [37, 45], "opposit": 37, "revers": [37, 39, 54, 76, 116, 136, 140, 178, 205, 673, 689], "input_x": [37, 180], "top": [37, 94, 177, 200, 673, 692], "term": [37, 45, 94, 174], "j": [37, 56, 94, 105, 140, 141, 142, 689, 692], "th": [37, 77, 137, 140, 151, 174, 192, 204, 205], "_cumsum_1d": 37, "test_cumsum_1d": 37, "_cumsum_1d_exclus": 37, "test_cumsum_1d_exclus": 37, "_cumsum_1d_revers": 37, "test_cumsum_1d_revers": 37, "_cumsum_1d_reverse_exclus": 37, "test_cumsum_1d_reverse_exclus": 37, "_cumsum_2d_axis_0": 37, "test_cumsum_2d_axis_0": 37, "_cumsum_2d_axis_1": 37, "test_cumsum_2d_axis_1": 37, "_cumsum_2d_negative_axi": 37, "test_cumsum_2d_negative_axi": 37, "discret": 38, "fourier": [38, 139], "transform": [38, 39, 54, 64, 102, 135, 139, 174, 193, 194, 197, 198, 200, 201, 689, 690], "onesid": [38, 94, 139], "n_fft": [38, 139], "real": [38, 139], "satisfi": [38, 139], "conjug": [38, 139], "symmetri": [38, 139], "possibl": [38, 50, 71, 99, 139, 166, 205, 689, 690, 692], "fast": [38, 139], "rfft": [38, 139], "invok": [38, 139, 206], "batch_idx": 38, "signal_dim1": 38, "signal_dim2": 38, "signal_dimn": 38, "diment": [38, 190], "signal": [38, 94, 139], "final": [38, 77, 83, 134, 140, 159, 161, 200, 201, 206, 673, 690, 691, 692], "imaginari": [38, 139], "dft_length": [38, 94], "signal_dim": 38, "fft": [38, 139], "test_dft": 38, "test_dft_axi": 38, "ifft": 38, "test_dft_invers": 38, "permut": [39, 178, 692], "depth": [39, 105, 164], "dcr": 39, "row": [39, 87, 89, 91, 103, 114, 174, 195, 689, 692], "tmp": [39, 164], "blocksiz": [39, 164], "crd": 39, "re": [39, 71, 94, 678, 689, 692], "arrang": 39, "_default_mode_exampl": 39, "test_depthtospace_exampl": 39, "_crd_mode_exampl": 39, "test_depthtospace_crd_mode_exampl": 39, "dequant": 40, "full": [40, 115, 689], "x_scale": [40, 113], "suppos": 40, "de": 40, "255": [40, 44, 113, 114, 115, 692], "256": [40, 692], "250": [40, 692], "254": [40, 114, 115, 692], "test_dequantizelinear": 40, "_axi": [40, 115], "245": [40, 115, 692], "142": 40, "121": [40, 113], "196": [40, 113, 115], "test_dequantizelinear_axi": 40, "both": [40, 71, 83, 135, 140, 174, 202, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 674, 690, 692], "determin": [41, 56, 83, 121, 151, 174, 179, 192, 196, 205, 677], "squar": [41, 124, 132, 167, 203, 204, 206], "matrix": [41, 51, 52, 54, 58, 69, 76, 82, 84, 86, 87, 94, 114, 116, 160, 174, 179, 689, 690, 692], "matric": [41, 179, 689, 692], "inner": [41, 52, 83, 140], "most": [41, 55, 56, 64, 69, 82, 134, 141, 142, 143, 160, 689, 690, 692], "submatric": 41, "_2d": [41, 165], "linalg": 41, "test_det_2d": 41, "_nd": 41, "test_det_nd": 41, "test_div_exampl": 42, "test_div": 42, "test_div_uint8": 42, "_div_broadcast": 42, "test_div_bcast": 42, "ratio": [43, 135], "mask": [43, 137], "wa": [43, 83, 196, 203, 673, 689, 690, 692], "simpl": [43, 116, 140, 192, 671, 689, 690, 691], "typic": [43, 91, 140, 191], "henc": [43, 143], "unless": [43, 689, 690, 692], "mimic": 43, "noth": 43, "drop": [43, 169], "request": 43, "_default": [43, 54, 75, 76, 116, 175, 178], "test_dropout_default": 43, "_default_ratio": 43, "test_dropout_default_ratio": 43, "_default_mask": 43, "return_mask": 43, "test_dropout_default_mask": 43, "_default_mask_ratio": 43, "test_dropout_default_mask_ratio": 43, "_training_default": 43, "bool_": 43, "test_training_dropout_default": 43, "_training_default_ratio_mask": 43, "test_training_dropout_default_mask": 43, "_train": 43, "test_training_dropout": 43, "_training_ratio_mask": 43, "test_training_dropout_mask": 43, "_training_default_zero_ratio": 43, "test_training_dropout_zero_ratio": 43, "_training_default_zero_ratio_mask": 43, "test_training_dropout_zero_ratio_mask": 43, "old": [43, 690], "_default_old": 43, "test_dropout_default_old": 43, "make_opsetid": [43, 70, 71, 83, 140, 141, 182, 203, 204, 206, 677, 692], "_random_old": 43, "test_dropout_random_old": 43, "our": [43, 206], "phase": 43, "fill": [43, 57, 105, 111, 692], "fuse": [44, 692], "fp32": 44, "8bit": 44, "zeropoint": 44, "y_scale": [44, 113, 114, 115], "qmax": 44, "qmin": 44, "intermediate_zero_point": 44, "y_zero_point": [44, 113, 114, 115], "satur": [44, 114, 115], "itermediate_zero_point": 44, "127": [44, 113, 114, 115], "now": [44, 690, 692], "nearest": [44, 64, 114, 115, 135, 138, 182, 692], "ti": [44, 114, 115], "unsign": 44, "0196078438": 44, "x_min": 44, "x_max": 44, "y_zeropoint": 44, "test_dynamicquantizelinear": 44, "0156862754": 44, "test_dynamicquantizelinear_max_adjust": 44, "345": [44, 692], "test_dynamicquantizelinear_min_adjust": 44, "term1": 45, "term2": 45, "occur": [45, 180], "algebra": 45, "einstein": 45, "convent": 45, "comma": [45, 689], "separ": [45, 689], "lower": [45, 51, 94, 119, 120, 169, 177, 179], "letter": [45, 692], "charact": [45, 692], "classic": [45, 692], "implicitli": [45, 83], "alphabet": 45, "sort": [45, 177, 180, 689, 692], "ellipsi": 45, "implicit": [45, 689], "space": [45, 692], "0020": 45, "express": [45, 200, 201, 689, 692], "_einsum_transpos": 45, "eqn": 45, "ij": [45, 692], "ji": 45, "einsum_reference_implement": 45, "test_einsum_transpos": 45, "_einsum_sum": 45, "test_einsum_sum": 45, "_einsum_batch_diagon": 45, "ii": 45, "test_einsum_batch_diagon": 45, "_einsum_inner_prod": 45, "test_einsum_inner_prod": 45, "_einsum_batch_matmul": 45, "bij": 45, "bjk": 45, "bik": 45, "test_einsum_batch_matmul": 45, "coeffici": [46, 78, 135, 144, 193, 194, 197, 198, 203, 204, 206, 689, 690, 692], "2642411": 46, "test_elu_exampl": 46, "test_elu": 46, "_elu_default": 46, "default_alpha": [46, 67, 78, 144, 175], "test_elu_default": 46, "test_equ": 47, "_equal_broadcast": 47, "test_equal_bcast": 47, "integr": [47, 99, 145, 148, 149, 150, 166], "error": [48, 55, 56, 57, 69, 82, 83, 107, 135, 140, 141, 142, 145, 148, 149, 160, 168, 181, 685, 692], "math": [48, 75], "test_erf": 48, "36787945": 49, "71828175": 49, "test_exp_exampl": 49, "test_exp": 49, "align": [50, 137], "broadcast_to": 50, "major": [50, 89, 91, 103, 679, 690], "ndim": [50, 59, 61, 159, 176, 181], "want": [50, 64], "_dim_chang": 50, "new_shap": [50, 52], "prod": [50, 52, 123, 124, 130], "test_expand_dim_chang": 50, "_dim_unchang": 50, "test_expand_dim_unchang": 50, "diagon": [51, 83, 102, 179], "everywher": 51, "upper": [51, 119, 120, 121, 169, 179], "notspecifi": 51, "inform": [51, 91, 94, 118, 120, 159, 204, 673, 676, 680, 684, 685, 689, 690, 692], "_without_dtyp": 51, "ey": 51, "test_eyelike_without_dtyp": 51, "_with_dtyp": 51, "test_eyelike_with_dtyp": 51, "_populate_off_main_diagon": 51, "off_diagonal_offset": 51, "test_eyelike_populate_off_main_diagon": 51, "d_0": 52, "d_1": [52, 101], "d_n": 52, "d_": 52, "d_axi": 52, "outer": [52, 55, 56, 140, 141, 142], "remain": [52, 134, 140, 143, 673, 674, 689, 692], "test_flatten_axi": 52, "_flatten_with_default_axi": 52, "test_flatten_default_axi": 52, "_flatten_negative_axi": 52, "test_flatten_negative_axi": 52, "test_floor_exampl": 53, "test_floor": 53, "usual": [54, 76, 116, 203, 205, 679, 689, 690, 692], "custom": [54, 76, 116, 673, 689, 690, 692], "cudnn": [54, 76, 83, 116], "notat": [54, 76, 116, 140], "gate": [54, 76, 116], "reset": [54, 673], "hidden": [54, 76, 116, 140], "time": [54, 76, 83, 99, 116, 136, 139, 140, 174, 689, 690, 692], "step": [54, 76, 83, 116, 121, 139, 159, 673, 689, 690, 692], "zrh": 54, "recurr": [54, 76, 83, 116, 140], "wb": [54, 76, 684, 692], "rb": [54, 76, 684, 692], "backward": [54, 76, 116, 137, 140, 159, 690], "wbb": [54, 76], "rbb": [54, 76], "state": [54, 76, 83, 116, 140, 673], "num_direct": [54, 76, 116], "bidirect": [54, 76, 116, 140], "2x": [54, 76, 116], "affin": [54, 76, 116], "beta": [54, 58, 67, 68, 75, 76, 116, 204, 206, 689], "scaledtanh": [54, 76, 116], "zt": 54, "xt": [54, 76, 91, 116], "wz": 54, "ht": [54, 76, 116, 140], "rz": 54, "wbz": 54, "rbz": 54, "rt": 54, "wr": [54, 116], "rr": [54, 116], "wbr": 54, "rbr": 54, "wh": 54, "rh": 54, "rbh": 54, "wbh": 54, "linear_before_reset": 54, "activation_alpha": [54, 76, 116], "01": [54, 76, 78, 116, 206], "activation_beta": [54, 76, 116], "cell": [54, 76, 116, 140], "threshold": [54, 76, 102, 116, 175, 186, 200, 201, 676, 692], "bound": [54, 55, 56, 57, 64, 76, 83, 94, 102, 116, 141, 142, 145, 148, 149], "No": [54, 76, 116, 152, 169, 182], "forward": [54, 76, 116, 140, 159, 205], "hidden_s": [54, 76, 116], "neuron": [54, 76, 116], "layout": [54, 76, 116], "initial_h": [54, 76, 116], "y_h": [54, 76, 116, 140], "seq_length": [54, 76, 116], "batch_siz": [54, 69, 76, 82, 99, 116, 136, 139, 140, 160, 161], "pack": [54, 76, 116, 187], "potenti": [54, 76, 116], "sequence_len": [54, 76, 116, 136, 140], "initi": [54, 76, 83, 116, 140, 159, 203, 204, 671, 673, 674, 677, 684, 690, 691], "intermedi": [54, 76, 116, 140, 169, 180, 205, 679, 689, 690, 692], "seq_len": [54, 76, 116], "weight_scal": [54, 76, 116], "number_of_g": [54, 76], "gru_help": 54, "_": [54, 76, 116, 135, 151, 692], "test_gru_default": 54, "_initial_bia": [54, 76, 116], "custom_bia": [54, 76, 116], "w_b": [54, 76, 116], "r_b": [54, 76, 116], "test_gru_with_initial_bia": 54, "_seq_length": [54, 116], "test_gru_seq_length": 54, "_batchwis": [54, 76, 116], "test_gru_batchwis": 54, "output_sequ": [54, 76, 116, 146, 148, 149, 166], "q": [55, 57, 143, 690], "entri": [55, 105, 121, 141, 142, 143, 166, 168, 181], "let": [55, 57, 77, 135, 143, 174, 192, 203, 204, 205, 206, 689, 692], "i_": 55, "Then": [55, 159, 690], "j_": 55, "_gather_0": 55, "test_gather_0": 55, "_gather_1": 55, "test_gather_1": 55, "_gather_2d_indic": 55, "test_gather_2d_indic": 55, "_gather_negative_indic": 55, "test_gather_negative_indic": 55, "identifi": [56, 140, 141, 142, 205, 673, 677, 689], "instanc": [56, 72, 141, 142, 673, 677, 686], "_gather_elements_0": 56, "gather_el": 56, "test_gather_elements_0": 56, "_gather_elements_1": 56, "test_gather_elements_1": 56, "_gather_elements_negative_indic": 56, "test_gather_elements_negative_indic": 56, "batch_dim": 57, "indices_shap": [57, 143], "best": 57, "thought": 57, "tupl": [57, 59, 61, 123, 124, 126, 127, 128, 129, 130, 131, 132, 143, 200, 201, 671, 674, 677, 680, 692], "lead": [57, 206], "salient": 57, "honor": [57, 134], "met": [57, 689], "data_shap": 57, "obtain": [57, 102, 140, 141, 142, 671, 689], "think": 57, "indices_slic": 57, "locat": [57, 64, 105, 135, 137, 143, 676, 678], "_int32": 57, "gather_nd_impl": 57, "array_equ": 57, "test_gathernd_example_int32": 57, "_float32": 57, "test_gathernd_example_float32": 57, "_int32_batchdim_1": 57, "test_gathernd_example_int32_batch_dim1": 57, "en": [58, 114, 115], "wikipedia": [58, 114, 115], "wiki": [58, 114, 115], "basic_linear_algebra_subprogram": 58, "level_3": 58, "transa": [58, 689], "transb": [58, 689], "unidirect": [58, 110], "_default_zero_bia": 58, "ranf": [58, 125], "gemm_reference_implement": 58, "test_gemm_default_zero_bia": 58, "_default_no_bia": 58, "test_gemm_default_no_bia": 58, "_default_scalar_bia": 58, "test_gemm_default_scalar_bia": 58, "_default_single_elem_vector_bia": 58, "test_gemm_default_single_elem_vector_bia": 58, "_default_vector_bia": 58, "test_gemm_default_vector_bia": 58, "_default_matrix_bia": 58, "test_gemm_default_matrix_bia": 58, "_transposea": 58, "test_gemm_transposea": 58, "_transposeb": 58, "test_gemm_transposeb": 58, "_alpha": 58, "test_gemm_alpha": 58, "_beta": 58, "test_gemm_beta": 58, "_all_attribut": 58, "test_gemm_all_attribut": 58, "inplac": [58, 674, 689, 690, 692], "equival": [59, 60, 61, 83, 131, 140, 152, 169, 177, 673, 692], "while": [59, 60, 61, 83, 135, 137, 159, 190, 192, 202, 206, 677, 689, 692], "test_globalaveragepool": 59, "_globalaveragepool_precomput": 59, "test_globalaveragepool_precomput": 59, "lp": [60, 84, 85], "norm": [60, 85, 123, 124, 195, 203, 204, 206, 689, 692], "test_globalmaxpool": 61, "_globalmaxpool_precomput": 61, "test_globalmaxpool_precomput": 61, "test_great": 62, "_greater_broadcast": 62, "test_greater_bcast": 62, "greater_equ": 63, "flow": [64, 687, 692], "grid": [64, 137], "h_out": 64, "w_out": 64, "interpol": [64, 135, 137, 182], "often": [64, 69, 82, 160, 689, 692], "sampler": 64, "network": [64, 75, 83, 673, 689, 691], "1506": 64, "02025": 64, "grid_sampl": 64, "align_corn": [64, 135], "extrema": 64, "consid": [64, 89, 91, 174, 192, 205, 690, 692], "corner": [64, 102], "instead": [64, 83, 103, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 200, 201, 673], "resolut": 64, "agnost": [64, 102], "three": [64, 91, 111, 135, 141, 142, 143, 180, 183, 195, 673, 690, 692], "bilinear": [64, 135, 137, 182], "bicub": [64, 135], "padding_mod": 64, "outsid": [64, 101, 105, 135, 161, 689], "border": 64, "reflect": [64, 102, 111], "margin": 64, "far": 64, "awai": 64, "until": 64, "offset": [64, 199, 676], "therefor": [64, 83, 189, 203, 205, 684, 689, 692], "handl": [64, 203, 206, 671], "_gridsampl": 64, "1500": 64, "5500": 64, "9500": 64, "3500": 64, "7500": 64, "5000": 64, "3000": [64, 692], "9000": 64, "7000": [64, 137], "test_gridsampl": 64, "_gridsample_paddingmod": 64, "y_zero": 64, "test_gridsample_zeros_pad": 64, "y_border": 64, "test_gridsample_border_pad": 64, "y_reflect": 64, "test_gridsample_reflection_pad": 64, "_gridsample_mode_aligncorn": 64, "y_bilinear": 64, "2500": 64, "test_gridsample_bilinear": 64, "y_align_corn": 64, "test_gridsample_aligncorners_tru": 64, "y_nearest": 64, "test_gridsample_nearest": 64, "y_bicub": 64, "1406": 64, "3828": 64, "7556": 64, "9688": 64, "1445": 64, "3906": 64, "test_gridsample_bicub": 64, "someon": 64, "who": 64, "comment": 64, "ci": 64, "ham": 65, "test_hammingwindow": 65, "test_hammingwindow_symmetr": 65, "test_hannwindow": 66, "test_hannwindow_symmetr": 66, "test_hardsigmoid_exampl": 67, "test_hardsigmoid": 67, "_hardsigmoid_default": 67, "default_beta": 67, "test_hardsigmoid_default": 67, "test_hardswish": 68, "test_hardmax_exampl": 69, "maxim": [69, 91], "hot": [69, 105], "test_hardmax_one_hot": 69, "_hardmax_axi": 69, "test_hardmax_axis_0": 69, "test_hardmax_axis_1": 69, "test_hardmax_axis_2": 69, "test_hardmax_negative_axi": 69, "test_hardmax_default_axi": 69, "rather": [69, 82, 160], "coerc": [69, 82, 160], "arbitrari": [69, 82, 152, 158, 160], "a_0": [69, 82, 160], "a_1": [69, 82, 160, 177], "a_": [69, 82, 160, 177], "a_k": [69, 82, 160], "situat": [69, 82, 160, 191], "correctli": [69, 82, 160], "throw": [69, 82, 160, 685], "0th": [69, 82, 160], "nxd": [69, 82, 160], "origin": [69, 77, 82, 91, 94, 102, 135, 136, 137, 152, 160, 174, 177, 180, 181, 673, 685, 687, 690], "coercion": [69, 82, 160], "input_feature_dimens": [69, 82, 160], "test_ident": 70, "_sequenc": 70, "test_identity_sequ": 70, "_identity_opt": 70, "ten_in_tp": [70, 71, 83], "seq_in_tp": [70, 71, 83], "make_sequence_type_proto": [70, 71, 83, 107, 151, 677, 692], "opt_in_tp": [70, 83], "make_optional_type_proto": [70, 71, 83, 107, 108, 677, 692], "identity_nod": [70, 83], "opt_in": [70, 83], "opt_out": 70, "test_identity_opt": 70, "else_branch": [71, 83, 689, 692], "wish": [71, 83], "live": [71, 83], "enclos": [71, 83, 106, 146], "scope": [71, 83, 690], "then_branch": [71, 83, 689, 692], "cond": [71, 83, 692], "branch": [71, 200, 201, 678, 692], "static": [71, 83, 673, 675, 680], "s1": 71, "s2": 71, "variabl": [71, 77, 83, 93, 140, 203, 204, 205, 206, 673, 692], "compat": [71, 137, 689, 690], "union": [71, 102, 672, 673, 677, 683, 684, 685], "file": [71, 671, 673, 676, 678, 684, 689, 690, 692], "neither": 71, "dim_valu": [71, 673, 692], "nor": 71, "dim_param": [71, 673, 686, 692], "contrast": [71, 97, 174], "_if": 71, "then_out": [71, 692], "make_tensor_value_info": [71, 83, 140, 151, 677, 692], "else_out": [71, 692], "then_const_nod": [71, 692], "numpy_help": [71, 679, 692], "from_arrai": [71, 681, 692], "else_const_nod": [71, 692], "then_bodi": [71, 83, 692], "else_bodi": [71, 83, 692], "if_nod": [71, 83, 692], "test_if": 71, "_if_seq": 71, "make_tensor_sequence_value_info": [71, 83, 677, 692], "then_seq_nod": 71, "else_seq_nod": 71, "test_if_seq": 71, "_if_opt": 71, "then_out_tensor_tp": 71, "then_out_seq_tp": 71, "then_out_opt_tp": 71, "make_value_info": [71, 83, 677, 692], "optional_empti": 71, "else_out_tensor_tp": 71, "else_out_seq_tp": 71, "else_out_opt_tp": 71, "else_opt": 71, "compute_if_output": 71, "opt_empty_in": 71, "else_seq": 71, "else_optional_seq_nod": 71, "test_if_opt": 71, "1607": 72, "08022": 72, "detect_neg": 73, "induc": 73, "detect_posit": 73, "_infin": 73, "ninf": 73, "test_isinf": 73, "_positive_infinity_onli": 73, "isposinf": 73, "test_isinf_posit": 73, "_negative_infinity_onli": 73, "isneginf": 73, "test_isinf_neg": 73, "test_isnan": 74, "local": [75, 91, 169, 674], "respons": 75, "propos": [75, 137, 203], "alexnet": 75, "nip": 75, "cc": [75, 690], "4824": 75, "imagenet": 75, "classif": [75, 193, 197, 200, 201], "deep": [75, 673, 689, 690], "neural": [75, 83, 96, 689, 691], "pdf": [75, 203], "region": [75, 90, 137], "dk": [75, 101, 161], "square_sum": 75, "expon": [75, 112, 126], "0002": 75, "nsize": 75, "ndindex": [75, 143], "test_lrn": 75, "0001": 75, "test_lrn_default": 75, "o": [76, 106, 107, 108, 205, 680, 692], "forget": 76, "iofc": 76, "iof": 76, "peephol": 76, "pb": [76, 684, 692], "wi": [76, 116, 140], "ri": [76, 116, 140], "pi": 76, "ct": 76, "wbi": [76, 116, 140], "rbi": [76, 116, 140], "ft": 76, "wf": 76, "rf": [76, 692], "pf": 76, "wbf": 76, "rbf": [76, 197, 198], "wc": 76, "rc": 76, "wbc": 76, "rbc": 76, "ot": 76, "wo": 76, "ro": 76, "po": 76, "wbo": 76, "rbo": 76, "input_forget": 76, "coupl": 76, "initial_c": 76, "y_c": 76, "hidde_s": 76, "lstm_helper": 76, "test_lstm_default": 76, "test_lstm_with_initial_bia": 76, "_peephol": 76, "number_of_peephol": 76, "init_h": 76, "init_c": 76, "test_lstm_with_peephol": 76, "test_lstm_batchwis": 76, "overal": 77, "stage": [77, 673], "standard": [77, 117, 118, 174, 199, 206, 673, 689, 690], "normalized_ax": 77, "dd": 77, "varep": 77, "stddev": 77, "invstddev": 77, "stand": [77, 135], "deviat": [77, 117, 118], "stash_typ": 77, "happen": [77, 689, 692], "outcom": [77, 99, 186], "normalizedsc": 77, "syntax": [77, 671, 689, 690], "definit": [77, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 689, 690, 692], "normalized_shap": 77, "calculate_normalized_shap": 77, "inv_std_dev": 77, "_layer_norm": 77, "test_layer_normalization_4d_axis_negative_": 77, "test_layer_normalization_4d_axi": 77, "_default_axi": 77, "test_layer_normalization_default_axi": 77, "test_layer_normalization_2d_axis_negative_": 77, "test_layer_normalization_2d_axi": 77, "3d_epsilon": 77, "test_layer_normalization_3d_axis_negative_": 77, "_epsilon": 77, "test_layer_normalization_3d_axi": 77, "leakag": 78, "test_leakyrelu_exampl": 78, "test_leakyrelu": 78, "_leakyrelu_default": 78, "test_leakyrelu_default": 78, "test_less": 79, "_less_broadcast": 79, "test_less_bcast": 79, "less_equ": 80, "natur": 81, "30258512": 81, "test_log_exampl": 81, "test_log": 81, "4076061": 82, "407606": 82, "test_logsoftmax_example_1": 82, "_logsoftmax_axi": 82, "10000": [82, 96, 160], "10001": [82, 160], "10002": [82, 160], "10003": [82, 160], "4401896": 82, "44018966": 82, "test_logsoftmax_large_numb": 82, "test_logsoftmax_axis_0": 82, "test_logsoftmax_axis_1": 82, "test_logsoftmax_axis_2": 82, "test_logsoftmax_negative_axi": 82, "test_logsoftmax_default_axi": 82, "construct": [83, 106, 140, 146, 147, 174, 176, 180, 677], "termin": 83, "trip": 83, "iter": [83, 136, 140, 143, 203, 204, 206, 689, 692], "bodi": [83, 140, 151, 692], "yield": [83, 183], "summar": 83, "max_trip_count": 83, "condition_var": 83, "analog": 83, "trip_count": 83, "amp": 83, "well": [83, 140, 689, 692], "predict": [83, 91, 161, 198, 689, 690, 692], "net": 83, "keepgo": 83, "keepgoing_out": 83, "b_out": 83, "user_defined_v": 83, "keepgoing_in": 83, "incom": 83, "b_in": 83, "my_loc": 83, "outgo": 83, "const": 83, "imagin": [83, 203, 206], "bind": 83, "formal": 83, "read": [83, 684, 689, 690, 692], "fine": 83, "access": [83, 680, 692], "sever": [83, 91, 206, 689], "thing": [83, 692], "snippet": 83, "referenc": [83, 673, 689], "subsequ": [83, 206], "pair": [83, 102, 113, 673, 674, 677], "eg": 83, "These": [83, 200, 689, 690], "scan_output": [83, 140], "creat": [83, 94, 140, 141, 142, 143, 202, 203, 204, 206, 673, 674, 677, 679, 689, 690, 692], "mechan": [83, 689], "semant": [83, 673, 692], "wavefront": 83, "execut": [83, 140, 151, 671, 673, 689, 690, 692], "devblog": 83, "nvidia": 83, "frontend": 83, "emit": 83, "seri": 83, "success": [83, 139], "possibli": 83, "go": [83, 692], "residu": 83, "connect": [83, 674, 687], "subgraph": [83, 140, 151, 677, 687, 691], "figur": [83, 94, 203], "iteration_num": 83, "skip": [83, 174, 205, 692], "v_initi": 83, "v_final_and_scan_output": 83, "_loop_11": 83, "x1": [83, 90, 102, 137, 140, 151, 203, 204, 206, 692], "xn": [83, 140], "x2": [83, 90, 102, 137, 140, 203, 204, 206, 692], "y_in": 83, "y_out": 83, "scan_out": [83, 140, 692], "cond_in": 83, "cond_out": 83, "iter_count": 83, "x_const_nod": 83, "const_tensor_x": 83, "one_const_nod": 83, "const_tensor_on": 83, "i_add_nod": 83, "start_unsqueeze_nod": 83, "slice_start": 83, "end_unsqueeze_nod": 83, "slice_end": 83, "slice_nod": 83, "slice_out": 83, "y_add_nod": 83, "scan_identity_nod": 83, "loop_bodi": 83, "res_i": 83, "res_scan": 83, "test_loop11": 83, "_loop_13": 83, "seq_in": 83, "seq_out": 83, "zero_const_nod": 83, "const_tensor_zero": 83, "axes_nod": 83, "const_tensor_ax": 83, "add_nod": [83, 140], "insert_nod": 83, "seq_empti": 83, "seq_r": 83, "test_loop13_seq": 83, "_loop_16_non": 83, "x0": [83, 151], "opt_seq_in": 83, "optional_has_elem_nod": 83, "optional_has_elem": 83, "optional_is_non": 83, "optional_get_elem": 83, "constant_in": 83, "seq_const_in": 83, "init_seq_in": 83, "then_seq_out": 83, "else_seq_out": 83, "opt_seq": 83, "compute_loop_output": 83, "test_loop16_seq_non": 83, "write": [83, 141, 676, 684, 689, 690, 692], "declar": [83, 673, 692], "intend": [85, 91, 140, 673], "author": [85, 689], "encourag": 85, "test_matmul_2d": 86, "test_matmul_3d": 86, "test_matmul_4d": 86, "a_zero_point": [87, 114], "wherea": [87, 114], "zp_1": 87, "zp_2": 87, "zp_m": 87, "b_zero_point": [87, 114], "col": 87, "zp_n": 87, "test_matmulinteg": 87, "data_0": [88, 92, 95, 171], "data_1": [88, 92, 95, 171], "data_2": [88, 92, 95, 171], "test_max_exampl": 88, "test_max_one_input": 88, "test_max_two_input": 88, "_max_all_numeric_typ": 88, "op_dtyp": [88, 95], "all_numeric_dtyp": [88, 95], "test_max_": 88, "storage_ord": 89, "storag": [89, 91, 677], "_maxpool_2d_uint8": 89, "test_maxpool_2d_uint8": 89, "_maxpool_2d_precomputed_pad": 89, "test_maxpool_2d_precomputed_pad": 89, "_maxpool_with_argmax_2d_precomputed_pad": 89, "test_maxpool_with_argmax_2d_precomputed_pad": 89, "_maxpool_2d_precomputed_strid": 89, "test_maxpool_2d_precomputed_strid": 89, "_maxpool_with_argmax_2d_precomputed_strid": 89, "test_maxpool_with_argmax_2d_precomputed_strid": 89, "_maxpool_2d_precomputed_same_upp": 89, "test_maxpool_2d_precomputed_same_upp": 89, "_maxpool_1d_default": 89, "test_maxpool_1d_default": 89, "_maxpool_2d_default": 89, "test_maxpool_2d_default": 89, "_maxpool_3d_default": 89, "test_maxpool_3d_default": 89, "_maxpool_2d_same_upp": 89, "test_maxpool_2d_same_upp": 89, "_maxpool_2d_same_low": 89, "test_maxpool_2d_same_low": 89, "_maxpool_2d_pad": 89, "test_maxpool_2d_pad": 89, "_maxpool_2d_strid": 89, "test_maxpool_2d_strid": 89, "_maxpool_2d_ceil": 89, "test_maxpool_2d_ceil": 89, "_maxpool_2d_dil": 89, "test_maxpool_2d_dil": 89, "roi": [90, 135, 137], "interest": [90, 137, 692], "num_roi": [90, 137], "pooled_shap": 90, "spatial_scal": [90, 137], "translat": [90, 102, 137], "batch_id": 90, "y1": [90, 102, 137, 151, 692], "y2": [90, 102, 137, 690, 692], "essenti": [91, 174], "partial": [91, 143, 205], "unpool": 91, "corrspond": 91, "ambigu": 91, "output_s": [91, 135], "meant": 91, "disambigu": [91, 673], "known": [91, 135, 684, 689, 692], "exact": [91, 689], "try": [91, 692], "invert": 91, "_without_output_shap": 91, "xi": 91, "test_maxunpool_export_without_output_shap": 91, "_with_output_shap": 91, "test_maxunpool_export_with_output_shap": 91, "test_mean_exampl": 92, "test_mean_one_input": 92, "test_mean_two_input": 92, "br": [93, 135, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202], "ex": 93, "cacul": [93, 161], "associ": [93, 135, 174, 200, 201, 673, 678, 690], "data_mean": 93, "data_mean_squar": 93, "power": [93, 94, 112, 204], "data_squar": 93, "data_squared_mean": 93, "std": 93, "test_mvn": 93, "linearli": 94, "frequenc": [94, 174], "spectra": 94, "num_mel_bin": 94, "lower_edge_hertz": 94, "upper_edge_hertz": 94, "mel": 94, "hertz": 94, "2595": 94, "log10": 94, "700": 94, "triangl": 94, "filterbank": 94, "peak": 94, "spectrogram": 94, "frame": [94, 139], "num_spectrogram_bin": 94, "spectrum": 94, "magnitud": [94, 690], "band": 94, "understood": 94, "nonredund": 94, "bin": [94, 137], "sample_r": 94, "dictat": 94, "triangular": [94, 179], "desir": [94, 187, 206], "highest": 94, "8192": 94, "frequency_bin": 94, "low_frequency_mel": 94, "high_frequency_mel": 94, "mel_step": 94, "flag": [94, 140, 198], "writeabl": 94, "lower_frequency_valu": 94, "center_frequency_point": 94, "higher_frequency_point": 94, "low_to_cent": 94, "center_to_high": 94, "000000": 94, "test_melweightmatrix": 94, "test_min_exampl": 95, "test_min_one_input": 95, "test_min_two_input": 95, "_min_all_numeric_typ": 95, "test_min_": 95, "self": [96, 675, 680], "regular": [96, 203, 204, 206], "monoton": [96, 673], "ln": [96, 162], "linspac": 96, "log1p": 96, "test_mish": 96, "modulu": 97, "remaind": 97, "divisor": [97, 195], "fmod": 97, "howev": [97, 159, 673, 689, 690], "dividend": 97, "forc": [97, 678], "platform": [97, 169, 690], "treatment": 97, "_mod_mixed_sign_float64": 97, "test_mod_mixed_sign_float64": 97, "_mod_mixed_sign_float32": 97, "10000038": 97, "39999962": 97, "test_mod_mixed_sign_float32": 97, "_mod_mixed_sign_float16": 97, "10156": 97, "3984": 97, "test_mod_mixed_sign_float16": 97, "_mod_mixed_sign_int64": 97, "test_mod_mixed_sign_int64": 97, "_mod_mixed_sign_int32": 97, "test_mod_mixed_sign_int32": 97, "_mod_mixed_sign_int16": 97, "test_mod_mixed_sign_int16": 97, "_mod_mixed_sign_int8": 97, "test_mod_mixed_sign_int8": 97, "_mod_uint8": 97, "test_mod_uint8": 97, "_mod_uint16": 97, "test_mod_uint16": 97, "_mod_uint32": 97, "test_mod_uint32": 97, "_mod_uint64": 97, "test_mod_uint64": 97, "_mod_int64_fmod": 97, "test_mod_int64_fmod": 97, "_mod_broadcast": 97, "test_mod_broadcast": 97, "test_mul_exampl": 98, "test_mul": 98, "test_mul_uint8": 98, "_mul_broadcast": 98, "test_mul_bcast": 98, "sample_s": 99, "class_siz": [99, 161], "unnorm": 99, "flip": 100, "test_neg_exampl": 100, "test_neg": 100, "likelihood": 101, "d_2": 101, "d_k": 101, "class": [101, 102, 105, 161, 193, 197, 198, 200, 201, 671, 673, 676, 678, 679, 680, 687, 689, 692], "label": [101, 161, 192, 193, 197, 200, 690], "ignore_index": [101, 161], "classifi": [101, 193, 197, 200, 690], "reduct": [101, 142, 143, 161, 689], "nllloss": 101, "weight_tot": 101, "shall": [101, 161], "rescal": [101, 161, 199], "treat": [101, 143, 159, 161, 190, 193, 676], "_input_shape_is_nc": 101, "negative_log_likelihood_loss": 101, "compute_negative_log_likelihood_loss": 101, "test_nllloss_nc": 101, "_input_shape_is_ncd1d2": 101, "dim1": 101, "dim2": 101, "test_nllloss_ncd1d2": 101, "_input_shape_is_ncd1d2_reduction_mean": 101, "test_nllloss_ncd1d2_reduction_mean": 101, "_input_shape_is_ncd1d2_reduction_sum": 101, "test_nllloss_ncd1d2_reduction_sum": 101, "_input_shape_is_ncd1d2_with_weight": 101, "test_nllloss_ncd1d2_with_weight": 101, "_input_shape_is_ncd1d2_with_weight_reduction_mean": 101, "test_nllloss_ncd1d2_with_weight_reduction_mean": 101, "_input_shape_is_ncd1d2_with_weight_reduction_sum": 101, "test_nllloss_ncd1d2_with_weight_reduction_sum": 101, "_input_shape_is_ncd1d2_with_weight_reduction_sum_ii": 101, "test_nllloss_ncd1d2_with_weight_reduction_sum_ii": 101, "_input_shape_is_ncd1d2_no_weight_reduction_mean_ii": 101, "test_nllloss_ncd1d2_no_weight_reduction_mean_ii": 101, "_input_shape_is_ncd1": 101, "test_nllloss_ncd1": 101, "_input_shape_is_ncd1_weight": 101, "test_nllloss_ncd1_weight": 101, "_input_shape_is_ncd1_ii": 101, "test_nllloss_ncd1_ii": 101, "_input_shape_is_ncd1_weight_ii": 101, "test_nllloss_ncd1_weight_ii": 101, "_input_shape_is_ncd1d2d3d4d5_mean_weight": 101, "dim3": 101, "dim4": 101, "dim5": 101, "test_nllloss_ncd1d2d3d4d5_mean_weight": 101, "_input_shape_is_ncd1d2d3d4d5_none_no_weight": 101, "test_nllloss_ncd1d2d3d4d5_none_no_weight": 101, "_input_shape_is_ncd1_mean_weight_negative_ii": 101, "test_nllloss_ncd1_mean_weight_negative_ii": 101, "_input_shape_is_ncd1d2d3_none_no_weight_negative_ii": 101, "test_nllloss_ncd1d2d3_none_no_weight_negative_ii": 101, "_input_shape_is_ncd1d2d3_sum_weight_high_ii": 101, "test_nllloss_ncd1d2d3_sum_weight_high_ii": 101, "box": 102, "intersect": 102, "iou": 102, "overlap": [102, 674], "previous": [102, 204, 692], "score": [102, 161, 193, 197, 198, 200, 201], "score_threshold": 102, "center_point_box": 102, "algorithm": [102, 203, 204, 205, 206, 673, 677], "system": [102, 135, 137, 676], "invari": 102, "orthogon": 102, "thu": [102, 143, 152, 673], "selected_indic": 102, "collect": [102, 174, 190, 193, 673], "ly": 102, "mostli": 102, "tf": [102, 135, 174], "x_center": 102, "y_center": 102, "num_batch": 102, "spatial_dimens": 102, "num_class": 102, "max_output_boxes_per_class": 102, "iou_threshold": 102, "decid": [102, 169], "too": [102, 203, 206, 690], "much": [102, 689, 690, 692], "num_selected_indic": 102, "batch_index": 102, "class_index": 102, "box_index": 102, "_nonmaxsuppression_suppress_by_i": 102, "test_nonmaxsuppression_suppress_by_i": 102, "_nonmaxsuppression_suppress_by_iou_and_scor": 102, "test_nonmaxsuppression_suppress_by_iou_and_scor": 102, "_nonmaxsuppression_flipped_coordin": 102, "test_nonmaxsuppression_flipped_coordin": 102, "_nonmaxsuppression_limit_output_s": 102, "test_nonmaxsuppression_limit_output_s": 102, "_nonmaxsuppression_single_box": 102, "test_nonmaxsuppression_single_box": 102, "_nonmaxsuppression_identical_box": 102, "test_nonmaxsuppression_identical_box": 102, "_nonmaxsuppression_center_point_box_format": 102, "test_nonmaxsuppression_center_point_box_format": 102, "_nonmaxsuppression_two_class": 102, "test_nonmaxsuppression_two_class": 102, "_nonmaxsuppression_two_batch": 102, "test_nonmaxsuppression_two_batch": 102, "test_nonzero_exampl": 103, "negat": 104, "logical_not": 104, "test_not_2d": 104, "test_not_3d": 104, "test_not_4d": 104, "on_valu": 105, "off_valu": 105, "innermost": 105, "_without_axi": 105, "one_hot": 105, "test_onehot_without_axi": 105, "_with_axi": 105, "axisvalu": 105, "test_onehot_with_axi": 105, "_with_negative_indic": 105, "test_onehot_negative_indic": 105, "_with_negative_axi": 105, "test_onehot_with_negative_axi": 105, "certain": 106, "_get_element_tensor": 107, "tensor_type_proto": [107, 108], "elem_typ": [107, 108, 673, 677, 692], "optional_type_proto": [107, 108], "optional_input": [107, 108], "optional_get_element_reference_implement": 107, "test_optional_get_element_optional_tensor": 107, "test_optional_get_element_tensor": 107, "_get_element_sequ": 107, "seq_type_proto": 107, "test_optional_get_element_optional_sequ": 107, "test_optional_get_element_sequ": 107, "optional_has_element_reference_implement": 108, "test_nam": [108, 134, 149], "test_optional_has_element_": 108, "tensor_input": 108, "_empti": 108, "input_name_opt": 108, "empty_no_input_nam": 108, "empty_no_input": 108, "test_name_surfix": 108, "input_nam": [108, 687, 690], "_optional_input": 108, "_tensor_input": 108, "logical_or": 109, "test_or2d": 109, "test_or3d": 109, "test_or4d": 109, "_or_broadcast": 109, "test_or_bcast3v1d": 109, "test_or_bcast3v2d": 109, "test_or_bcast4v2d": 109, "test_or_bcast4v3d": 109, "test_or_bcast4v4d": 109, "slope": 110, "test_prelu_exampl": 110, "_prelu_broadcast": 110, "test_prelu_broadcast": 110, "sharedacross": 110, "mirror": [111, 203], "num_ax": 111, "chosen": [111, 198, 690], "input_rank": 111, "_constant_pad": 111, "pad_impl": 111, "test_constant_pad": 111, "_reflection_and_edge_pad": 111, "test_": 111, "_pad": 111, "_constant_pad_ax": 111, "test_constant_pad_ax": 111, "test_pow_exampl": 112, "test_pow": 112, "_pow_broadcast": 112, "test_pow_bcast_scalar": 112, "216": [112, 113, 692], "test_pow_bcast_arrai": 112, "_type": 112, "test_pow_types_float32_int64": 112, "test_pow_types_int64_float32": 112, "test_pow_types_float32_int32": 112, "test_pow_types_int32_float32": 112, "test_pow_types_float32_uint64": 112, "test_pow_types_float32_uint32": 112, "test_pow_types_int64_int64": 112, "test_pow_types_int32_int32": 112, "compon": [112, 139], "relat": 113, "w_scale": 113, "t4": [113, 140], "zero_point": 113, "203": [113, 692], "237": [113, 692], "242": [113, 692], "221": [113, 692], "166": 113, "232": [113, 115, 692], "178": 113, "188": 113, "230": 113, "154": [113, 692], "148": 113, "247": [113, 114, 692], "00369204697": 113, "132": [113, 692], "00172794575": 113, "00162681262": 113, "197": 113, "160": 113, "191": 113, "199": 113, "243": [113, 692], "131": 113, "175": 113, "214": [113, 114, 692], "215": 113, "163": 113, "test_qlinearconv": 113, "v_1": 114, "v_2": 114, "v_m": 114, "v_k": 114, "a_scal": 114, "b_scale": 114, "236": [114, 692], "238": 114, "0066": 114, "152": 114, "244": [114, 132, 692], "00705": 114, "0107": 114, "151": 114, "test_qlinearmatmul_2d": 114, "test_qlinearmatmul_3d": 114, "low": [115, 119, 120, 176], "get": [115, 135, 677, 678, 689, 690, 692], "test_quantizelinear": 115, "485": 115, "960": 115, "375": [115, 135, 692], "470": 115, "test_quantizelinear_axi": 115, "wbbi": 116, "rbbi": 116, "rnn_helper": 116, "test_simple_rnn_default": 116, "test_simple_rnn_with_initial_bia": 116, "test_rnn_seq_length": 116, "test_simple_rnn_batchwis": 116, "drawn": [117, 118, 119, 120], "boundari": [119, 120, 174], "increment": [121, 201, 679, 689], "delta": 121, "number_of_el": 121, "pseudocod": 121, "shown": [121, 205, 690], "test_reciprocal_exampl": 122, "test_reciproc": 122, "l1": [123, 195], "_do_not_keepdim": [123, 124, 126, 127, 128, 129, 130, 131, 132], "test_reduce_l1_do_not_keepdims_exampl": 123, "test_reduce_l1_do_not_keepdims_random": 123, "test_reduce_l1_keep_dims_exampl": 123, "test_reduce_l1_keep_dims_random": 123, "test_reduce_l1_default_axes_keepdims_exampl": 123, "test_reduce_l1_default_axes_keepdims_random": 123, "_negative_axes_keepdim": [123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "test_reduce_l1_negative_axes_keep_dims_exampl": 123, "test_reduce_l1_negative_axes_keep_dims_random": 123, "l2": [124, 195, 203, 204, 206], "23606798": 124, "81024968": 124, "63014581": 124, "45362405": 124, "2788206": 124, "test_reduce_l2_do_not_keepdims_exampl": 124, "test_reduce_l2_do_not_keepdims_random": 124, "test_reduce_l2_keep_dims_exampl": 124, "test_reduce_l2_keep_dims_random": 124, "49509757": 124, "test_reduce_l2_default_axes_keepdims_exampl": 124, "test_reduce_l2_default_axes_keepdims_random": 124, "test_reduce_l2_negative_axes_keep_dims_exampl": 124, "test_reduce_l2_negative_axes_keep_dims_random": 124, "_nokeepdim": 125, "test_reduce_log_sum_desc_ax": 125, "test_reduce_log_sum_asc_ax": 125, "test_reduce_log_sum_default": 125, "test_reduce_log_sum_negative_ax": 125, "31326175": 126, "00004578": 126, "00671387": 126, "test_reduce_log_sum_exp_do_not_keepdims_exampl": 126, "test_reduce_log_sum_exp_do_not_keepdims_random": 126, "test_reduce_log_sum_exp_keepdims_exampl": 126, "test_reduce_log_sum_exp_keepdims_random": 126, "test_reduce_log_sum_exp_default_axes_keepdims_exampl": 126, "test_reduce_log_sum_exp_default_axes_keepdims_random": 126, "test_reduce_log_sum_exp_negative_axes_keepdims_exampl": 126, "test_reduce_log_sum_exp_negative_axes_keepdims_random": 126, "test_reduce_max_do_not_keepdims_exampl": 127, "test_reduce_max_do_not_keepdims_random": 127, "test_reduce_max_keepdims_exampl": 127, "test_reduce_max_keepdims_random": 127, "test_reduce_max_default_axes_keepdim_exampl": 127, "test_reduce_max_default_axes_keepdims_random": 127, "test_reduce_max_negative_axes_keepdims_exampl": 127, "test_reduce_max_negative_axes_keepdims_random": 127, "test_reduce_mean_do_not_keepdims_exampl": 128, "test_reduce_mean_do_not_keepdims_random": 128, "test_reduce_mean_keepdims_exampl": 128, "test_reduce_mean_keepdims_random": 128, "test_reduce_mean_default_axes_keepdims_exampl": 128, "test_reduce_mean_default_axes_keepdims_random": 128, "test_reduce_mean_negative_axes_keepdims_exampl": 128, "test_reduce_mean_negative_axes_keepdims_random": 128, "test_reduce_min_do_not_keepdims_exampl": 129, "test_reduce_min_do_not_keepdims_random": 129, "test_reduce_min_keepdims_exampl": 129, "test_reduce_min_keepdims_random": 129, "test_reduce_min_default_axes_keepdims_exampl": 129, "test_reduce_min_default_axes_keepdims_random": 129, "test_reduce_min_negative_axes_keepdims_exampl": 129, "test_reduce_min_negative_axes_keepdims_random": 129, "test_reduce_prod_do_not_keepdims_exampl": 130, "test_reduce_prod_do_not_keepdims_random": 130, "test_reduce_prod_keepdims_exampl": 130, "test_reduce_prod_keepdims_random": 130, "790016e": 130, "test_reduce_prod_default_axes_keepdims_exampl": 130, "test_reduce_prod_default_axes_keepdims_random": 130, "test_reduce_prod_negative_axes_keepdims_exampl": 130, "test_reduce_prod_negative_axes_keepdims_random": 130, "noop_with_empty_ax": 131, "behaviour": 131, "act": 131, "tolist": [131, 690], "test_reduce_sum_do_not_keepdims_exampl": 131, "test_reduce_sum_do_not_keepdims_random": 131, "test_reduce_sum_keepdims_exampl": 131, "test_reduce_sum_keepdims_random": 131, "test_reduce_sum_default_axes_keepdims_exampl": 131, "test_reduce_sum_default_axes_keepdims_random": 131, "test_reduce_sum_negative_axes_keepdims_exampl": 131, "test_reduce_sum_negative_axes_keepdims_random": 131, "_empty_axes_input_noop": 131, "test_reduce_sum_empty_axes_input_noop_exampl": 131, "202": 132, "test_reduce_sum_square_do_not_keepdims_exampl": 132, "test_reduce_sum_square_do_not_keepdims_random": 132, "test_reduce_sum_square_keepdims_exampl": 132, "test_reduce_sum_square_keepdims_random": 132, "650": 132, "test_reduce_sum_square_default_axes_keepdims_exampl": 132, "test_reduce_sum_square_default_axes_keepdims_random": 132, "test_reduce_sum_square_negative_axes_keepdims_exampl": 132, "test_reduce_sum_square_negative_axes_keepdims_random": 132, "rectifi": [133, 175], "test_relu": 133, "At": [134, 203, 204, 692], "unchang": [134, 169, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 692], "allowzero": [134, 692], "dynam": [134, 692], "_reshap": 134, "original_shap": 134, "reordered_all_dim": 134, "reordered_last_dim": 134, "reduced_dim": 134, "extended_dim": 134, "one_dim": 134, "negative_dim": 134, "negative_extended_dim": 134, "zero_dim": 134, "zero_and_negative_dim": 134, "reshape_reference_implement": 134, "test_reshape_": 134, "_allowzero": 134, "allowzero_reord": 134, "neighborhood": 135, "output_dimens": [135, 182], "input_dimens": [135, 182], "roi_end": 135, "roi_start": 135, "antialia": 135, "cubic": 135, "antialias": 135, "downscal": 135, "achiev": 135, "stretch": 135, "resampl": 135, "interpret": 135, "coordinate_transformation_mod": [135, 137], "individu": 135, "x_resiz": 135, "x_origin": 135, "length_origin": 135, "length_res": 135, "roi_x": 135, "start_x": 135, "end_x": 135, "half_pixel": [135, 137], "pytorch_half_pixel": 135, "asymmetr": 135, "tf_crop_and_res": 135, "cubic_coeff_a": 135, "choic": 135, "tensorflow": [135, 690], "1163711": 135, "exclude_outsid": 135, "renorm": 135, "extrapolation_valu": 135, "0f": [135, 137], "keep_aspect_ratio_polici": 135, "regard": 135, "aspect": 135, "applic": [135, 206, 689], "disregard": 135, "out_siz": 135, "not_larg": 135, "extent": [135, 674], "larger": [135, 159, 174], "in_siz": 135, "round_int": 135, "not_smal": 135, "halfwai": 135, "nearest_mod": 135, "four": [135, 689, 692], "round_prefer_floor": 135, "half": [135, 138], "down": 135, "round_prefer_ceil": 135, "start1": 135, "startn": 135, "end1": 135, "endn": 135, "_resize_upsample_scales_nearest": 135, "interpolate_nd": 135, "lambda": 135, "nearest_coeff": 135, "scale_factor": 135, "test_resize_upsample_scales_nearest": 135, "_resize_downsample_scales_nearest": 135, "test_resize_downsample_scales_nearest": 135, "_resize_upsample_sizes_nearest": 135, "test_resize_upsample_sizes_nearest": 135, "_resize_downsample_sizes_nearest": 135, "test_resize_downsample_sizes_nearest": 135, "_resize_upsample_scales_linear": 135, "linear_coeff": 135, "test_resize_upsample_scales_linear": 135, "_resize_upsample_scales_linear_align_corn": 135, "33333333": 135, "66666667": 135, "test_resize_upsample_scales_linear_align_corn": 135, "_resize_downsample_scales_linear": 135, "6666665": 135, "3333331": 135, "test_resize_downsample_scales_linear": 135, "_resize_downsample_scales_linear_align_corn": 135, "142857": 135, "test_resize_downsample_scales_linear_align_corn": 135, "_resize_upsample_scales_cub": 135, "47265625": 135, "76953125": 135, "24609375": 135, "875": 135, "28125": 135, "91015625": 135, "38671875": 135, "68359375": 135, "66015625": 135, "95703125": 135, "43359375": 135, "0625": 135, "46875": 135, "09765625": 135, "57421875": 135, "87109375": 135, "56640625": 135, "86328125": 135, "33984375": 135, "96875": 135, "00390625": 135, "48046875": 135, "77734375": 135, "08203125": 135, "37890625": 135, "85546875": 135, "484375": 135, "890625": 135, "51953125": 135, "99609375": 135, "29296875": 135, "70703125": 135, "109375": 135, "515625": 135, "14453125": 135, "62109375": 135, "91796875": 135, "22265625": 135, "625": 135, "03125": 135, "13671875": 135, "12890625": 135, "42578125": 135, "90234375": 135, "53125": 135, "9375": 135, "04296875": 135, "31640625": 135, "61328125": 135, "08984375": 135, "71875": 135, "125": 135, "75390625": 135, "23046875": 135, "52734375": 135, "cubic_coeff": 135, "test_resize_upsample_scales_cub": 135, "_resize_upsample_scales_cubic_align_corn": 135, "34110787": 135, "80029155": 135, "32944606": 135, "67055394": 135, "19970845": 135, "65889213": 135, "36443149": 135, "70553936": 135, "16472303": 135, "69387755": 135, "03498542": 135, "56413994": 135, "02332362": 135, "20116618": 135, "54227405": 135, "00145773": 135, "53061224": 135, "87172012": 135, "40087464": 135, "86005831": 135, "31778426": 135, "1180758": 135, "64723032": 135, "98833819": 135, "51749271": 135, "97667638": 135, "68221574": 135, "48250729": 135, "01166181": 135, "35276968": 135, "8819242": 135, "79883382": 135, "13994169": 135, "59912536": 135, "12827988": 135, "46938776": 135, "99854227": 135, "45772595": 135, "63556851": 135, "43586006": 135, "96501458": 135, "30612245": 135, "83527697": 135, "29446064": 135, "test_resize_upsample_scales_cubic_align_corn": 135, "_resize_downsample_scales_cub": 135, "47119141": 135, "78125": 135, "08251953": 135, "71142578": 135, "02148438": 135, "32275391": 135, "91650391": 135, "2265625": 135, "52783203": 135, "test_resize_downsample_scales_cub": 135, "_resize_downsample_scales_cubic_align_corn": 135, "39519159": 135, "79038317": 135, "58076634": 135, "97595793": 135, "37114951": 135, "16153268": 135, "55672427": 135, "95191585": 135, "test_resize_downsample_scales_cubic_align_corn": 135, "_resize_upsample_sizes_cub": 135, "45507922": 135, "64057922": 135, "97157922": 135, "42257922": 135, "90732922": 135, "22332922": 135, "70807922": 135, "15907922": 135, "49007922": 135, "67557922": 135, "39437963": 135, "57987963": 135, "91087963": 135, "36187963": 135, "84662963": 135, "16262963": 135, "64737963": 135, "09837963": 135, "42937963": 135, "61487963": 135, "95130693": 135, "13680693": 135, "46780693": 135, "91880693": 135, "40355693": 135, "71955693": 135, "20430693": 135, "65530693": 135, "98630693": 135, "17180693": 135, "20525069": 135, "39075069": 135, "72175069": 135, "17275069": 135, "65750069": 135, "97350069": 135, "45825069": 135, "90925069": 135, "24025069": 135, "42575069": 135, "88975": 135, "07525": 135, "40625": 135, "85725": 135, "658": 135, "14275": 135, "59375": 135, "92475": 135, "11025": 135, "57424931": 135, "75974931": 135, "09074931": 135, "54174931": 135, "02649931": 135, "34249931": 135, "82724931": 135, "27824931": 135, "60924931": 135, "79474931": 135, "82819307": 135, "01369307": 135, "34469307": 135, "79569307": 135, "28044307": 135, "59644307": 135, "08119307": 135, "53219307": 135, "86319307": 135, "04869307": 135, "38512037": 135, "57062037": 135, "90162037": 135, "35262037": 135, "83737037": 135, "15337037": 135, "63812037": 135, "08912037": 135, "42012037": 135, "60562037": 135, "32442078": 135, "50992078": 135, "84092078": 135, "29192078": 135, "77667078": 135, "09267078": 135, "57742078": 135, "02842078": 135, "35942078": 135, "54492078": 135, "test_resize_upsample_sizes_cub": 135, "_resize_downsample_sizes_cub": 135, "63078704": 135, "00462963": 135, "37847222": 135, "12615741": 135, "87384259": 135, "62152778": 135, "99537037": 135, "36921296": 135, "test_resize_downsample_sizes_cub": 135, "v1": [135, 204, 206], "half_pixel_cent": 135, "_resize_upsample_scales_cubic_a_n0p5_exclude_outsid": 135, "55882353": 135, "81494204": 135, "35698249": 135, "89705882": 135, "39705882": 135, "93713516": 135, "47917561": 135, "73529412": 135, "58329755": 135, "83941606": 135, "38145651": 135, "92153285": 135, "42153285": 135, "96160918": 135, "50364964": 135, "75976814": 135, "75145936": 135, "00757787": 135, "54961832": 135, "08969466": 135, "58969466": 135, "12977099": 135, "67181144": 135, "92792995": 135, "91176471": 135, "16788321": 135, "70992366": 135, "29007634": 135, "83211679": 135, "08823529": 135, "07207005": 135, "32818856": 135, "87022901": 135, "41030534": 135, "91030534": 135, "45038168": 135, "99242213": 135, "24854064": 135, "24023186": 135, "49635036": 135, "03839082": 135, "57846715": 135, "07846715": 135, "61854349": 135, "16058394": 135, "41670245": 135, "26470588": 135, "52082439": 135, "06286484": 135, "60294118": 135, "10294118": 135, "64301751": 135, "18505796": 135, "44117647": 135, "test_resize_upsample_scales_cubic_a_n0p5_exclude_outsid": 135, "_resize_downsample_scales_cubic_a_n0p5_exclude_outsid": 135, "36812675": 135, "6695014": 135, "0133367": 135, "57362535": 135, "2188353": 135, "94896657": 135, "25034122": 135, "59417652": 135, "test_resize_downsample_scales_cubic_a_n0p5_exclude_outsid": 135, "_resize_upsample_scales_cubic_asymmetr": 135, "09375": 135, "21875": 135, "test_resize_upsample_scales_cubic_asymmetr": 135, "_resize_tf_crop_and_res": 135, "inaccur": 135, "6000004": 135, "400001": 135, "test_resize_tf_crop_and_res": 135, "_resize_tf_crop_and_resize_extrapolation_valu": 135, "_resize_downsample_sizes_linear_pytorch_half_pixel": 135, "6666666": 135, "333333": 135, "test_resize_downsample_sizes_linear_pytorch_half_pixel": 135, "_resize_upsample_sizes_nearest_floor_align_corn": 135, "test_resize_upsample_sizes_nearest_floor_align_corn": 135, "_resize_upsample_sizes_nearest_round_prefer_ceil_asymmetr": 135, "test_resize_upsample_sizes_nearest_round_prefer_ceil_asymmetr": 135, "_resize_upsample_sizes_nearest_ceil_half_pixel": 135, "test_resize_upsample_sizes_nearest_ceil_half_pixel": 135, "_resize_downsample_scales_linear_antialia": 135, "linear_coeffs_antialia": 135, "test_resize_downsample_scales_linear_antialia": 135, "_resize_downsample_sizes_linear_antialia": 135, "3636363": 135, "590909": 135, "818182": 135, "2727275": 135, "727273": 135, "181818": 135, "409091": 135, "636364": 135, "test_resize_downsample_sizes_linear_antialia": 135, "_resize_downsample_scales_cubic_antialia": 135, "5180721": 135, "2858863": 135, "589329": 135, "357142": 135, "cubic_coeffs_antialia": 135, "test_resize_downsample_scales_cubic_antialia": 135, "_resize_downsample_sizes_cubic_antialia": 135, "7750092": 135, "1200073": 135, "4650054": 135, "1550016": 135, "844998": 135, "534994": 135, "8799925": 135, "224991": 135, "test_resize_downsample_sizes_cubic_antialia": 135, "_resize_upsample_scales_nearest_axes_2_3": 135, "test_resize_upsample_scales_nearest_axes_2_3": 135, "_resize_upsample_scales_nearest_axes_3_2": 135, "test_resize_upsample_scales_nearest_axes_3_2": 135, "_resize_upsample_sizes_nearest_axes_2_3": 135, "test_resize_upsample_sizes_nearest_axes_2_3": 135, "_resize_upsample_sizes_nearest_axes_3_2": 135, "test_resize_upsample_sizes_nearest_axes_3_2": 135, "_resize_tf_crop_and_resize_axes_2_3": 135, "test_resize_tf_crop_and_resize_axes_2_3": 135, "_resize_tf_crop_and_resize_axes_3_2": 135, "test_resize_tf_crop_and_resize_axes_3_2": 135, "_resize_upsample_sizes_nearest_not_larg": 135, "7x7": 135, "test_resize_upsample_sizes_nearest_not_larg": 135, "_resize_upsample_sizes_nearest_not_smal": 135, "8x8": 135, "_resize_downsample_sizes_nearest_not_larg": 135, "1x2": 135, "test_resize_downsample_sizes_nearest_not_larg": 135, "_resize_downsample_sizes_nearest_not_smal": 135, "2x3": 135, "test_resize_downsample_sizes_nearest_not_smal": 135, "tf_half_pixel_for_nn": 135, "trilinear": [135, 182], "etc": [135, 182, 678], "beyond": 136, "time_axi": 136, "batch_axi": 136, "_reversesequence_tim": 136, "test_reversesequence_tim": 136, "_reversesequence_batch": 136, "test_reversesequence_batch": 136, "cnn": 137, "1703": 137, "06870": 137, "output_height": [137, 182], "output_width": [137, 182], "misalign": 137, "output_half_pixel": 137, "recommend": [137, 159, 673], "method": [137, 206, 673, 684, 692], "sampling_ratio": 137, "adapt": [137, 203, 688], "roi_width": 137, "likewis": 137, "rel": [137, 678], "batch_indic": 137, "_roialign_aligned_fals": 137, "get_roi_align_input_valu": 137, "4664": 137, "4466": 137, "3405": 137, "5688": 137, "6068": 137, "3714": 137, "4296": 137, "3835": 137, "5562": 137, "3510": 137, "2768": 137, "4883": 137, "5222": 137, "5528": 137, "4171": 137, "4713": 137, "4844": 137, "6904": 137, "4920": 137, "8774": 137, "6239": 137, "7125": 137, "6289": 137, "3355": 137, "3495": 137, "3022": 137, "4305": 137, "4696": 137, "3978": 137, "5423": 137, "3656": 137, "7050": 137, "5165": 137, "3172": 137, "7015": 137, "2912": 137, "5059": 137, "6476": 137, "6235": 137, "8299": 137, "5916": 137, "7389": 137, "7048": 137, "8372": 137, "8893": 137, "6227": 137, "6153": 137, "7097": 137, "6154": 137, "4585": 137, "2384": 137, "3379": 137, "3717": 137, "6100": 137, "7601": 137, "3767": 137, "3785": 137, "7147": 137, "9243": 137, "9727": 137, "5749": 137, "5826": 137, "5709": 137, "7619": 137, "8770": 137, "5355": 137, "2566": 137, "2141": 137, "2796": 137, "3600": 137, "4365": 137, "3504": 137, "2887": 137, "3661": 137, "2349": 137, "test_roialign_aligned_fals": 137, "_roialign_aligned_tru": 137, "5178": 137, "3434": 137, "3229": 137, "4474": 137, "6344": 137, "4031": 137, "5366": 137, "4428": 137, "4861": 137, "4023": 137, "2512": 137, "4002": 137, "5155": 137, "6954": 137, "3465": 137, "3350": 137, "4601": 137, "5881": 137, "3439": 137, "6849": 137, "4932": 137, "7141": 137, "8217": 137, "4719": 137, "4039": 137, "3070": 137, "2187": 137, "3337": 137, "4880": 137, "4870": 137, "1871": 137, "4914": 137, "5561": 137, "4192": 137, "3686": 137, "1433": 137, "4608": 137, "5971": 137, "5310": 137, "4982": 137, "2788": 137, "4386": 137, "6022": 137, "7524": 137, "5774": 137, "7024": 137, "7251": 137, "7338": 137, "8163": 137, "2393": 137, "4075": 137, "2525": 137, "4743": 137, "3671": 137, "2702": 137, "4105": 137, "6419": 137, "8308": 137, "5556": 137, "4543": 137, "5564": 137, "7502": 137, "9300": 137, "6626": 137, "5617": 137, "4813": 137, "4954": 137, "6663": 137, "6636": 137, "3721": 137, "2056": 137, "1928": 137, "2478": 137, "test_roialign_aligned_tru": 137, "find": [138, 180, 681], "test_round": 138, "short": [139, 690, 692], "signal_length": 139, "frame_step": 139, "slid": 139, "window_shap": 139, "frame_length": 139, "dft_unique_bin": 139, "onesided_length": 139, "no_window": 139, "nstft": 139, "stop": [139, 169, 685], "complex_out": 139, "test_stft": 139, "test_stft_with_window": 139, "scan_input": 140, "combin": [140, 141, 142, 174, 673, 674, 689], "idea": 140, "program": [140, 689], "state_vari": 140, "context": [140, 692], "involv": 140, "scan_output_el": 140, "restrict": 140, "impos": 140, "effici": [140, 689, 690, 692], "memori": [140, 684, 689, 692], "alloc": [140, 689], "scan_input_direct": 140, "twice": [140, 690], "scan_output_direct": 140, "prepend": 140, "scan_input_ax": 140, "scan_output_ax": 140, "togeth": [140, 686], "num_scan_input": [140, 692], "axis_1": 140, "axis_m": 140, "init_1": 140, "init_n": 140, "scan_1": 140, "scan_m": 140, "pseudo": [140, 203, 204, 206, 689], "scan_i": 140, "axis_i": 140, "scan_j": 140, "axis_j": 140, "sequence_length": 140, "st_1": 140, "st_n": 140, "scan_out_1": 140, "scan_out_k": 140, "si_1": 140, "si_m": 140, "so_1": 140, "so_k": 140, "h_0": 140, "scanloop": 140, "nest": 140, "h_tminus1": 140, "x_t": 140, "t5": 140, "scan_input_elt": 140, "scan_output_elt": 140, "initial_state_and_scan_input": 140, "final_state_and_scan_output": 140, "_scan_8": 140, "sum_in": 140, "next": [140, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 679, 684, 690, 692], "sum_out": 140, "id_nod": 140, "scan_bodi": 140, "no_sequence_len": 140, "test_scan_sum": 140, "_scan_9": 140, "test_scan9_sum": 140, "max_sequence_length": 140, "bst_1": 140, "bst_n": 140, "meaning": 140, "b_scan_out_1": 140, "b_scan_out_k": 140, "itself": [141, 142, 673, 689, 692], "_scatter_without_axi": 141, "test_scatter_without_axi": 141, "_scatter_with_axi": 141, "test_scatter_with_axi": 141, "sourc": [141, 671, 672, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688], "counter": 141, "duplic": [142, 143, 181], "idx1": [142, 143], "idx2": [142, 143], "_scatter_elements_without_axi": 142, "scatter_el": 142, "test_scatter_elements_without_axi": 142, "_scatter_elements_with_axi": 142, "test_scatter_elements_with_axi": 142, "_scatter_elements_with_negative_indic": 142, "test_scatter_elements_with_negative_indic": 142, "_scatter_elements_with_duplicate_indic": 142, "test_scatter_elements_with_duplicate_indic": 142, "_scatter_elements_with_reduction_max": 142, "test_scatter_elements_with_reduction_max": 142, "_scatter_elements_with_reduction_min": 142, "test_scatter_elements_with_reduction_min": 142, "That": [143, 177, 203, 204, 206, 673, 689, 690, 692], "update_indic": 143, "idx": 143, "particular": [143, 671, 673], "ensur": [143, 690], "_scatternd": 143, "scatter_nd_impl": 143, "test_scatternd": 143, "_scatternd_add": 143, "test_scatternd_add": 143, "_scatternd_multipli": 143, "test_scatternd_multipli": 143, "_scatternd_max": 143, "test_scatternd_max": 143, "_scatternd_min": 143, "test_scatternd_min": 143, "gamma": [144, 197, 198], "67326319217681884765625": 144, "approxim": 144, "6732632423543772848170429916717": 144, "05070102214813232421875": 144, "0507009873554804934193349852946": 144, "79272318": 144, "test_selu_exampl": 144, "test_selu": 144, "_selu_default": 144, "default_gamma": 144, "test_selu_default": 144, "6732": 144, "0507": 144, "eras": 148, "at_back": 149, "at_front": 149, "test_input": 149, "sequence_insert_reference_implement": 149, "test_sequence_insert_": 149, "independ": [151, 195, 204, 205, 673, 689], "parallel": [151, 174, 192, 690], "additional_input": 151, "out_sequ": 151, "_sequence_map_identity_1_sequ": 151, "in0": [151, 674], "out0": [151, 674], "seq_map_bodi": 151, "test_sequence_map_identity_1_sequ": 151, "_sequence_map_identity_2_sequ": 151, "in1": [151, 674], "out1": [151, 674], "y0": 151, "test_sequence_map_identity_2_sequ": 151, "_sequence_map_identity_1_sequence_1_tensor": 151, "test_sequence_map_identity_1_sequence_1_tensor": 151, "_sequence_map_add_2_sequ": 151, "test_sequence_map_add_2_sequ": 151, "_sequence_map_add_1_sequence_1_tensor": 151, "test_sequence_map_add_1_sequence_1_tensor": 151, "_sequence_map_extract_shap": 151, "in_seq": 151, "test_sequence_map_extract_shap": 151, "upto": 152, "clamp": [152, 159], "test_shap": 152, "_exampl": [152, 164], "preserv": 152, "_start_1": 152, "_end_1": 152, "_start_negative_1": 152, "_end_negative_1": 152, "_start_1_end_negative_1": 152, "_start_1_end_2": 152, "_clip_start": 152, "_clip_end": 152, "lambd": 153, "formul": 153, "_hard_shrink": 153, "test_shrink_hard": 153, "_soft_shrink": 153, "test_shrink_soft": 153, "26894143": 154, "7310586": 154, "test_sigmoid_exampl": 154, "test_sigmoid": 154, "test_sign": 155, "test_sin_exampl": 156, "test_sin": 156, "17520118": 157, "test_sinh_exampl": 157, "test_sinh": 157, "total": [158, 187, 194, 196, 201], "though": 158, "test_size_exampl": 158, "test_siz": 158, "basic": [159, 169], "highlight": [159, 692], "made": [159, 673, 689], "negatv": 159, "accommod": 159, "unknown": [159, 673, 675, 680], "int_max": 159, "int_min": 159, "_slice": 159, "test_slic": 159, "_slice_neg": 159, "test_slice_neg": 159, "_slice_start_out_of_bound": 159, "test_slice_start_out_of_bound": 159, "_slice_end_out_of_bound": 159, "test_slice_end_out_of_bound": 159, "_slice_default_ax": 159, "test_slice_default_ax": 159, "_slice_default_step": 159, "test_slice_default_step": 159, "_slice_neg_step": 159, "test_slice_neg_step": 159, "_slice_negative_ax": 159, "test_slice_negative_ax": 159, "09003058": 160, "24472848": 160, "66524094": 160, "test_softmax_exampl": 160, "_softmax_axi": 160, "032058604": 160, "08714432": 160, "23688284": 160, "6439143": 160, "test_softmax_large_numb": 160, "test_softmax_axis_0": 160, "test_softmax_axis_1": 160, "test_softmax_axis_2": 160, "test_softmax_negative_axi": 160, "test_softmax_default_axi": 160, "measur": [161, 690], "cross": 161, "entropi": 161, "l_1": 161, "l_2": 161, "l_n": 161, "j_1": 161, "j_2": 161, "j_k": 161, "l_i": 161, "ground": 161, "truth": 161, "manual": 161, "assign": [161, 203, 205, 206], "log_prob": 161, "prob": 161, "31326166": 162, "69314718": 162, "31326163": 162, "test_softplus_exampl": 162, "test_softplu": 162, "test_softsign_exampl": 163, "test_softsign": 163, "test_spacetodepth": 164, "test_spacetodepth_exampl": 164, "_1d": 165, "output_1": 165, "output_2": 165, "output_3": 165, "test_split_equal_parts_1d": 165, "test_split_variable_parts_1d": 165, "test_split_equal_parts_2d": 165, "test_split_variable_parts_2d": 165, "_default_valu": 165, "test_split_equal_parts_default_axi": 165, "test_split_variable_parts_default_axi": 165, "_zero_size_split": 165, "emtpi": 165, "test_split_zero_size_split": 165, "chunk": 166, "root": [167, 203, 204, 678], "test_sqrt_exampl": 167, "test_sqrt": 167, "rais": [168, 672, 688, 692], "_squeez": 168, "test_squeez": 168, "_squeeze_negative_ax": 168, "test_squeeze_negative_ax": 168, "clean": 169, "examin": 169, "stopword": 169, "lowercas": 169, "uppercas": 169, "just": [169, 203, 677, 689, 692], "case_change_act": 169, "is_case_sensit": 169, "identif": 169, "sensit": [169, 678], "environ": [169, 689, 690], "en_u": 169, "_nostopwords_nochangecas": 169, "mondai": 169, "tuesdai": 169, "noop": 169, "test_strnormalizer_nostopwords_nochangecas": 169, "_monday_casesensintive_nochangecas": 169, "wednesdai": 169, "thursdai": 169, "test_strnormalizer_export_monday_casesensintive_nochangecas": 169, "_monday_casesensintive_low": 169, "test_strnormalizer_export_monday_casesensintive_low": 169, "_monday_casesensintive_upp": 169, "test_strnormalizer_export_monday_casesensintive_upp": 169, "_monday_empty_output": 169, "test_strnormalizer_export_monday_empty_output": 169, "_monday_insensintive_upper_twodim": 169, "cecedil": 169, "accent": 169, "german": 169, "umlaut": 169, "fail": [169, 196, 672, 692], "eszett": 169, "test_strnormalizer_export_monday_insensintive_upper_twodim": 169, "subtract": 170, "test_sub_exampl": 170, "test_sub": 170, "test_sub_uint8": 170, "_sub_broadcast": 170, "test_sub_bcast": 170, "test_sum_exampl": 171, "test_sum_one_input": 171, "test_sum_two_input": 171, "test_tan_exampl": 172, "test_tan": 172, "76159418": 173, "test_tanh_exampl": 173, "test_tanh": 173, "gram": 174, "ngram_index": 174, "consecut": [174, 673], "discontinu": 174, "token": 174, "pool_int64": 174, "ngram_count": 174, "pool_str": 174, "idf": 174, "tfidf": 174, "max_gram_length": 174, "max_skip_count": 174, "min_gram_length": 174, "skip_count": 174, "criteria": [174, 677], "csr": 174, "csc": 174, "choos": [174, 206, 677, 678], "due": [174, 692], "popular": [174, 200, 201, 689], "attributeproto": [174, 677, 692], "pool_": 174, "learn": [174, 203, 204, 206, 673, 689, 691, 692], "ngram": 174, "ether": 174, "_tf_only_bigrams_skip0": 174, "unigram": 174, "bigram": 174, "tfidfvectorizerhelp": 174, "make_node_noweight": 174, "test_tfidfvectorizer_tf_only_bigrams_skip0": 174, "_tf_batch_onlybigrams_skip0": 174, "test_tfidfvectorizer_tf_batch_onlybigrams_skip0": 174, "_tf_onlybigrams_levelempti": 174, "test_tfidfvectorizer_tf_onlybigrams_levelempti": 174, "_tf_onlybigrams_skip5": 174, "test_tfidfvectorizer_tf_onlybigrams_skip5": 174, "_tf_batch_onlybigrams_skip5": 174, "test_tfidfvectorizer_tf_batch_onlybigrams_skip5": 174, "_tf_uniandbigrams_skip5": 174, "test_tfidfvectorizer_tf_uniandbigrams_skip5": 174, "_tf_batch_uniandbigrams_skip5": 174, "test_tfidfvectorizer_tf_batch_uniandbigrams_skip5": 174, "test_thresholdedrelu_exampl": 175, "test_thresholdedrelu": 175, "test_thresholdedrelu_default": 175, "output_dim": [176, 686], "input_dim": [176, 686], "_tile": 176, "test_til": 176, "_tile_precomput": 176, "test_tile_precomput": 176, "retriev": [177, 671, 679, 690], "largest": [177, 678, 692], "smallest": 177, "a_2": 177, "a_n": 177, "tiebreak": 177, "_top_k": 177, "values_ref": 177, "indices_ref": 177, "topk_sorted_implement": 177, "test_top_k": 177, "_top_k_smallest": 177, "test_top_k_smallest": 177, "_top_k_negative_axi": 177, "test_top_k_negative_axi": 177, "perm": [178, 692], "test_transpose_default": 178, "_all_permut": 178, "itertool": 178, "test_transpose_all_permutations_": 178, "retain": [179, 180], "_triu": 179, "triu_reference_implement": 179, "test_triu": 179, "_triu_neg": 179, "test_triu_neg": 179, "_triu_out_neg_out": 179, "test_triu_out_neg_out": 179, "_triu_po": 179, "test_triu_po": 179, "_triu_out_po": 179, "test_triu_out_po": 179, "_triu_squar": 179, "test_triu_squar": 179, "_triu_square_neg": 179, "test_triu_square_neg": 179, "_triu_one_row": 179, "test_triu_one_row": 179, "_triu_zero": 179, "test_triu_zero": 179, "_tril": 179, "tril_reference_implement": 179, "test_tril": 179, "_tril_neg": 179, "test_tril_neg": 179, "_tril_out_neg": 179, "test_tril_out_neg": 179, "_tril_po": 179, "test_tril_po": 179, "_tril_out_po": 179, "test_tril_out_po": 179, "_tril_squar": 179, "test_tril_squar": 179, "_tril_square_neg": 179, "test_tril_square_neg": 179, "_tril_one_row": 179, "test_tril_one_row_neg": 179, "_tril_zero": 179, "test_tril_zero": 179, "subtensor": 180, "inverse_indic": 180, "fourth": 180, "ascend": [180, 187], "attribute_sort": 180, "attribute_axi": 180, "output_i": 180, "output_indic": 180, "output_inverse_indic": 180, "output_count": 180, "better": [180, 204, 689, 692], "understand": 180, "maintain": [180, 182, 190], "_sorted_without_axi": 180, "node_sort": 180, "specify_int64": 180, "test_unique_sorted_without_axi": 180, "_not_sorted_without_axi": 180, "node_not_sort": 180, "issu": [180, 690], "8621": 180, "recov": 180, "unsort": 180, "prepar": [180, 671], "argsorted_indic": 180, "argsort": 180, "inverse_indices_map": 180, "si": [180, 689], "test_unique_not_sorted_without_axi": 180, "_sorted_with_axi": 180, "test_unique_sorted_with_axi": 180, "_sorted_with_axis_3d": 180, "test_unique_sorted_with_axis_3d": 180, "_sorted_with_negative_axi": 180, "test_unique_sorted_with_negative_axi": 180, "output_rank": 181, "plu": 181, "matter": 181, "come": [181, 692], "_unsqueeze_one_axi": 181, "expand_dim": 181, "test_unsqueeze_axis_": 181, "_unsqueeze_two_ax": 181, "test_unsqueeze_two_ax": 181, "_unsqueeze_three_ax": 181, "test_unsqueeze_three_ax": 181, "_unsqueeze_unsorted_ax": 181, "test_unsqueeze_unsorted_ax": 181, "_unsqueeze_negative_ax": 181, "test_unsqueeze_negative_ax": 181, "seen": [181, 692], "_nearest": 182, "test_upsample_nearest": 182, "experiment": [182, 675, 680], "input_width": 182, "width_scal": 182, "input_height": 182, "height_scal": 182, "test_where_exampl": 183, "_long": 183, "test_where_long_exampl": 183, "logical_xor": 184, "test_xor2d": 184, "test_xor3d": 184, "test_xor4d": 184, "_xor_broadcast": 184, "test_xor_bcast3v1d": 184, "test_xor_bcast3v2d": 184, "test_xor_bcast4v2d": 184, "test_xor_bcast4v3d": 184, "test_xor_bcast4v4d": 184, "comparison": [186, 192, 200, 201, 692], "against": [186, 205], "kei": [187, 189, 192, 202, 673, 676, 677, 689, 692], "dens": [187, 673, 689], "exce": 187, "max_map": 187, "cast_to": 187, "to_float": 187, "to_str": 187, "to_int64": 187, "map_form": 187, "vice": [188, 192], "versa": [188, 192], "cats_int64": [188, 196], "cats_str": [188, 196], "default_int64": [188, 192], "default_": [188, 192], "default_str": [188, 192], "dictionari": [189, 673, 689], "vocabulari": 189, "string_vocabulari": 189, "int64_vocabulari": 189, "hold": [189, 191, 676, 692], "inputdimens": 190, "leav": [191, 200, 201, 690], "canon": 191, "extrem": 191, "imputed_value_float": 191, "imputed_value_int64": 191, "fit": 191, "replaced_value_float": 191, "replaced_value_int64": 191, "imputed_valu": 191, "keys_": 192, "impli": 192, "keys_str": 192, "ami": 192, "salli": 192, "values_int64": 192, "dori": 192, "default_float": 192, "keys_float": 192, "keys_int64": 192, "values_float": 192, "values_str": 192, "fetch": 192, "classes_str": 192, "classlabels_int": [193, 197], "classlabel": 193, "classlabels_str": [193, 197, 200, 202], "intercept": [193, 194, 690], "multi_class": 193, "ovr": 193, "post_transform": [193, 194, 197, 198, 200, 201], "logist": [193, 194, 197, 198, 200, 201], "softmax_zero": [193, 194, 197, 198, 200, 201], "probit": [193, 194, 197, 198, 200, 201], "latter": 193, "regress": [194, 198, 201, 689, 691], "univari": 194, "infix": 195, "wide": [195, 205], "categori": [196, 692], "lookup": 196, "cats_": 196, "machin": [197, 198, 673, 689, 690, 692], "classlabels_": [197, 200, 202], "kernel_param": [197, 198], "coef0": [197, 198], "degre": [197, 198], "unus": [197, 198], "kernel_typ": [197, 198], "poli": [197, 198], "prob_a": 197, "prob_b": 197, "raw": [197, 676, 677, 681], "rho": [197, 198], "support_vector": [197, 198], "vectors_per_class": 197, "bactch": 197, "svm": [198, 689], "anomali": 198, "detect": [198, 692], "n_support": 198, "one_class": 198, "regardless": 199, "tree": [200, 201, 689], "ensembl": [200, 201], "nodes_x": 200, "prefix": [200, 201, 677], "class_": 200, "vote": [200, 201], "leaf": [200, 201], "class_weight": 200, "classlabels_int64": [200, 202], "class_id": 200, "_as_tensor": [200, 201], "base_valu": [200, 201], "unassign": [200, 201], "base_values_as_tensor": [200, 201], "class_nodeid": 200, "id": [200, 201, 671, 677], "class_treeid": 200, "class_weights_as_tensor": 200, "nodes_falsenodeid": [200, 201], "child": [200, 201], "nodes_featureid": [200, 201], "nodes_hitr": [200, 201], "nodes_hitrates_as_tensor": [200, 201], "nodes_missing_value_tracks_tru": [200, 201], "what": [200, 201, 673, 691, 692], "presenc": [200, 201], "defalt": [200, 201], "nodes_mod": [200, 201], "kind": [200, 201, 205, 671, 689, 692], "branch_leq": [200, 201], "branch_lt": [200, 201], "branch_gt": [200, 201], "branch_eq": [200, 201], "branch_neq": [200, 201], "nodes_nodeid": [200, 201], "restart": [200, 201], "nodes_treeid": [200, 201], "nodes_truenodeid": [200, 201], "nodes_valu": [200, 201], "nodes_values_as_tensor": [200, 201], "regressor": [201, 689, 692], "nodes_": 201, "target_": 201, "target_weight": 201, "aggregate_funct": 201, "aggreg": 201, "n_target": 201, "sequenti": [201, 203, 206], "target_id": 201, "target_nodeid": 201, "target_treeid": 201, "target_weights_as_tensor": 201, "stochast": [203, 204, 206], "conduct": [203, 204, 206], "As": [203, 206, 689, 690, 692], "rate": [203, 204, 206], "norm_coeffici": [203, 204, 206], "decai": [203, 206], "decay_factor": 203, "small": [203, 204, 690, 692], "x_new": [203, 204, 206], "h_new": [203, 204], "_2": [203, 204], "g_regular": [203, 204, 206], "h_adapt": 203, "x_1": [203, 204, 206], "x_2": [203, 204, 206], "jointli": [203, 206], "cours": [203, 206], "reus": [203, 205, 689], "entir": [203, 689], "jmlr": 203, "volume12": 203, "duchi11a": 203, "composit": 203, "descent": [203, 673], "_adagrad": 203, "001": [203, 204, 206, 692], "ai_onnx_preview_training_domain": [203, 204, 206, 675], "apply_adagrad": 203, "test_adagrad": 203, "_adagrad_multipl": 203, "g1": [203, 204, 206, 674], "g2": [203, 204, 206, 674], "h1": [203, 204, 206], "h2": [203, 204, 206], "x1_new": [203, 204, 206], "x2_new": [203, 204, 206], "h1_new": [203, 204], "h2_new": [203, 204], "test_adagrad_multipl": 203, "histor": 204, "rest": 204, "moreov": 204, "v_new": [204, 206], "h_sqrt": 204, "r_adjust": 204, "post": 204, "x_final": 204, "norm_coefficient_post": 204, "999": 204, "aka": 204, "_adam": 204, "apply_adam": 204, "test_adam": 204, "_adam_multipl": 204, "v2": [204, 206], "v1_new": [204, 206], "v2_new": [204, 206], "test_adam_multipl": 204, "deriv": 205, "illustr": [205, 689], "trainabl": 205, "sake": [205, 206], "simplic": [205, 206], "dy": 205, "dw": 205, "dz": 205, "1st": 205, "2nd": 205, "3rd": 205, "reason": 205, "dh": 205, "2o": 205, "dx": 205, "h_1": 205, "z_1": 205, "y_1": 205, "minim": [205, 692], "fed": 205, "symbol": [205, 673], "substitut": 205, "sg": 206, "nesterov": 206, "beta_adjust": 206, "_momentum": 206, "apply_momentum": 206, "test_momentum": 206, "_nesterov_momentum": 206, "apply_nesterov": 206, "test_nesterov_momentum": 206, "_momentum_multipl": 206, "test_momentum_multipl": 206, "compar": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 689, 692], "older": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670], "newer": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670], "markdown": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 689], "text": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 689], "green": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 692], "red": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670], "delet": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670], "anyth": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670], "entiti": [671, 673], "off": 671, "run_nod": 671, "run_model": 671, "quickli": 671, "repeatedli": 671, "load": [671, 676, 686, 689, 692], "classmethod": 671, "cpu": 671, "outputs_info": 671, "param": 671, "runner": 671, "__init__": 671, "py": [671, 689, 690, 692], "supports_devic": 671, "compil": [671, 689, 690], "suit": 671, "device_typ": 671, "device_id": 671, "cuda": 671, "loader": 671, "data_dir": 671, "home": 671, "xadupr": 671, "xagit": 671, "testcas": 671, "disk": [671, 692], "modelproto": [672, 674, 676, 677, 678, 682, 683, 684, 685, 686, 687, 688, 692], "byte": [672, 675, 677, 680, 684, 685, 692], "full_check": 672, "protobuf": [673, 677, 679, 684, 691, 692], "modul": [673, 692], "instanti": 673, "render": 673, "json": 673, "ny": 673, "singular": 673, "enforc": 673, "descriptor": [673, 689], "googl": [673, 677], "pyext": 673, "_messag": 673, "messagedescriptor": 673, "doc_str": [673, 674, 677, 689, 692], "ref_attr_nam": [673, 692], "tp": [673, 686], "compris": 673, "parameter": 673, "acycl": 673, "quantization_annot": 673, "sparse_initi": [673, 677], "value_info": [673, 677, 685, 692], "throughout": 673, "key_typ": [673, 677], "string_kei": 673, "librari": [673, 689, 691, 692], "level": 673, "bundl": 673, "metadata": [673, 678, 691], "ir_vers": [673, 679, 692], "metadata_prop": [673, 689, 692], "model_vers": [673, 674, 689, 692], "producer_vers": [673, 674, 689, 692], "training_info": [673, 689, 692], "mathemat": [673, 689], "dag": 673, "commonli": 673, "pipelin": [673, 690, 692], "convolv": 673, "rare": [673, 689, 690, 692], "immut": 673, "signatur": [673, 684, 689, 690], "operatorset": 673, "statu": 673, "belong": 673, "membership": 673, "wire": 673, "header": [673, 690], "ir_build_metadata": 673, "ir_version_prereleas": 673, "magic": 673, "map_valu": 673, "optional_valu": 673, "sequence_valu": 673, "sparse_tensor_valu": 673, "homogen": 673, "valueinfo": 673, "complet": 673, "nnz": 673, "serv": [673, 692], "fulli": 673, "shapeproto": 673, "themselv": 673, "segment": 673, "data_loc": 673, "double_data": 673, "external_data": [673, 676], "float_data": [673, 692], "int32_data": 673, "int64_data": 673, "raw_data": [673, 677, 692], "string_data": 673, "uint64_data": 673, "improv": [673, 689, 692], "initialization_bind": [673, 677], "update_bind": 673, "immedi": 673, "value_typ": 673, "opaqu": 673, "sparsetensor": [673, 677], "map_typ": 673, "opaque_typ": 673, "optional_typ": 673, "sequence_typ": 673, "sparse_tensor_typ": 673, "tensor_typ": [673, 692], "graphproto": [674, 677, 682, 683, 686, 692], "io_map": 674, "prefix1": 674, "prefix2": 674, "undescor": 674, "delimit": 674, "docstr": [674, 686], "m1": 674, "m2": 674, "ir": [674, 677, 679, 692], "add_prefix_graph": 674, "rename_nod": 674, "rename_edg": 674, "rename_input": 674, "rename_output": 674, "rename_initi": 674, "rename_value_info": 674, "info": [674, 678], "util": [674, 679], "merg": [674, 689, 692], "mutat": 674, "add_prefix": 674, "rename_funct": 674, "_prefix": 674, "nane": 674, "expand_out_dim": 674, "dim_idx": 674, "expand_out_dim_graph": 674, "onnx_opset_vers": [675, 679, 680, 689], "get_all_schemas_with_histori": [675, 680], "onnx_cpp2py_export": [675, 680, 692], "get_function_op": [675, 680], "overload": [675, 680], "max_inclusive_vers": [675, 680], "attrtyp": [675, 680], "member": [675, 680], "properti": [675, 678, 680], "differentiationcategori": [675, 680], "nondifferenti": [675, 680], "formalparameteropt": [675, 680], "get_context_dependent_funct": [675, 680], "arg0": [675, 680], "arg1": [675, 680], "is_infinit": [675, 680], "offici": [675, 689], "onnx_domain": 675, "onnx_ml_domain": 675, "extern": [676, 681, 684], "embed": 676, "save_model": 676, "all_tensors_to_one_fil": 676, "size_threshold": 676, "1024": 676, "convert_attribut": 676, "prece": 676, "base_dir": [676, 681], "directori": [676, 684], "ideal": 676, "field_kei": 676, "modifi": [676, 679, 689, 690, 692], "base_path": 676, "serial": [676, 677, 679, 688, 691], "path": [676, 678, 681, 685, 687, 690], "folder": [676, 690], "checksum": 676, "basepath": 676, "filepath": 676, "strip": 676, "get_attribute_valu": 677, "attr": 677, "printable_attribut": 677, "printable_dim": 677, "printable_graph": 677, "displai": [677, 692], "printable_nod": 677, "printable_tensor_proto": 677, "printable_typ": 677, "typeproto": [677, 692], "printable_value_info": 677, "valueinfoproto": [677, 692], "find_min_ir_version_for": 677, "opsetidlist": 677, "operatorsetidproto": [677, 692], "split_complex_to_pair": 677, "ca": 677, "make_attribut": [677, 692], "make_empty_tensor_value_info": [677, 692], "make_funct": [677, 692], "fname": 677, "functionproto": [677, 682, 683, 692], "sparsetensorproto": [677, 689, 692], "make_map": [677, 692], "sequenceproto": [677, 681, 689, 692], "mapproto": [677, 681, 689, 692], "make_model": [677, 692], "make_opt": [677, 692], "intern": [677, 692], "enum_type_wrapp": 677, "enumtypewrapp": 677, "0x7f1615a8d4f0": 677, "optionalproto": [677, 681, 692], "inner_type_proto": 677, "make_sequ": [677, 692], "0x7f1615a8d430": 677, "make_sparse_tensor_type_proto": [677, 692], "shape_denot": 677, "make_sparse_tensor_value_info": [677, 692], "proto": [677, 679, 683, 692], "elem_shape_denot": 677, "make_training_info": [677, 692], "algorithm_bind": 677, "traininginfoproto": [677, 689, 692], "get_all_tensor_dtyp": 677, "keysview": 677, "np_dtype_to_tensor_dtyp": 677, "np_dtype": [677, 680], "tensorsproto": 677, "tensor_dtype_to_field": 677, "tensor_dtyp": 677, "tensor_dtype_to_storage_tensor_dtyp": 677, "tensor_dtype_to_str": 677, "raw_model_info": 678, "sha": 678, "tag": 678, "model_path": [678, 685], "zoo": 678, "repo": 678, "io": [678, 684], "port": 678, "model_sha": 678, "sha256": 678, "digest": 678, "search": [678, 690], "manifest": 678, "force_reload": 678, "silent": [678, 692], "download": 678, "automat": [678, 689, 690], "alreadi": [678, 685, 689], "cach": 678, "suppress": 678, "warn": 678, "trust": 678, "releas": [679, 690], "__version__": [679, 689], "abstract": 679, "concret": 679, "longer": [679, 692], "page": [679, 684], "faster": [679, 689, 692], "verifi": 679, "checker": [679, 687, 691], "compos": [679, 690], "external_data_help": 679, "hub": 679, "printer": 679, "shape_infer": [679, 692], "tool": [679, 691], "version_convert": [679, 690], "storage_dtyp": 680, "pprint": [680, 692], "opschema": 680, "submodul": [680, 690], "schemaerror": 680, "get_all_schema": 680, "latest": [680, 690, 692], "has_schema": 680, "schema_version_map": 680, "to_arrai": [681, 692], "help": [681, 689], "to_list": 681, "from_list": 681, "lst": 681, "to_dict": 681, "from_dict": 681, "to_opt": 681, "opt": 681, "from_opt": 681, "convert_endian": 681, "endia": 681, "combine_pairs_to_complex": 681, "fa": 681, "function_text": 682, "pars": [682, 684, 689, 691], "graph_text": 682, "model_text": 682, "buffer": [684, 689], "open": [684, 691, 692], "onnx_model": [684, 692], "autom": [684, 690], "restor": [684, 692], "load_external_data": 684, "load_external_data_for_model": 684, "futur": 684, "load_model_from_str": 684, "know": [684, 689], "he": 684, "parsefromstr": [684, 692], "tp2": 684, "shortcut": 684, "load_tensor_from_str": [684, 692], "check_typ": 685, "strict_mod": 685, "data_prop": 685, "conflict": 685, "bug": 685, "unspecifi": [685, 690], "stricter": 685, "propag": 685, "output_path": [685, 687], "2gb": 685, "getpydotgraph": 686, "rankdir": 686, "lr": [686, 692], "node_produc": 686, "callabl": 686, "embed_docstr": 686, "dot": 686, "getopnodeproduc": 686, "pydot_graph": 686, "model_onnx": 686, "write_dot": 686, "update_model_dim": 686, "input_1": 686, "input_2": 686, "put": 686, "updated_model": 686, "input_path": 687, "output_nam": [687, 690], "check_model": [687, 692], "_boundari": 687, "model_": 687, "_cut": 687, "through_": 687, "_main": 687, "graph_": 687, "target_vers": 688, "runtimeerror": 688, "unsupport": 688, "languag": [689, 690, 692], "langag": 689, "onnx_linear_regressor": 689, "veri": [689, 690, 692], "developp": 689, "why": [689, 690], "aim": 689, "easier": [689, 690, 692], "deploi": [689, 690, 692], "interpretor": 689, "task": 689, "written": 689, "axc": 689, "built": [689, 690, 692], "turn": [689, 692], "visual": [689, 692], "frozen": 689, "deploy": 689, "replic": 689, "ecosystem": 689, "docker": 689, "develop": [689, 690], "suitabl": 689, "java": 689, "javascript": 689, "webassembli": 689, "arm": 689, "But": [689, 692], "refresh": 689, "track": 689, "offer": [689, 690, 692], "human": 689, "readabl": 689, "namespac": 689, "distinct": [689, 692], "model_author": 689, "person": 689, "organ": 689, "model_licens": 689, "url": 689, "licens": 689, "cover": 689, "few": 689, "dedic": [689, 690], "hardli": 689, "treeensmbl": 689, "preprocess": 689, "competit": 689, "null": 689, "design": [689, 690], "tensor_type_map": 689, "reg": 689, "9a": 689, "z_": 689, "att": [689, 692], "dir": [689, 692], "strongli": [689, 690, 692], "imposs": [689, 692], "minor": [689, 690], "bring": 689, "attach": 689, "global": 689, "insid": [689, 692], "recent": [689, 690], "slow": 689, "exeut": 689, "pairwis": [689, 692], "distanc": [689, 692], "x_j": 689, "still": [689, 692], "slower": 689, "anymor": 689, "your": 689, "own": [689, 690], "long": [689, 690, 692], "cdist": 689, "prove": 689, "significantli": 689, "enough": 689, "effort": 689, "advantag": 689, "shorter": 689, "leverag": 689, "reli": [689, 690, 692], "manag": 689, "obvious": 689, "netron": 689, "screenshot": 689, "onnx2pi": 689, "zetan": 689, "latenc": 690, "easi": [690, 692], "piec": [690, 692], "sklearn": 690, "scikit": 690, "rewrit": 690, "whatev": 690, "close": 690, "onnxmltool": 690, "lightgbm": 690, "xgboost": 690, "pyspark": 690, "libsvm": 690, "challeng": [690, 691], "rythm": 690, "everytim": 690, "year": 690, "goe": 690, "difficult": 690, "somehow": 690, "primit": 690, "subpart": 690, "stori": 690, "predictor": 690, "newest": 690, "instal": [690, 692], "target_opset": [690, 692], "upgrad": 690, "verbos": 690, "whole": [690, 692], "pictur": 690, "hide": 690, "creation": [690, 692], "deal": 690, "coef": 690, "get_unique_variable_nam": 690, "model_coef": 690, "classifier_attr": 690, "number_of_class": 690, "add_initi": 690, "proto_dtyp": 690, "ravel": 690, "model_intercept": 690, "full_nam": 690, "get_unique_operator_nam": 690, "argmax_output_nam": 690, "raw_score_nam": 690, "compact": 690, "kmean": 690, "onnxreducesumsquar": 690, "op_vers": 690, "opv": 690, "gemm_out": 690, "onnxmatmul": 690, "onnxadd": 690, "c2": 690, "ll": 690, "onnxargmin": 690, "onnxsqrt": 690, "signific": 690, "impact": 690, "switch": 690, "insight": 690, "topic": 690, "weird": 690, "1e17": 690, "decis": 690, "forest": 690, "fall": 690, "fastest": 690, "woe": 690, "repositori": 690, "fork": 690, "clone": 690, "conda": 690, "might": 690, "date": 690, "azur": 690, "instruct": 690, "anaconda": 690, "ye": 690, "quiet": 690, "py3": 690, "forg": 690, "libprotobuf": 690, "git": 690, "init": [690, 692], "recurs": 690, "onnx_build_test": 690, "onnx_ml": 690, "cmake_arg": 690, "donnx_use_protobuf_shared_lib": 690, "ON": 690, "donnx_use_lite_proto": 690, "donnx_werror": 690, "setup": 690, "bdist_wheel": 690, "linux": 690, "build_ext": 690, "gen_proto": 690, "cmd_tool": 690, "stat_coverag": 690, "gen_doc": 690, "subfold": 690, "pattern": 690, "operator_set": 690, "regist": 690, "schema": [690, 692], "again": [690, 692], "pr": 690, "changelog": 690, "testcoverag": 690, "exchang": 691, "face": 691, "extens": 691, "trick": 691, "experi": 691, "xa": 692, "decompos": 692, "said": 692, "set_model_prop": 692, "node1": 692, "node2": 692, "metata": 692, "tell": 692, "inspect": 692, "shape2tupl": 692, "nice": 692, "obj": 692, "tensor_type_to_np_typ": 692, "deseri": 692, "address": 692, "linear_regress": 692, "gb": 692, "overcom": 692, "numpy_tensor": 692, "onnx_tensor": 692, "serialized_tensor": 692, "saved_tensor": 692, "onnx_ml_pb2": 692, "endswith": 692, "operatorproto": 692, "operatorsetproto": 692, "stringstringentryproto": 692, "tensorshapeproto": 692, "simplifi": 692, "were": 692, "conveni": 692, "around": 692, "000": 692, "031": 692, "277": 692, "315": 692, "intial": 692, "kept": 692, "initiliaz": 692, "tranpos": 692, "node_transpos": 692, "ta": 692, "startswith": 692, "make_attribute_ref": 692, "distinguish": 692, "someth": 692, "prop": 692, "key1": 692, "value1": 692, "key2": 692, "value2": 692, "training_tool_test": 692, "rsum": 692, "then_cst": 692, "cst1": 692, "wrap": 692, "else_cst": 692, "cst2": 692, "freez": 692, "onnx_if_sign": 692, "seem": 692, "quit": 692, "prealloc": 692, "neighbor": 692, "problem": 692, "dist": 692, "m_": 692, "w_j": 692, "next_in": 692, "next_out": 692, "cdistd_17_ident": 692, "cdistdf_17_c0": 692, "cdistdf_17_sub": 692, "cdistdf_17_reduced0": 692, "cdistdf_17_reducesumsquar": 692, "cdistdf_17_ident": 692, "onnxident": 692, "list_valu": 692, "29599822460675": 692, "86516699239603": 692, "70495899914215": 692, "260": 692, "08772982740413": 692, "65272105889147": 692, "23295157108991": 692, "45232560871727": 692, "83789715805776": 692, "92727431421793": 692, "48710175784703": 692, "27761768038069": 692, "87785569894749": 692, "71487894705504": 692, "301": 692, "0518319089629": 692, "64235742280055": 692, "78493504731911": 692, "41218591022718": 692, "26561056133608": 692, "04032954135549": 692, "229": 692, "5428380626701": 692, "549262642481615": 692, "140": 692, "95737409864623": 692, "8145187836131": 692, "61397011283958": 692, "185488100413366": 692, "864151796743855": 692, "09054590340892": 692, "187": 692, "72501631246712": 692, "779503579806025": 692, "642642730674076": 692, "58517761667535": 692, "56025104939847": 692, "92423223842056": 692, "9166231927213": 692, "73512816431007": 692, "150864499514297": 692, "37105466673813": 692, "5755688281476": 692, "68676290979731": 692, "36748960443065": 692, "knny_arrayfeatureextractorcst": 692, "1394007205963135": 692, "6848101019859314": 692, "234825849533081": 692, "4023416340351105": 692, "17742614448070526": 692, "46278226375579834": 692, "4017809331417084": 692, "630198359489441": 692, "5096521973609924": 692, "7774903774261475": 692, "4380742907524109": 692, "2527953386306763": 692, "0485529899597168": 692, "950775384902954": 692, "420017957687378": 692, "7062702178955078": 692, "8675580024719238": 692, "15135720372200012": 692, "9772778749465942": 692, "9500884413719177": 692, "5529897212982178": 692, "7421650290489197": 692, "653618574142456": 692, "8644362092018127": 692, "5327792167663574": 692, "37816253304481506": 692, "4693588018417358": 692, "154947429895401": 692, "6724604368209839": 692, "7262825965881348": 692, "35955315828323364": 692, "8131462931632996": 692, "8707971572875977": 692, "056165341287851334": 692, "5788496732711792": 692, "3115525245666504": 692, "2302906513214111": 692, "302302747964859": 692, "202379822731018": 692, "38732680678367615": 692, "269754648208618": 692, "18718385696411133": 692, "4543657302856445": 692, "04575851559638977": 692, "9072983860969543": 692, "12898291647434235": 692, "05194539576768875": 692, "7290905714035034": 692, "4940791130065918": 692, "8540957570075989": 692, "2051582634449005": 692, "3130677044391632": 692, "764052391052246": 692, "2408931255340576": 692, "40015721321105957": 692, "978738009929657": 692, "06651721894741058": 692, "3627411723136902": 692, "30247190594673157": 692, "6343221068382263": 692, "5108051300048828": 692, "4283318817615509": 692, "18063223361969": 692, "02818222902715206": 692, "6138978004455566": 692, "38690251111984253": 692, "21274028718471527": 692, "8954665660858154": 692, "7610377073287964": 692, "3336743414402008": 692, "12167501449584961": 692, "44386324286460876": 692, "10321885347366333": 692, "4542734622955322": 692, "4105985164642334": 692, "14404356479644775": 692, "8877857327461243": 692, "15634897351264954": 692, "980796456336975": 692, "34791216254234314": 692, "sc_scancst": 692, "to_topkcst": 692, "knny_reshapecst": 692, "uu032uu": 692, "uu033uu": 692, "sc_scan": 692, "tr_transposed0": 692, "tr_transpos": 692, "sq_y0": 692, "sq_sqrt": 692, "to_values0": 692, "to_indices1": 692, "to_topk": 692, "knny_output0": 692, "knny_flatten": 692, "knny_z0": 692, "knny_arrayfeatureextractor": 692, "knny_reshaped0": 692, "knny_reshap": 692, "knny_transposed0": 692, "knny_transpos": 692, "ca_output0": 692, "ca_cast": 692, "re_reducemean": 692, "knn": 692, "skl2onnx": 692, "pylint": 692, "e1101": 692, "dom": 692, "op_set": 692, "knnr": 692, "306k7": 692, "333z": 692, "300": 692, "304": 692, "006": 692, "217": 692, "026b": 692, "300z9dwgap": 692, "027": 692, "343tc": 692, "330": 692, "350": 692, "022": 692, "216sy": 692, "356n": 692, "237h": 692, "263": 692, "320": 692, "332f": 692, "235": 692, "336": 692, "370lv": 692, "226ob": 692, "362": 692, "021v": 692, "mv": 692, "322": 692, "223": 692, "355": 692, "036": 692, "262m": 692, "320r": 692, "ne": 692, "211q": 692, "021n5": 692, "211": 692, "215i": 692, "300h": 692, "232p": 692, "377": 692, "020": 692, "317k": 692, "302": 692, "202p": 692, "261l": 692, "317": 692, "236a": 692, "fd": 692, "023": 692, "364u": 692, "327lik": 692, "247v": 692, "300j": 692, "366": 692, "227l": 692, "262": 692, "206": 692, "234nl": 692, "013": 692, "313e": 692, "343hu3wg": 692, "3370": 692, "367": 692, "305": 692, "306ce": 692, "336a": 692, "347": 692, "2445": 692, "300f": 692, "374": 692, "347jf": 692, "325": 692, "2557": 692, "331": 692, "354": 692, "3547": 692, "307o": 692, "372t": 692, "005": 692, "000w": 692, "014or": 692, "025": 692, "227": 692, "034": 692, "310": 692, "227q": 692, "300l_": 692, "326dp": 692, "333kk": 692, "363": 692, "267o": 692, "016": 692, "271": 692, "2575": 692, "361": 692, "266": 692, "276w": 692, "221x": 692, "002": 692, "tg": 692, "fk": 692, "340": 692, "3746": 692, "371": 692, "265": 692, "020g": 692, "332": 692, "014": 692, "357": 692, "032": 692, "3778": 692, "376": 692, "261k": 692, "0342": 692, "205": 692, "274": 692, "334": 692, "277z": 692, "220": 692, "241": 692, "024": 692, "307": 692, "263o": 692, "251c": 692, "021": 692, "272": 692, "277hm": 692, "265dh": 692, "004": 692, "304t": 692, "246z": 692, "025r": 692, "276ij": 692, "341": 692, "313j": 692, "017": 692, "216z": 692, "335": 692, "357b": 692, "277qn": 692, "365": 692, "277k": 692, "346": 692, "2744": 692, "316": 692, "026": 692, "030": 692, "330y": 692, "276l": 692, "323b": 692, "013b": 692, "343": 692, "hd": 692, "323": 692, "275": 692, "3709": 692, "355ec": 692, "blue": 692, "mention": 692, "chapter": 692, "shorten": 692, "templat": 692, "evolv": 692, "new_domain": 692, "linearregress": 692, "link": 692, "cst": 692, "former_b": 692, "6700000166893005": 692, "lot": 692, "parse_model": 692, "whenev": 692, "inconsist": 692, "parseerror": 692, "nerror": 692, "nexpect": 692, "purpos": 692, "consumpt": 692, "beforehand": 692, "inferred_model": 692, "infer_shap": 692, "abl": 692, "easili": 692, "wrapper": 692, "pointer": 692, "receiv": 692, "safer": 692, "clear": 692, "puzzl": 692, "create_model": 692, "0d": 692, "7057929": 692, "8349762": 692, "0134485": 692, "8497832": 692, "13845947": 692, "2445331": 692, "onnxruntimeerror": 692, "shapeinferenceerror": 692, "wrong": 692, "validationerror": 692, "4848835": 692, "73459923": 692}, "objects": {"onnx": [[673, 0, 1, "", "AttributeProto"], [673, 0, 1, "", "FunctionProto"], [673, 0, 1, "", "GraphProto"], [673, 0, 1, "", "MapProto"], [684, 0, 1, "id0", "ModelProto"], [673, 0, 1, "", "NodeProto"], [673, 0, 1, "", "OperatorProto"], [673, 0, 1, "", "OperatorSetIdProto"], [673, 0, 1, "", "OperatorSetProto"], [673, 0, 1, "", "OptionalProto"], [673, 0, 1, "", "SequenceProto"], [673, 0, 1, "", "SparseTensorProto"], [673, 0, 1, "", "StringStringEntryProto"], [673, 0, 1, "", "TensorProto"], [673, 0, 1, "", "TensorShapeProto"], [673, 0, 1, "", "TrainingInfoProto"], [673, 0, 1, "", "TypeProto"], [673, 0, 1, "", "ValueInfoProto"], [684, 3, 1, "", "load"], [684, 3, 1, "", "load_model_from_string"], [684, 3, 1, "", "load_tensor_from_string"]], "onnx.AttributeProto": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "doc_string"], [673, 1, 1, "", "f"], [673, 1, 1, "", "floats"], [673, 1, 1, "", "g"], [673, 1, 1, "", "graphs"], [673, 1, 1, "", "i"], [673, 1, 1, "", "ints"], [673, 1, 1, "", "name"], [673, 1, 1, "", "ref_attr_name"], [673, 1, 1, "", "s"], [673, 1, 1, "", "sparse_tensor"], [673, 1, 1, "", "sparse_tensors"], [673, 1, 1, "", "strings"], [673, 1, 1, "", "t"], [673, 1, 1, "", "tensors"], [673, 1, 1, "", "tp"], [673, 1, 1, "", "type"], [673, 1, 1, "", "type_protos"]], "onnx.FunctionProto": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "attribute"], [673, 1, 1, "", "doc_string"], [673, 1, 1, "", "domain"], [673, 1, 1, "", "input"], [673, 1, 1, "", "name"], [673, 1, 1, "", "node"], [673, 1, 1, "", "opset_import"], [673, 1, 1, "", "output"]], "onnx.GraphProto": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "doc_string"], [673, 1, 1, "", "initializer"], [673, 1, 1, "", "input"], [673, 1, 1, "", "name"], [673, 1, 1, "", "node"], [673, 1, 1, "", "output"], [673, 1, 1, "", "quantization_annotation"], [673, 1, 1, "", "sparse_initializer"], [673, 1, 1, "", "value_info"]], "onnx.MapProto": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "key_type"], [673, 1, 1, "", "keys"], [673, 1, 1, "", "name"], [673, 1, 1, "", "string_keys"], [673, 1, 1, "", "values"]], "onnx.ModelProto": [[673, 1, 1, "", "DESCRIPTOR"], [684, 2, 1, "", "ParseFromString"], [684, 2, 1, "", "SerializeToString"], [673, 1, 1, "", "doc_string"], [673, 1, 1, "", "domain"], [673, 1, 1, "", "functions"], [673, 1, 1, "", "graph"], [673, 1, 1, "", "ir_version"], [673, 1, 1, "", "metadata_props"], [673, 1, 1, "", "model_version"], [673, 1, 1, "", "opset_import"], [673, 1, 1, "", "producer_name"], [673, 1, 1, "", "producer_version"], [673, 1, 1, "", "training_info"]], "onnx.NodeProto": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "attribute"], [673, 1, 1, "", "doc_string"], [673, 1, 1, "", "domain"], [673, 1, 1, "", "input"], [673, 1, 1, "", "name"], [673, 1, 1, "", "op_type"], [673, 1, 1, "", "output"]], "onnx.OperatorProto": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "doc_string"], [673, 1, 1, "", "op_type"], [673, 1, 1, "", "since_version"], [673, 1, 1, "", "status"]], "onnx.OperatorSetIdProto": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "domain"], [673, 1, 1, "", "version"]], "onnx.OperatorSetProto": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "doc_string"], [673, 1, 1, "", "domain"], [673, 1, 1, "", "functions"], [673, 1, 1, "", "ir_build_metadata"], [673, 1, 1, "", "ir_version"], [673, 1, 1, "", "ir_version_prerelease"], [673, 1, 1, "", "magic"], [673, 1, 1, "", "operator"], [673, 1, 1, "", "opset_version"]], "onnx.OptionalProto": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "elem_type"], [673, 1, 1, "", "map_value"], [673, 1, 1, "", "name"], [673, 1, 1, "", "optional_value"], [673, 1, 1, "", "sequence_value"], [673, 1, 1, "", "sparse_tensor_value"], [673, 1, 1, "", "tensor_value"]], "onnx.SequenceProto": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "elem_type"], [673, 1, 1, "", "map_values"], [673, 1, 1, "", "name"], [673, 1, 1, "", "optional_values"], [673, 1, 1, "", "sequence_values"], [673, 1, 1, "", "sparse_tensor_values"], [673, 1, 1, "", "tensor_values"]], "onnx.SparseTensorProto": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "dims"], [673, 1, 1, "", "indices"], [673, 1, 1, "", "values"]], "onnx.StringStringEntryProto": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "key"], [673, 1, 1, "", "value"]], "onnx.TensorProto": [[673, 1, 1, "", "DESCRIPTOR"], [673, 0, 1, "", "Segment"], [673, 1, 1, "", "data_location"], [673, 1, 1, "", "data_type"], [673, 1, 1, "", "dims"], [673, 1, 1, "", "doc_string"], [673, 1, 1, "", "double_data"], [673, 1, 1, "", "external_data"], [673, 1, 1, "", "float_data"], [673, 1, 1, "", "int32_data"], [673, 1, 1, "", "int64_data"], [673, 1, 1, "", "name"], [673, 1, 1, "", "raw_data"], [673, 1, 1, "", "segment"], [673, 1, 1, "", "string_data"], [673, 1, 1, "", "uint64_data"]], "onnx.TensorProto.Segment": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "begin"], [673, 1, 1, "", "end"]], "onnx.TensorShapeProto": [[673, 1, 1, "", "DESCRIPTOR"], [673, 0, 1, "", "Dimension"], [673, 1, 1, "", "dim"]], "onnx.TensorShapeProto.Dimension": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "denotation"], [673, 1, 1, "", "dim_param"], [673, 1, 1, "", "dim_value"]], "onnx.TrainingInfoProto": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "algorithm"], [673, 1, 1, "", "initialization"], [673, 1, 1, "", "initialization_binding"], [673, 1, 1, "", "update_binding"]], "onnx.TypeProto": [[673, 1, 1, "", "DESCRIPTOR"], [673, 0, 1, "", "Map"], [673, 0, 1, "", "Opaque"], [673, 0, 1, "", "Optional"], [673, 0, 1, "", "Sequence"], [673, 0, 1, "", "SparseTensor"], [673, 0, 1, "", "Tensor"], [673, 1, 1, "", "denotation"], [673, 1, 1, "", "map_type"], [673, 1, 1, "", "opaque_type"], [673, 1, 1, "", "optional_type"], [673, 1, 1, "", "sequence_type"], [673, 1, 1, "", "sparse_tensor_type"], [673, 1, 1, "", "tensor_type"]], "onnx.TypeProto.Map": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "key_type"], [673, 1, 1, "", "value_type"]], "onnx.TypeProto.Opaque": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "domain"], [673, 1, 1, "", "name"]], "onnx.TypeProto.Optional": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "elem_type"]], "onnx.TypeProto.Sequence": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "elem_type"]], "onnx.TypeProto.SparseTensor": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "elem_type"], [673, 1, 1, "", "shape"]], "onnx.TypeProto.Tensor": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "elem_type"], [673, 1, 1, "", "shape"]], "onnx.ValueInfoProto": [[673, 1, 1, "", "DESCRIPTOR"], [673, 1, 1, "", "doc_string"], [673, 1, 1, "", "name"], [673, 1, 1, "", "type"]], "onnx.backend.base": [[671, 0, 1, "", "Backend"], [671, 0, 1, "", "BackendRep"], [671, 0, 1, "", "Device"], [671, 0, 1, "", "DeviceType"]], "onnx.backend.base.Backend": [[671, 2, 1, "", "run_node"], [671, 2, 1, "", "supports_device"]], "onnx.backend.test.loader": [[671, 3, 1, "", "load_model_tests"]], "onnx.checker": [[672, 3, 1, "", "check_model"]], "onnx.compose": [[674, 3, 1, "", "add_prefix"], [674, 3, 1, "", "add_prefix_graph"], [674, 3, 1, "", "expand_out_dim"], [674, 3, 1, "", "expand_out_dim_graph"], [674, 3, 1, "", "merge_graphs"], [674, 3, 1, "", "merge_models"]], "onnx.defs": [[675, 0, 1, "", "OpSchema"], [675, 0, 1, "", "SchemaError"], [680, 3, 1, "", "get_all_schemas_with_history"], [680, 3, 1, "", "get_function_ops"], [680, 3, 1, "", "get_schema"], [680, 3, 1, "", "onnx_opset_version"]], "onnx.defs.OpSchema": [[675, 0, 1, "", "AttrType"], [675, 0, 1, "", "DifferentiationCategory"], [675, 0, 1, "", "FormalParameterOption"], [675, 0, 1, "", "SupportType"], [675, 2, 1, "", "get_context_dependent_function"], [675, 2, 1, "", "is_infinite"]], "onnx.defs.OpSchema.AttrType": [[675, 4, 1, "", "name"]], "onnx.defs.OpSchema.DifferentiationCategory": [[675, 4, 1, "", "name"]], "onnx.defs.OpSchema.FormalParameterOption": [[675, 4, 1, "", "name"]], "onnx.defs.OpSchema.SupportType": [[675, 4, 1, "", "name"]], "onnx.external_data_helper": [[676, 0, 1, "", "ExternalDataInfo"], [676, 3, 1, "", "convert_model_from_external_data"], [676, 3, 1, "", "convert_model_to_external_data"], [676, 3, 1, "", "load_external_data_for_model"], [676, 3, 1, "", "load_external_data_for_tensor"], [676, 3, 1, "", "remove_external_data_field"], [676, 3, 1, "", "save_external_data"], [676, 3, 1, "", "set_external_data"], [676, 3, 1, "", "write_external_data_tensors"]], "onnx.helper": [[677, 3, 1, "", "find_min_ir_version_for"], [677, 3, 1, "", "get_all_tensor_dtypes"], [677, 3, 1, "id2", "get_attribute_value"], [677, 3, 1, "", "make_attribute"], [677, 3, 1, "", "make_empty_tensor_value_info"], [677, 3, 1, "", "make_function"], [677, 3, 1, "", "make_graph"], [677, 3, 1, "", "make_map"], [677, 3, 1, "", "make_model"], [677, 3, 1, "", "make_node"], [677, 3, 1, "", "make_operatorsetid"], [677, 3, 1, "", "make_opsetid"], [677, 3, 1, "", "make_optional"], [677, 3, 1, "", "make_optional_type_proto"], [677, 3, 1, "", "make_sequence"], [677, 3, 1, "", "make_sequence_type_proto"], [677, 3, 1, "", "make_sparse_tensor"], [677, 3, 1, "", "make_sparse_tensor_type_proto"], [677, 3, 1, "", "make_sparse_tensor_value_info"], [677, 3, 1, "", "make_tensor"], [677, 3, 1, "", "make_tensor_sequence_value_info"], [677, 3, 1, "id0", "make_tensor_type_proto"], [677, 3, 1, "", "make_tensor_value_info"], [677, 3, 1, "", "make_training_info"], [677, 3, 1, "", "make_value_info"], [677, 3, 1, "", "np_dtype_to_tensor_dtype"], [677, 3, 1, "id4", "printable_attribute"], [677, 3, 1, "id5", "printable_dim"], [677, 3, 1, "id6", "printable_graph"], [677, 3, 1, "id7", "printable_node"], [677, 3, 1, "id8", "printable_tensor_proto"], [677, 3, 1, "id9", "printable_type"], [677, 3, 1, "id10", "printable_value_info"], [677, 3, 1, "", "split_complex_to_pairs"], [677, 3, 1, "", "tensor_dtype_to_field"], [677, 3, 1, "", "tensor_dtype_to_np_dtype"], [677, 3, 1, "", "tensor_dtype_to_storage_tensor_dtype"], [677, 3, 1, "", "tensor_dtype_to_string"]], "onnx.hub": [[678, 0, 1, "", "ModelInfo"], [678, 3, 1, "", "get_model_info"], [678, 3, 1, "", "list_models"], [678, 3, 1, "", "load"]], "onnx.hub.ModelInfo": [[678, 1, 1, "", "metadata"], [678, 1, 1, "", "model"], [678, 1, 1, "", "model_path"], [678, 1, 1, "", "model_sha"], [678, 1, 1, "", "opset"], [678, 1, 1, "", "tags"]], "onnx.mapping": [[680, 0, 1, "", "TensorDtypeMap"]], "onnx.numpy_helper": [[681, 3, 1, "", "combine_pairs_to_complex"], [681, 3, 1, "", "convert_endian"], [681, 3, 1, "", "from_array"], [681, 3, 1, "", "from_dict"], [681, 3, 1, "", "from_list"], [681, 3, 1, "", "from_optional"], [681, 3, 1, "", "to_array"], [681, 3, 1, "", "to_dict"], [681, 3, 1, "", "to_list"], [681, 3, 1, "", "to_optional"]], "onnx.onnx_cpp2py_export": [[680, 5, 0, "-", "defs"]], "onnx.onnx_cpp2py_export.defs": [[680, 0, 1, "", "OpSchema"], [680, 6, 1, "", "SchemaError"], [680, 3, 1, "", "get_all_schemas"], [680, 3, 1, "", "get_all_schemas_with_history"], [680, 3, 1, "", "get_schema"], [680, 3, 1, "", "has_schema"], [680, 3, 1, "", "schema_version_map"]], "onnx.onnx_cpp2py_export.defs.OpSchema": [[680, 0, 1, "", "AttrType"], [680, 0, 1, "", "DifferentiationCategory"], [680, 0, 1, "", "FormalParameterOption"], [680, 0, 1, "", "SupportType"], [680, 2, 1, "", "get_context_dependent_function"], [680, 2, 1, "", "is_infinite"]], "onnx.onnx_cpp2py_export.defs.OpSchema.AttrType": [[680, 4, 1, "", "name"]], "onnx.onnx_cpp2py_export.defs.OpSchema.DifferentiationCategory": [[680, 4, 1, "", "name"]], "onnx.onnx_cpp2py_export.defs.OpSchema.FormalParameterOption": [[680, 4, 1, "", "name"]], "onnx.onnx_cpp2py_export.defs.OpSchema.SupportType": [[680, 4, 1, "", "name"]], "onnx.parser": [[682, 3, 1, "", "parse_function"], [682, 3, 1, "", "parse_graph"], [682, 3, 1, "", "parse_model"]], "onnx.printer": [[683, 3, 1, "", "to_text"]], "onnx.shape_inference": [[685, 3, 1, "", "infer_shapes"], [685, 3, 1, "", "infer_shapes_path"]], "onnx.tools.net_drawer": [[686, 3, 1, "", "GetOpNodeProducer"], [686, 3, 1, "", "GetPydotGraph"]], "onnx.tools.update_model_dims": [[686, 3, 1, "", "update_inputs_outputs_dims"]], "onnx.utils": [[687, 0, 1, "", "Extractor"], [687, 3, 1, "", "extract_model"]], "onnx.version_converter": [[688, 3, 1, "", "convert_version"]]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:module", "6": "py:exception"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "module", "Python module"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"sampl": 0, "oper": [0, 2, 675, 680, 689, 690], "test": [0, 689, 692], "code": 0, "python": [1, 692], "document": [1, 690], "onnx": [1, 2, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 671, 672, 674, 675, 676, 677, 678, 680, 681, 682, 683, 685, 686, 687, 688, 689, 691, 692], "ab": [3, 207, 208, 209], "13": [3, 6, 8, 9, 20, 22, 25, 28, 30, 39, 40, 42, 43, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 62, 69, 70, 71, 74, 75, 79, 81, 82, 83, 86, 88, 92, 93, 95, 97, 98, 100, 101, 103, 111, 112, 115, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 142, 143, 152, 154, 155, 158, 159, 160, 161, 164, 165, 167, 168, 170, 171, 173, 176, 178, 181, 207, 209, 210, 211, 215, 218, 222, 223, 226, 228, 229, 232, 254, 257, 259, 260, 262, 264, 265, 268, 272, 274, 276, 279, 281, 282, 285, 289, 293, 295, 296, 297, 298, 302, 305, 308, 309, 312, 317, 321, 323, 325, 328, 329, 330, 332, 333, 334, 336, 339, 340, 342, 349, 351, 352, 353, 355, 356, 358, 363, 367, 370, 373, 376, 378, 380, 382, 383, 384, 386, 389, 391, 393, 396, 397, 406, 409, 411, 412, 414, 415, 417, 418, 420, 422, 427, 429, 441, 443, 447, 450, 451, 452, 455, 457, 458, 460, 464, 467, 468, 469, 470, 474, 477, 479, 481, 482, 484, 499, 501, 503, 507, 509, 511, 513, 517, 519, 523, 525, 526, 528, 529, 531, 532, 534, 535, 537, 539, 540, 543, 544, 546, 548, 549, 552, 553, 555, 556, 558, 559, 561, 562, 563, 566, 568, 569, 572, 575, 577, 579, 587, 590, 591, 593, 596, 597, 601, 602, 604, 606, 607, 608, 610, 611, 614, 615, 616, 618, 619, 620, 622, 625, 626, 628, 629, 631, 632, 633, 637, 640, 642, 645, 647, 648, 650, 651, 653, 657, 660, 662], "6": [3, 6, 16, 20, 22, 25, 42, 43, 46, 49, 53, 58, 67, 72, 78, 81, 88, 92, 95, 98, 100, 110, 122, 133, 144, 154, 167, 170, 171, 173, 176, 208, 209, 213, 215, 216, 217, 242, 245, 246, 247, 248, 255, 257, 258, 261, 262, 269, 270, 271, 272, 300, 302, 303, 304, 313, 315, 316, 317, 318, 322, 331, 332, 341, 342, 359, 362, 363, 364, 365, 379, 395, 403, 404, 416, 417, 444, 446, 447, 448, 453, 455, 456, 461, 463, 464, 465, 472, 474, 475, 476, 480, 481, 490, 493, 494, 495, 524, 525, 565, 566, 567, 600, 605, 606, 627, 628, 635, 637, 638, 639, 643, 645, 646, 649, 650, 652, 653], "1": [3, 6, 7, 8, 9, 15, 16, 20, 22, 25, 28, 30, 32, 34, 39, 42, 43, 46, 47, 49, 52, 53, 54, 55, 58, 59, 60, 61, 62, 67, 69, 70, 71, 72, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 95, 98, 100, 104, 109, 110, 111, 112, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 144, 152, 154, 158, 159, 160, 162, 163, 164, 165, 167, 168, 170, 171, 173, 176, 177, 178, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 220, 224, 225, 226, 230, 231, 232, 234, 235, 236, 240, 241, 242, 243, 244, 254, 255, 256, 260, 261, 266, 267, 268, 269, 275, 276, 277, 283, 284, 285, 286, 290, 291, 294, 295, 298, 299, 300, 301, 310, 311, 312, 313, 314, 322, 324, 325, 326, 330, 331, 335, 336, 337, 340, 341, 343, 344, 345, 354, 355, 357, 358, 359, 360, 361, 371, 373, 374, 375, 379, 381, 382, 386, 387, 388, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 406, 407, 408, 413, 414, 415, 416, 421, 422, 423, 424, 425, 427, 428, 433, 434, 435, 436, 442, 443, 444, 445, 452, 453, 454, 459, 460, 461, 462, 470, 471, 472, 473, 479, 480, 488, 489, 490, 491, 492, 502, 503, 504, 505, 512, 513, 514, 515, 520, 521, 523, 524, 527, 528, 530, 531, 533, 534, 536, 537, 541, 542, 543, 545, 546, 550, 551, 552, 554, 555, 557, 558, 560, 561, 563, 564, 565, 569, 570, 571, 600, 602, 603, 604, 605, 608, 612, 613, 614, 617, 618, 619, 621, 622, 623, 626, 627, 630, 631, 633, 634, 635, 636, 642, 643, 644, 648, 649, 651, 652, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 670], "aco": 4, "7": [4, 6, 7, 10, 12, 15, 16, 35, 42, 43, 47, 54, 58, 62, 76, 79, 98, 99, 109, 110, 112, 116, 156, 170, 172, 182, 184, 214, 217, 218, 219, 220, 236, 237, 238, 243, 247, 249, 250, 251, 301, 304, 305, 306, 314, 318, 319, 320, 321, 326, 327, 328, 345, 347, 348, 360, 364, 366, 367, 368, 374, 376, 377, 399, 400, 407, 409, 410, 473, 476, 477, 478, 488, 491, 494, 496, 497, 515, 516, 517, 518, 521, 522, 636, 639, 640, 641, 664, 666, 667, 670], "acosh": 5, "9": [5, 11, 13, 16, 20, 27, 30, 31, 36, 48, 51, 52, 58, 62, 74, 79, 86, 91, 93, 103, 105, 110, 140, 141, 153, 155, 157, 174, 182, 183, 244, 248, 251, 252, 253, 256, 258, 259, 273, 286, 287, 288, 289, 329, 337, 338, 339, 361, 365, 368, 369, 370, 375, 377, 378, 396, 408, 410, 411, 428, 429, 440, 451, 484, 485, 492, 495, 497, 498, 584, 585, 586, 599, 607, 665, 667, 668, 669], "add": [6, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219], "14": [6, 16, 37, 42, 54, 68, 70, 76, 98, 116, 133, 134, 170, 179, 210, 212, 216, 219, 239, 240, 245, 249, 252, 292, 297, 299, 303, 306, 343, 346, 348, 383, 385, 387, 398, 400, 469, 471, 475, 478, 520, 522, 562, 564, 567, 568, 570, 573, 632, 634, 638, 641], "And": [7, 220], "argmax": [8, 221, 222, 223, 224, 225, 226], "12": [8, 9, 23, 25, 30, 43, 45, 57, 63, 80, 88, 89, 95, 101, 112, 127, 129, 161, 221, 223, 225, 227, 229, 231, 263, 265, 267, 271, 280, 282, 284, 288, 307, 309, 311, 316, 320, 350, 352, 372, 405, 431, 432, 435, 439, 441, 442, 446, 449, 458, 459, 463, 466, 482, 509, 510, 512, 516, 538, 540, 542, 547, 549, 551, 615], "11": [8, 9, 15, 18, 25, 27, 28, 29, 30, 32, 34, 37, 39, 41, 44, 47, 52, 55, 56, 57, 58, 69, 71, 82, 83, 85, 89, 91, 102, 105, 111, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 159, 160, 165, 166, 168, 177, 180, 181, 221, 222, 224, 227, 228, 230, 233, 235, 238, 263, 264, 266, 270, 273, 274, 275, 278, 280, 281, 283, 287, 290, 291, 292, 293, 294, 323, 324, 327, 334, 335, 338, 349, 350, 351, 353, 354, 356, 357, 362, 366, 369, 380, 381, 389, 390, 392, 412, 413, 418, 419, 421, 424, 426, 430, 432, 434, 438, 440, 483, 485, 499, 500, 502, 506, 526, 527, 529, 530, 532, 533, 535, 536, 538, 539, 541, 544, 545, 547, 548, 550, 553, 554, 556, 557, 559, 560, 574, 577, 578, 581, 582, 585, 587, 588, 589, 593, 594, 595, 599, 609, 611, 613, 616, 617, 620, 621, 624, 629, 630, 654, 656, 660, 661], "argmin": [9, 227, 228, 229, 230, 231, 232], "asin": 10, "asinh": 11, "atan": 12, "atanh": 13, "attributehasvalu": 14, "18": [14, 24, 26, 96, 107, 108, 111, 135, 142, 143, 486, 487, 500, 501, 504, 508, 576, 578, 579, 589, 591, 592, 595, 597, 598], "averagepool": [15, 233, 234, 235, 236, 237, 238], "10": [15, 33, 40, 43, 73, 87, 89, 97, 102, 113, 114, 115, 135, 136, 137, 159, 169, 175, 177, 182, 233, 234, 237, 296, 307, 308, 310, 315, 319, 430, 431, 433, 437, 468, 483, 519, 574, 575, 576, 580, 609, 610, 612, 654, 655, 663, 666, 668], "batchnorm": [16, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253], "15": [16, 17, 21, 106, 107, 108, 112, 152, 239, 241, 246, 250, 253, 486, 487, 510, 511, 514, 518, 601, 603], "bernoulli": 17, "bitshift": 18, "blackmanwindow": 19, "17": [19, 38, 65, 66, 77, 94, 139, 151], "cast": [20, 254, 255, 256, 257, 258, 259], "castlik": 21, "ceil": [22, 260, 261, 262], "celu": 23, "centercroppad": 24, "clip": [25, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272], "col2im": 26, "compress": [27, 273], "concat": [28, 274, 275, 276, 277, 278, 279], "4": [28, 277, 278, 279], "concatfromsequ": 29, "constant": [30, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 675], "constantofshap": 31, "conv": [32, 291], "convinteg": 33, "convtranspos": [34, 290], "co": 35, "cosh": 36, "cumsum": [37, 292], "dft": 38, "depthtospac": [39, 293, 294, 295], "dequantizelinear": [40, 296], "det": 41, "div": [42, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "dropout": [43, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321], "dynamicquantizelinear": 44, "einsum": 45, "elu": [46, 322], "equal": [47, 323, 324, 325, 326, 327, 328], "erf": [48, 329], "exp": [49, 330, 331, 332], "expand": [50, 333], "8": [50, 88, 89, 92, 95, 140, 171, 333, 436, 437, 438, 439, 445, 448, 449, 450, 454, 456, 457, 462, 465, 466, 467, 582, 583, 584, 644, 646, 647], "eyelik": 51, "flatten": [52, 334, 335, 336, 337, 338, 339], "floor": [53, 340, 341, 342], "gru": [54, 343, 344, 345, 346, 347, 348], "3": [54, 200, 201, 344, 346, 347, 658, 659], "gather": [55, 353, 354, 355], "gatherel": [56, 349], "gathernd": [57, 350, 351, 352], "gemm": [58, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "globalaveragepool": 59, "globallppool": [60, 371], "2": [60, 85, 111, 165, 192, 371, 401, 425, 426, 505, 506, 507, 508, 623, 624, 625], "globalmaxpool": 61, "greater": [62, 373, 374, 375, 376, 377, 378], "greaterorequ": [63, 372], "16": [63, 64, 70, 71, 78, 80, 83, 110, 137, 140, 142, 143, 183, 372, 384, 385, 388, 390, 391, 394, 402, 404, 405, 419, 420, 423, 489, 493, 496, 498, 580, 581, 583, 586, 588, 590, 592, 594, 596, 598, 669], "gridsampl": 64, "hammingwindow": 65, "hannwindow": 66, "hardsigmoid": [67, 379], "hardswish": 68, "hardmax": [69, 380, 381, 382], "ident": [70, 383, 384, 385, 386, 387, 388], "If": [71, 389, 390, 391, 392, 393, 394, 689, 692], "instancenorm": [72, 395], "isinf": 73, "isnan": [74, 396], "lrn": [75, 397], "lstm": [76, 398, 399, 400], "layernorm": 77, "leakyrelu": [78, 402, 403, 404], "less": [79, 406, 407, 408, 409, 410, 411], "lessorequ": [80, 405], "log": [81, 415, 416, 417], "logsoftmax": [82, 412, 413, 414], "loop": [83, 418, 419, 420, 421, 422, 423, 689, 692], "lpnormal": 84, "lppool": [85, 424, 425, 426], "matmul": [86, 427, 428, 429], "matmulinteg": 87, "max": [88, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450], "maxpool": [89, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439], "maxroipool": 90, "maxunpool": [91, 440], "mean": [92, 452, 453, 454, 455, 456, 457], "meanvariancenorm": [93, 451], "melweightmatrix": 94, "min": [95, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "mish": 96, "mod": [97, 468], "mul": [98, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "multinomi": 99, "neg": [100, 479, 480, 481], "negativeloglikelihoodloss": [101, 482], "nonmaxsuppress": [102, 483], "nonzero": [103, 484], "Not": 104, "onehot": [105, 485], "option": [106, 681], "optionalgetel": [107, 486], "optionalhasel": [108, 487], "Or": [109, 488], "prelu": [110, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498], "pad": [111, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508], "pow": [112, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518], "qlinearconv": 113, "qlinearmatmul": 114, "quantizelinear": [115, 519], "rnn": [116, 520, 521, 522], "randomnorm": 117, "randomnormallik": 118, "randomuniform": 119, "randomuniformlik": 120, "rang": 121, "reciproc": [122, 523, 524, 525], "reducel1": [123, 526, 527, 528], "reducel2": [124, 529, 530, 531], "reducelogsum": [125, 535, 536, 537], "reducelogsumexp": [126, 532, 533, 534], "reducemax": [127, 538, 539, 540, 541, 542, 543], "reducemean": [128, 544, 545, 546], "reducemin": [129, 547, 548, 549, 550, 551, 552], "reduceprod": [130, 553, 554, 555], "reducesum": [131, 559, 560, 561], "reducesumsquar": [132, 556, 557, 558], "relu": [133, 562, 563, 564, 565, 566, 567], "reshap": [134, 568, 569, 570, 571, 572, 573], "5": [134, 571, 572, 573], "resiz": [135, 574, 575, 576, 577, 578, 579], "reversesequ": 136, "roialign": [137, 580], "round": 138, "stft": 139, "scan": [140, 581, 582, 583, 584, 585, 586, 689, 692], "scatter": [141, 599], "scatterel": [142, 587, 588, 589, 590, 591, 592], "scatternd": [143, 593, 594, 595, 596, 597, 598], "selu": [144, 600], "sequenceat": 145, "sequenceconstruct": 146, "sequenceempti": 147, "sequenceeras": 148, "sequenceinsert": 149, "sequencelength": 150, "sequencemap": 151, "shape": [152, 601, 602, 603, 689, 692], "shrink": 153, "sigmoid": [154, 604, 605, 606], "sign": [155, 607], "sin": 156, "sinh": 157, "size": [158, 608], "slice": [159, 609, 610, 611, 612, 613, 614], "softmax": [160, 616, 617, 618], "softmaxcrossentropyloss": [161, 615], "softplu": 162, "softsign": 163, "spacetodepth": [164, 619], "split": [165, 620, 621, 622, 623, 624, 625], "splittosequ": 166, "sqrt": [167, 626, 627, 628], "squeez": [168, 629, 630, 631], "stringnorm": 169, "sub": [170, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641], "sum": [171, 642, 643, 644, 645, 646, 647], "tan": 172, "tanh": [173, 648, 649, 650], "tfidfvector": 174, "thresholdedrelu": 175, "tile": [176, 651, 652, 653], "topk": [177, 654, 655, 656], "transpos": [178, 657], "trilu": 179, "uniqu": 180, "unsqueez": [181, 660, 661, 662], "upsampl": [182, 663, 664, 665, 666, 667, 668], "where": [183, 669], "xor": [184, 670], "ai": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "ml": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "arrayfeatureextractor": 185, "binar": 186, "castmap": 187, "categorymapp": 188, "dictvector": 189, "featurevector": 190, "imput": 191, "labelencod": [192, 401], "linearclassifi": 193, "linearregressor": 194, "normal": 195, "onehotencod": 196, "svmclassifi": 197, "svmregressor": 198, "scaler": 199, "treeensembleclassifi": [200, 658], "treeensembleregressor": [201, 659], "zipmap": 202, "preview": [203, 204, 205, 206], "train": [203, 204, 205, 206], "adagrad": 203, "adam": 204, "gradient": 205, "momentum": 206, "v": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670], "backend": 671, "backendrep": 671, "devic": 671, "devicetyp": 671, "load_model_test": 671, "checker": [672, 692], "check_model": 672, "proto": [673, 684], "attributeproto": 673, "functionproto": 673, "graphproto": 673, "mapproto": 673, "modelproto": 673, "nodeproto": 673, "operatorproto": 673, "operatorsetidproto": 673, "operatorsetproto": 673, "optionalproto": 673, "sequenceproto": 673, "sparsetensorproto": 673, "stringstringentryproto": 673, "tensorproto": 673, "tensorshapeproto": 673, "traininginfoproto": 673, "typeproto": 673, "valueinfoproto": 673, "compos": 674, "merge_graph": 674, "merge_model": 674, "prefix": 674, "dimens": 674, "def": 675, "opset": [675, 680, 689, 690, 692], "version": [675, 679, 680, 689], "function": [675, 677, 679, 680, 689, 690, 692], "schema": [675, 680], "class": [675, 684, 690], "opschema": 675, "except": 675, "schemaerror": 675, "external_data_help": 676, "convert_model_from_external_data": 676, "convert_model_to_external_data": 676, "externaldatainfo": 676, "load_external_data_for_model": 676, "load_external_data_for_tensor": 676, "remove_external_data_field": 676, "save_external_data": 676, "set_external_data": 676, "write_external_data_tensor": 676, "helper": 677, "getter": 677, "print": 677, "tool": [677, 681, 686, 689], "make": 677, "type": [677, 689], "map": [677, 680], "hub": 678, "modelinfo": 678, "list_model": 678, "get_model_info": 678, "load": [678, 684], "api": [679, 690], "refer": 679, "data": [679, 692], "structur": 679, "tensordtypemap": 680, "tensor_type_map": 680, "intern": 680, "modul": 680, "numpy_help": 681, "arrai": 681, "sequenc": 681, "dictionari": 681, "parser": 682, "parse_funct": 682, "parse_graph": 682, "parse_model": 682, "printer": 683, "to_text": 683, "serial": [684, 689, 692], "save": 684, "model": [684, 692], "ani": 684, "shape_infer": 685, "infer_shap": 685, "infer_shapes_path": 685, "net_draw": 686, "update_inputs_outputs_dim": 686, "util": 687, "extractor": 687, "extract_model": 687, "version_convert": 688, "convert_vers": 688, "concept": 689, "input": [689, 692], "output": 689, "node": 689, "initi": [689, 692], "attribut": [689, 692], "protobuf": 689, "metadata": [689, 692], "list": 689, "avail": 689, "domain": 689, "support": 689, "element": 689, "spars": 689, "tensor": 689, "other": [689, 690], "what": [689, 690], "i": [689, 690], "an": [689, 690], "subgraph": [689, 692], "extens": 689, "infer": [689, 692], "convert": 690, "librari": 690, "A": [690, 692], "graph": 690, "method": 690, "add_nod": 690, "trick": 690, "learn": 690, "from": 690, "experi": 690, "discrep": 690, "isolationforest": 690, "discret": 690, "contribut": 690, "build": 690, "markdown": 690, "updat": 690, "exist": 690, "introduct": 691, "simpl": 692, "exampl": 692, "linear": 692, "regress": 692, "default": 692, "valu": 692, "pars": 692, "implement": 692, "detail": 692, "c": 692}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"STFT": [[139, "stft"]], "STFT - 17": [[139, "stft-17"]], "SequenceInsert": [[149, "sequenceinsert"]], "SequenceInsert - 11": [[149, "sequenceinsert-11"]], "Round": [[138, "round"]], "Round - 11": [[138, "round-11"]], "ReduceLogSum": [[125, "reducelogsum"]], "ReduceLogSum - 13": [[125, "reducelogsum-13"]], "ReduceLogSum - 11": [[125, "reducelogsum-11"]], "ReduceLogSum - 1": [[125, "reducelogsum-1"]], "Scan": [[140, "scan"], [689, "scan"], [692, "scan"]], "Scan - 16": [[140, "scan-16"]], "Scan - 11": [[140, "scan-11"]], "Scan - 9": [[140, "scan-9"]], "Scan - 8": [[140, "scan-8"]], "SequenceConstruct": [[146, "sequenceconstruct"]], "SequenceConstruct - 11": [[146, "sequenceconstruct-11"]], "Shape": [[152, "shape"]], "Shape - 15": [[152, "shape-15"]], "Shape - 13": [[152, "shape-13"]], "Shape - 1": [[152, "shape-1"]], "Size": [[158, "size"]], "Size - 13": [[158, "size-13"]], "Size - 1": [[158, "size-1"]], "Softsign": [[163, "softsign"]], "Softsign - 1": [[163, "softsign-1"]], "Relu": [[133, "relu"]], "Relu - 14": [[133, "relu-14"]], "Relu - 13": [[133, "relu-13"]], "Relu - 6": [[133, "relu-6"]], "Relu - 1": [[133, "relu-1"]], "ReduceLogSumExp": [[126, "reducelogsumexp"]], "ReduceLogSumExp - 13": [[126, "reducelogsumexp-13"]], "ReduceLogSumExp - 11": [[126, "reducelogsumexp-11"]], "ReduceLogSumExp - 1": [[126, "reducelogsumexp-1"]], "ReduceMean": [[128, "reducemean"]], "ReduceMean - 13": [[128, "reducemean-13"]], "ReduceMean - 11": [[128, "reducemean-11"]], "ReduceMean - 1": [[128, "reducemean-1"]], "SequenceAt": [[145, "sequenceat"]], "SequenceAt - 11": [[145, "sequenceat-11"]], "ReduceL2": [[124, "reducel2"]], "ReduceL2 - 13": [[124, "reducel2-13"]], "ReduceL2 - 11": [[124, "reducel2-11"]], "ReduceL2 - 1": [[124, "reducel2-1"]], "Resize": [[135, "resize"]], "Resize - 18": [[135, "resize-18"]], "Resize - 13": [[135, "resize-13"]], "Resize - 11": [[135, "resize-11"]], "Resize - 10": [[135, "resize-10"]], "Reshape": [[134, "reshape"]], "Reshape - 14": [[134, "reshape-14"]], "Reshape - 13": [[134, "reshape-13"]], "Reshape - 5": [[134, "reshape-5"]], "Reshape - 1": [[134, "reshape-1"]], "Softmax": [[160, "softmax"]], "Softmax - 13": [[160, "softmax-13"]], "Softmax - 11": [[160, "softmax-11"]], "Softmax - 1": [[160, "softmax-1"]], "Shrink": [[153, "shrink"]], "Shrink - 9": [[153, "shrink-9"]], "ReverseSequence": [[136, "reversesequence"]], "ReverseSequence - 10": [[136, "reversesequence-10"]], "ReduceSumSquare": [[132, "reducesumsquare"]], "ReduceSumSquare - 13": [[132, "reducesumsquare-13"]], "ReduceSumSquare - 11": [[132, "reducesumsquare-11"]], "ReduceSumSquare - 1": [[132, "reducesumsquare-1"]], "SequenceErase": [[148, "sequenceerase"]], "SequenceErase - 11": [[148, "sequenceerase-11"]], "SequenceLength": [[150, "sequencelength"]], "SequenceLength - 11": [[150, "sequencelength-11"]], "Softplus": [[162, "softplus"]], "Softplus - 1": [[162, "softplus-1"]], "SequenceMap": [[151, "sequencemap"]], "SequenceMap - 17": [[151, "sequencemap-17"]], "Sinh": [[157, "sinh"]], "Sinh - 9": [[157, "sinh-9"]], "Sign": [[155, "sign"]], "Sign - 13": [[155, "sign-13"]], "Sign - 9": [[155, "sign-9"]], "Selu": [[144, "selu"]], "Selu - 6": [[144, "selu-6"]], "Selu - 1": [[144, "selu-1"]], "ReduceProd": [[130, "reduceprod"]], "ReduceProd - 13": [[130, "reduceprod-13"]], "ReduceProd - 11": [[130, "reduceprod-11"]], "ReduceProd - 1": [[130, "reduceprod-1"]], "Slice": [[159, "slice"]], "Slice - 13": [[159, "slice-13"]], "Slice - 11": [[159, "slice-11"]], "Slice - 10": [[159, "slice-10"]], "Slice - 1": [[159, "slice-1"]], "ReduceMax": [[127, "reducemax"]], "ReduceMax - 13": [[127, "reducemax-13"]], "ReduceMax - 12": [[127, "reducemax-12"]], "ReduceMax - 11": [[127, "reducemax-11"]], "ReduceMax - 1": [[127, "reducemax-1"]], "Scatter": [[141, "scatter"]], "Scatter - 11": [[141, "scatter-11"]], "Scatter - 9": [[141, "scatter-9"]], "Sigmoid": [[154, "sigmoid"]], "Sigmoid - 13": [[154, "sigmoid-13"]], "Sigmoid - 6": [[154, "sigmoid-6"]], "Sigmoid - 1": [[154, "sigmoid-1"]], "ReduceL1": [[123, "reducel1"]], "ReduceL1 - 13": [[123, "reducel1-13"]], "ReduceL1 - 11": [[123, "reducel1-11"]], "ReduceL1 - 1": [[123, "reducel1-1"]], "Sin": [[156, "sin"]], "Sin - 7": [[156, "sin-7"]], "RoiAlign": [[137, "roialign"]], "RoiAlign - 16": [[137, "roialign-16"]], "RoiAlign - 10": [[137, "roialign-10"]], "ScatterND": [[143, "scatternd"]], "ScatterND - 18": [[143, "scatternd-18"]], "ScatterND - 16": [[143, "scatternd-16"]], "ScatterND - 13": [[143, "scatternd-13"]], "ScatterND - 11": [[143, "scatternd-11"]], "ReduceMin": [[129, "reducemin"]], "ReduceMin - 13": [[129, "reducemin-13"]], "ReduceMin - 12": [[129, "reducemin-12"]], "ReduceMin - 11": [[129, "reducemin-11"]], "ReduceMin - 1": [[129, "reducemin-1"]], "SoftmaxCrossEntropyLoss": [[161, "softmaxcrossentropyloss"]], "SoftmaxCrossEntropyLoss - 13": [[161, "softmaxcrossentropyloss-13"]], "SoftmaxCrossEntropyLoss - 12": [[161, "softmaxcrossentropyloss-12"]], "ScatterElements": [[142, "scatterelements"]], "ScatterElements - 18": [[142, "scatterelements-18"]], "ScatterElements - 16": [[142, "scatterelements-16"]], "ScatterElements - 13": [[142, "scatterelements-13"]], "ScatterElements - 11": [[142, "scatterelements-11"]], "ReduceSum": [[131, "reducesum"]], "ReduceSum - 13": [[131, "reducesum-13"]], "ReduceSum - 11": [[131, "reducesum-11"]], "ReduceSum - 1": [[131, "reducesum-1"]], "SequenceEmpty": [[147, "sequenceempty"]], "SequenceEmpty - 11": [[147, "sequenceempty-11"]], "Floor": [[53, "floor"]], "Floor - 13": [[53, "floor-13"]], "Floor - 6": [[53, "floor-6"]], "Floor - 1": [[53, "floor-1"]], "GlobalLpPool": [[60, "globallppool"]], "GlobalLpPool - 2": [[60, "globallppool-2"]], "GlobalLpPool - 1": [[60, "globallppool-1"]], "Greater": [[62, "greater"]], "Greater - 13": [[62, "greater-13"]], "Greater - 9": [[62, "greater-9"]], "Greater - 7": [[62, "greater-7"]], "Greater - 1": [[62, "greater-1"]], "Flatten": [[52, "flatten"]], "Flatten - 13": [[52, "flatten-13"]], "Flatten - 11": [[52, "flatten-11"]], "Flatten - 9": [[52, "flatten-9"]], "Flatten - 1": [[52, "flatten-1"]], "LeakyRelu": [[78, "leakyrelu"]], "LeakyRelu - 16": [[78, "leakyrelu-16"]], "LeakyRelu - 6": [[78, "leakyrelu-6"]], "LeakyRelu - 1": [[78, "leakyrelu-1"]], "Hardmax": [[69, "hardmax"]], "Hardmax - 13": [[69, "hardmax-13"]], "Hardmax - 11": [[69, "hardmax-11"]], "Hardmax - 1": [[69, "hardmax-1"]], "GatherElements": [[56, "gatherelements"]], "GatherElements - 13": [[56, "gatherelements-13"]], "GatherElements - 11": [[56, "gatherelements-11"]], "GreaterOrEqual": [[63, "greaterorequal"]], "GreaterOrEqual - 16": [[63, "greaterorequal-16"]], "GreaterOrEqual - 12": [[63, "greaterorequal-12"]], "GRU": [[54, "gru"]], "GRU - 14": [[54, "gru-14"]], "GRU - 7": [[54, "gru-7"]], "GRU - 3": [[54, "gru-3"]], "GRU - 1": [[54, "gru-1"]], "HannWindow": [[66, "hannwindow"]], "HannWindow - 17": [[66, "hannwindow-17"]], "HardSigmoid": [[67, "hardsigmoid"]], "HardSigmoid - 6": [[67, "hardsigmoid-6"]], "HardSigmoid - 1": [[67, "hardsigmoid-1"]], "IsNaN": [[74, "isnan"]], "IsNaN - 13": [[74, "isnan-13"]], "IsNaN - 9": [[74, "isnan-9"]], "Einsum": [[45, "einsum"]], "Einsum - 12": [[45, "einsum-12"]], "Gather": [[55, "gather"]], "Gather - 13": [[55, "gather-13"]], "Gather - 11": [[55, "gather-11"]], "Gather - 1": [[55, "gather-1"]], "Identity": [[70, "l-onnx-doc-identity"]], "Identity - 16": [[70, "l-onnx-op-identity-16"]], "Identity - 14": [[70, "l-onnx-op-identity-14"]], "Identity - 13": [[70, "l-onnx-op-identity-13"]], "Identity - 1": [[70, "l-onnx-op-identity-1"]], "If": [[71, "if"], [689, "if"], [692, "if"]], "If - 16": [[71, "if-16"]], "If - 13": [[71, "if-13"]], "If - 11": [[71, "if-11"]], "If - 1": [[71, "if-1"]], "IsInf": [[73, "isinf"]], "IsInf - 10": [[73, "isinf-10"]], "LRN": [[75, "lrn"]], "LRN - 13": [[75, "lrn-13"]], "LRN - 1": [[75, "lrn-1"]], "GlobalMaxPool": [[61, "globalmaxpool"]], "GlobalMaxPool - 1": [[61, "globalmaxpool-1"]], "GridSample": [[64, "gridsample"]], "GridSample - 16": [[64, "gridsample-16"]], "Det": [[41, "det"]], "Det - 11": [[41, "det-11"]], "Elu": [[46, "elu"]], "Elu - 6": [[46, "elu-6"]], "Elu - 1": [[46, "elu-1"]], "Equal": [[47, "equal"]], "Equal - 13": [[47, "equal-13"]], "Equal - 11": [[47, "equal-11"]], "Equal - 7": [[47, "equal-7"]], "Equal - 1": [[47, "equal-1"]], "HammingWindow": [[65, "hammingwindow"]], "HammingWindow - 17": [[65, "hammingwindow-17"]], "HardSwish": [[68, "hardswish"]], "HardSwish - 14": [[68, "hardswish-14"]], "InstanceNormalization": [[72, "instancenormalization"]], "InstanceNormalization - 6": [[72, "instancenormalization-6"]], "InstanceNormalization - 1": [[72, "instancenormalization-1"]], "LessOrEqual": [[80, "lessorequal"]], "LessOrEqual - 16": [[80, "lessorequal-16"]], "LessOrEqual - 12": [[80, "lessorequal-12"]], "Exp": [[49, "exp"]], "Exp - 13": [[49, "exp-13"]], "Exp - 6": [[49, "exp-6"]], "Exp - 1": [[49, "exp-1"]], "Erf": [[48, "erf"]], "Erf - 13": [[48, "erf-13"]], "Erf - 9": [[48, "erf-9"]], "Dropout": [[43, "dropout"]], "Dropout - 13": [[43, "dropout-13"]], "Dropout - 12": [[43, "dropout-12"]], "Dropout - 10": [[43, "dropout-10"]], "Dropout - 7": [[43, "dropout-7"]], "Dropout - 6": [[43, "dropout-6"]], "Dropout - 1": [[43, "dropout-1"]], "EyeLike": [[51, "eyelike"]], "EyeLike - 9": [[51, "eyelike-9"]], "Div": [[42, "div"]], "Div - 14": [[42, "div-14"]], "Div - 13": [[42, "div-13"]], "Div - 7": [[42, "div-7"]], "Div - 6": [[42, "div-6"]], "Div - 1": [[42, "div-1"]], "GlobalAveragePool": [[59, "globalaveragepool"]], "GlobalAveragePool - 1": [[59, "globalaveragepool-1"]], "Less": [[79, "less"]], "Less - 13": [[79, "less-13"]], "Less - 9": [[79, "less-9"]], "Less - 7": [[79, "less-7"]], "Less - 1": [[79, "less-1"]], "GatherND": [[57, "gathernd"]], "GatherND - 13": [[57, "gathernd-13"]], "GatherND - 12": [[57, "gathernd-12"]], "GatherND - 11": [[57, "gathernd-11"]], "LayerNormalization": [[77, "layernormalization"]], "LayerNormalization - 17": [[77, "layernormalization-17"]], "Log": [[81, "log"]], "Log - 13": [[81, "log-13"]], "Log - 6": [[81, "log-6"]], "Log - 1": [[81, "log-1"]], "DynamicQuantizeLinear": [[44, "dynamicquantizelinear"]], "DynamicQuantizeLinear - 11": [[44, "dynamicquantizelinear-11"]], "LSTM": [[76, "lstm"]], "LSTM - 14": [[76, "lstm-14"]], "LSTM - 7": [[76, "lstm-7"]], "LSTM - 1": [[76, "lstm-1"]], "Gemm": [[58, "gemm"]], "Gemm - 13": [[58, "gemm-13"]], "Gemm - 11": [[58, "gemm-11"]], "Gemm - 9": [[58, "gemm-9"]], "Gemm - 7": [[58, "gemm-7"]], "Gemm - 6": [[58, "gemm-6"]], "Gemm - 1": [[58, "gemm-1"]], "Expand": [[50, "expand"]], "Expand - 13": [[50, "expand-13"]], "Expand - 8": [[50, "expand-8"]], "OptionalGetElement": [[107, "optionalgetelement"]], "OptionalGetElement - 18": [[107, "optionalgetelement-18"]], "OptionalGetElement - 15": [[107, "optionalgetelement-15"]], "RandomUniform": [[119, "randomuniform"]], "RandomUniform - 1": [[119, "randomuniform-1"]], "Optional": [[106, "optional"]], "Optional - 15": [[106, "optional-15"]], "QLinearMatMul": [[114, "qlinearmatmul"]], "QLinearMatMul - 10": [[114, "qlinearmatmul-10"]], "Reciprocal": [[122, "reciprocal"]], "Reciprocal - 13": [[122, "reciprocal-13"]], "Reciprocal - 6": [[122, "reciprocal-6"]], "Reciprocal - 1": [[122, "reciprocal-1"]], "NonZero": [[103, "nonzero"]], "NonZero - 13": [[103, "nonzero-13"]], "NonZero - 9": [[103, "nonzero-9"]], "MeanVarianceNormalization": [[93, "meanvariancenormalization"]], "MeanVarianceNormalization - 13": [[93, "meanvariancenormalization-13"]], "MeanVarianceNormalization - 9": [[93, "meanvariancenormalization-9"]], "Multinomial": [[99, "multinomial"]], "Multinomial - 7": [[99, "multinomial-7"]], "NegativeLogLikelihoodLoss": [[101, "negativeloglikelihoodloss"]], "NegativeLogLikelihoodLoss - 13": [[101, "negativeloglikelihoodloss-13"]], "NegativeLogLikelihoodLoss - 12": [[101, "negativeloglikelihoodloss-12"]], "Or": [[109, "or"]], "Or - 7": [[109, "or-7"]], "Or - 1": [[109, "or-1"]], "RandomUniformLike": [[120, "randomuniformlike"]], "RandomUniformLike - 1": [[120, "randomuniformlike-1"]], "MelWeightMatrix": [[94, "melweightmatrix"]], "MelWeightMatrix - 17": [[94, "melweightmatrix-17"]], "MatMul": [[86, "matmul"]], "MatMul - 13": [[86, "matmul-13"]], "MatMul - 9": [[86, "matmul-9"]], "MatMul - 1": [[86, "matmul-1"]], "Mean": [[92, "mean"]], "Mean - 13": [[92, "mean-13"]], "Mean - 8": [[92, "mean-8"]], "Mean - 6": [[92, "mean-6"]], "Mean - 1": [[92, "mean-1"]], "MaxRoiPool": [[90, "maxroipool"]], "MaxRoiPool - 1": [[90, "maxroipool-1"]], "Mod": [[97, "mod"]], "Mod - 13": [[97, "mod-13"]], "Mod - 10": [[97, "mod-10"]], "Pow": [[112, "pow"]], "Pow - 15": [[112, "pow-15"]], "Pow - 13": [[112, "pow-13"]], "Pow - 12": [[112, "pow-12"]], "Pow - 7": [[112, "pow-7"]], "Pow - 1": [[112, "pow-1"]], "Neg": [[100, "neg"]], "Neg - 13": [[100, "neg-13"]], "Neg - 6": [[100, "neg-6"]], "Neg - 1": [[100, "neg-1"]], "PRelu": [[110, "prelu"]], "PRelu - 16": [[110, "prelu-16"]], "PRelu - 9": [[110, "prelu-9"]], "PRelu - 7": [[110, "prelu-7"]], "PRelu - 6": [[110, "prelu-6"]], "PRelu - 1": [[110, "prelu-1"]], "RNN": [[116, "rnn"]], "RNN - 14": [[116, "rnn-14"]], "RNN - 7": [[116, "rnn-7"]], "RNN - 1": [[116, "rnn-1"]], "QLinearConv": [[113, "qlinearconv"]], "QLinearConv - 10": [[113, "qlinearconv-10"]], "OptionalHasElement": [[108, "optionalhaselement"]], "OptionalHasElement - 18": [[108, "optionalhaselement-18"]], "OptionalHasElement - 15": [[108, "optionalhaselement-15"]], "Loop": [[83, "loop"], [689, "loop"]], "Loop - 16": [[83, "loop-16"]], "Loop - 13": [[83, "loop-13"]], "Loop - 11": [[83, "loop-11"]], "Loop - 1": [[83, "loop-1"]], "LogSoftmax": [[82, "logsoftmax"]], "LogSoftmax - 13": [[82, "logsoftmax-13"]], "LogSoftmax - 11": [[82, "logsoftmax-11"]], "LogSoftmax - 1": [[82, "logsoftmax-1"]], "MaxUnpool": [[91, "maxunpool"]], "MaxUnpool - 11": [[91, "maxunpool-11"]], "MaxUnpool - 9": [[91, "maxunpool-9"]], "Range": [[121, "range"]], "Range - 11": [[121, "range-11"]], "RandomNormal": [[117, "randomnormal"]], "RandomNormal - 1": [[117, "randomnormal-1"]], "LpNormalization": [[84, "lpnormalization"]], "LpNormalization - 1": [[84, "lpnormalization-1"]], "RandomNormalLike": [[118, "randomnormallike"]], "RandomNormalLike - 1": [[118, "randomnormallike-1"]], "OneHot": [[105, "onehot"]], "OneHot - 11": [[105, "onehot-11"]], "OneHot - 9": [[105, "onehot-9"]], "Max": [[88, "max"]], "Max - 13": [[88, "max-13"]], "Max - 12": [[88, "max-12"]], "Max - 8": [[88, "max-8"]], "Max - 6": [[88, "max-6"]], "Max - 1": [[88, "max-1"]], "LpPool": [[85, "lppool"]], "LpPool - 11": [[85, "lppool-11"]], "LpPool - 2": [[85, "lppool-2"]], "LpPool - 1": [[85, "lppool-1"]], "Mish": [[96, "mish"]], "Mish - 18": [[96, "mish-18"]], "QuantizeLinear": [[115, "quantizelinear"]], "QuantizeLinear - 13": [[115, "quantizelinear-13"]], "QuantizeLinear - 10": [[115, "quantizelinear-10"]], "NonMaxSuppression": [[102, "nonmaxsuppression"]], "NonMaxSuppression - 11": [[102, "nonmaxsuppression-11"]], "NonMaxSuppression - 10": [[102, "nonmaxsuppression-10"]], "Pad": [[111, "pad"]], "Pad - 18": [[111, "pad-18"]], "Pad - 13": [[111, "pad-13"]], "Pad - 11": [[111, "pad-11"]], "Pad - 2": [[111, "pad-2"]], "Pad - 1": [[111, "pad-1"]], "Not": [[104, "not"]], "Not - 1": [[104, "not-1"]], "Mul": [[98, "mul"]], "Mul - 14": [[98, "mul-14"]], "Mul - 13": [[98, "mul-13"]], "Mul - 7": [[98, "mul-7"]], "Mul - 6": [[98, "mul-6"]], "Mul - 1": [[98, "mul-1"]], "Min": [[95, "min"]], "Min - 13": [[95, "min-13"]], "Min - 12": [[95, "min-12"]], "Min - 8": [[95, "min-8"]], "Min - 6": [[95, "min-6"]], "Min - 1": [[95, "min-1"]], "MatMulInteger": [[87, "matmulinteger"]], "MatMulInteger - 10": [[87, "matmulinteger-10"]], "MaxPool": [[89, "maxpool"]], "MaxPool - 12": [[89, "maxpool-12"]], "or": [[89, "or"], [89, "id2"], [89, "id4"], [15, "or"], [15, "id2"]], "MaxPool - 11": [[89, "maxpool-11"]], "MaxPool - 10": [[89, "maxpool-10"]], "MaxPool - 8": [[89, "maxpool-8"]], "MaxPool - 1": [[89, "maxpool-1"]], "BlackmanWindow": [[19, "blackmanwindow"]], "BlackmanWindow - 17": [[19, "blackmanwindow-17"]], "ConcatFromSequence": [[29, "concatfromsequence"]], "ConcatFromSequence - 11": [[29, "concatfromsequence-11"]], "Ceil": [[22, "ceil"]], "Ceil - 13": [[22, "ceil-13"]], "Ceil - 6": [[22, "ceil-6"]], "Ceil - 1": [[22, "ceil-1"]], "Conv": [[32, "conv"]], "Conv - 11": [[32, "conv-11"]], "Conv - 1": [[32, "conv-1"]], "And": [[7, "and"]], "And - 7": [[7, "and-7"]], "And - 1": [[7, "and-1"]], "BitShift": [[18, "bitshift"]], "BitShift - 11": [[18, "bitshift-11"]], "Atan": [[12, "atan"]], "Atan - 7": [[12, "atan-7"]], "Acosh": [[5, "acosh"]], "Acosh - 9": [[5, "acosh-9"]], "CastLike": [[21, "castlike"]], "CastLike - 15": [[21, "castlike-15"]], "Asin": [[10, "asin"]], "Asin - 7": [[10, "asin-7"]], "ConvInteger": [[33, "convinteger"]], "ConvInteger - 10": [[33, "convinteger-10"]], "Asinh": [[11, "asinh"]], "Asinh - 9": [[11, "asinh-9"]], "CumSum": [[37, "cumsum"]], "CumSum - 14": [[37, "cumsum-14"]], "CumSum - 11": [[37, "cumsum-11"]], "Col2Im": [[26, "col2im"]], "Col2Im - 18": [[26, "col2im-18"]], "DepthToSpace": [[39, "depthtospace"]], "DepthToSpace - 13": [[39, "depthtospace-13"]], "DepthToSpace - 11": [[39, "depthtospace-11"]], "DepthToSpace - 1": [[39, "depthtospace-1"]], "Python Documentation of ONNX": [[1, "python-documentation-of-onnx"]], "ConvTranspose": [[34, "convtranspose"]], "ConvTranspose - 11": [[34, "convtranspose-11"]], "ConvTranspose - 1": [[34, "convtranspose-1"]], "Compress": [[27, "compress"]], "Compress - 11": [[27, "compress-11"]], "Compress - 9": [[27, "compress-9"]], "CenterCropPad": [[24, "centercroppad"]], "CenterCropPad - 18": [[24, "centercroppad-18"]], "Clip": [[25, "clip"]], "Clip - 13": [[25, "clip-13"]], "Clip - 12": [[25, "clip-12"]], "Clip - 11": [[25, "clip-11"]], "Clip - 6": [[25, "clip-6"]], "Clip - 1": [[25, "clip-1"]], "Sample operator test code": [[0, "sample-operator-test-code"]], "ArgMin": [[9, "argmin"]], "ArgMin - 13": [[9, "argmin-13"]], "ArgMin - 12": [[9, "argmin-12"]], "ArgMin - 11": [[9, "argmin-11"]], "ArgMin - 1": [[9, "argmin-1"]], "Add": [[6, "add"]], "Add - 14": [[6, "add-14"]], "Add - 13": [[6, "add-13"]], "Add - 7": [[6, "add-7"]], "Add - 6": [[6, "add-6"]], "Add - 1": [[6, "add-1"]], "AveragePool": [[15, "averagepool"]], "AveragePool - 11": [[15, "averagepool-11"]], "AveragePool - 10": [[15, "averagepool-10"]], "AveragePool - 7": [[15, "averagepool-7"]], "AveragePool - 1": [[15, "averagepool-1"]], "AttributeHasValue": [[14, "attributehasvalue"]], "AttributeHasValue - 18": [[14, "attributehasvalue-18"]], "Cast": [[20, "cast"]], "Cast - 13": [[20, "cast-13"]], "Cast - 9": [[20, "cast-9"]], "Cast - 6": [[20, "cast-6"]], "Cast - 1": [[20, "cast-1"]], "Constant": [[30, "constant"]], "Constant - 13": [[30, "constant-13"]], "Constant - 12": [[30, "constant-12"]], "Constant - 11": [[30, "constant-11"]], "Constant - 9": [[30, "constant-9"]], "Constant - 1": [[30, "constant-1"]], "Acos": [[4, "acos"]], "Acos - 7": [[4, "acos-7"]], "ArgMax": [[8, "argmax"]], "ArgMax - 13": [[8, "argmax-13"]], "ArgMax - 12": [[8, "argmax-12"]], "ArgMax - 11": [[8, "argmax-11"]], "ArgMax - 1": [[8, "argmax-1"]], "Celu": [[23, "celu"]], "Celu - 12": [[23, "celu-12"]], "Cosh": [[36, "cosh"]], "Cosh - 9": [[36, "cosh-9"]], "Bernoulli": [[17, "bernoulli"]], "Bernoulli - 15": [[17, "bernoulli-15"]], "ONNX Operators": [[2, "onnx-operators"]], "Abs": [[3, "abs"]], "Abs - 13": [[3, "abs-13"]], "Abs - 6": [[3, "abs-6"]], "Abs - 1": [[3, "abs-1"]], "ConstantOfShape": [[31, "constantofshape"]], "ConstantOfShape - 9": [[31, "constantofshape-9"]], "Cos": [[35, "cos"]], "Cos - 7": [[35, "cos-7"]], "Concat": [[28, "concat"]], "Concat - 13": [[28, "concat-13"]], "Concat - 11": [[28, "concat-11"]], "Concat - 4": [[28, "concat-4"]], "Concat - 1": [[28, "concat-1"]], "BatchNormalization": [[16, "batchnormalization"]], "BatchNormalization - 15": [[16, "batchnormalization-15"]], "BatchNormalization - 14": [[16, "batchnormalization-14"]], "BatchNormalization - 9": [[16, "batchnormalization-9"]], "BatchNormalization - 7": [[16, "batchnormalization-7"]], "BatchNormalization - 6": [[16, "batchnormalization-6"]], "BatchNormalization - 1": [[16, "batchnormalization-1"]], "DFT": [[38, "dft"]], "DFT - 17": [[38, "dft-17"]], "Atanh": [[13, "atanh"]], "Atanh - 9": [[13, "atanh-9"]], "DequantizeLinear": [[40, "dequantizelinear"]], "DequantizeLinear - 13": [[40, "dequantizelinear-13"]], "DequantizeLinear - 10": [[40, "dequantizelinear-10"]], "TopK - 10 vs 11": [[654, "topk-10-vs-11"]], "Split - 1 vs 2": [[623, "split-1-vs-2"]], "Squeeze - 11 vs 13": [[629, "squeeze-11-vs-13"]], "Sub - 1 vs 13": [[633, "sub-1-vs-13"]], "Sub - 1 vs 7": [[636, "sub-1-vs-7"]], "Tanh - 1 vs 13": [[648, "tanh-1-vs-13"]], "Tile - 1 vs 6": [[652, "tile-1-vs-6"]], "Sum - 1 vs 13": [[642, "sum-1-vs-13"]], "Softmax - 11 vs 13": [[616, "softmax-11-vs-13"]], "Squeeze - 1 vs 13": [[631, "squeeze-1-vs-13"]], "Squeeze - 1 vs 11": [[630, "squeeze-1-vs-11"]], "Sub - 1 vs 6": [[635, "sub-1-vs-6"]], "Sub - 13 vs 14": [[632, "sub-13-vs-14"]], "Sum - 1 vs 8": [[644, "sum-1-vs-8"]], "Softmax - 1 vs 13": [[618, "softmax-1-vs-13"]], "TopK - 1 vs 10": [[655, "topk-1-vs-10"]], "Split - 11 vs 13": [[620, "split-11-vs-13"]], "Sqrt - 1 vs 6": [[627, "sqrt-1-vs-6"]], "Split - 2 vs 11": [[624, "split-2-vs-11"]], "Sub - 6 vs 13": [[637, "sub-6-vs-13"]], "Softmax - 1 vs 11": [[617, "softmax-1-vs-11"]], "Sum - 6 vs 8": [[646, "sum-6-vs-8"]], "SoftmaxCrossEntropyLoss - 12 vs 13": [[615, "softmaxcrossentropyloss-12-vs-13"]], "Sub - 6 vs 14": [[638, "sub-6-vs-14"]], "Sub - 6 vs 7": [[639, "sub-6-vs-7"]], "Split - 1 vs 11": [[621, "split-1-vs-11"]], "Sum - 8 vs 13": [[647, "sum-8-vs-13"]], "Tanh - 6 vs 13": [[650, "tanh-6-vs-13"]], "Split - 1 vs 13": [[622, "split-1-vs-13"]], "Tile - 6 vs 13": [[653, "tile-6-vs-13"]], "SpaceToDepth - 1 vs 13": [[619, "spacetodepth-1-vs-13"]], "Sub - 7 vs 14": [[641, "sub-7-vs-14"]], "Sqrt - 1 vs 13": [[626, "sqrt-1-vs-13"]], "Sum - 6 vs 13": [[645, "sum-6-vs-13"]], "Tile - 1 vs 13": [[651, "tile-1-vs-13"]], "Sub - 1 vs 14": [[634, "sub-1-vs-14"]], "Sub - 7 vs 13": [[640, "sub-7-vs-13"]], "Tanh - 1 vs 6": [[649, "tanh-1-vs-6"]], "Sum - 1 vs 6": [[643, "sum-1-vs-6"]], "Sqrt - 6 vs 13": [[628, "sqrt-6-vs-13"]], "Split - 2 vs 13": [[625, "split-2-vs-13"]], "Size - 1 vs 13": [[608, "size-1-vs-13"]], "Slice - 10 vs 11": [[609, "slice-10-vs-11"]], "Sigmoid - 6 vs 13": [[606, "sigmoid-6-vs-13"]], "ScatterND - 16 vs 18": [[598, "scatternd-16-vs-18"]], "Scatter - 9 vs 11": [[599, "scatter-9-vs-11"]], "Shape - 1 vs 15": [[603, "shape-1-vs-15"]], "Scan - 8 vs 16": [[583, "scan-8-vs-16"]], "Scan - 9 vs 16": [[586, "scan-9-vs-16"]], "ScatterElements - 11 vs 13": [[587, "scatterelements-11-vs-13"]], "Resize - 11 vs 13": [[577, "resize-11-vs-13"]], "Shape - 1 vs 13": [[602, "shape-1-vs-13"]], "ScatterElements - 16 vs 18": [[592, "scatterelements-16-vs-18"]], "Scan - 8 vs 11": [[582, "scan-8-vs-11"]], "ScatterElements - 13 vs 16": [[590, "scatterelements-13-vs-16"]], "Resize - 11 vs 18": [[578, "resize-11-vs-18"]], "Scan - 11 vs 16": [[581, "scan-11-vs-16"]], "Shape - 13 vs 15": [[601, "shape-13-vs-15"]], "Sign - 9 vs 13": [[607, "sign-9-vs-13"]], "ScatterND - 11 vs 13": [[593, "scatternd-11-vs-13"]], "ScatterElements - 11 vs 16": [[588, "scatterelements-11-vs-16"]], "Slice - 1 vs 10": [[612, "slice-1-vs-10"]], "Slice - 10 vs 13": [[610, "slice-10-vs-13"]], "Resize - 10 vs 18": [[576, "resize-10-vs-18"]], "ScatterND - 13 vs 16": [[596, "scatternd-13-vs-16"]], "Resize - 10 vs 11": [[574, "resize-10-vs-11"]], "Selu - 1 vs 6": [[600, "selu-1-vs-6"]], "Sigmoid - 1 vs 13": [[604, "sigmoid-1-vs-13"]], "Slice - 1 vs 13": [[614, "slice-1-vs-13"]], "Sigmoid - 1 vs 6": [[605, "sigmoid-1-vs-6"]], "ScatterElements - 13 vs 18": [[591, "scatterelements-13-vs-18"]], "ScatterND - 13 vs 18": [[597, "scatternd-13-vs-18"]], "ScatterElements - 11 vs 18": [[589, "scatterelements-11-vs-18"]], "Slice - 1 vs 11": [[613, "slice-1-vs-11"]], "ScatterND - 11 vs 18": [[595, "scatternd-11-vs-18"]], "Scan - 8 vs 9": [[584, "scan-8-vs-9"]], "RoiAlign - 10 vs 16": [[580, "roialign-10-vs-16"]], "Scan - 9 vs 11": [[585, "scan-9-vs-11"]], "Resize - 13 vs 18": [[579, "resize-13-vs-18"]], "ScatterND - 11 vs 16": [[594, "scatternd-11-vs-16"]], "Slice - 11 vs 13": [[611, "slice-11-vs-13"]], "Resize - 10 vs 13": [[575, "resize-10-vs-13"]], "ReduceLogSumExp - 1 vs 11": [[533, "reducelogsumexp-1-vs-11"]], "ReduceMin - 1 vs 11": [[550, "reducemin-1-vs-11"]], "Reshape - 5 vs 14": [[573, "reshape-5-vs-14"]], "Relu - 1 vs 13": [[563, "relu-1-vs-13"]], "Reshape - 5 vs 13": [[572, "reshape-5-vs-13"]], "ReduceLogSumExp - 1 vs 13": [[534, "reducelogsumexp-1-vs-13"]], "ReduceMin - 1 vs 13": [[552, "reducemin-1-vs-13"]], "ReduceProd - 1 vs 11": [[554, "reduceprod-1-vs-11"]], "ReduceProd - 11 vs 13": [[553, "reduceprod-11-vs-13"]], "ReduceMean - 11 vs 13": [[544, "reducemean-11-vs-13"]], "ReduceMin - 11 vs 13": [[548, "reducemin-11-vs-13"]], "ReduceMin - 1 vs 12": [[551, "reducemin-1-vs-12"]], "ReduceSum - 1 vs 11": [[560, "reducesum-1-vs-11"]], "ReduceLogSum - 11 vs 13": [[535, "reducelogsum-11-vs-13"]], "Relu - 6 vs 13": [[566, "relu-6-vs-13"]], "Reshape - 1 vs 13": [[569, "reshape-1-vs-13"]], "Reshape - 1 vs 14": [[570, "reshape-1-vs-14"]], "ReduceMean - 1 vs 11": [[545, "reducemean-1-vs-11"]], "ReduceLogSum - 1 vs 11": [[536, "reducelogsum-1-vs-11"]], "ReduceMax - 11 vs 12": [[538, "reducemax-11-vs-12"]], "ReduceSumSquare - 1 vs 13": [[558, "reducesumsquare-1-vs-13"]], "ReduceSum - 11 vs 13": [[559, "reducesum-11-vs-13"]], "Relu - 1 vs 14": [[564, "relu-1-vs-14"]], "ReduceMax - 11 vs 13": [[539, "reducemax-11-vs-13"]], "ReduceProd - 1 vs 13": [[555, "reduceprod-1-vs-13"]], "ReduceMin - 12 vs 13": [[549, "reducemin-12-vs-13"]], "ReduceMin - 11 vs 12": [[547, "reducemin-11-vs-12"]], "ReduceMean - 1 vs 13": [[546, "reducemean-1-vs-13"]], "ReduceMax - 1 vs 12": [[542, "reducemax-1-vs-12"]], "ReduceMax - 1 vs 13": [[543, "reducemax-1-vs-13"]], "ReduceSumSquare - 11 vs 13": [[556, "reducesumsquare-11-vs-13"]], "Relu - 1 vs 6": [[565, "relu-1-vs-6"]], "Relu - 6 vs 14": [[567, "relu-6-vs-14"]], "Reshape - 1 vs 5": [[571, "reshape-1-vs-5"]], "ReduceSumSquare - 1 vs 11": [[557, "reducesumsquare-1-vs-11"]], "ReduceSum - 1 vs 13": [[561, "reducesum-1-vs-13"]], "ReduceMax - 1 vs 11": [[541, "reducemax-1-vs-11"]], "ReduceMax - 12 vs 13": [[540, "reducemax-12-vs-13"]], "Reshape - 13 vs 14": [[568, "reshape-13-vs-14"]], "Relu - 13 vs 14": [[562, "relu-13-vs-14"]], "ReduceLogSum - 1 vs 13": [[537, "reducelogsum-1-vs-13"]], "Pad - 1 vs 11": [[502, "pad-1-vs-11"]], "Pow - 1 vs 13": [[513, "pow-1-vs-13"]], "RNN - 7 vs 14": [[522, "rnn-7-vs-14"]], "PRelu - 7 vs 9": [[497, "prelu-7-vs-9"]], "Pow - 1 vs 7": [[515, "pow-1-vs-7"]], "Pad - 2 vs 18": [[508, "pad-2-vs-18"]], "Reciprocal - 1 vs 6": [[524, "reciprocal-1-vs-6"]], "PRelu - 6 vs 9": [[495, "prelu-6-vs-9"]], "ReduceL1 - 1 vs 13": [[528, "reducel1-1-vs-13"]], "Pow - 12 vs 13": [[509, "pow-12-vs-13"]], "PRelu - 6 vs 7": [[494, "prelu-6-vs-7"]], "Pad - 11 vs 13": [[499, "pad-11-vs-13"]], "Pad - 2 vs 13": [[507, "pad-2-vs-13"]], "ReduceL2 - 1 vs 13": [[531, "reducel2-1-vs-13"]], "PRelu - 1 vs 9": [[492, "prelu-1-vs-9"]], "Pow - 1 vs 12": [[512, "pow-1-vs-12"]], "RNN - 1 vs 7": [[521, "rnn-1-vs-7"]], "PRelu - 9 vs 16": [[498, "prelu-9-vs-16"]], "ReduceL1 - 1 vs 11": [[527, "reducel1-1-vs-11"]], "Pad - 11 vs 18": [[500, "pad-11-vs-18"]], "Pad - 1 vs 2": [[505, "pad-1-vs-2"]], "Pow - 12 vs 15": [[510, "pow-12-vs-15"]], "ReduceLogSumExp - 11 vs 13": [[532, "reducelogsumexp-11-vs-13"]], "Pad - 1 vs 18": [[504, "pad-1-vs-18"]], "Reciprocal - 1 vs 13": [[523, "reciprocal-1-vs-13"]], "Reciprocal - 6 vs 13": [[525, "reciprocal-6-vs-13"]], "PRelu - 7 vs 16": [[496, "prelu-7-vs-16"]], "Pow - 1 vs 15": [[514, "pow-1-vs-15"]], "Pow - 13 vs 15": [[511, "pow-13-vs-15"]], "ReduceL1 - 11 vs 13": [[526, "reducel1-11-vs-13"]], "PRelu - 6 vs 16": [[493, "prelu-6-vs-16"]], "Pad - 2 vs 11": [[506, "pad-2-vs-11"]], "QuantizeLinear - 10 vs 13": [[519, "quantizelinear-10-vs-13"]], "Pow - 7 vs 15": [[518, "pow-7-vs-15"]], "RNN - 1 vs 14": [[520, "rnn-1-vs-14"]], "ReduceL2 - 11 vs 13": [[529, "reducel2-11-vs-13"]], "Pow - 7 vs 13": [[517, "pow-7-vs-13"]], "ReduceL2 - 1 vs 11": [[530, "reducel2-1-vs-11"]], "Pad - 1 vs 13": [[503, "pad-1-vs-13"]], "Pow - 7 vs 12": [[516, "pow-7-vs-12"]], "Pad - 13 vs 18": [[501, "pad-13-vs-18"]], "PRelu - 1 vs 6": [[490, "prelu-1-vs-6"]], "Min - 8 vs 13": [[467, "min-8-vs-13"]], "Or - 1 vs 7": [[488, "or-1-vs-7"]], "Min - 6 vs 8": [[465, "min-6-vs-8"]], "Mul - 1 vs 7": [[473, "mul-1-vs-7"]], "Min - 1 vs 8": [[462, "min-1-vs-8"]], "Mul - 7 vs 14": [[478, "mul-7-vs-14"]], "Mul - 6 vs 14": [[475, "mul-6-vs-14"]], "NonMaxSuppression - 10 vs 11": [[483, "nonmaxsuppression-10-vs-11"]], "MeanVarianceNormalization - 9 vs 13": [[451, "meanvariancenormalization-9-vs-13"]], "Min - 6 vs 13": [[464, "min-6-vs-13"]], "Mod - 10 vs 13": [[468, "mod-10-vs-13"]], "OneHot - 9 vs 11": [[485, "onehot-9-vs-11"]], "OptionalHasElement - 15 vs 18": [[487, "optionalhaselement-15-vs-18"]], "Mean - 6 vs 8": [[456, "mean-6-vs-8"]], "Min - 6 vs 12": [[463, "min-6-vs-12"]], "Min - 1 vs 13": [[460, "min-1-vs-13"]], "Mean - 6 vs 13": [[455, "mean-6-vs-13"]], "Mul - 1 vs 6": [[472, "mul-1-vs-6"]], "Mul - 6 vs 7": [[476, "mul-6-vs-7"]], "Min - 12 vs 13": [[458, "min-12-vs-13"]], "Neg - 1 vs 6": [[480, "neg-1-vs-6"]], "Neg - 6 vs 13": [[481, "neg-6-vs-13"]], "Mul - 1 vs 14": [[471, "mul-1-vs-14"]], "Mean - 1 vs 8": [[454, "mean-1-vs-8"]], "Neg - 1 vs 13": [[479, "neg-1-vs-13"]], "OptionalGetElement - 15 vs 18": [[486, "optionalgetelement-15-vs-18"]], "Mul - 6 vs 13": [[474, "mul-6-vs-13"]], "Min - 1 vs 12": [[459, "min-1-vs-12"]], "PRelu - 1 vs 7": [[491, "prelu-1-vs-7"]], "Min - 8 vs 12": [[466, "min-8-vs-12"]], "Mul - 13 vs 14": [[469, "mul-13-vs-14"]], "Mul - 1 vs 13": [[470, "mul-1-vs-13"]], "Mean - 1 vs 13": [[452, "mean-1-vs-13"]], "Mul - 7 vs 13": [[477, "mul-7-vs-13"]], "Mean - 8 vs 13": [[457, "mean-8-vs-13"]], "NegativeLogLikelihoodLoss - 12 vs 13": [[482, "negativeloglikelihoodloss-12-vs-13"]], "Mean - 1 vs 6": [[453, "mean-1-vs-6"]], "NonZero - 9 vs 13": [[484, "nonzero-9-vs-13"]], "Min - 1 vs 6": [[461, "min-1-vs-6"]], "PRelu - 1 vs 16": [[489, "prelu-1-vs-16"]], "Max - 8 vs 12": [[449, "max-8-vs-12"]], "LogSoftmax - 1 vs 11": [[413, "logsoftmax-1-vs-11"]], "Log - 6 vs 13": [[417, "log-6-vs-13"]], "MaxPool - 8 vs 10": [[437, "maxpool-8-vs-10"]], "Max - 8 vs 13": [[450, "max-8-vs-13"]], "Max - 1 vs 12": [[442, "max-1-vs-12"]], "MaxPool - 10 vs 11": [[430, "maxpool-10-vs-11"]], "Max - 6 vs 12": [[446, "max-6-vs-12"]], "Less - 7 vs 9": [[410, "less-7-vs-9"]], "Max - 1 vs 6": [[444, "max-1-vs-6"]], "MaxPool - 8 vs 11": [[438, "maxpool-8-vs-11"]], "Max - 6 vs 13": [[447, "max-6-vs-13"]], "LpPool - 1 vs 2": [[425, "lppool-1-vs-2"]], "Loop - 1 vs 16": [[423, "loop-1-vs-16"]], "Max - 12 vs 13": [[441, "max-12-vs-13"]], "Max - 6 vs 8": [[448, "max-6-vs-8"]], "Log - 1 vs 6": [[416, "log-1-vs-6"]], "MaxPool - 1 vs 12": [[435, "maxpool-1-vs-12"]], "Loop - 1 vs 13": [[422, "loop-1-vs-13"]], "MaxUnpool - 9 vs 11": [[440, "maxunpool-9-vs-11"]], "Loop - 11 vs 13": [[418, "loop-11-vs-13"]], "LogSoftmax - 1 vs 13": [[414, "logsoftmax-1-vs-13"]], "LogSoftmax - 11 vs 13": [[412, "logsoftmax-11-vs-13"]], "MaxPool - 1 vs 10": [[433, "maxpool-1-vs-10"]], "MaxPool - 8 vs 12": [[439, "maxpool-8-vs-12"]], "Loop - 11 vs 16": [[419, "loop-11-vs-16"]], "MaxPool - 11 vs 12": [[432, "maxpool-11-vs-12"]], "Max - 1 vs 8": [[445, "max-1-vs-8"]], "MaxPool - 1 vs 11": [[434, "maxpool-1-vs-11"]], "Log - 1 vs 13": [[415, "log-1-vs-13"]], "MaxPool - 10 vs 12": [[431, "maxpool-10-vs-12"]], "LpPool - 1 vs 11": [[424, "lppool-1-vs-11"]], "MatMul - 1 vs 9": [[428, "matmul-1-vs-9"]], "MaxPool - 1 vs 8": [[436, "maxpool-1-vs-8"]], "LpPool - 2 vs 11": [[426, "lppool-2-vs-11"]], "MatMul - 9 vs 13": [[429, "matmul-9-vs-13"]], "Loop - 13 vs 16": [[420, "loop-13-vs-16"]], "MatMul - 1 vs 13": [[427, "matmul-1-vs-13"]], "Less - 9 vs 13": [[411, "less-9-vs-13"]], "Max - 1 vs 13": [[443, "max-1-vs-13"]], "Loop - 1 vs 11": [[421, "loop-1-vs-11"]], "LabelEncoder - 1 vs 2": [[401, "labelencoder-1-vs-2"]], "GlobalLpPool - 1 vs 2": [[371, "globallppool-1-vs-2"]], "Identity - 1 vs 14": [[387, "l-onnx-op-identity-d1-14"]], "LSTM - 7 vs 14": [[400, "lstm-7-vs-14"]], "Less - 7 vs 13": [[409, "less-7-vs-13"]], "Greater - 7 vs 9": [[377, "greater-7-vs-9"]], "Hardmax - 1 vs 11": [[381, "hardmax-1-vs-11"]], "Gemm - 9 vs 11": [[369, "gemm-9-vs-11"]], "LSTM - 1 vs 14": [[398, "lstm-1-vs-14"]], "Greater - 1 vs 9": [[375, "greater-1-vs-9"]], "Hardmax - 1 vs 13": [[382, "hardmax-1-vs-13"]], "LeakyRelu - 1 vs 6": [[403, "leakyrelu-1-vs-6"]], "HardSigmoid - 1 vs 6": [[379, "hardsigmoid-1-vs-6"]], "LeakyRelu - 6 vs 16": [[404, "leakyrelu-6-vs-16"]], "LeakyRelu - 1 vs 16": [[402, "leakyrelu-1-vs-16"]], "Identity - 13 vs 16": [[384, "l-onnx-op-identity-d13-16"]], "If - 1 vs 13": [[393, "if-1-vs-13"]], "Hardmax - 11 vs 13": [[380, "hardmax-11-vs-13"]], "If - 1 vs 16": [[394, "if-1-vs-16"]], "Less - 1 vs 7": [[407, "less-1-vs-7"]], "Gemm - 9 vs 13": [[370, "gemm-9-vs-13"]], "If - 11 vs 13": [[389, "if-11-vs-13"]], "Greater - 9 vs 13": [[378, "greater-9-vs-13"]], "Less - 1 vs 9": [[408, "less-1-vs-9"]], "Greater - 7 vs 13": [[376, "greater-7-vs-13"]], "Identity - 14 vs 16": [[385, "l-onnx-op-identity-d14-16"]], "LSTM - 1 vs 7": [[399, "lstm-1-vs-7"]], "IsNaN - 9 vs 13": [[396, "isnan-9-vs-13"]], "If - 1 vs 11": [[392, "if-1-vs-11"]], "Identity - 13 vs 14": [[383, "l-onnx-op-identity-d13-14"]], "If - 13 vs 16": [[391, "if-13-vs-16"]], "InstanceNormalization - 1 vs 6": [[395, "instancenormalization-1-vs-6"]], "LRN - 1 vs 13": [[397, "lrn-1-vs-13"]], "GreaterOrEqual - 12 vs 16": [[372, "greaterorequal-12-vs-16"]], "LessOrEqual - 12 vs 16": [[405, "lessorequal-12-vs-16"]], "Identity - 1 vs 16": [[388, "l-onnx-op-identity-d1-16"]], "Less - 1 vs 13": [[406, "less-1-vs-13"]], "Greater - 1 vs 13": [[373, "greater-1-vs-13"]], "Identity - 1 vs 13": [[386, "l-onnx-op-identity-d1-13"]], "If - 11 vs 16": [[390, "if-11-vs-16"]], "Greater - 1 vs 7": [[374, "greater-1-vs-7"]], "Floor - 6 vs 13": [[342, "floor-6-vs-13"]], "Flatten - 11 vs 13": [[334, "flatten-11-vs-13"]], "Gemm - 6 vs 7": [[364, "gemm-6-vs-7"]], "Gemm - 6 vs 11": [[362, "gemm-6-vs-11"]], "Gemm - 6 vs 13": [[363, "gemm-6-vs-13"]], "Gemm - 1 vs 9": [[361, "gemm-1-vs-9"]], "Equal - 7 vs 13": [[328, "equal-7-vs-13"]], "Gemm - 1 vs 11": [[357, "gemm-1-vs-11"]], "GatherElements - 11 vs 13": [[349, "gatherelements-11-vs-13"]], "Exp - 1 vs 6": [[331, "exp-1-vs-6"]], "GRU - 3 vs 7": [[347, "gru-3-vs-7"]], "GatherND - 12 vs 13": [[352, "gathernd-12-vs-13"]], "Gemm - 11 vs 13": [[356, "gemm-11-vs-13"]], "Exp - 1 vs 13": [[330, "exp-1-vs-13"]], "Flatten - 1 vs 13": [[336, "flatten-1-vs-13"]], "Floor - 1 vs 6": [[341, "floor-1-vs-6"]], "Gemm - 7 vs 13": [[367, "gemm-7-vs-13"]], "Flatten - 1 vs 9": [[337, "flatten-1-vs-9"]], "Flatten - 9 vs 13": [[339, "flatten-9-vs-13"]], "GatherND - 11 vs 13": [[351, "gathernd-11-vs-13"]], "Gemm - 1 vs 7": [[360, "gemm-1-vs-7"]], "GatherND - 11 vs 12": [[350, "gathernd-11-vs-12"]], "GRU - 7 vs 14": [[348, "gru-7-vs-14"]], "Gather - 11 vs 13": [[353, "gather-11-vs-13"]], "Gemm - 1 vs 6": [[359, "gemm-1-vs-6"]], "Gather - 1 vs 11": [[354, "gather-1-vs-11"]], "GRU - 3 vs 14": [[346, "gru-3-vs-14"]], "Exp - 6 vs 13": [[332, "exp-6-vs-13"]], "GRU - 1 vs 14": [[343, "gru-1-vs-14"]], "Flatten - 1 vs 11": [[335, "flatten-1-vs-11"]], "GRU - 1 vs 3": [[344, "gru-1-vs-3"]], "Gemm - 7 vs 11": [[366, "gemm-7-vs-11"]], "Expand - 8 vs 13": [[333, "expand-8-vs-13"]], "Gemm - 1 vs 13": [[358, "gemm-1-vs-13"]], "Gemm - 7 vs 9": [[368, "gemm-7-vs-9"]], "Gather - 1 vs 13": [[355, "gather-1-vs-13"]], "Floor - 1 vs 13": [[340, "floor-1-vs-13"]], "Flatten - 9 vs 11": [[338, "flatten-9-vs-11"]], "GRU - 1 vs 7": [[345, "gru-1-vs-7"]], "Gemm - 6 vs 9": [[365, "gemm-6-vs-9"]], "Erf - 9 vs 13": [[329, "erf-9-vs-13"]], "Dropout - 1 vs 13": [[312, "dropout-1-vs-13"]], "Div - 1 vs 7": [[301, "div-1-vs-7"]], "ConvTranspose - 1 vs 11": [[290, "convtranspose-1-vs-11"]], "Dropout - 6 vs 10": [[315, "dropout-6-vs-10"]], "Elu - 1 vs 6": [[322, "elu-1-vs-6"]], "DequantizeLinear - 10 vs 13": [[296, "dequantizelinear-10-vs-13"]], "Equal - 1 vs 7": [[326, "equal-1-vs-7"]], "Div - 1 vs 13": [[298, "div-1-vs-13"]], "Dropout - 1 vs 10": [[310, "dropout-1-vs-10"]], "Equal - 1 vs 13": [[325, "equal-1-vs-13"]], "DepthToSpace - 11 vs 13": [[293, "depthtospace-11-vs-13"]], "Dropout - 10 vs 12": [[307, "dropout-10-vs-12"]], "Dropout - 6 vs 13": [[317, "dropout-6-vs-13"]], "Equal - 1 vs 11": [[324, "equal-1-vs-11"]], "Dropout - 12 vs 13": [[309, "dropout-12-vs-13"]], "Dropout - 7 vs 13": [[321, "dropout-7-vs-13"]], "Dropout - 1 vs 7": [[314, "dropout-1-vs-7"]], "Dropout - 1 vs 12": [[311, "dropout-1-vs-12"]], "Div - 13 vs 14": [[297, "div-13-vs-14"]], "Div - 6 vs 14": [[303, "div-6-vs-14"]], "Div - 6 vs 7": [[304, "div-6-vs-7"]], "Conv - 1 vs 11": [[291, "conv-1-vs-11"]], "DepthToSpace - 1 vs 13": [[295, "depthtospace-1-vs-13"]], "Equal - 7 vs 11": [[327, "equal-7-vs-11"]], "Dropout - 1 vs 6": [[313, "dropout-1-vs-6"]], "Constant - 9 vs 13": [[289, "constant-9-vs-13"]], "Dropout - 6 vs 12": [[316, "dropout-6-vs-12"]], "Div - 7 vs 13": [[305, "div-7-vs-13"]], "Dropout - 7 vs 12": [[320, "dropout-7-vs-12"]], "Equal - 11 vs 13": [[323, "equal-11-vs-13"]], "Dropout - 7 vs 10": [[319, "dropout-7-vs-10"]], "Div - 1 vs 6": [[300, "div-1-vs-6"]], "Constant - 9 vs 11": [[287, "constant-9-vs-11"]], "Constant - 9 vs 12": [[288, "constant-9-vs-12"]], "Dropout - 10 vs 13": [[308, "dropout-10-vs-13"]], "CumSum - 11 vs 14": [[292, "cumsum-11-vs-14"]], "Dropout - 6 vs 7": [[318, "dropout-6-vs-7"]], "DepthToSpace - 1 vs 11": [[294, "depthtospace-1-vs-11"]], "Div - 1 vs 14": [[299, "div-1-vs-14"]], "Div - 7 vs 14": [[306, "div-7-vs-14"]], "Div - 6 vs 13": [[302, "div-6-vs-13"]], "Constant - 11 vs 13": [[281, "constant-11-vs-13"]], "Ceil - 1 vs 13": [[260, "ceil-1-vs-13"]], "Compress - 9 vs 11": [[273, "compress-9-vs-11"]], "Constant - 1 vs 13": [[285, "constant-1-vs-13"]], "BatchNormalization - 9 vs 14": [[252, "batchnormalization-9-vs-14"]], "BatchNormalization - 6 vs 15": [[246, "batchnormalization-6-vs-15"]], "BatchNormalization - 7 vs 14": [[249, "batchnormalization-7-vs-14"]], "Clip - 1 vs 11": [[266, "clip-1-vs-11"]], "Cast - 6 vs 13": [[257, "cast-6-vs-13"]], "Cast - 1 vs 6": [[255, "cast-1-vs-6"]], "Clip - 1 vs 6": [[269, "clip-1-vs-6"]], "BatchNormalization - 6 vs 7": [[247, "batchnormalization-6-vs-7"]], "Concat - 4 vs 13": [[279, "concat-4-vs-13"]], "Constant - 1 vs 9": [[286, "constant-1-vs-9"]], "Cast - 9 vs 13": [[259, "cast-9-vs-13"]], "Clip - 11 vs 12": [[263, "clip-11-vs-12"]], "BatchNormalization - 9 vs 15": [[253, "batchnormalization-9-vs-15"]], "Clip - 11 vs 13": [[264, "clip-11-vs-13"]], "Clip - 12 vs 13": [[265, "clip-12-vs-13"]], "Clip - 1 vs 13": [[268, "clip-1-vs-13"]], "Cast - 6 vs 9": [[258, "cast-6-vs-9"]], "Clip - 6 vs 13": [[272, "clip-6-vs-13"]], "Clip - 6 vs 11": [[270, "clip-6-vs-11"]], "Constant - 12 vs 13": [[282, "constant-12-vs-13"]], "Clip - 6 vs 12": [[271, "clip-6-vs-12"]], "Concat - 1 vs 13": [[276, "concat-1-vs-13"]], "Concat - 4 vs 11": [[278, "concat-4-vs-11"]], "Concat - 1 vs 4": [[277, "concat-1-vs-4"]], "BatchNormalization - 7 vs 9": [[251, "batchnormalization-7-vs-9"]], "Constant - 1 vs 11": [[283, "constant-1-vs-11"]], "Concat - 11 vs 13": [[274, "concat-11-vs-13"]], "BatchNormalization - 7 vs 15": [[250, "batchnormalization-7-vs-15"]], "Ceil - 1 vs 6": [[261, "ceil-1-vs-6"]], "Cast - 1 vs 13": [[254, "cast-1-vs-13"]], "Constant - 11 vs 12": [[280, "constant-11-vs-12"]], "Concat - 1 vs 11": [[275, "concat-1-vs-11"]], "BatchNormalization - 6 vs 9": [[248, "batchnormalization-6-vs-9"]], "Clip - 1 vs 12": [[267, "clip-1-vs-12"]], "Constant - 1 vs 12": [[284, "constant-1-vs-12"]], "Cast - 1 vs 9": [[256, "cast-1-vs-9"]], "Ceil - 6 vs 13": [[262, "ceil-6-vs-13"]], "AveragePool - 1 vs 7": [[236, "averagepool-1-vs-7"]], "Add - 1 vs 7": [[214, "add-1-vs-7"]], "Add - 13 vs 14": [[210, "add-13-vs-14"]], "Abs - 6 vs 13": [[209, "abs-6-vs-13"]], "ArgMin - 11 vs 12": [[227, "argmin-11-vs-12"]], "ArgMax - 11 vs 13": [[222, "argmax-11-vs-13"]], "Abs - 1 vs 13": [[207, "abs-1-vs-13"]], "Add - 7 vs 13": [[218, "add-7-vs-13"]], "ai.onnx.preview.training - Momentum": [[206, "ai-onnx-preview-training-momentum"]], "Momentum - 1 (ai.onnx.preview.training)": [[206, "momentum-1-ai-onnx-preview-training"]], "Add - 1 vs 13": [[211, "add-1-vs-13"]], "AveragePool - 1 vs 11": [[235, "averagepool-1-vs-11"]], "AveragePool - 7 vs 10": [[237, "averagepool-7-vs-10"]], "ArgMin - 12 vs 13": [[229, "argmin-12-vs-13"]], "ArgMin - 1 vs 11": [[230, "argmin-1-vs-11"]], "AveragePool - 10 vs 11": [[233, "averagepool-10-vs-11"]], "BatchNormalization - 1 vs 15": [[241, "batchnormalization-1-vs-15"]], "AveragePool - 1 vs 10": [[234, "averagepool-1-vs-10"]], "ArgMin - 11 vs 13": [[228, "argmin-11-vs-13"]], "ai.onnx.preview.training - Gradient": [[205, "ai-onnx-preview-training-gradient"]], "Gradient - 1 (ai.onnx.preview.training)": [[205, "gradient-1-ai-onnx-preview-training"]], "ArgMax - 1 vs 11": [[224, "argmax-1-vs-11"]], "Add - 6 vs 7": [[217, "add-6-vs-7"]], "BatchNormalization - 1 vs 14": [[240, "batchnormalization-1-vs-14"]], "ArgMax - 12 vs 13": [[223, "argmax-12-vs-13"]], "BatchNormalization - 1 vs 9": [[244, "batchnormalization-1-vs-9"]], "ArgMax - 11 vs 12": [[221, "argmax-11-vs-12"]], "Add - 6 vs 14": [[216, "add-6-vs-14"]], "BatchNormalization - 14 vs 15": [[239, "batchnormalization-14-vs-15"]], "Add - 6 vs 13": [[215, "add-6-vs-13"]], "BatchNormalization - 1 vs 7": [[243, "batchnormalization-1-vs-7"]], "BatchNormalization - 6 vs 14": [[245, "batchnormalization-6-vs-14"]], "And - 1 vs 7": [[220, "and-1-vs-7"]], "Abs - 1 vs 6": [[208, "abs-1-vs-6"]], "Add - 7 vs 14": [[219, "add-7-vs-14"]], "ArgMin - 1 vs 13": [[232, "argmin-1-vs-13"]], "ArgMax - 1 vs 12": [[225, "argmax-1-vs-12"]], "ArgMin - 1 vs 12": [[231, "argmin-1-vs-12"]], "AveragePool - 7 vs 11": [[238, "averagepool-7-vs-11"]], "Add - 1 vs 14": [[212, "add-1-vs-14"]], "BatchNormalization - 1 vs 6": [[242, "batchnormalization-1-vs-6"]], "Add - 1 vs 6": [[213, "add-1-vs-6"]], "ArgMax - 1 vs 13": [[226, "argmax-1-vs-13"]], "Xor": [[184, "xor"]], "Xor - 7": [[184, "xor-7"]], "Xor - 1": [[184, "xor-1"]], "Transpose": [[178, "transpose"]], "Transpose - 13": [[178, "transpose-13"]], "Transpose - 1": [[178, "transpose-1"]], "ai.onnx.ml - LinearClassifier": [[193, "ai-onnx-ml-linearclassifier"]], "LinearClassifier - 1 (ai.onnx.ml)": [[193, "linearclassifier-1-ai-onnx-ml"]], "ai.onnx.ml - Scaler": [[199, "ai-onnx-ml-scaler"]], "Scaler - 1 (ai.onnx.ml)": [[199, "scaler-1-ai-onnx-ml"]], "Split": [[165, "split"]], "Split - 13": [[165, "split-13"]], "Split - 11": [[165, "split-11"]], "Split - 2": [[165, "split-2"]], "Split - 1": [[165, "split-1"]], "ai.onnx.ml - ArrayFeatureExtractor": [[185, "ai-onnx-ml-arrayfeatureextractor"]], "ArrayFeatureExtractor - 1 (ai.onnx.ml)": [[185, "arrayfeatureextractor-1-ai-onnx-ml"]], "ai.onnx.ml - FeatureVectorizer": [[190, "ai-onnx-ml-featurevectorizer"]], "FeatureVectorizer - 1 (ai.onnx.ml)": [[190, "featurevectorizer-1-ai-onnx-ml"]], "TopK": [[177, "topk"]], "TopK - 11": [[177, "topk-11"]], "TopK - 10": [[177, "topk-10"]], "TopK - 1": [[177, "topk-1"]], "SpaceToDepth": [[164, "spacetodepth"]], "SpaceToDepth - 13": [[164, "spacetodepth-13"]], "SpaceToDepth - 1": [[164, "spacetodepth-1"]], "ai.onnx.ml - OneHotEncoder": [[196, "ai-onnx-ml-onehotencoder"]], "OneHotEncoder - 1 (ai.onnx.ml)": [[196, "onehotencoder-1-ai-onnx-ml"]], "Squeeze": [[168, "squeeze"]], "Squeeze - 13": [[168, "squeeze-13"]], "Squeeze - 11": [[168, "squeeze-11"]], "Squeeze - 1": [[168, "squeeze-1"]], "ai.onnx.ml - Imputer": [[191, "ai-onnx-ml-imputer"]], "Imputer - 1 (ai.onnx.ml)": [[191, "imputer-1-ai-onnx-ml"]], "ai.onnx.preview.training - Adam": [[204, "ai-onnx-preview-training-adam"]], "Adam - 1 (ai.onnx.preview.training)": [[204, "adam-1-ai-onnx-preview-training"]], "Where": [[183, "where"]], "Where - 16": [[183, "where-16"]], "Where - 9": [[183, "where-9"]], "StringNormalizer": [[169, "stringnormalizer"]], "StringNormalizer - 10": [[169, "stringnormalizer-10"]], "ai.onnx.ml - SVMRegressor": [[198, "ai-onnx-ml-svmregressor"]], "SVMRegressor - 1 (ai.onnx.ml)": [[198, "svmregressor-1-ai-onnx-ml"]], "ai.onnx.ml - CastMap": [[187, "ai-onnx-ml-castmap"]], "CastMap - 1 (ai.onnx.ml)": [[187, "castmap-1-ai-onnx-ml"]], "Upsample": [[182, "upsample"]], "Upsample - 10": [[182, "upsample-10"]], "Upsample - 9": [[182, "upsample-9"]], "Upsample - 7": [[182, "upsample-7"]], "Upsample - 1": [[182, "upsample-1"]], "Sum": [[171, "sum"]], "Sum - 13": [[171, "sum-13"]], "Sum - 8": [[171, "sum-8"]], "Sum - 6": [[171, "sum-6"]], "Sum - 1": [[171, "sum-1"]], "Unsqueeze": [[181, "unsqueeze"]], "Unsqueeze - 13": [[181, "unsqueeze-13"]], "Unsqueeze - 11": [[181, "unsqueeze-11"]], "Unsqueeze - 1": [[181, "unsqueeze-1"]], "ai.onnx.preview.training - Adagrad": [[203, "ai-onnx-preview-training-adagrad"]], "Adagrad - 1 (ai.onnx.preview.training)": [[203, "adagrad-1-ai-onnx-preview-training"]], "ThresholdedRelu": [[175, "thresholdedrelu"]], "ThresholdedRelu - 10": [[175, "thresholdedrelu-10"]], "ai.onnx.ml - LabelEncoder": [[192, "ai-onnx-ml-labelencoder"]], "LabelEncoder - 2 (ai.onnx.ml)": [[192, "labelencoder-2-ai-onnx-ml"]], "LabelEncoder - 1 (ai.onnx.ml)": [[192, "labelencoder-1-ai-onnx-ml"]], "SplitToSequence": [[166, "splittosequence"]], "SplitToSequence - 11": [[166, "splittosequence-11"]], "TfIdfVectorizer": [[174, "tfidfvectorizer"]], "TfIdfVectorizer - 9": [[174, "tfidfvectorizer-9"]], "ai.onnx.ml - TreeEnsembleRegressor": [[201, "ai-onnx-ml-treeensembleregressor"]], "TreeEnsembleRegressor - 3 (ai.onnx.ml)": [[201, "treeensembleregressor-3-ai-onnx-ml"]], "TreeEnsembleRegressor - 1 (ai.onnx.ml)": [[201, "treeensembleregressor-1-ai-onnx-ml"]], "ai.onnx.ml - DictVectorizer": [[189, "ai-onnx-ml-dictvectorizer"]], "DictVectorizer - 1 (ai.onnx.ml)": [[189, "dictvectorizer-1-ai-onnx-ml"]], "Tile": [[176, "tile"]], "Tile - 13": [[176, "tile-13"]], "Tile - 6": [[176, "tile-6"]], "Tile - 1": [[176, "tile-1"]], "Tan": [[172, "tan"]], "Tan - 7": [[172, "tan-7"]], "ai.onnx.ml - CategoryMapper": [[188, "ai-onnx-ml-categorymapper"]], "CategoryMapper - 1 (ai.onnx.ml)": [[188, "categorymapper-1-ai-onnx-ml"]], "ai.onnx.ml - SVMClassifier": [[197, "ai-onnx-ml-svmclassifier"]], "SVMClassifier - 1 (ai.onnx.ml)": [[197, "svmclassifier-1-ai-onnx-ml"]], "ai.onnx.ml - ZipMap": [[202, "ai-onnx-ml-zipmap"]], "ZipMap - 1 (ai.onnx.ml)": [[202, "zipmap-1-ai-onnx-ml"]], "ai.onnx.ml - LinearRegressor": [[194, "ai-onnx-ml-linearregressor"]], "LinearRegressor - 1 (ai.onnx.ml)": [[194, "linearregressor-1-ai-onnx-ml"]], "ai.onnx.ml - TreeEnsembleClassifier": [[200, "ai-onnx-ml-treeensembleclassifier"]], "TreeEnsembleClassifier - 3 (ai.onnx.ml)": [[200, "treeensembleclassifier-3-ai-onnx-ml"]], "TreeEnsembleClassifier - 1 (ai.onnx.ml)": [[200, "treeensembleclassifier-1-ai-onnx-ml"]], "Trilu": [[179, "trilu"]], "Trilu - 14": [[179, "trilu-14"]], "Sqrt": [[167, "sqrt"]], "Sqrt - 13": [[167, "sqrt-13"]], "Sqrt - 6": [[167, "sqrt-6"]], "Sqrt - 1": [[167, "sqrt-1"]], "ai.onnx.ml - Normalizer": [[195, "ai-onnx-ml-normalizer"]], "Normalizer - 1 (ai.onnx.ml)": [[195, "normalizer-1-ai-onnx-ml"]], "ai.onnx.ml - Binarizer": [[186, "ai-onnx-ml-binarizer"]], "Binarizer - 1 (ai.onnx.ml)": [[186, "binarizer-1-ai-onnx-ml"]], "Unique": [[180, "unique"]], "Unique - 11": [[180, "unique-11"]], "Sub": [[170, "sub"]], "Sub - 14": [[170, "sub-14"]], "Sub - 13": [[170, "sub-13"]], "Sub - 7": [[170, "sub-7"]], "Sub - 6": [[170, "sub-6"]], "Sub - 1": [[170, "sub-1"]], "Tanh": [[173, "tanh"]], "Tanh - 13": [[173, "tanh-13"]], "Tanh - 6": [[173, "tanh-6"]], "Tanh - 1": [[173, "tanh-1"]], "Introduction to ONNX": [[691, "introduction-to-onnx"]], "Where - 9 vs 16": [[669, "where-9-vs-16"]], "Converters": [[690, "converters"]], "What is a converting library?": [[690, "what-is-a-converting-library"]], "Opsets": [[690, "opsets"]], "Other API": [[690, "other-api"]], "A class Graph with a method add_node": [[690, "a-class-graph-with-a-method-add-node"]], "Operator as function": [[690, "operator-as-function"]], "Tricks learned from experience": [[690, "tricks-learned-from-experience"]], "Discrepancies": [[690, "discrepancies"]], "IsolationForest Trick": [[690, "isolationforest-trick"]], "Discretization": [[690, "discretization"]], "Contribute": [[690, "contribute"]], "Build": [[690, "build"]], "Build the markdown documentation": [[690, "build-the-markdown-documentation"]], "Update an existing operator": [[690, "update-an-existing-operator"]], "onnx.tools": [[686, "onnx-tools"]], "net_drawer": [[686, "net-drawer"]], "update_inputs_outputs_dims": [[686, "update-inputs-outputs-dims"]], "onnx.numpy_helper": [[681, "onnx-numpy-helper"]], "array": [[681, "array"]], "sequence": [[681, "sequence"]], "dictionary": [[681, "dictionary"]], "optional": [[681, "optional"]], "tools": [[681, "tools"], [677, "tools"]], "onnx.backend": [[671, "onnx-backend"]], "Backend": [[671, "backend"]], "BackendRep": [[671, "backendrep"]], "Device": [[671, "device"]], "DeviceType": [[671, "devicetype"]], "load_model_tests": [[671, "load-model-tests"]], "onnx.helper": [[677, "onnx-helper"]], "getter": [[677, "getter"], [677, "id1"]], "print": [[677, "print"], [677, "id3"]], "make function": [[677, "make-function"]], "type mappings": [[677, "type-mappings"]], "onnx.version_converter": [[688, "onnx-version-converter"]], "convert_version": [[688, "convert-version"]], "Upsample - 9 vs 10": [[668, "upsample-9-vs-10"]], "API Reference": [[679, "api-reference"]], "Versioning": [[679, "versioning"]], "Data Structures": [[679, "data-structures"]], "Functions": [[679, "functions"], [689, "functions"], [692, "functions"]], "onnx.parser": [[682, "onnx-parser"]], "parse_function": [[682, "parse-function"]], "parse_graph": [[682, "parse-graph"]], "parse_model": [[682, "parse-model"]], "Upsample - 7 vs 9": [[667, "upsample-7-vs-9"]], "Serialization": [[684, "serialization"], [692, "serialization"]], "Save a model and any Proto class": [[684, "save-a-model-and-any-proto-class"]], "Load a model": [[684, "load-a-model"]], "Load a Proto": [[684, "load-a-proto"]], "onnx.shape_inference": [[685, "onnx-shape-inference"]], "infer_shapes": [[685, "infer-shapes"]], "infer_shapes_path": [[685, "infer-shapes-path"]], "Xor - 1 vs 7": [[670, "xor-1-vs-7"]], "Unsqueeze - 1 vs 13": [[662, "unsqueeze-1-vs-13"]], "onnx.checker": [[672, "onnx-checker"]], "check_model": [[672, "check-model"]], "TreeEnsembleRegressor - 1 vs 3": [[659, "treeensembleregressor-1-vs-3"]], "onnx.hub": [[678, "onnx-hub"]], "ModelInfo": [[678, "modelinfo"]], "list_models": [[678, "list-models"]], "get_model_info": [[678, "get-model-info"]], "load": [[678, "load"]], "onnx.external_data_helper": [[676, "onnx-external-data-helper"]], "convert_model_from_external_data": [[676, "convert-model-from-external-data"]], "convert_model_to_external_data": [[676, "convert-model-to-external-data"]], "ExternalDataInfo": [[676, "externaldatainfo"]], "load_external_data_for_model": [[676, "load-external-data-for-model"]], "load_external_data_for_tensor": [[676, "load-external-data-for-tensor"]], "remove_external_data_field": [[676, "remove-external-data-field"]], "save_external_data": [[676, "save-external-data"]], "set_external_data": [[676, "set-external-data"]], "write_external_data_tensors": [[676, "write-external-data-tensors"]], "Transpose - 1 vs 13": [[657, "transpose-1-vs-13"]], "Unsqueeze - 11 vs 13": [[660, "unsqueeze-11-vs-13"]], "Upsample - 1 vs 10": [[663, "upsample-1-vs-10"]], "onnx.mapping": [[680, "onnx-mapping"]], "TensorDtypeMap": [[680, "tensordtypemap"]], "TENSOR_TYPE_MAP": [[680, "tensor-type-map"]], "Opset Version": [[680, "opset-version"], [675, "opset-version"]], "Operators and Functions Schemas": [[680, "operators-and-functions-schemas"], [675, "operators-and-functions-schemas"]], "Internal module": [[680, "internal-module"]], "Upsample - 1 vs 9": [[665, "upsample-1-vs-9"]], "Unsqueeze - 1 vs 11": [[661, "unsqueeze-1-vs-11"]], "onnx.compose": [[674, "onnx-compose"]], "merge_graphs": [[674, "merge-graphs"]], "merge_models": [[674, "merge-models"]], "prefix": [[674, "prefix"]], "dimension": [[674, "dimension"]], "TopK - 1 vs 11": [[656, "topk-1-vs-11"]], "Upsample - 7 vs 10": [[666, "upsample-7-vs-10"]], "Protos": [[673, "protos"]], "AttributeProto": [[673, "attributeproto"]], "FunctionProto": [[673, "functionproto"]], "GraphProto": [[673, "graphproto"]], "MapProto": [[673, "mapproto"]], "ModelProto": [[673, "modelproto"]], "NodeProto": [[673, "nodeproto"]], "OperatorProto": [[673, "operatorproto"]], "OperatorSetIdProto": [[673, "operatorsetidproto"]], "OperatorSetProto": [[673, "operatorsetproto"]], "OptionalProto": [[673, "optionalproto"]], "SequenceProto": [[673, "sequenceproto"]], "SparseTensorProto": [[673, "sparsetensorproto"]], "StringStringEntryProto": [[673, "stringstringentryproto"]], "TensorProto": [[673, "tensorproto"]], "TensorShapeProto": [[673, "tensorshapeproto"]], "TrainingInfoProto": [[673, "traininginfoproto"]], "TypeProto": [[673, "typeproto"]], "ValueInfoProto": [[673, "valueinfoproto"]], "ONNX Concepts": [[689, "onnx-concepts"]], "Input, Output, Node, Initializer, Attributes": [[689, "input-output-node-initializer-attributes"]], "Serialization with protobuf": [[689, "serialization-with-protobuf"]], "Metadata": [[689, "metadata"]], "List of available operators and domains": [[689, "list-of-available-operators-and-domains"]], "Supported Types": [[689, "supported-types"]], "Element Type": [[689, "element-type"]], "Sparse Tensor": [[689, "sparse-tensor"]], "Other types": [[689, "other-types"]], "What is an opset version?": [[689, "what-is-an-opset-version"]], "Subgraphs, tests and loops": [[689, "subgraphs-tests-and-loops"]], "Extensibility": [[689, "extensibility"]], "Shape (and Type) Inference": [[689, "shape-and-type-inference"]], "Tools": [[689, "tools"]], "onnx.utils": [[687, "onnx-utils"]], "Extractor": [[687, "extractor"]], "extract_model": [[687, "extract-model"]], "Upsample - 1 vs 7": [[664, "upsample-1-vs-7"]], "ONNX with Python": [[692, "onnx-with-python"]], "A simple example: a linear regression": [[692, "a-simple-example-a-linear-regression"]], "Model Serialization": [[692, "model-serialization"]], "Data Serialization": [[692, "data-serialization"]], "Initializer, default value": [[692, "initializer-default-value"]], "Attributes": [[692, "attributes"]], "Opset and metadata": [[692, "opset-and-metadata"]], "Subgraph: test and loops": [[692, "subgraph-test-and-loops"]], "A function with no attribute": [[692, "a-function-with-no-attribute"]], "A function with attributes": [[692, "a-function-with-attributes"]], "Parsing": [[692, "parsing"]], "Checker and Shape Inference": [[692, "checker-and-shape-inference"]], "Implementation details": [[692, "implementation-details"]], "Python and C++": [[692, "python-and-c"]], "Attributes and inputs": [[692, "attributes-and-inputs"]], "Shape or no shape": [[692, "shape-or-no-shape"]], "onnx.defs": [[675, "onnx-defs"]], "class OpSchema": [[675, "class-opschema"]], "Exception SchemaError": [[675, "exception-schemaerror"]], "Constants": [[675, "constants"]], "onnx.printer": [[683, "onnx-printer"]], "to_text": [[683, "to-text"]], "TreeEnsembleClassifier - 1 vs 3": [[658, "treeensembleclassifier-1-vs-3"]]}, "indexentries": {"backend (class in onnx.backend.base)": [[671, "onnx.backend.base.Backend"]], "backendrep (class in onnx.backend.base)": [[671, "onnx.backend.base.BackendRep"]], "device (class in onnx.backend.base)": [[671, "onnx.backend.base.Device"]], "devicetype (class in onnx.backend.base)": [[671, "onnx.backend.base.DeviceType"]], "load_model_tests() (in module onnx.backend.test.loader)": [[671, "onnx.backend.test.loader.load_model_tests"]], "run_node() (onnx.backend.base.backend class method)": [[671, "onnx.backend.base.Backend.run_node"]], "supports_device() (onnx.backend.base.backend class method)": [[671, "onnx.backend.base.Backend.supports_device"]], "check_model() (in module onnx.checker)": [[672, "onnx.checker.check_model"]], "attributeproto (class in onnx)": [[673, "onnx.AttributeProto"]], "descriptor (onnx.attributeproto attribute)": [[673, "onnx.AttributeProto.DESCRIPTOR"]], "descriptor (onnx.functionproto attribute)": [[673, "onnx.FunctionProto.DESCRIPTOR"]], "descriptor (onnx.graphproto attribute)": [[673, "onnx.GraphProto.DESCRIPTOR"]], "descriptor (onnx.mapproto attribute)": [[673, "onnx.MapProto.DESCRIPTOR"]], "descriptor (onnx.modelproto attribute)": [[673, "onnx.ModelProto.DESCRIPTOR"]], "descriptor (onnx.nodeproto attribute)": [[673, "onnx.NodeProto.DESCRIPTOR"]], "descriptor (onnx.operatorproto attribute)": [[673, "onnx.OperatorProto.DESCRIPTOR"]], "descriptor (onnx.operatorsetidproto attribute)": [[673, "onnx.OperatorSetIdProto.DESCRIPTOR"]], "descriptor (onnx.operatorsetproto attribute)": [[673, "onnx.OperatorSetProto.DESCRIPTOR"]], "descriptor (onnx.optionalproto attribute)": [[673, "onnx.OptionalProto.DESCRIPTOR"]], "descriptor (onnx.sequenceproto attribute)": [[673, "onnx.SequenceProto.DESCRIPTOR"]], "descriptor (onnx.sparsetensorproto attribute)": [[673, "onnx.SparseTensorProto.DESCRIPTOR"]], "descriptor (onnx.stringstringentryproto attribute)": [[673, "onnx.StringStringEntryProto.DESCRIPTOR"]], "descriptor (onnx.tensorproto attribute)": [[673, "onnx.TensorProto.DESCRIPTOR"]], "descriptor (onnx.tensorproto.segment attribute)": [[673, "onnx.TensorProto.Segment.DESCRIPTOR"]], "descriptor (onnx.tensorshapeproto attribute)": [[673, "onnx.TensorShapeProto.DESCRIPTOR"]], "descriptor (onnx.tensorshapeproto.dimension attribute)": [[673, "onnx.TensorShapeProto.Dimension.DESCRIPTOR"]], "descriptor (onnx.traininginfoproto attribute)": [[673, "onnx.TrainingInfoProto.DESCRIPTOR"]], "descriptor (onnx.typeproto attribute)": [[673, "onnx.TypeProto.DESCRIPTOR"]], "descriptor (onnx.typeproto.map attribute)": [[673, "onnx.TypeProto.Map.DESCRIPTOR"]], "descriptor (onnx.typeproto.opaque attribute)": [[673, "onnx.TypeProto.Opaque.DESCRIPTOR"]], "descriptor (onnx.typeproto.optional attribute)": [[673, "onnx.TypeProto.Optional.DESCRIPTOR"]], "descriptor (onnx.typeproto.sequence attribute)": [[673, "onnx.TypeProto.Sequence.DESCRIPTOR"]], "descriptor (onnx.typeproto.sparsetensor attribute)": [[673, "onnx.TypeProto.SparseTensor.DESCRIPTOR"]], "descriptor (onnx.typeproto.tensor attribute)": [[673, "onnx.TypeProto.Tensor.DESCRIPTOR"]], "descriptor (onnx.valueinfoproto attribute)": [[673, "onnx.ValueInfoProto.DESCRIPTOR"]], "functionproto (class in onnx)": [[673, "onnx.FunctionProto"]], "graphproto (class in onnx)": [[673, "onnx.GraphProto"]], "mapproto (class in onnx)": [[673, "onnx.MapProto"]], "modelproto (class in onnx)": [[673, "onnx.ModelProto"], [684, "id0"], [684, "onnx.ModelProto"]], "nodeproto (class in onnx)": [[673, "onnx.NodeProto"]], "operatorproto (class in onnx)": [[673, "onnx.OperatorProto"]], "operatorsetidproto (class in onnx)": [[673, "onnx.OperatorSetIdProto"]], "operatorsetproto (class in onnx)": [[673, "onnx.OperatorSetProto"]], "optionalproto (class in onnx)": [[673, "onnx.OptionalProto"]], "sequenceproto (class in onnx)": [[673, "onnx.SequenceProto"]], "sparsetensorproto (class in onnx)": [[673, "onnx.SparseTensorProto"]], "stringstringentryproto (class in onnx)": [[673, "onnx.StringStringEntryProto"]], "tensorproto (class in onnx)": [[673, "onnx.TensorProto"]], "tensorproto.segment (class in onnx)": [[673, "onnx.TensorProto.Segment"]], "tensorshapeproto (class in onnx)": [[673, "onnx.TensorShapeProto"]], "tensorshapeproto.dimension (class in onnx)": [[673, "onnx.TensorShapeProto.Dimension"]], "traininginfoproto (class in onnx)": [[673, "onnx.TrainingInfoProto"]], "typeproto (class in onnx)": [[673, "onnx.TypeProto"]], "typeproto.map (class in onnx)": [[673, "onnx.TypeProto.Map"]], "typeproto.opaque (class in onnx)": [[673, "onnx.TypeProto.Opaque"]], "typeproto.optional (class in onnx)": [[673, "onnx.TypeProto.Optional"]], "typeproto.sequence (class in onnx)": [[673, "onnx.TypeProto.Sequence"]], "typeproto.sparsetensor (class in onnx)": [[673, "onnx.TypeProto.SparseTensor"]], "typeproto.tensor (class in onnx)": [[673, "onnx.TypeProto.Tensor"]], "valueinfoproto (class in onnx)": [[673, "onnx.ValueInfoProto"]], "algorithm (onnx.traininginfoproto attribute)": [[673, "onnx.TrainingInfoProto.algorithm"]], "attribute (onnx.functionproto attribute)": [[673, "onnx.FunctionProto.attribute"]], "attribute (onnx.nodeproto attribute)": [[673, "onnx.NodeProto.attribute"]], "begin (onnx.tensorproto.segment attribute)": [[673, "onnx.TensorProto.Segment.begin"]], "data_location (onnx.tensorproto attribute)": [[673, "onnx.TensorProto.data_location"]], "data_type (onnx.tensorproto attribute)": [[673, "onnx.TensorProto.data_type"]], "denotation (onnx.tensorshapeproto.dimension attribute)": [[673, "onnx.TensorShapeProto.Dimension.denotation"]], "denotation (onnx.typeproto attribute)": [[673, "onnx.TypeProto.denotation"]], "dim (onnx.tensorshapeproto attribute)": [[673, "onnx.TensorShapeProto.dim"]], "dim_param (onnx.tensorshapeproto.dimension attribute)": [[673, "onnx.TensorShapeProto.Dimension.dim_param"]], "dim_value (onnx.tensorshapeproto.dimension attribute)": [[673, "onnx.TensorShapeProto.Dimension.dim_value"]], "dims (onnx.sparsetensorproto attribute)": [[673, "onnx.SparseTensorProto.dims"]], "dims (onnx.tensorproto attribute)": [[673, "onnx.TensorProto.dims"]], "doc_string (onnx.attributeproto attribute)": [[673, "onnx.AttributeProto.doc_string"]], "doc_string (onnx.functionproto attribute)": [[673, "onnx.FunctionProto.doc_string"]], "doc_string (onnx.graphproto attribute)": [[673, "onnx.GraphProto.doc_string"]], "doc_string (onnx.modelproto attribute)": [[673, "onnx.ModelProto.doc_string"]], "doc_string (onnx.nodeproto attribute)": [[673, "onnx.NodeProto.doc_string"]], "doc_string (onnx.operatorproto attribute)": [[673, "onnx.OperatorProto.doc_string"]], "doc_string (onnx.operatorsetproto attribute)": [[673, "onnx.OperatorSetProto.doc_string"]], "doc_string (onnx.tensorproto attribute)": [[673, "onnx.TensorProto.doc_string"]], "doc_string (onnx.valueinfoproto attribute)": [[673, "onnx.ValueInfoProto.doc_string"]], "domain (onnx.functionproto attribute)": [[673, "onnx.FunctionProto.domain"]], "domain (onnx.modelproto attribute)": [[673, "onnx.ModelProto.domain"]], "domain (onnx.nodeproto attribute)": [[673, "onnx.NodeProto.domain"]], "domain (onnx.operatorsetidproto attribute)": [[673, "onnx.OperatorSetIdProto.domain"]], "domain (onnx.operatorsetproto attribute)": [[673, "onnx.OperatorSetProto.domain"]], "domain (onnx.typeproto.opaque attribute)": [[673, "onnx.TypeProto.Opaque.domain"]], "double_data (onnx.tensorproto attribute)": [[673, "onnx.TensorProto.double_data"]], "elem_type (onnx.optionalproto attribute)": [[673, "onnx.OptionalProto.elem_type"]], "elem_type (onnx.sequenceproto attribute)": [[673, "onnx.SequenceProto.elem_type"]], "elem_type (onnx.typeproto.optional attribute)": [[673, "onnx.TypeProto.Optional.elem_type"]], "elem_type (onnx.typeproto.sequence attribute)": [[673, "onnx.TypeProto.Sequence.elem_type"]], "elem_type (onnx.typeproto.sparsetensor attribute)": [[673, "onnx.TypeProto.SparseTensor.elem_type"]], "elem_type (onnx.typeproto.tensor attribute)": [[673, "onnx.TypeProto.Tensor.elem_type"]], "end (onnx.tensorproto.segment attribute)": [[673, "onnx.TensorProto.Segment.end"]], "external_data (onnx.tensorproto attribute)": [[673, "onnx.TensorProto.external_data"]], "f (onnx.attributeproto attribute)": [[673, "onnx.AttributeProto.f"]], "float_data (onnx.tensorproto attribute)": [[673, "onnx.TensorProto.float_data"]], "floats (onnx.attributeproto attribute)": [[673, "onnx.AttributeProto.floats"]], "functions (onnx.modelproto attribute)": [[673, "onnx.ModelProto.functions"]], "functions (onnx.operatorsetproto attribute)": [[673, "onnx.OperatorSetProto.functions"]], "g (onnx.attributeproto attribute)": [[673, "onnx.AttributeProto.g"]], "graph (onnx.modelproto attribute)": [[673, "onnx.ModelProto.graph"]], "graphs (onnx.attributeproto attribute)": [[673, "onnx.AttributeProto.graphs"]], "i (onnx.attributeproto attribute)": [[673, "onnx.AttributeProto.i"]], "indices (onnx.sparsetensorproto attribute)": [[673, "onnx.SparseTensorProto.indices"]], "initialization (onnx.traininginfoproto attribute)": [[673, "onnx.TrainingInfoProto.initialization"]], "initialization_binding (onnx.traininginfoproto attribute)": [[673, "onnx.TrainingInfoProto.initialization_binding"]], "initializer (onnx.graphproto attribute)": [[673, "onnx.GraphProto.initializer"]], "input (onnx.functionproto attribute)": [[673, "onnx.FunctionProto.input"]], "input (onnx.graphproto attribute)": [[673, "onnx.GraphProto.input"]], "input (onnx.nodeproto attribute)": [[673, "onnx.NodeProto.input"]], "int32_data (onnx.tensorproto attribute)": [[673, "onnx.TensorProto.int32_data"]], "int64_data (onnx.tensorproto attribute)": [[673, "onnx.TensorProto.int64_data"]], "ints (onnx.attributeproto attribute)": [[673, "onnx.AttributeProto.ints"]], "ir_build_metadata (onnx.operatorsetproto attribute)": [[673, "onnx.OperatorSetProto.ir_build_metadata"]], "ir_version (onnx.modelproto attribute)": [[673, "onnx.ModelProto.ir_version"]], "ir_version (onnx.operatorsetproto attribute)": [[673, "onnx.OperatorSetProto.ir_version"]], "ir_version_prerelease (onnx.operatorsetproto attribute)": [[673, "onnx.OperatorSetProto.ir_version_prerelease"]], "key (onnx.stringstringentryproto attribute)": [[673, "onnx.StringStringEntryProto.key"]], "key_type (onnx.mapproto attribute)": [[673, "onnx.MapProto.key_type"]], "key_type (onnx.typeproto.map attribute)": [[673, "onnx.TypeProto.Map.key_type"]], "keys (onnx.mapproto attribute)": [[673, "onnx.MapProto.keys"]], "magic (onnx.operatorsetproto attribute)": [[673, "onnx.OperatorSetProto.magic"]], "map_type (onnx.typeproto attribute)": [[673, "onnx.TypeProto.map_type"]], "map_value (onnx.optionalproto attribute)": [[673, "onnx.OptionalProto.map_value"]], "map_values (onnx.sequenceproto attribute)": [[673, "onnx.SequenceProto.map_values"]], "metadata_props (onnx.modelproto attribute)": [[673, "onnx.ModelProto.metadata_props"]], "model_version (onnx.modelproto attribute)": [[673, "onnx.ModelProto.model_version"]], "name (onnx.attributeproto attribute)": [[673, "onnx.AttributeProto.name"]], "name (onnx.functionproto attribute)": [[673, "onnx.FunctionProto.name"]], "name (onnx.graphproto attribute)": [[673, "onnx.GraphProto.name"]], "name (onnx.mapproto attribute)": [[673, "onnx.MapProto.name"]], "name (onnx.nodeproto attribute)": [[673, "onnx.NodeProto.name"]], "name (onnx.optionalproto attribute)": [[673, "onnx.OptionalProto.name"]], "name (onnx.sequenceproto attribute)": [[673, "onnx.SequenceProto.name"]], "name (onnx.tensorproto attribute)": [[673, "onnx.TensorProto.name"]], "name (onnx.typeproto.opaque attribute)": [[673, "onnx.TypeProto.Opaque.name"]], "name (onnx.valueinfoproto attribute)": [[673, "onnx.ValueInfoProto.name"]], "node (onnx.functionproto attribute)": [[673, "onnx.FunctionProto.node"]], "node (onnx.graphproto attribute)": [[673, "onnx.GraphProto.node"]], "op_type (onnx.nodeproto attribute)": [[673, "onnx.NodeProto.op_type"]], "op_type (onnx.operatorproto attribute)": [[673, "onnx.OperatorProto.op_type"]], "opaque_type (onnx.typeproto attribute)": [[673, "onnx.TypeProto.opaque_type"]], "operator (onnx.operatorsetproto attribute)": [[673, "onnx.OperatorSetProto.operator"]], "opset_import (onnx.functionproto attribute)": [[673, "onnx.FunctionProto.opset_import"]], "opset_import (onnx.modelproto attribute)": [[673, "onnx.ModelProto.opset_import"]], "opset_version (onnx.operatorsetproto attribute)": [[673, "onnx.OperatorSetProto.opset_version"]], "optional_type (onnx.typeproto attribute)": [[673, "onnx.TypeProto.optional_type"]], "optional_value (onnx.optionalproto attribute)": [[673, "onnx.OptionalProto.optional_value"]], "optional_values (onnx.sequenceproto attribute)": [[673, "onnx.SequenceProto.optional_values"]], "output (onnx.functionproto attribute)": [[673, "onnx.FunctionProto.output"]], "output (onnx.graphproto attribute)": [[673, "onnx.GraphProto.output"]], "output (onnx.nodeproto attribute)": [[673, "onnx.NodeProto.output"]], "producer_name (onnx.modelproto attribute)": [[673, "onnx.ModelProto.producer_name"]], "producer_version (onnx.modelproto attribute)": [[673, "onnx.ModelProto.producer_version"]], "quantization_annotation (onnx.graphproto attribute)": [[673, "onnx.GraphProto.quantization_annotation"]], "raw_data (onnx.tensorproto attribute)": [[673, "onnx.TensorProto.raw_data"]], "ref_attr_name (onnx.attributeproto attribute)": [[673, "onnx.AttributeProto.ref_attr_name"]], "s (onnx.attributeproto attribute)": [[673, "onnx.AttributeProto.s"]], "segment (onnx.tensorproto attribute)": [[673, "onnx.TensorProto.segment"]], "sequence_type (onnx.typeproto attribute)": [[673, "onnx.TypeProto.sequence_type"]], "sequence_value (onnx.optionalproto attribute)": [[673, "onnx.OptionalProto.sequence_value"]], "sequence_values (onnx.sequenceproto attribute)": [[673, "onnx.SequenceProto.sequence_values"]], "shape (onnx.typeproto.sparsetensor attribute)": [[673, "onnx.TypeProto.SparseTensor.shape"]], "shape (onnx.typeproto.tensor attribute)": [[673, "onnx.TypeProto.Tensor.shape"]], "since_version (onnx.operatorproto attribute)": [[673, "onnx.OperatorProto.since_version"]], "sparse_initializer (onnx.graphproto attribute)": [[673, "onnx.GraphProto.sparse_initializer"]], "sparse_tensor (onnx.attributeproto attribute)": [[673, "onnx.AttributeProto.sparse_tensor"]], "sparse_tensor_type (onnx.typeproto attribute)": [[673, "onnx.TypeProto.sparse_tensor_type"]], "sparse_tensor_value (onnx.optionalproto attribute)": [[673, "onnx.OptionalProto.sparse_tensor_value"]], "sparse_tensor_values (onnx.sequenceproto attribute)": [[673, "onnx.SequenceProto.sparse_tensor_values"]], "sparse_tensors (onnx.attributeproto attribute)": [[673, "onnx.AttributeProto.sparse_tensors"]], "status (onnx.operatorproto attribute)": [[673, "onnx.OperatorProto.status"]], "string_data (onnx.tensorproto attribute)": [[673, "onnx.TensorProto.string_data"]], "string_keys (onnx.mapproto attribute)": [[673, "onnx.MapProto.string_keys"]], "strings (onnx.attributeproto attribute)": [[673, "onnx.AttributeProto.strings"]], "t (onnx.attributeproto attribute)": [[673, "onnx.AttributeProto.t"]], "tensor_type (onnx.typeproto attribute)": [[673, "onnx.TypeProto.tensor_type"]], "tensor_value (onnx.optionalproto attribute)": [[673, "onnx.OptionalProto.tensor_value"]], "tensor_values (onnx.sequenceproto attribute)": [[673, "onnx.SequenceProto.tensor_values"]], "tensors (onnx.attributeproto attribute)": [[673, "onnx.AttributeProto.tensors"]], "tp (onnx.attributeproto attribute)": [[673, "onnx.AttributeProto.tp"]], "training_info (onnx.modelproto attribute)": [[673, "onnx.ModelProto.training_info"]], "type (onnx.attributeproto attribute)": [[673, "onnx.AttributeProto.type"]], "type (onnx.valueinfoproto attribute)": [[673, "onnx.ValueInfoProto.type"]], "type_protos (onnx.attributeproto attribute)": [[673, "onnx.AttributeProto.type_protos"]], "uint64_data (onnx.tensorproto attribute)": [[673, "onnx.TensorProto.uint64_data"]], "update_binding (onnx.traininginfoproto attribute)": [[673, "onnx.TrainingInfoProto.update_binding"]], "value (onnx.stringstringentryproto attribute)": [[673, "onnx.StringStringEntryProto.value"]], "value_info (onnx.graphproto attribute)": [[673, "onnx.GraphProto.value_info"]], "value_type (onnx.typeproto.map attribute)": [[673, "onnx.TypeProto.Map.value_type"]], "values (onnx.mapproto attribute)": [[673, "onnx.MapProto.values"]], "values (onnx.sparsetensorproto attribute)": [[673, "onnx.SparseTensorProto.values"]], "version (onnx.operatorsetidproto attribute)": [[673, "onnx.OperatorSetIdProto.version"]], "add_prefix() (in module onnx.compose)": [[674, "onnx.compose.add_prefix"]], "add_prefix_graph() (in module onnx.compose)": [[674, "onnx.compose.add_prefix_graph"]], "expand_out_dim() (in module onnx.compose)": [[674, "onnx.compose.expand_out_dim"]], "expand_out_dim_graph() (in module onnx.compose)": [[674, "onnx.compose.expand_out_dim_graph"]], "merge_graphs() (in module onnx.compose)": [[674, "onnx.compose.merge_graphs"]], "merge_models() (in module onnx.compose)": [[674, "onnx.compose.merge_models"]], "opschema (class in onnx.defs)": [[675, "onnx.defs.OpSchema"]], "opschema.attrtype (class in onnx.defs)": [[675, "onnx.defs.OpSchema.AttrType"]], "opschema.differentiationcategory (class in onnx.defs)": [[675, "onnx.defs.OpSchema.DifferentiationCategory"]], "opschema.formalparameteroption (class in onnx.defs)": [[675, "onnx.defs.OpSchema.FormalParameterOption"]], "opschema.supporttype (class in onnx.defs)": [[675, "onnx.defs.OpSchema.SupportType"]], "schemaerror (class in onnx.defs)": [[675, "onnx.defs.SchemaError"]], "get_all_schemas_with_history() (in module onnx.defs)": [[675, "onnx.defs.get_all_schemas_with_history"], [680, "onnx.defs.get_all_schemas_with_history"]], "get_context_dependent_function() (onnx.defs.opschema method)": [[675, "onnx.defs.OpSchema.get_context_dependent_function"]], "get_function_ops() (in module onnx.defs)": [[675, "onnx.defs.get_function_ops"], [680, "onnx.defs.get_function_ops"]], "get_schema() (in module onnx.defs)": [[675, "onnx.defs.get_schema"], [680, "onnx.defs.get_schema"]], "is_infinite() (onnx.defs.opschema static method)": [[675, "onnx.defs.OpSchema.is_infinite"]], "name (onnx.defs.opschema.attrtype property)": [[675, "onnx.defs.OpSchema.AttrType.name"]], "name (onnx.defs.opschema.differentiationcategory property)": [[675, "onnx.defs.OpSchema.DifferentiationCategory.name"]], "name (onnx.defs.opschema.formalparameteroption property)": [[675, "onnx.defs.OpSchema.FormalParameterOption.name"]], "name (onnx.defs.opschema.supporttype property)": [[675, "onnx.defs.OpSchema.SupportType.name"]], "onnx_opset_version() (in module onnx.defs)": [[675, "onnx.defs.onnx_opset_version"], [680, "onnx.defs.onnx_opset_version"]], "externaldatainfo (class in onnx.external_data_helper)": [[676, "onnx.external_data_helper.ExternalDataInfo"]], "convert_model_from_external_data() (in module onnx.external_data_helper)": [[676, "onnx.external_data_helper.convert_model_from_external_data"]], "convert_model_to_external_data() (in module onnx.external_data_helper)": [[676, "onnx.external_data_helper.convert_model_to_external_data"]], "load_external_data_for_model() (in module onnx.external_data_helper)": [[676, "onnx.external_data_helper.load_external_data_for_model"]], "load_external_data_for_tensor() (in module onnx.external_data_helper)": [[676, "onnx.external_data_helper.load_external_data_for_tensor"]], "remove_external_data_field() (in module onnx.external_data_helper)": [[676, "onnx.external_data_helper.remove_external_data_field"]], "save_external_data() (in module onnx.external_data_helper)": [[676, "onnx.external_data_helper.save_external_data"]], "set_external_data() (in module onnx.external_data_helper)": [[676, "onnx.external_data_helper.set_external_data"]], "write_external_data_tensors() (in module onnx.external_data_helper)": [[676, "onnx.external_data_helper.write_external_data_tensors"]], "find_min_ir_version_for() (in module onnx.helper)": [[677, "onnx.helper.find_min_ir_version_for"]], "get_all_tensor_dtypes() (in module onnx.helper)": [[677, "onnx.helper.get_all_tensor_dtypes"]], "get_attribute_value() (in module onnx.helper)": [[677, "id2"], [677, "onnx.helper.get_attribute_value"]], "make_attribute() (in module onnx.helper)": [[677, "onnx.helper.make_attribute"]], "make_empty_tensor_value_info() (in module onnx.helper)": [[677, "onnx.helper.make_empty_tensor_value_info"]], "make_function() (in module onnx.helper)": [[677, "onnx.helper.make_function"]], "make_graph() (in module onnx.helper)": [[677, "onnx.helper.make_graph"]], "make_map() (in module onnx.helper)": [[677, "onnx.helper.make_map"]], "make_model() (in module onnx.helper)": [[677, "onnx.helper.make_model"]], "make_node() (in module onnx.helper)": [[677, "onnx.helper.make_node"]], "make_operatorsetid() (in module onnx.helper)": [[677, "onnx.helper.make_operatorsetid"]], "make_opsetid() (in module onnx.helper)": [[677, "onnx.helper.make_opsetid"]], "make_optional() (in module onnx.helper)": [[677, "onnx.helper.make_optional"]], "make_optional_type_proto() (in module onnx.helper)": [[677, "onnx.helper.make_optional_type_proto"]], "make_sequence() (in module onnx.helper)": [[677, "onnx.helper.make_sequence"]], "make_sequence_type_proto() (in module onnx.helper)": [[677, "onnx.helper.make_sequence_type_proto"]], "make_sparse_tensor() (in module onnx.helper)": [[677, "onnx.helper.make_sparse_tensor"]], "make_sparse_tensor_type_proto() (in module onnx.helper)": [[677, "onnx.helper.make_sparse_tensor_type_proto"]], "make_sparse_tensor_value_info() (in module onnx.helper)": [[677, "onnx.helper.make_sparse_tensor_value_info"]], "make_tensor() (in module onnx.helper)": [[677, "onnx.helper.make_tensor"]], "make_tensor_sequence_value_info() (in module onnx.helper)": [[677, "onnx.helper.make_tensor_sequence_value_info"]], "make_tensor_type_proto() (in module onnx.helper)": [[677, "id0"], [677, "onnx.helper.make_tensor_type_proto"]], "make_tensor_value_info() (in module onnx.helper)": [[677, "onnx.helper.make_tensor_value_info"]], "make_training_info() (in module onnx.helper)": [[677, "onnx.helper.make_training_info"]], "make_value_info() (in module onnx.helper)": [[677, "onnx.helper.make_value_info"]], "np_dtype_to_tensor_dtype() (in module onnx.helper)": [[677, "onnx.helper.np_dtype_to_tensor_dtype"]], "printable_attribute() (in module onnx.helper)": [[677, "id4"], [677, "onnx.helper.printable_attribute"]], "printable_dim() (in module onnx.helper)": [[677, "id5"], [677, "onnx.helper.printable_dim"]], "printable_graph() (in module onnx.helper)": [[677, "id6"], [677, "onnx.helper.printable_graph"]], "printable_node() (in module onnx.helper)": [[677, "id7"], [677, "onnx.helper.printable_node"]], "printable_tensor_proto() (in module onnx.helper)": [[677, "id8"], [677, "onnx.helper.printable_tensor_proto"]], "printable_type() (in module onnx.helper)": [[677, "id9"], [677, "onnx.helper.printable_type"]], "printable_value_info() (in module onnx.helper)": [[677, "id10"], [677, "onnx.helper.printable_value_info"]], "split_complex_to_pairs() (in module onnx.helper)": [[677, "onnx.helper.split_complex_to_pairs"]], "tensor_dtype_to_field() (in module onnx.helper)": [[677, "onnx.helper.tensor_dtype_to_field"]], "tensor_dtype_to_np_dtype() (in module onnx.helper)": [[677, "onnx.helper.tensor_dtype_to_np_dtype"]], "tensor_dtype_to_storage_tensor_dtype() (in module onnx.helper)": [[677, "onnx.helper.tensor_dtype_to_storage_tensor_dtype"]], "tensor_dtype_to_string() (in module onnx.helper)": [[677, "onnx.helper.tensor_dtype_to_string"]], "modelinfo (class in onnx.hub)": [[678, "onnx.hub.ModelInfo"]], "get_model_info() (in module onnx.hub)": [[678, "onnx.hub.get_model_info"]], "list_models() (in module onnx.hub)": [[678, "onnx.hub.list_models"]], "load() (in module onnx.hub)": [[678, "onnx.hub.load"]], "metadata (onnx.hub.modelinfo attribute)": [[678, "onnx.hub.ModelInfo.metadata"]], "model (onnx.hub.modelinfo attribute)": [[678, "onnx.hub.ModelInfo.model"]], "model_path (onnx.hub.modelinfo attribute)": [[678, "onnx.hub.ModelInfo.model_path"]], "model_sha (onnx.hub.modelinfo attribute)": [[678, "onnx.hub.ModelInfo.model_sha"]], "opset (onnx.hub.modelinfo attribute)": [[678, "onnx.hub.ModelInfo.opset"]], "tags (onnx.hub.modelinfo attribute)": [[678, "onnx.hub.ModelInfo.tags"]], "opschema (class in onnx.onnx_cpp2py_export.defs)": [[680, "onnx.onnx_cpp2py_export.defs.OpSchema"]], "opschema.attrtype (class in onnx.onnx_cpp2py_export.defs)": [[680, "onnx.onnx_cpp2py_export.defs.OpSchema.AttrType"]], "opschema.differentiationcategory (class in onnx.onnx_cpp2py_export.defs)": [[680, "onnx.onnx_cpp2py_export.defs.OpSchema.DifferentiationCategory"]], "opschema.formalparameteroption (class in onnx.onnx_cpp2py_export.defs)": [[680, "onnx.onnx_cpp2py_export.defs.OpSchema.FormalParameterOption"]], "opschema.supporttype (class in onnx.onnx_cpp2py_export.defs)": [[680, "onnx.onnx_cpp2py_export.defs.OpSchema.SupportType"]], "schemaerror": [[680, "onnx.onnx_cpp2py_export.defs.SchemaError"]], "tensordtypemap (class in onnx.mapping)": [[680, "onnx.mapping.TensorDtypeMap"]], "get_all_schemas() (in module onnx.onnx_cpp2py_export.defs)": [[680, "onnx.onnx_cpp2py_export.defs.get_all_schemas"]], "get_all_schemas_with_history() (in module onnx.onnx_cpp2py_export.defs)": [[680, "onnx.onnx_cpp2py_export.defs.get_all_schemas_with_history"]], "get_context_dependent_function() (onnx.onnx_cpp2py_export.defs.opschema method)": [[680, "onnx.onnx_cpp2py_export.defs.OpSchema.get_context_dependent_function"]], "get_schema() (in module onnx.onnx_cpp2py_export.defs)": [[680, "onnx.onnx_cpp2py_export.defs.get_schema"]], "has_schema() (in module onnx.onnx_cpp2py_export.defs)": [[680, "onnx.onnx_cpp2py_export.defs.has_schema"]], "is_infinite() (onnx.onnx_cpp2py_export.defs.opschema static method)": [[680, "onnx.onnx_cpp2py_export.defs.OpSchema.is_infinite"]], "module": [[680, "module-onnx.onnx_cpp2py_export.defs"]], "name (onnx.onnx_cpp2py_export.defs.opschema.attrtype property)": [[680, "onnx.onnx_cpp2py_export.defs.OpSchema.AttrType.name"]], "name (onnx.onnx_cpp2py_export.defs.opschema.differentiationcategory property)": [[680, "onnx.onnx_cpp2py_export.defs.OpSchema.DifferentiationCategory.name"]], "name (onnx.onnx_cpp2py_export.defs.opschema.formalparameteroption property)": [[680, "onnx.onnx_cpp2py_export.defs.OpSchema.FormalParameterOption.name"]], "name (onnx.onnx_cpp2py_export.defs.opschema.supporttype property)": [[680, "onnx.onnx_cpp2py_export.defs.OpSchema.SupportType.name"]], "onnx.onnx_cpp2py_export.defs": [[680, "module-onnx.onnx_cpp2py_export.defs"]], "schema_version_map() (in module onnx.onnx_cpp2py_export.defs)": [[680, "onnx.onnx_cpp2py_export.defs.schema_version_map"]], "combine_pairs_to_complex() (in module onnx.numpy_helper)": [[681, "onnx.numpy_helper.combine_pairs_to_complex"]], "convert_endian() (in module onnx.numpy_helper)": [[681, "onnx.numpy_helper.convert_endian"]], "from_array() (in module onnx.numpy_helper)": [[681, "onnx.numpy_helper.from_array"]], "from_dict() (in module onnx.numpy_helper)": [[681, "onnx.numpy_helper.from_dict"]], "from_list() (in module onnx.numpy_helper)": [[681, "onnx.numpy_helper.from_list"]], "from_optional() (in module onnx.numpy_helper)": [[681, "onnx.numpy_helper.from_optional"]], "to_array() (in module onnx.numpy_helper)": [[681, "onnx.numpy_helper.to_array"]], "to_dict() (in module onnx.numpy_helper)": [[681, "onnx.numpy_helper.to_dict"]], "to_list() (in module onnx.numpy_helper)": [[681, "onnx.numpy_helper.to_list"]], "to_optional() (in module onnx.numpy_helper)": [[681, "onnx.numpy_helper.to_optional"]], "parse_function() (in module onnx.parser)": [[682, "onnx.parser.parse_function"]], "parse_graph() (in module onnx.parser)": [[682, "onnx.parser.parse_graph"]], "parse_model() (in module onnx.parser)": [[682, "onnx.parser.parse_model"]], "to_text() (in module onnx.printer)": [[683, "onnx.printer.to_text"]], "parsefromstring() (onnx.modelproto method)": [[684, "onnx.ModelProto.ParseFromString"]], "serializetostring() (onnx.modelproto method)": [[684, "onnx.ModelProto.SerializeToString"]], "load() (in module onnx)": [[684, "onnx.load"]], "load_model_from_string() (in module onnx)": [[684, "onnx.load_model_from_string"]], "load_tensor_from_string() (in module onnx)": [[684, "onnx.load_tensor_from_string"]], "infer_shapes() (in module onnx.shape_inference)": [[685, "onnx.shape_inference.infer_shapes"]], "infer_shapes_path() (in module onnx.shape_inference)": [[685, "onnx.shape_inference.infer_shapes_path"]], "getopnodeproducer() (in module onnx.tools.net_drawer)": [[686, "onnx.tools.net_drawer.GetOpNodeProducer"]], "getpydotgraph() (in module onnx.tools.net_drawer)": [[686, "onnx.tools.net_drawer.GetPydotGraph"]], "update_inputs_outputs_dims() (in module onnx.tools.update_model_dims)": [[686, "onnx.tools.update_model_dims.update_inputs_outputs_dims"]], "extractor (class in onnx.utils)": [[687, "onnx.utils.Extractor"]], "extract_model() (in module onnx.utils)": [[687, "onnx.utils.extract_model"]], "convert_version() (in module onnx.version_converter)": [[688, "onnx.version_converter.convert_version"]], "onnx graph": [[689, "index-0"]], "ref_attr_name": [[692, "index-0"]]}})