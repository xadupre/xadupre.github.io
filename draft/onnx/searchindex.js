Search.setIndex({"docnames": ["expect", "index", "onnx_doc_folder/index", "onnx_doc_folder/onnx__Abs", "onnx_doc_folder/onnx__Acos", "onnx_doc_folder/onnx__Acosh", "onnx_doc_folder/onnx__Add", "onnx_doc_folder/onnx__And", "onnx_doc_folder/onnx__ArgMax", "onnx_doc_folder/onnx__ArgMin", "onnx_doc_folder/onnx__Asin", "onnx_doc_folder/onnx__Asinh", "onnx_doc_folder/onnx__Atan", "onnx_doc_folder/onnx__Atanh", "onnx_doc_folder/onnx__AveragePool", "onnx_doc_folder/onnx__BatchNormalization", "onnx_doc_folder/onnx__Bernoulli", "onnx_doc_folder/onnx__BitShift", "onnx_doc_folder/onnx__BlackmanWindow", "onnx_doc_folder/onnx__Cast", "onnx_doc_folder/onnx__CastLike", "onnx_doc_folder/onnx__Ceil", "onnx_doc_folder/onnx__Celu", "onnx_doc_folder/onnx__CenterCropPad", "onnx_doc_folder/onnx__Clip", "onnx_doc_folder/onnx__Col2Im", "onnx_doc_folder/onnx__Compress", "onnx_doc_folder/onnx__Concat", "onnx_doc_folder/onnx__ConcatFromSequence", "onnx_doc_folder/onnx__Constant", "onnx_doc_folder/onnx__ConstantOfShape", "onnx_doc_folder/onnx__Conv", "onnx_doc_folder/onnx__ConvInteger", "onnx_doc_folder/onnx__ConvTranspose", "onnx_doc_folder/onnx__Cos", "onnx_doc_folder/onnx__Cosh", "onnx_doc_folder/onnx__CumSum", "onnx_doc_folder/onnx__DFT", "onnx_doc_folder/onnx__DepthToSpace", "onnx_doc_folder/onnx__DequantizeLinear", "onnx_doc_folder/onnx__Det", "onnx_doc_folder/onnx__Div", "onnx_doc_folder/onnx__Dropout", "onnx_doc_folder/onnx__DynamicQuantizeLinear", "onnx_doc_folder/onnx__Einsum", "onnx_doc_folder/onnx__Elu", "onnx_doc_folder/onnx__Equal", "onnx_doc_folder/onnx__Erf", "onnx_doc_folder/onnx__Exp", "onnx_doc_folder/onnx__Expand", "onnx_doc_folder/onnx__EyeLike", "onnx_doc_folder/onnx__Flatten", "onnx_doc_folder/onnx__Floor", "onnx_doc_folder/onnx__GRU", "onnx_doc_folder/onnx__Gather", "onnx_doc_folder/onnx__GatherElements", "onnx_doc_folder/onnx__GatherND", "onnx_doc_folder/onnx__Gemm", "onnx_doc_folder/onnx__GlobalAveragePool", "onnx_doc_folder/onnx__GlobalLpPool", "onnx_doc_folder/onnx__GlobalMaxPool", "onnx_doc_folder/onnx__Greater", "onnx_doc_folder/onnx__GreaterOrEqual", "onnx_doc_folder/onnx__GridSample", "onnx_doc_folder/onnx__HammingWindow", "onnx_doc_folder/onnx__HannWindow", "onnx_doc_folder/onnx__HardSigmoid", "onnx_doc_folder/onnx__HardSwish", "onnx_doc_folder/onnx__Hardmax", "onnx_doc_folder/onnx__Identity", "onnx_doc_folder/onnx__If", "onnx_doc_folder/onnx__InstanceNormalization", "onnx_doc_folder/onnx__IsInf", "onnx_doc_folder/onnx__IsNaN", "onnx_doc_folder/onnx__LRN", "onnx_doc_folder/onnx__LSTM", "onnx_doc_folder/onnx__LayerNormalization", "onnx_doc_folder/onnx__LeakyRelu", "onnx_doc_folder/onnx__Less", "onnx_doc_folder/onnx__LessOrEqual", "onnx_doc_folder/onnx__Log", "onnx_doc_folder/onnx__LogSoftmax", "onnx_doc_folder/onnx__Loop", "onnx_doc_folder/onnx__LpNormalization", "onnx_doc_folder/onnx__LpPool", "onnx_doc_folder/onnx__MatMul", "onnx_doc_folder/onnx__MatMulInteger", "onnx_doc_folder/onnx__Max", "onnx_doc_folder/onnx__MaxPool", "onnx_doc_folder/onnx__MaxRoiPool", "onnx_doc_folder/onnx__MaxUnpool", "onnx_doc_folder/onnx__Mean", "onnx_doc_folder/onnx__MeanVarianceNormalization", "onnx_doc_folder/onnx__MelWeightMatrix", "onnx_doc_folder/onnx__Min", "onnx_doc_folder/onnx__Mish", "onnx_doc_folder/onnx__Mod", "onnx_doc_folder/onnx__Mul", "onnx_doc_folder/onnx__Multinomial", "onnx_doc_folder/onnx__Neg", "onnx_doc_folder/onnx__NegativeLogLikelihoodLoss", "onnx_doc_folder/onnx__NonMaxSuppression", "onnx_doc_folder/onnx__NonZero", "onnx_doc_folder/onnx__Not", "onnx_doc_folder/onnx__OneHot", "onnx_doc_folder/onnx__Optional", "onnx_doc_folder/onnx__OptionalGetElement", "onnx_doc_folder/onnx__OptionalHasElement", "onnx_doc_folder/onnx__Or", "onnx_doc_folder/onnx__PRelu", "onnx_doc_folder/onnx__Pad", "onnx_doc_folder/onnx__Pow", "onnx_doc_folder/onnx__QLinearConv", "onnx_doc_folder/onnx__QLinearMatMul", "onnx_doc_folder/onnx__QuantizeLinear", "onnx_doc_folder/onnx__RNN", "onnx_doc_folder/onnx__RandomNormal", "onnx_doc_folder/onnx__RandomNormalLike", "onnx_doc_folder/onnx__RandomUniform", "onnx_doc_folder/onnx__RandomUniformLike", "onnx_doc_folder/onnx__Range", "onnx_doc_folder/onnx__Reciprocal", "onnx_doc_folder/onnx__ReduceL1", "onnx_doc_folder/onnx__ReduceL2", "onnx_doc_folder/onnx__ReduceLogSum", "onnx_doc_folder/onnx__ReduceLogSumExp", "onnx_doc_folder/onnx__ReduceMax", "onnx_doc_folder/onnx__ReduceMean", "onnx_doc_folder/onnx__ReduceMin", "onnx_doc_folder/onnx__ReduceProd", "onnx_doc_folder/onnx__ReduceSum", "onnx_doc_folder/onnx__ReduceSumSquare", "onnx_doc_folder/onnx__Relu", "onnx_doc_folder/onnx__Reshape", "onnx_doc_folder/onnx__Resize", "onnx_doc_folder/onnx__ReverseSequence", "onnx_doc_folder/onnx__RoiAlign", "onnx_doc_folder/onnx__Round", "onnx_doc_folder/onnx__STFT", "onnx_doc_folder/onnx__Scan", "onnx_doc_folder/onnx__Scatter", "onnx_doc_folder/onnx__ScatterElements", "onnx_doc_folder/onnx__ScatterND", "onnx_doc_folder/onnx__Selu", "onnx_doc_folder/onnx__SequenceAt", "onnx_doc_folder/onnx__SequenceConstruct", "onnx_doc_folder/onnx__SequenceEmpty", "onnx_doc_folder/onnx__SequenceErase", "onnx_doc_folder/onnx__SequenceInsert", "onnx_doc_folder/onnx__SequenceLength", "onnx_doc_folder/onnx__SequenceMap", "onnx_doc_folder/onnx__Shape", "onnx_doc_folder/onnx__Shrink", "onnx_doc_folder/onnx__Sigmoid", "onnx_doc_folder/onnx__Sign", "onnx_doc_folder/onnx__Sin", "onnx_doc_folder/onnx__Sinh", "onnx_doc_folder/onnx__Size", "onnx_doc_folder/onnx__Slice", "onnx_doc_folder/onnx__Softmax", "onnx_doc_folder/onnx__SoftmaxCrossEntropyLoss", "onnx_doc_folder/onnx__Softplus", "onnx_doc_folder/onnx__Softsign", "onnx_doc_folder/onnx__SpaceToDepth", "onnx_doc_folder/onnx__Split", "onnx_doc_folder/onnx__SplitToSequence", "onnx_doc_folder/onnx__Sqrt", "onnx_doc_folder/onnx__Squeeze", "onnx_doc_folder/onnx__StringNormalizer", "onnx_doc_folder/onnx__Sub", "onnx_doc_folder/onnx__Sum", "onnx_doc_folder/onnx__Tan", "onnx_doc_folder/onnx__Tanh", "onnx_doc_folder/onnx__TfIdfVectorizer", "onnx_doc_folder/onnx__ThresholdedRelu", "onnx_doc_folder/onnx__Tile", "onnx_doc_folder/onnx__TopK", "onnx_doc_folder/onnx__Transpose", "onnx_doc_folder/onnx__Trilu", "onnx_doc_folder/onnx__Unique", "onnx_doc_folder/onnx__Unsqueeze", "onnx_doc_folder/onnx__Upsample", "onnx_doc_folder/onnx__Where", "onnx_doc_folder/onnx__Xor", "onnx_doc_folder/onnx_aionnxml_ArrayFeatureExtractor", "onnx_doc_folder/onnx_aionnxml_Binarizer", "onnx_doc_folder/onnx_aionnxml_CastMap", "onnx_doc_folder/onnx_aionnxml_CategoryMapper", "onnx_doc_folder/onnx_aionnxml_DictVectorizer", "onnx_doc_folder/onnx_aionnxml_FeatureVectorizer", "onnx_doc_folder/onnx_aionnxml_Imputer", "onnx_doc_folder/onnx_aionnxml_LabelEncoder", "onnx_doc_folder/onnx_aionnxml_LinearClassifier", "onnx_doc_folder/onnx_aionnxml_LinearRegressor", "onnx_doc_folder/onnx_aionnxml_Normalizer", "onnx_doc_folder/onnx_aionnxml_OneHotEncoder", "onnx_doc_folder/onnx_aionnxml_SVMClassifier", "onnx_doc_folder/onnx_aionnxml_SVMRegressor", "onnx_doc_folder/onnx_aionnxml_Scaler", "onnx_doc_folder/onnx_aionnxml_TreeEnsembleClassifier", "onnx_doc_folder/onnx_aionnxml_TreeEnsembleRegressor", "onnx_doc_folder/onnx_aionnxml_ZipMap", "onnx_doc_folder/onnx_aionnxpreviewtraining_Adagrad", "onnx_doc_folder/onnx_aionnxpreviewtraining_Adam", "onnx_doc_folder/onnx_aionnxpreviewtraining_Gradient", "onnx_doc_folder/onnx_aionnxpreviewtraining_Momentum", "onnx_doc_folder/table_ai_onnx_ml", "onnx_doc_folder/table_ai_onnx_preview_training", "onnx_doc_folder/table_main", "onnx_doc_folder/text_diff_Abs_1_6", "onnx_doc_folder/text_diff_Abs_6_13", "onnx_doc_folder/text_diff_Add_13_14", "onnx_doc_folder/text_diff_Add_1_6", "onnx_doc_folder/text_diff_Add_6_7", "onnx_doc_folder/text_diff_Add_7_13", "onnx_doc_folder/text_diff_And_1_7", "onnx_doc_folder/text_diff_ArgMax_11_12", "onnx_doc_folder/text_diff_ArgMax_12_13", "onnx_doc_folder/text_diff_ArgMax_1_11", "onnx_doc_folder/text_diff_ArgMin_11_12", "onnx_doc_folder/text_diff_ArgMin_12_13", "onnx_doc_folder/text_diff_ArgMin_1_11", "onnx_doc_folder/text_diff_AveragePool_10_11", "onnx_doc_folder/text_diff_AveragePool_1_7", "onnx_doc_folder/text_diff_AveragePool_7_10", "onnx_doc_folder/text_diff_BatchNormalization_14_15", "onnx_doc_folder/text_diff_BatchNormalization_1_6", "onnx_doc_folder/text_diff_BatchNormalization_6_7", "onnx_doc_folder/text_diff_BatchNormalization_7_9", "onnx_doc_folder/text_diff_BatchNormalization_9_14", "onnx_doc_folder/text_diff_Cast_1_6", "onnx_doc_folder/text_diff_Cast_6_9", "onnx_doc_folder/text_diff_Cast_9_13", "onnx_doc_folder/text_diff_Ceil_1_6", "onnx_doc_folder/text_diff_Ceil_6_13", "onnx_doc_folder/text_diff_Clip_11_12", "onnx_doc_folder/text_diff_Clip_12_13", "onnx_doc_folder/text_diff_Clip_1_6", "onnx_doc_folder/text_diff_Clip_6_11", "onnx_doc_folder/text_diff_Compress_9_11", "onnx_doc_folder/text_diff_Concat_11_13", "onnx_doc_folder/text_diff_Concat_1_4", "onnx_doc_folder/text_diff_Concat_4_11", "onnx_doc_folder/text_diff_Constant_11_12", "onnx_doc_folder/text_diff_Constant_12_13", "onnx_doc_folder/text_diff_Constant_1_9", "onnx_doc_folder/text_diff_Constant_9_11", "onnx_doc_folder/text_diff_ConvTranspose_1_11", "onnx_doc_folder/text_diff_Conv_1_11", "onnx_doc_folder/text_diff_CumSum_11_14", "onnx_doc_folder/text_diff_DepthToSpace_11_13", "onnx_doc_folder/text_diff_DepthToSpace_1_11", "onnx_doc_folder/text_diff_DequantizeLinear_10_13", "onnx_doc_folder/text_diff_Div_13_14", "onnx_doc_folder/text_diff_Div_1_6", "onnx_doc_folder/text_diff_Div_6_7", "onnx_doc_folder/text_diff_Div_7_13", "onnx_doc_folder/text_diff_Dropout_10_12", "onnx_doc_folder/text_diff_Dropout_12_13", "onnx_doc_folder/text_diff_Dropout_1_6", "onnx_doc_folder/text_diff_Dropout_6_7", "onnx_doc_folder/text_diff_Dropout_7_10", "onnx_doc_folder/text_diff_Elu_1_6", "onnx_doc_folder/text_diff_Equal_11_13", "onnx_doc_folder/text_diff_Equal_1_7", "onnx_doc_folder/text_diff_Equal_7_11", "onnx_doc_folder/text_diff_Erf_9_13", "onnx_doc_folder/text_diff_Exp_1_6", "onnx_doc_folder/text_diff_Exp_6_13", "onnx_doc_folder/text_diff_Expand_8_13", "onnx_doc_folder/text_diff_Flatten_11_13", "onnx_doc_folder/text_diff_Flatten_1_9", "onnx_doc_folder/text_diff_Flatten_9_11", "onnx_doc_folder/text_diff_Floor_1_6", "onnx_doc_folder/text_diff_Floor_6_13", "onnx_doc_folder/text_diff_GRU_1_3", "onnx_doc_folder/text_diff_GRU_3_7", "onnx_doc_folder/text_diff_GRU_7_14", "onnx_doc_folder/text_diff_GatherElements_11_13", "onnx_doc_folder/text_diff_GatherND_11_12", "onnx_doc_folder/text_diff_GatherND_12_13", "onnx_doc_folder/text_diff_Gather_11_13", "onnx_doc_folder/text_diff_Gather_1_11", "onnx_doc_folder/text_diff_Gemm_11_13", "onnx_doc_folder/text_diff_Gemm_1_6", "onnx_doc_folder/text_diff_Gemm_6_7", "onnx_doc_folder/text_diff_Gemm_7_9", "onnx_doc_folder/text_diff_Gemm_9_11", "onnx_doc_folder/text_diff_GlobalLpPool_1_2", "onnx_doc_folder/text_diff_GreaterOrEqual_12_16", "onnx_doc_folder/text_diff_Greater_1_7", "onnx_doc_folder/text_diff_Greater_7_9", "onnx_doc_folder/text_diff_Greater_9_13", "onnx_doc_folder/text_diff_HardSigmoid_1_6", "onnx_doc_folder/text_diff_Hardmax_11_13", "onnx_doc_folder/text_diff_Hardmax_1_11", "onnx_doc_folder/text_diff_Identity_13_14", "onnx_doc_folder/text_diff_Identity_14_16", "onnx_doc_folder/text_diff_Identity_1_13", "onnx_doc_folder/text_diff_If_11_13", "onnx_doc_folder/text_diff_If_13_16", "onnx_doc_folder/text_diff_If_1_11", "onnx_doc_folder/text_diff_InstanceNormalization_1_6", "onnx_doc_folder/text_diff_IsNaN_9_13", "onnx_doc_folder/text_diff_LRN_1_13", "onnx_doc_folder/text_diff_LSTM_1_7", "onnx_doc_folder/text_diff_LSTM_7_14", "onnx_doc_folder/text_diff_LabelEncoder_1_2", "onnx_doc_folder/text_diff_LeakyRelu_1_6", "onnx_doc_folder/text_diff_LeakyRelu_6_16", "onnx_doc_folder/text_diff_LessOrEqual_12_16", "onnx_doc_folder/text_diff_Less_1_7", "onnx_doc_folder/text_diff_Less_7_9", "onnx_doc_folder/text_diff_Less_9_13", "onnx_doc_folder/text_diff_LogSoftmax_11_13", "onnx_doc_folder/text_diff_LogSoftmax_1_11", "onnx_doc_folder/text_diff_Log_1_6", "onnx_doc_folder/text_diff_Log_6_13", "onnx_doc_folder/text_diff_Loop_11_13", "onnx_doc_folder/text_diff_Loop_13_16", "onnx_doc_folder/text_diff_Loop_1_11", "onnx_doc_folder/text_diff_LpPool_1_2", "onnx_doc_folder/text_diff_LpPool_2_11", "onnx_doc_folder/text_diff_MatMul_1_9", "onnx_doc_folder/text_diff_MatMul_9_13", "onnx_doc_folder/text_diff_MaxPool_10_11", "onnx_doc_folder/text_diff_MaxPool_11_12", "onnx_doc_folder/text_diff_MaxPool_1_8", "onnx_doc_folder/text_diff_MaxPool_8_10", "onnx_doc_folder/text_diff_MaxUnpool_9_11", "onnx_doc_folder/text_diff_Max_12_13", "onnx_doc_folder/text_diff_Max_1_6", "onnx_doc_folder/text_diff_Max_6_8", "onnx_doc_folder/text_diff_Max_8_12", "onnx_doc_folder/text_diff_MeanVarianceNormalization_9_13", "onnx_doc_folder/text_diff_Mean_1_6", "onnx_doc_folder/text_diff_Mean_6_8", "onnx_doc_folder/text_diff_Mean_8_13", "onnx_doc_folder/text_diff_Min_12_13", "onnx_doc_folder/text_diff_Min_1_6", "onnx_doc_folder/text_diff_Min_6_8", "onnx_doc_folder/text_diff_Min_8_12", "onnx_doc_folder/text_diff_Mod_10_13", "onnx_doc_folder/text_diff_Mul_13_14", "onnx_doc_folder/text_diff_Mul_1_6", "onnx_doc_folder/text_diff_Mul_6_7", "onnx_doc_folder/text_diff_Mul_7_13", "onnx_doc_folder/text_diff_Neg_1_6", "onnx_doc_folder/text_diff_Neg_6_13", "onnx_doc_folder/text_diff_NegativeLogLikelihoodLoss_12_13", "onnx_doc_folder/text_diff_NonMaxSuppression_10_11", "onnx_doc_folder/text_diff_NonZero_9_13", "onnx_doc_folder/text_diff_OneHot_9_11", "onnx_doc_folder/text_diff_OptionalGetElement_15_18", "onnx_doc_folder/text_diff_OptionalHasElement_15_18", "onnx_doc_folder/text_diff_Or_1_7", "onnx_doc_folder/text_diff_PRelu_1_6", "onnx_doc_folder/text_diff_PRelu_6_7", "onnx_doc_folder/text_diff_PRelu_7_9", "onnx_doc_folder/text_diff_PRelu_9_16", "onnx_doc_folder/text_diff_Pad_11_13", "onnx_doc_folder/text_diff_Pad_13_18", "onnx_doc_folder/text_diff_Pad_1_2", "onnx_doc_folder/text_diff_Pad_2_11", "onnx_doc_folder/text_diff_Pow_12_13", "onnx_doc_folder/text_diff_Pow_13_15", "onnx_doc_folder/text_diff_Pow_1_7", "onnx_doc_folder/text_diff_Pow_7_12", "onnx_doc_folder/text_diff_QuantizeLinear_10_13", "onnx_doc_folder/text_diff_RNN_1_7", "onnx_doc_folder/text_diff_RNN_7_14", "onnx_doc_folder/text_diff_Reciprocal_1_6", "onnx_doc_folder/text_diff_Reciprocal_6_13", "onnx_doc_folder/text_diff_ReduceL1_11_13", "onnx_doc_folder/text_diff_ReduceL1_1_11", "onnx_doc_folder/text_diff_ReduceL2_11_13", "onnx_doc_folder/text_diff_ReduceL2_1_11", "onnx_doc_folder/text_diff_ReduceLogSumExp_11_13", "onnx_doc_folder/text_diff_ReduceLogSumExp_1_11", "onnx_doc_folder/text_diff_ReduceLogSum_11_13", "onnx_doc_folder/text_diff_ReduceLogSum_1_11", "onnx_doc_folder/text_diff_ReduceMax_11_12", "onnx_doc_folder/text_diff_ReduceMax_12_13", "onnx_doc_folder/text_diff_ReduceMax_1_11", "onnx_doc_folder/text_diff_ReduceMean_11_13", "onnx_doc_folder/text_diff_ReduceMean_1_11", "onnx_doc_folder/text_diff_ReduceMin_11_12", "onnx_doc_folder/text_diff_ReduceMin_12_13", "onnx_doc_folder/text_diff_ReduceMin_1_11", "onnx_doc_folder/text_diff_ReduceProd_11_13", "onnx_doc_folder/text_diff_ReduceProd_1_11", "onnx_doc_folder/text_diff_ReduceSumSquare_11_13", "onnx_doc_folder/text_diff_ReduceSumSquare_1_11", "onnx_doc_folder/text_diff_ReduceSum_11_13", "onnx_doc_folder/text_diff_ReduceSum_1_11", "onnx_doc_folder/text_diff_Relu_13_14", "onnx_doc_folder/text_diff_Relu_1_6", "onnx_doc_folder/text_diff_Relu_6_13", "onnx_doc_folder/text_diff_Reshape_13_14", "onnx_doc_folder/text_diff_Reshape_1_5", "onnx_doc_folder/text_diff_Reshape_5_13", "onnx_doc_folder/text_diff_Resize_10_11", "onnx_doc_folder/text_diff_Resize_11_13", "onnx_doc_folder/text_diff_Resize_13_18", "onnx_doc_folder/text_diff_RoiAlign_10_16", "onnx_doc_folder/text_diff_Scan_11_16", "onnx_doc_folder/text_diff_Scan_8_9", "onnx_doc_folder/text_diff_Scan_9_11", "onnx_doc_folder/text_diff_ScatterElements_11_13", "onnx_doc_folder/text_diff_ScatterElements_13_16", "onnx_doc_folder/text_diff_ScatterElements_16_18", "onnx_doc_folder/text_diff_ScatterND_11_13", "onnx_doc_folder/text_diff_ScatterND_13_16", "onnx_doc_folder/text_diff_ScatterND_16_18", "onnx_doc_folder/text_diff_Scatter_9_11", "onnx_doc_folder/text_diff_Selu_1_6", "onnx_doc_folder/text_diff_Shape_13_15", "onnx_doc_folder/text_diff_Shape_1_13", "onnx_doc_folder/text_diff_Sigmoid_1_6", "onnx_doc_folder/text_diff_Sigmoid_6_13", "onnx_doc_folder/text_diff_Sign_9_13", "onnx_doc_folder/text_diff_Size_1_13", "onnx_doc_folder/text_diff_Slice_10_11", "onnx_doc_folder/text_diff_Slice_11_13", "onnx_doc_folder/text_diff_Slice_1_10", "onnx_doc_folder/text_diff_SoftmaxCrossEntropyLoss_12_13", "onnx_doc_folder/text_diff_Softmax_11_13", "onnx_doc_folder/text_diff_Softmax_1_11", "onnx_doc_folder/text_diff_SpaceToDepth_1_13", "onnx_doc_folder/text_diff_Split_11_13", "onnx_doc_folder/text_diff_Split_1_2", "onnx_doc_folder/text_diff_Split_2_11", "onnx_doc_folder/text_diff_Sqrt_1_6", "onnx_doc_folder/text_diff_Sqrt_6_13", "onnx_doc_folder/text_diff_Squeeze_11_13", "onnx_doc_folder/text_diff_Squeeze_1_11", "onnx_doc_folder/text_diff_Sub_13_14", "onnx_doc_folder/text_diff_Sub_1_6", "onnx_doc_folder/text_diff_Sub_6_7", "onnx_doc_folder/text_diff_Sub_7_13", "onnx_doc_folder/text_diff_Sum_1_6", "onnx_doc_folder/text_diff_Sum_6_8", "onnx_doc_folder/text_diff_Sum_8_13", "onnx_doc_folder/text_diff_Tanh_1_6", "onnx_doc_folder/text_diff_Tanh_6_13", "onnx_doc_folder/text_diff_Tile_1_6", "onnx_doc_folder/text_diff_Tile_6_13", "onnx_doc_folder/text_diff_TopK_10_11", "onnx_doc_folder/text_diff_TopK_1_10", "onnx_doc_folder/text_diff_Transpose_1_13", "onnx_doc_folder/text_diff_TreeEnsembleClassifier_1_3", "onnx_doc_folder/text_diff_TreeEnsembleRegressor_1_3", "onnx_doc_folder/text_diff_Unsqueeze_11_13", "onnx_doc_folder/text_diff_Unsqueeze_1_11", "onnx_doc_folder/text_diff_Upsample_1_7", "onnx_doc_folder/text_diff_Upsample_7_9", "onnx_doc_folder/text_diff_Upsample_9_10", "onnx_doc_folder/text_diff_Where_9_16", "onnx_doc_folder/text_diff_Xor_1_7", "onnx_python/backend", "onnx_python/checker", "onnx_python/classes", "onnx_python/compose", "onnx_python/external_data_helper", "onnx_python/helper", "onnx_python/hub", "onnx_python/index", "onnx_python/mapping", "onnx_python/numpy_helper", "onnx_python/parser", "onnx_python/printer", "onnx_python/serialization", "onnx_python/shape_inference", "onnx_python/tools", "onnx_python/utils", "onnx_python/version_converter", "tutorial_python/challenges", "tutorial_python/concepts", "tutorial_python/index", "tutorial_python/python"], "filenames": ["expect.rst", "index.rst", "onnx_doc_folder/index.rst", "onnx_doc_folder/onnx__Abs.rst", "onnx_doc_folder/onnx__Acos.rst", "onnx_doc_folder/onnx__Acosh.rst", "onnx_doc_folder/onnx__Add.rst", "onnx_doc_folder/onnx__And.rst", "onnx_doc_folder/onnx__ArgMax.rst", "onnx_doc_folder/onnx__ArgMin.rst", "onnx_doc_folder/onnx__Asin.rst", "onnx_doc_folder/onnx__Asinh.rst", "onnx_doc_folder/onnx__Atan.rst", "onnx_doc_folder/onnx__Atanh.rst", "onnx_doc_folder/onnx__AveragePool.rst", "onnx_doc_folder/onnx__BatchNormalization.rst", "onnx_doc_folder/onnx__Bernoulli.rst", "onnx_doc_folder/onnx__BitShift.rst", "onnx_doc_folder/onnx__BlackmanWindow.rst", "onnx_doc_folder/onnx__Cast.rst", "onnx_doc_folder/onnx__CastLike.rst", "onnx_doc_folder/onnx__Ceil.rst", "onnx_doc_folder/onnx__Celu.rst", "onnx_doc_folder/onnx__CenterCropPad.rst", "onnx_doc_folder/onnx__Clip.rst", "onnx_doc_folder/onnx__Col2Im.rst", "onnx_doc_folder/onnx__Compress.rst", "onnx_doc_folder/onnx__Concat.rst", "onnx_doc_folder/onnx__ConcatFromSequence.rst", "onnx_doc_folder/onnx__Constant.rst", "onnx_doc_folder/onnx__ConstantOfShape.rst", "onnx_doc_folder/onnx__Conv.rst", "onnx_doc_folder/onnx__ConvInteger.rst", "onnx_doc_folder/onnx__ConvTranspose.rst", "onnx_doc_folder/onnx__Cos.rst", "onnx_doc_folder/onnx__Cosh.rst", "onnx_doc_folder/onnx__CumSum.rst", "onnx_doc_folder/onnx__DFT.rst", "onnx_doc_folder/onnx__DepthToSpace.rst", "onnx_doc_folder/onnx__DequantizeLinear.rst", "onnx_doc_folder/onnx__Det.rst", "onnx_doc_folder/onnx__Div.rst", "onnx_doc_folder/onnx__Dropout.rst", "onnx_doc_folder/onnx__DynamicQuantizeLinear.rst", "onnx_doc_folder/onnx__Einsum.rst", "onnx_doc_folder/onnx__Elu.rst", "onnx_doc_folder/onnx__Equal.rst", "onnx_doc_folder/onnx__Erf.rst", "onnx_doc_folder/onnx__Exp.rst", "onnx_doc_folder/onnx__Expand.rst", "onnx_doc_folder/onnx__EyeLike.rst", "onnx_doc_folder/onnx__Flatten.rst", "onnx_doc_folder/onnx__Floor.rst", "onnx_doc_folder/onnx__GRU.rst", "onnx_doc_folder/onnx__Gather.rst", "onnx_doc_folder/onnx__GatherElements.rst", "onnx_doc_folder/onnx__GatherND.rst", "onnx_doc_folder/onnx__Gemm.rst", "onnx_doc_folder/onnx__GlobalAveragePool.rst", "onnx_doc_folder/onnx__GlobalLpPool.rst", "onnx_doc_folder/onnx__GlobalMaxPool.rst", "onnx_doc_folder/onnx__Greater.rst", "onnx_doc_folder/onnx__GreaterOrEqual.rst", "onnx_doc_folder/onnx__GridSample.rst", "onnx_doc_folder/onnx__HammingWindow.rst", "onnx_doc_folder/onnx__HannWindow.rst", "onnx_doc_folder/onnx__HardSigmoid.rst", "onnx_doc_folder/onnx__HardSwish.rst", "onnx_doc_folder/onnx__Hardmax.rst", "onnx_doc_folder/onnx__Identity.rst", "onnx_doc_folder/onnx__If.rst", "onnx_doc_folder/onnx__InstanceNormalization.rst", "onnx_doc_folder/onnx__IsInf.rst", "onnx_doc_folder/onnx__IsNaN.rst", "onnx_doc_folder/onnx__LRN.rst", "onnx_doc_folder/onnx__LSTM.rst", "onnx_doc_folder/onnx__LayerNormalization.rst", "onnx_doc_folder/onnx__LeakyRelu.rst", "onnx_doc_folder/onnx__Less.rst", "onnx_doc_folder/onnx__LessOrEqual.rst", "onnx_doc_folder/onnx__Log.rst", "onnx_doc_folder/onnx__LogSoftmax.rst", "onnx_doc_folder/onnx__Loop.rst", "onnx_doc_folder/onnx__LpNormalization.rst", "onnx_doc_folder/onnx__LpPool.rst", "onnx_doc_folder/onnx__MatMul.rst", "onnx_doc_folder/onnx__MatMulInteger.rst", "onnx_doc_folder/onnx__Max.rst", "onnx_doc_folder/onnx__MaxPool.rst", "onnx_doc_folder/onnx__MaxRoiPool.rst", "onnx_doc_folder/onnx__MaxUnpool.rst", "onnx_doc_folder/onnx__Mean.rst", "onnx_doc_folder/onnx__MeanVarianceNormalization.rst", "onnx_doc_folder/onnx__MelWeightMatrix.rst", "onnx_doc_folder/onnx__Min.rst", "onnx_doc_folder/onnx__Mish.rst", "onnx_doc_folder/onnx__Mod.rst", "onnx_doc_folder/onnx__Mul.rst", "onnx_doc_folder/onnx__Multinomial.rst", "onnx_doc_folder/onnx__Neg.rst", "onnx_doc_folder/onnx__NegativeLogLikelihoodLoss.rst", "onnx_doc_folder/onnx__NonMaxSuppression.rst", "onnx_doc_folder/onnx__NonZero.rst", "onnx_doc_folder/onnx__Not.rst", "onnx_doc_folder/onnx__OneHot.rst", "onnx_doc_folder/onnx__Optional.rst", "onnx_doc_folder/onnx__OptionalGetElement.rst", "onnx_doc_folder/onnx__OptionalHasElement.rst", "onnx_doc_folder/onnx__Or.rst", "onnx_doc_folder/onnx__PRelu.rst", "onnx_doc_folder/onnx__Pad.rst", "onnx_doc_folder/onnx__Pow.rst", "onnx_doc_folder/onnx__QLinearConv.rst", "onnx_doc_folder/onnx__QLinearMatMul.rst", "onnx_doc_folder/onnx__QuantizeLinear.rst", "onnx_doc_folder/onnx__RNN.rst", "onnx_doc_folder/onnx__RandomNormal.rst", "onnx_doc_folder/onnx__RandomNormalLike.rst", "onnx_doc_folder/onnx__RandomUniform.rst", "onnx_doc_folder/onnx__RandomUniformLike.rst", "onnx_doc_folder/onnx__Range.rst", "onnx_doc_folder/onnx__Reciprocal.rst", "onnx_doc_folder/onnx__ReduceL1.rst", "onnx_doc_folder/onnx__ReduceL2.rst", "onnx_doc_folder/onnx__ReduceLogSum.rst", "onnx_doc_folder/onnx__ReduceLogSumExp.rst", "onnx_doc_folder/onnx__ReduceMax.rst", "onnx_doc_folder/onnx__ReduceMean.rst", "onnx_doc_folder/onnx__ReduceMin.rst", "onnx_doc_folder/onnx__ReduceProd.rst", "onnx_doc_folder/onnx__ReduceSum.rst", "onnx_doc_folder/onnx__ReduceSumSquare.rst", "onnx_doc_folder/onnx__Relu.rst", "onnx_doc_folder/onnx__Reshape.rst", "onnx_doc_folder/onnx__Resize.rst", "onnx_doc_folder/onnx__ReverseSequence.rst", "onnx_doc_folder/onnx__RoiAlign.rst", "onnx_doc_folder/onnx__Round.rst", "onnx_doc_folder/onnx__STFT.rst", "onnx_doc_folder/onnx__Scan.rst", "onnx_doc_folder/onnx__Scatter.rst", "onnx_doc_folder/onnx__ScatterElements.rst", "onnx_doc_folder/onnx__ScatterND.rst", "onnx_doc_folder/onnx__Selu.rst", "onnx_doc_folder/onnx__SequenceAt.rst", "onnx_doc_folder/onnx__SequenceConstruct.rst", "onnx_doc_folder/onnx__SequenceEmpty.rst", "onnx_doc_folder/onnx__SequenceErase.rst", "onnx_doc_folder/onnx__SequenceInsert.rst", "onnx_doc_folder/onnx__SequenceLength.rst", "onnx_doc_folder/onnx__SequenceMap.rst", "onnx_doc_folder/onnx__Shape.rst", "onnx_doc_folder/onnx__Shrink.rst", "onnx_doc_folder/onnx__Sigmoid.rst", "onnx_doc_folder/onnx__Sign.rst", "onnx_doc_folder/onnx__Sin.rst", "onnx_doc_folder/onnx__Sinh.rst", "onnx_doc_folder/onnx__Size.rst", "onnx_doc_folder/onnx__Slice.rst", "onnx_doc_folder/onnx__Softmax.rst", "onnx_doc_folder/onnx__SoftmaxCrossEntropyLoss.rst", "onnx_doc_folder/onnx__Softplus.rst", "onnx_doc_folder/onnx__Softsign.rst", "onnx_doc_folder/onnx__SpaceToDepth.rst", "onnx_doc_folder/onnx__Split.rst", "onnx_doc_folder/onnx__SplitToSequence.rst", "onnx_doc_folder/onnx__Sqrt.rst", "onnx_doc_folder/onnx__Squeeze.rst", "onnx_doc_folder/onnx__StringNormalizer.rst", "onnx_doc_folder/onnx__Sub.rst", "onnx_doc_folder/onnx__Sum.rst", "onnx_doc_folder/onnx__Tan.rst", "onnx_doc_folder/onnx__Tanh.rst", "onnx_doc_folder/onnx__TfIdfVectorizer.rst", "onnx_doc_folder/onnx__ThresholdedRelu.rst", "onnx_doc_folder/onnx__Tile.rst", "onnx_doc_folder/onnx__TopK.rst", "onnx_doc_folder/onnx__Transpose.rst", "onnx_doc_folder/onnx__Trilu.rst", "onnx_doc_folder/onnx__Unique.rst", "onnx_doc_folder/onnx__Unsqueeze.rst", "onnx_doc_folder/onnx__Upsample.rst", "onnx_doc_folder/onnx__Where.rst", "onnx_doc_folder/onnx__Xor.rst", "onnx_doc_folder/onnx_aionnxml_ArrayFeatureExtractor.rst", "onnx_doc_folder/onnx_aionnxml_Binarizer.rst", "onnx_doc_folder/onnx_aionnxml_CastMap.rst", "onnx_doc_folder/onnx_aionnxml_CategoryMapper.rst", "onnx_doc_folder/onnx_aionnxml_DictVectorizer.rst", "onnx_doc_folder/onnx_aionnxml_FeatureVectorizer.rst", "onnx_doc_folder/onnx_aionnxml_Imputer.rst", "onnx_doc_folder/onnx_aionnxml_LabelEncoder.rst", "onnx_doc_folder/onnx_aionnxml_LinearClassifier.rst", "onnx_doc_folder/onnx_aionnxml_LinearRegressor.rst", "onnx_doc_folder/onnx_aionnxml_Normalizer.rst", "onnx_doc_folder/onnx_aionnxml_OneHotEncoder.rst", "onnx_doc_folder/onnx_aionnxml_SVMClassifier.rst", "onnx_doc_folder/onnx_aionnxml_SVMRegressor.rst", "onnx_doc_folder/onnx_aionnxml_Scaler.rst", "onnx_doc_folder/onnx_aionnxml_TreeEnsembleClassifier.rst", "onnx_doc_folder/onnx_aionnxml_TreeEnsembleRegressor.rst", "onnx_doc_folder/onnx_aionnxml_ZipMap.rst", "onnx_doc_folder/onnx_aionnxpreviewtraining_Adagrad.rst", "onnx_doc_folder/onnx_aionnxpreviewtraining_Adam.rst", "onnx_doc_folder/onnx_aionnxpreviewtraining_Gradient.rst", "onnx_doc_folder/onnx_aionnxpreviewtraining_Momentum.rst", "onnx_doc_folder/table_ai_onnx_ml.rst", "onnx_doc_folder/table_ai_onnx_preview_training.rst", "onnx_doc_folder/table_main.rst", "onnx_doc_folder/text_diff_Abs_1_6.rst", "onnx_doc_folder/text_diff_Abs_6_13.rst", "onnx_doc_folder/text_diff_Add_13_14.rst", "onnx_doc_folder/text_diff_Add_1_6.rst", "onnx_doc_folder/text_diff_Add_6_7.rst", "onnx_doc_folder/text_diff_Add_7_13.rst", "onnx_doc_folder/text_diff_And_1_7.rst", "onnx_doc_folder/text_diff_ArgMax_11_12.rst", "onnx_doc_folder/text_diff_ArgMax_12_13.rst", "onnx_doc_folder/text_diff_ArgMax_1_11.rst", "onnx_doc_folder/text_diff_ArgMin_11_12.rst", "onnx_doc_folder/text_diff_ArgMin_12_13.rst", "onnx_doc_folder/text_diff_ArgMin_1_11.rst", "onnx_doc_folder/text_diff_AveragePool_10_11.rst", "onnx_doc_folder/text_diff_AveragePool_1_7.rst", "onnx_doc_folder/text_diff_AveragePool_7_10.rst", "onnx_doc_folder/text_diff_BatchNormalization_14_15.rst", "onnx_doc_folder/text_diff_BatchNormalization_1_6.rst", "onnx_doc_folder/text_diff_BatchNormalization_6_7.rst", "onnx_doc_folder/text_diff_BatchNormalization_7_9.rst", "onnx_doc_folder/text_diff_BatchNormalization_9_14.rst", "onnx_doc_folder/text_diff_Cast_1_6.rst", "onnx_doc_folder/text_diff_Cast_6_9.rst", "onnx_doc_folder/text_diff_Cast_9_13.rst", "onnx_doc_folder/text_diff_Ceil_1_6.rst", "onnx_doc_folder/text_diff_Ceil_6_13.rst", "onnx_doc_folder/text_diff_Clip_11_12.rst", "onnx_doc_folder/text_diff_Clip_12_13.rst", "onnx_doc_folder/text_diff_Clip_1_6.rst", "onnx_doc_folder/text_diff_Clip_6_11.rst", "onnx_doc_folder/text_diff_Compress_9_11.rst", "onnx_doc_folder/text_diff_Concat_11_13.rst", "onnx_doc_folder/text_diff_Concat_1_4.rst", "onnx_doc_folder/text_diff_Concat_4_11.rst", "onnx_doc_folder/text_diff_Constant_11_12.rst", "onnx_doc_folder/text_diff_Constant_12_13.rst", "onnx_doc_folder/text_diff_Constant_1_9.rst", "onnx_doc_folder/text_diff_Constant_9_11.rst", "onnx_doc_folder/text_diff_ConvTranspose_1_11.rst", "onnx_doc_folder/text_diff_Conv_1_11.rst", "onnx_doc_folder/text_diff_CumSum_11_14.rst", "onnx_doc_folder/text_diff_DepthToSpace_11_13.rst", "onnx_doc_folder/text_diff_DepthToSpace_1_11.rst", "onnx_doc_folder/text_diff_DequantizeLinear_10_13.rst", "onnx_doc_folder/text_diff_Div_13_14.rst", "onnx_doc_folder/text_diff_Div_1_6.rst", "onnx_doc_folder/text_diff_Div_6_7.rst", "onnx_doc_folder/text_diff_Div_7_13.rst", "onnx_doc_folder/text_diff_Dropout_10_12.rst", "onnx_doc_folder/text_diff_Dropout_12_13.rst", "onnx_doc_folder/text_diff_Dropout_1_6.rst", "onnx_doc_folder/text_diff_Dropout_6_7.rst", "onnx_doc_folder/text_diff_Dropout_7_10.rst", "onnx_doc_folder/text_diff_Elu_1_6.rst", "onnx_doc_folder/text_diff_Equal_11_13.rst", "onnx_doc_folder/text_diff_Equal_1_7.rst", "onnx_doc_folder/text_diff_Equal_7_11.rst", "onnx_doc_folder/text_diff_Erf_9_13.rst", "onnx_doc_folder/text_diff_Exp_1_6.rst", "onnx_doc_folder/text_diff_Exp_6_13.rst", "onnx_doc_folder/text_diff_Expand_8_13.rst", "onnx_doc_folder/text_diff_Flatten_11_13.rst", "onnx_doc_folder/text_diff_Flatten_1_9.rst", "onnx_doc_folder/text_diff_Flatten_9_11.rst", "onnx_doc_folder/text_diff_Floor_1_6.rst", "onnx_doc_folder/text_diff_Floor_6_13.rst", "onnx_doc_folder/text_diff_GRU_1_3.rst", "onnx_doc_folder/text_diff_GRU_3_7.rst", "onnx_doc_folder/text_diff_GRU_7_14.rst", "onnx_doc_folder/text_diff_GatherElements_11_13.rst", "onnx_doc_folder/text_diff_GatherND_11_12.rst", "onnx_doc_folder/text_diff_GatherND_12_13.rst", "onnx_doc_folder/text_diff_Gather_11_13.rst", "onnx_doc_folder/text_diff_Gather_1_11.rst", "onnx_doc_folder/text_diff_Gemm_11_13.rst", "onnx_doc_folder/text_diff_Gemm_1_6.rst", "onnx_doc_folder/text_diff_Gemm_6_7.rst", "onnx_doc_folder/text_diff_Gemm_7_9.rst", "onnx_doc_folder/text_diff_Gemm_9_11.rst", "onnx_doc_folder/text_diff_GlobalLpPool_1_2.rst", "onnx_doc_folder/text_diff_GreaterOrEqual_12_16.rst", "onnx_doc_folder/text_diff_Greater_1_7.rst", "onnx_doc_folder/text_diff_Greater_7_9.rst", "onnx_doc_folder/text_diff_Greater_9_13.rst", "onnx_doc_folder/text_diff_HardSigmoid_1_6.rst", "onnx_doc_folder/text_diff_Hardmax_11_13.rst", "onnx_doc_folder/text_diff_Hardmax_1_11.rst", "onnx_doc_folder/text_diff_Identity_13_14.rst", "onnx_doc_folder/text_diff_Identity_14_16.rst", "onnx_doc_folder/text_diff_Identity_1_13.rst", "onnx_doc_folder/text_diff_If_11_13.rst", "onnx_doc_folder/text_diff_If_13_16.rst", "onnx_doc_folder/text_diff_If_1_11.rst", "onnx_doc_folder/text_diff_InstanceNormalization_1_6.rst", "onnx_doc_folder/text_diff_IsNaN_9_13.rst", "onnx_doc_folder/text_diff_LRN_1_13.rst", "onnx_doc_folder/text_diff_LSTM_1_7.rst", "onnx_doc_folder/text_diff_LSTM_7_14.rst", "onnx_doc_folder/text_diff_LabelEncoder_1_2.rst", "onnx_doc_folder/text_diff_LeakyRelu_1_6.rst", "onnx_doc_folder/text_diff_LeakyRelu_6_16.rst", "onnx_doc_folder/text_diff_LessOrEqual_12_16.rst", "onnx_doc_folder/text_diff_Less_1_7.rst", "onnx_doc_folder/text_diff_Less_7_9.rst", "onnx_doc_folder/text_diff_Less_9_13.rst", "onnx_doc_folder/text_diff_LogSoftmax_11_13.rst", "onnx_doc_folder/text_diff_LogSoftmax_1_11.rst", "onnx_doc_folder/text_diff_Log_1_6.rst", "onnx_doc_folder/text_diff_Log_6_13.rst", "onnx_doc_folder/text_diff_Loop_11_13.rst", "onnx_doc_folder/text_diff_Loop_13_16.rst", "onnx_doc_folder/text_diff_Loop_1_11.rst", "onnx_doc_folder/text_diff_LpPool_1_2.rst", "onnx_doc_folder/text_diff_LpPool_2_11.rst", "onnx_doc_folder/text_diff_MatMul_1_9.rst", "onnx_doc_folder/text_diff_MatMul_9_13.rst", "onnx_doc_folder/text_diff_MaxPool_10_11.rst", "onnx_doc_folder/text_diff_MaxPool_11_12.rst", "onnx_doc_folder/text_diff_MaxPool_1_8.rst", "onnx_doc_folder/text_diff_MaxPool_8_10.rst", "onnx_doc_folder/text_diff_MaxUnpool_9_11.rst", "onnx_doc_folder/text_diff_Max_12_13.rst", "onnx_doc_folder/text_diff_Max_1_6.rst", "onnx_doc_folder/text_diff_Max_6_8.rst", "onnx_doc_folder/text_diff_Max_8_12.rst", "onnx_doc_folder/text_diff_MeanVarianceNormalization_9_13.rst", "onnx_doc_folder/text_diff_Mean_1_6.rst", "onnx_doc_folder/text_diff_Mean_6_8.rst", "onnx_doc_folder/text_diff_Mean_8_13.rst", "onnx_doc_folder/text_diff_Min_12_13.rst", "onnx_doc_folder/text_diff_Min_1_6.rst", "onnx_doc_folder/text_diff_Min_6_8.rst", "onnx_doc_folder/text_diff_Min_8_12.rst", "onnx_doc_folder/text_diff_Mod_10_13.rst", "onnx_doc_folder/text_diff_Mul_13_14.rst", "onnx_doc_folder/text_diff_Mul_1_6.rst", "onnx_doc_folder/text_diff_Mul_6_7.rst", "onnx_doc_folder/text_diff_Mul_7_13.rst", "onnx_doc_folder/text_diff_Neg_1_6.rst", "onnx_doc_folder/text_diff_Neg_6_13.rst", "onnx_doc_folder/text_diff_NegativeLogLikelihoodLoss_12_13.rst", "onnx_doc_folder/text_diff_NonMaxSuppression_10_11.rst", "onnx_doc_folder/text_diff_NonZero_9_13.rst", "onnx_doc_folder/text_diff_OneHot_9_11.rst", "onnx_doc_folder/text_diff_OptionalGetElement_15_18.rst", "onnx_doc_folder/text_diff_OptionalHasElement_15_18.rst", "onnx_doc_folder/text_diff_Or_1_7.rst", "onnx_doc_folder/text_diff_PRelu_1_6.rst", "onnx_doc_folder/text_diff_PRelu_6_7.rst", "onnx_doc_folder/text_diff_PRelu_7_9.rst", "onnx_doc_folder/text_diff_PRelu_9_16.rst", "onnx_doc_folder/text_diff_Pad_11_13.rst", "onnx_doc_folder/text_diff_Pad_13_18.rst", "onnx_doc_folder/text_diff_Pad_1_2.rst", "onnx_doc_folder/text_diff_Pad_2_11.rst", "onnx_doc_folder/text_diff_Pow_12_13.rst", "onnx_doc_folder/text_diff_Pow_13_15.rst", "onnx_doc_folder/text_diff_Pow_1_7.rst", "onnx_doc_folder/text_diff_Pow_7_12.rst", "onnx_doc_folder/text_diff_QuantizeLinear_10_13.rst", "onnx_doc_folder/text_diff_RNN_1_7.rst", "onnx_doc_folder/text_diff_RNN_7_14.rst", "onnx_doc_folder/text_diff_Reciprocal_1_6.rst", "onnx_doc_folder/text_diff_Reciprocal_6_13.rst", "onnx_doc_folder/text_diff_ReduceL1_11_13.rst", "onnx_doc_folder/text_diff_ReduceL1_1_11.rst", "onnx_doc_folder/text_diff_ReduceL2_11_13.rst", "onnx_doc_folder/text_diff_ReduceL2_1_11.rst", "onnx_doc_folder/text_diff_ReduceLogSumExp_11_13.rst", "onnx_doc_folder/text_diff_ReduceLogSumExp_1_11.rst", "onnx_doc_folder/text_diff_ReduceLogSum_11_13.rst", "onnx_doc_folder/text_diff_ReduceLogSum_1_11.rst", "onnx_doc_folder/text_diff_ReduceMax_11_12.rst", "onnx_doc_folder/text_diff_ReduceMax_12_13.rst", "onnx_doc_folder/text_diff_ReduceMax_1_11.rst", "onnx_doc_folder/text_diff_ReduceMean_11_13.rst", "onnx_doc_folder/text_diff_ReduceMean_1_11.rst", "onnx_doc_folder/text_diff_ReduceMin_11_12.rst", "onnx_doc_folder/text_diff_ReduceMin_12_13.rst", "onnx_doc_folder/text_diff_ReduceMin_1_11.rst", "onnx_doc_folder/text_diff_ReduceProd_11_13.rst", "onnx_doc_folder/text_diff_ReduceProd_1_11.rst", "onnx_doc_folder/text_diff_ReduceSumSquare_11_13.rst", "onnx_doc_folder/text_diff_ReduceSumSquare_1_11.rst", "onnx_doc_folder/text_diff_ReduceSum_11_13.rst", "onnx_doc_folder/text_diff_ReduceSum_1_11.rst", "onnx_doc_folder/text_diff_Relu_13_14.rst", "onnx_doc_folder/text_diff_Relu_1_6.rst", "onnx_doc_folder/text_diff_Relu_6_13.rst", "onnx_doc_folder/text_diff_Reshape_13_14.rst", "onnx_doc_folder/text_diff_Reshape_1_5.rst", "onnx_doc_folder/text_diff_Reshape_5_13.rst", "onnx_doc_folder/text_diff_Resize_10_11.rst", "onnx_doc_folder/text_diff_Resize_11_13.rst", "onnx_doc_folder/text_diff_Resize_13_18.rst", "onnx_doc_folder/text_diff_RoiAlign_10_16.rst", "onnx_doc_folder/text_diff_Scan_11_16.rst", "onnx_doc_folder/text_diff_Scan_8_9.rst", "onnx_doc_folder/text_diff_Scan_9_11.rst", "onnx_doc_folder/text_diff_ScatterElements_11_13.rst", "onnx_doc_folder/text_diff_ScatterElements_13_16.rst", "onnx_doc_folder/text_diff_ScatterElements_16_18.rst", "onnx_doc_folder/text_diff_ScatterND_11_13.rst", "onnx_doc_folder/text_diff_ScatterND_13_16.rst", "onnx_doc_folder/text_diff_ScatterND_16_18.rst", "onnx_doc_folder/text_diff_Scatter_9_11.rst", "onnx_doc_folder/text_diff_Selu_1_6.rst", "onnx_doc_folder/text_diff_Shape_13_15.rst", "onnx_doc_folder/text_diff_Shape_1_13.rst", "onnx_doc_folder/text_diff_Sigmoid_1_6.rst", "onnx_doc_folder/text_diff_Sigmoid_6_13.rst", "onnx_doc_folder/text_diff_Sign_9_13.rst", "onnx_doc_folder/text_diff_Size_1_13.rst", "onnx_doc_folder/text_diff_Slice_10_11.rst", "onnx_doc_folder/text_diff_Slice_11_13.rst", "onnx_doc_folder/text_diff_Slice_1_10.rst", "onnx_doc_folder/text_diff_SoftmaxCrossEntropyLoss_12_13.rst", "onnx_doc_folder/text_diff_Softmax_11_13.rst", "onnx_doc_folder/text_diff_Softmax_1_11.rst", "onnx_doc_folder/text_diff_SpaceToDepth_1_13.rst", "onnx_doc_folder/text_diff_Split_11_13.rst", "onnx_doc_folder/text_diff_Split_1_2.rst", "onnx_doc_folder/text_diff_Split_2_11.rst", "onnx_doc_folder/text_diff_Sqrt_1_6.rst", "onnx_doc_folder/text_diff_Sqrt_6_13.rst", "onnx_doc_folder/text_diff_Squeeze_11_13.rst", "onnx_doc_folder/text_diff_Squeeze_1_11.rst", "onnx_doc_folder/text_diff_Sub_13_14.rst", "onnx_doc_folder/text_diff_Sub_1_6.rst", "onnx_doc_folder/text_diff_Sub_6_7.rst", "onnx_doc_folder/text_diff_Sub_7_13.rst", "onnx_doc_folder/text_diff_Sum_1_6.rst", "onnx_doc_folder/text_diff_Sum_6_8.rst", "onnx_doc_folder/text_diff_Sum_8_13.rst", "onnx_doc_folder/text_diff_Tanh_1_6.rst", "onnx_doc_folder/text_diff_Tanh_6_13.rst", "onnx_doc_folder/text_diff_Tile_1_6.rst", "onnx_doc_folder/text_diff_Tile_6_13.rst", "onnx_doc_folder/text_diff_TopK_10_11.rst", "onnx_doc_folder/text_diff_TopK_1_10.rst", "onnx_doc_folder/text_diff_Transpose_1_13.rst", "onnx_doc_folder/text_diff_TreeEnsembleClassifier_1_3.rst", "onnx_doc_folder/text_diff_TreeEnsembleRegressor_1_3.rst", "onnx_doc_folder/text_diff_Unsqueeze_11_13.rst", "onnx_doc_folder/text_diff_Unsqueeze_1_11.rst", "onnx_doc_folder/text_diff_Upsample_1_7.rst", "onnx_doc_folder/text_diff_Upsample_7_9.rst", "onnx_doc_folder/text_diff_Upsample_9_10.rst", "onnx_doc_folder/text_diff_Where_9_16.rst", "onnx_doc_folder/text_diff_Xor_1_7.rst", "onnx_python/backend.rst", "onnx_python/checker.rst", "onnx_python/classes.rst", "onnx_python/compose.rst", "onnx_python/external_data_helper.rst", "onnx_python/helper.rst", "onnx_python/hub.rst", "onnx_python/index.rst", "onnx_python/mapping.rst", "onnx_python/numpy_helper.rst", "onnx_python/parser.rst", "onnx_python/printer.rst", "onnx_python/serialization.rst", "onnx_python/shape_inference.rst", "onnx_python/tools.rst", "onnx_python/utils.rst", "onnx_python/version_converter.rst", "tutorial_python/challenges.rst", "tutorial_python/concepts.rst", "tutorial_python/index.rst", "tutorial_python/python.rst"], "titles": ["Sample operator test code", "ONNX documentation", "ONNX Operators", "Abs", "Acos", "Acosh", "Add", "And", "ArgMax", "ArgMin", "Asin", "Asinh", "Atan", "Atanh", "AveragePool", "BatchNormalization", "Bernoulli", "BitShift", "BlackmanWindow", "Cast", "CastLike", "Ceil", "Celu", "CenterCropPad", "Clip", "Col2Im", "Compress", "Concat", "ConcatFromSequence", "Constant", "ConstantOfShape", "Conv", "ConvInteger", "ConvTranspose", "Cos", "Cosh", "CumSum", "DFT", "DepthToSpace", "DequantizeLinear", "Det", "Div", "Dropout", "DynamicQuantizeLinear", "Einsum", "Elu", "Equal", "Erf", "Exp", "Expand", "EyeLike", "Flatten", "Floor", "GRU", "Gather", "GatherElements", "GatherND", "Gemm", "GlobalAveragePool", "GlobalLpPool", "GlobalMaxPool", "Greater", "GreaterOrEqual", "GridSample", "HammingWindow", "HannWindow", "HardSigmoid", "HardSwish", "Hardmax", "Identity", "If", "InstanceNormalization", "IsInf", "IsNaN", "LRN", "LSTM", "LayerNormalization", "LeakyRelu", "Less", "LessOrEqual", "Log", "LogSoftmax", "Loop", "LpNormalization", "LpPool", "MatMul", "MatMulInteger", "Max", "MaxPool", "MaxRoiPool", "MaxUnpool", "Mean", "MeanVarianceNormalization", "MelWeightMatrix", "Min", "Mish", "Mod", "Mul", "Multinomial", "Neg", "NegativeLogLikelihoodLoss", "NonMaxSuppression", "NonZero", "Not", "OneHot", "Optional", "OptionalGetElement", "OptionalHasElement", "Or", "PRelu", "Pad", "Pow", "QLinearConv", "QLinearMatMul", "QuantizeLinear", "RNN", "RandomNormal", "RandomNormalLike", "RandomUniform", "RandomUniformLike", "Range", "Reciprocal", "ReduceL1", "ReduceL2", "ReduceLogSum", "ReduceLogSumExp", "ReduceMax", "ReduceMean", "ReduceMin", "ReduceProd", "ReduceSum", "ReduceSumSquare", "Relu", "Reshape", "Resize", "ReverseSequence", "RoiAlign", "Round", "STFT", "Scan", "Scatter", "ScatterElements", "ScatterND", "Selu", "SequenceAt", "SequenceConstruct", "SequenceEmpty", "SequenceErase", "SequenceInsert", "SequenceLength", "SequenceMap", "Shape", "Shrink", "Sigmoid", "Sign", "Sin", "Sinh", "Size", "Slice", "Softmax", "SoftmaxCrossEntropyLoss", "Softplus", "Softsign", "SpaceToDepth", "Split", "SplitToSequence", "Sqrt", "Squeeze", "StringNormalizer", "Sub", "Sum", "Tan", "Tanh", "TfIdfVectorizer", "ThresholdedRelu", "Tile", "TopK", "Transpose", "Trilu", "Unique", "Unsqueeze", "Upsample", "Where", "Xor", "ai.onnx.ml - ArrayFeatureExtractor", "ai.onnx.ml - Binarizer", "ai.onnx.ml - CastMap", "ai.onnx.ml - CategoryMapper", "ai.onnx.ml - DictVectorizer", "ai.onnx.ml - FeatureVectorizer", "ai.onnx.ml - Imputer", "ai.onnx.ml - LabelEncoder", "ai.onnx.ml - LinearClassifier", "ai.onnx.ml - LinearRegressor", "ai.onnx.ml - Normalizer", "ai.onnx.ml - OneHotEncoder", "ai.onnx.ml - SVMClassifier", "ai.onnx.ml - SVMRegressor", "ai.onnx.ml - Scaler", "ai.onnx.ml - TreeEnsembleClassifier", "ai.onnx.ml - TreeEnsembleRegressor", "ai.onnx.ml - ZipMap", "ai.onnx.preview.training - Adagrad", "ai.onnx.preview.training - Adam", "ai.onnx.preview.training - Gradient", "ai.onnx.preview.training - Momentum", "operator table for domain ai.onnx.ml", "operator table for domain ai.onnx.preview.training", "operator table for domain main", "Abs - 1 vs 6", "Abs - 6 vs 13", "Add - 13 vs 14", "Add - 1 vs 6", "Add - 6 vs 7", "Add - 7 vs 13", "And - 1 vs 7", "ArgMax - 11 vs 12", "ArgMax - 12 vs 13", "ArgMax - 1 vs 11", "ArgMin - 11 vs 12", "ArgMin - 12 vs 13", "ArgMin - 1 vs 11", "AveragePool - 10 vs 11", "AveragePool - 1 vs 7", "AveragePool - 7 vs 10", "BatchNormalization - 14 vs 15", "BatchNormalization - 1 vs 6", "BatchNormalization - 6 vs 7", "BatchNormalization - 7 vs 9", "BatchNormalization - 9 vs 14", "Cast - 1 vs 6", "Cast - 6 vs 9", "Cast - 9 vs 13", "Ceil - 1 vs 6", "Ceil - 6 vs 13", "Clip - 11 vs 12", "Clip - 12 vs 13", "Clip - 1 vs 6", "Clip - 6 vs 11", "Compress - 9 vs 11", "Concat - 11 vs 13", "Concat - 1 vs 4", "Concat - 4 vs 11", "Constant - 11 vs 12", "Constant - 12 vs 13", "Constant - 1 vs 9", "Constant - 9 vs 11", "ConvTranspose - 1 vs 11", "Conv - 1 vs 11", "CumSum - 11 vs 14", "DepthToSpace - 11 vs 13", "DepthToSpace - 1 vs 11", "DequantizeLinear - 10 vs 13", "Div - 13 vs 14", "Div - 1 vs 6", "Div - 6 vs 7", "Div - 7 vs 13", "Dropout - 10 vs 12", "Dropout - 12 vs 13", "Dropout - 1 vs 6", "Dropout - 6 vs 7", "Dropout - 7 vs 10", "Elu - 1 vs 6", "Equal - 11 vs 13", "Equal - 1 vs 7", "Equal - 7 vs 11", "Erf - 9 vs 13", "Exp - 1 vs 6", "Exp - 6 vs 13", "Expand - 8 vs 13", "Flatten - 11 vs 13", "Flatten - 1 vs 9", "Flatten - 9 vs 11", "Floor - 1 vs 6", "Floor - 6 vs 13", "GRU - 1 vs 3", "GRU - 3 vs 7", "GRU - 7 vs 14", "GatherElements - 11 vs 13", "GatherND - 11 vs 12", "GatherND - 12 vs 13", "Gather - 11 vs 13", "Gather - 1 vs 11", "Gemm - 11 vs 13", "Gemm - 1 vs 6", "Gemm - 6 vs 7", "Gemm - 7 vs 9", "Gemm - 9 vs 11", "GlobalLpPool - 1 vs 2", "GreaterOrEqual - 12 vs 16", "Greater - 1 vs 7", "Greater - 7 vs 9", "Greater - 9 vs 13", "HardSigmoid - 1 vs 6", "Hardmax - 11 vs 13", "Hardmax - 1 vs 11", "Identity - 13 vs 14", "Identity - 14 vs 16", "Identity - 1 vs 13", "If - 11 vs 13", "If - 13 vs 16", "If - 1 vs 11", "InstanceNormalization - 1 vs 6", "IsNaN - 9 vs 13", "LRN - 1 vs 13", "LSTM - 1 vs 7", "LSTM - 7 vs 14", "LabelEncoder - 1 vs 2", "LeakyRelu - 1 vs 6", "LeakyRelu - 6 vs 16", "LessOrEqual - 12 vs 16", "Less - 1 vs 7", "Less - 7 vs 9", "Less - 9 vs 13", "LogSoftmax - 11 vs 13", "LogSoftmax - 1 vs 11", "Log - 1 vs 6", "Log - 6 vs 13", "Loop - 11 vs 13", "Loop - 13 vs 16", "Loop - 1 vs 11", "LpPool - 1 vs 2", "LpPool - 2 vs 11", "MatMul - 1 vs 9", "MatMul - 9 vs 13", "MaxPool - 10 vs 11", "MaxPool - 11 vs 12", "MaxPool - 1 vs 8", "MaxPool - 8 vs 10", "MaxUnpool - 9 vs 11", "Max - 12 vs 13", "Max - 1 vs 6", "Max - 6 vs 8", "Max - 8 vs 12", "MeanVarianceNormalization - 9 vs 13", "Mean - 1 vs 6", "Mean - 6 vs 8", "Mean - 8 vs 13", "Min - 12 vs 13", "Min - 1 vs 6", "Min - 6 vs 8", "Min - 8 vs 12", "Mod - 10 vs 13", "Mul - 13 vs 14", "Mul - 1 vs 6", "Mul - 6 vs 7", "Mul - 7 vs 13", "Neg - 1 vs 6", "Neg - 6 vs 13", "NegativeLogLikelihoodLoss - 12 vs 13", "NonMaxSuppression - 10 vs 11", "NonZero - 9 vs 13", "OneHot - 9 vs 11", "OptionalGetElement - 15 vs 18", "OptionalHasElement - 15 vs 18", "Or - 1 vs 7", "PRelu - 1 vs 6", "PRelu - 6 vs 7", "PRelu - 7 vs 9", "PRelu - 9 vs 16", "Pad - 11 vs 13", "Pad - 13 vs 18", "Pad - 1 vs 2", "Pad - 2 vs 11", "Pow - 12 vs 13", "Pow - 13 vs 15", "Pow - 1 vs 7", "Pow - 7 vs 12", "QuantizeLinear - 10 vs 13", "RNN - 1 vs 7", "RNN - 7 vs 14", "Reciprocal - 1 vs 6", "Reciprocal - 6 vs 13", "ReduceL1 - 11 vs 13", "ReduceL1 - 1 vs 11", "ReduceL2 - 11 vs 13", "ReduceL2 - 1 vs 11", "ReduceLogSumExp - 11 vs 13", "ReduceLogSumExp - 1 vs 11", "ReduceLogSum - 11 vs 13", "ReduceLogSum - 1 vs 11", "ReduceMax - 11 vs 12", "ReduceMax - 12 vs 13", "ReduceMax - 1 vs 11", "ReduceMean - 11 vs 13", "ReduceMean - 1 vs 11", "ReduceMin - 11 vs 12", "ReduceMin - 12 vs 13", "ReduceMin - 1 vs 11", "ReduceProd - 11 vs 13", "ReduceProd - 1 vs 11", "ReduceSumSquare - 11 vs 13", "ReduceSumSquare - 1 vs 11", "ReduceSum - 11 vs 13", "ReduceSum - 1 vs 11", "Relu - 13 vs 14", "Relu - 1 vs 6", "Relu - 6 vs 13", "Reshape - 13 vs 14", "Reshape - 1 vs 5", "Reshape - 5 vs 13", "Resize - 10 vs 11", "Resize - 11 vs 13", "Resize - 13 vs 18", "RoiAlign - 10 vs 16", "Scan - 11 vs 16", "Scan - 8 vs 9", "Scan - 9 vs 11", "ScatterElements - 11 vs 13", "ScatterElements - 13 vs 16", "ScatterElements - 16 vs 18", "ScatterND - 11 vs 13", "ScatterND - 13 vs 16", "ScatterND - 16 vs 18", "Scatter - 9 vs 11", "Selu - 1 vs 6", "Shape - 13 vs 15", "Shape - 1 vs 13", "Sigmoid - 1 vs 6", "Sigmoid - 6 vs 13", "Sign - 9 vs 13", "Size - 1 vs 13", "Slice - 10 vs 11", "Slice - 11 vs 13", "Slice - 1 vs 10", "SoftmaxCrossEntropyLoss - 12 vs 13", "Softmax - 11 vs 13", "Softmax - 1 vs 11", "SpaceToDepth - 1 vs 13", "Split - 11 vs 13", "Split - 1 vs 2", "Split - 2 vs 11", "Sqrt - 1 vs 6", "Sqrt - 6 vs 13", "Squeeze - 11 vs 13", "Squeeze - 1 vs 11", "Sub - 13 vs 14", "Sub - 1 vs 6", "Sub - 6 vs 7", "Sub - 7 vs 13", "Sum - 1 vs 6", "Sum - 6 vs 8", "Sum - 8 vs 13", "Tanh - 1 vs 6", "Tanh - 6 vs 13", "Tile - 1 vs 6", "Tile - 6 vs 13", "TopK - 10 vs 11", "TopK - 1 vs 10", "Transpose - 1 vs 13", "TreeEnsembleClassifier - 1 vs 3", "TreeEnsembleRegressor - 1 vs 3", "Unsqueeze - 11 vs 13", "Unsqueeze - 1 vs 11", "Upsample - 1 vs 7", "Upsample - 7 vs 9", "Upsample - 9 vs 10", "Where - 9 vs 16", "Xor - 1 vs 7", "onnx.backend", "onnx.checker", "Protos", "onnx.compose", "onnx.external_data_helper", "onnx.helper", "onnx.hub", "API Reference", "onnx.mapping", "onnx.numpy_helper", "onnx.parser", "onnx.printer", "Serialization", "onnx.shape_inference", "onnx.tools", "onnx.utils", "onnx.version_converter", "Challenges", "ONNX Concepts", "Introduction to ONNX", "ONNX with Python"], "terms": {"mani": [0, 139, 150, 186, 201, 476, 477, 479], "exampl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 459, 462, 466, 471, 473, 476, 477, 478], "from": [0, 1, 7, 14, 15, 16, 18, 19, 20, 23, 25, 26, 27, 30, 31, 32, 33, 36, 38, 39, 42, 46, 50, 51, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 68, 70, 71, 74, 76, 78, 79, 81, 82, 84, 85, 86, 88, 89, 90, 93, 98, 101, 102, 104, 108, 110, 112, 113, 114, 116, 117, 118, 119, 133, 134, 136, 139, 140, 141, 144, 147, 148, 150, 151, 158, 159, 163, 164, 165, 167, 168, 173, 176, 179, 180, 182, 183, 188, 191, 195, 201, 202, 204, 459, 462, 463, 465, 466, 467, 471, 473, 474, 475, 477, 478, 479], "document": [0, 18, 20, 64, 65, 134, 173, 464, 477, 478, 479], "end": [0, 2, 14, 25, 31, 32, 33, 82, 84, 88, 90, 110, 112, 139, 151, 158, 173, 199, 200, 466, 477, 479], "call": [0, 2, 33, 202, 203, 204, 205, 463, 468, 471, 476, 477, 479], "function": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 459, 460, 462, 463, 471, 473, 478], "expect": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 202, 203, 205, 462, 476, 479], "check": [0, 2, 6, 7, 17, 41, 46, 57, 61, 62, 78, 79, 87, 91, 94, 96, 97, 108, 109, 111, 134, 169, 170, 182, 183, 202, 203, 205, 459, 460, 472, 476, 479], "runtim": [0, 1, 2, 82, 476, 477, 479], "return": [0, 7, 16, 18, 19, 36, 37, 46, 61, 62, 64, 65, 70, 73, 78, 79, 82, 93, 102, 103, 106, 107, 108, 138, 139, 151, 166, 168, 176, 178, 179, 182, 183, 195, 199, 200, 459, 462, 463, 464, 465, 468, 469, 471, 472, 475, 477, 479], "output": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 459, 462, 464, 471, 472, 473, 474, 476, 478, 479], "given": [0, 4, 5, 10, 11, 12, 13, 19, 20, 23, 24, 26, 30, 34, 35, 36, 43, 47, 48, 49, 54, 56, 63, 68, 70, 80, 81, 82, 83, 89, 100, 110, 134, 136, 139, 140, 146, 148, 154, 155, 156, 159, 160, 162, 165, 171, 172, 175, 176, 177, 178, 180, 181, 188, 202, 203, 204, 464, 465, 479], "here": [0, 82, 139, 173, 471, 476, 477, 479], "i": [0, 1, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 459, 460, 462, 463, 464, 465, 466, 471, 472, 473, 474, 475, 478, 479], "one": [0, 3, 16, 18, 19, 21, 29, 30, 31, 33, 40, 42, 44, 45, 49, 50, 52, 53, 54, 55, 64, 65, 66, 67, 68, 75, 76, 77, 81, 82, 84, 93, 98, 99, 100, 104, 109, 111, 115, 116, 117, 118, 119, 121, 132, 133, 134, 135, 137, 139, 140, 143, 150, 151, 152, 153, 159, 160, 161, 166, 167, 168, 173, 174, 178, 179, 180, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 459, 462, 463, 471, 476, 477, 479], "implement": [0, 1, 2, 16, 25, 42, 53, 75, 76, 82, 115, 168, 471, 476, 477, 478], "base": [0, 14, 31, 32, 33, 82, 84, 88, 93, 101, 104, 111, 112, 173, 184, 185, 186, 199, 200, 202, 203, 204, 205, 459, 463, 464, 466, 477, 479], "onnxruntim": [0, 477, 479], "type": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 459, 461, 463, 464, 468, 471, 472, 476, 478, 479], "import": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 202, 203, 205, 462, 466, 467, 471, 473, 477, 479], "ani": [0, 1, 6, 14, 19, 25, 27, 28, 31, 32, 33, 36, 41, 54, 55, 56, 82, 84, 88, 90, 93, 97, 101, 104, 111, 112, 117, 119, 133, 135, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 158, 169, 175, 179, 180, 184, 188, 191, 204, 459, 463, 464, 465, 468, 472, 473, 476, 477, 479], "sequenc": [0, 27, 28, 44, 53, 69, 70, 75, 82, 105, 106, 107, 115, 120, 135, 139, 144, 145, 146, 147, 148, 149, 150, 165, 173, 187, 193, 199, 201, 459, 461, 464, 477], "numpi": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 202, 203, 205, 459, 468, 476, 477, 479], "np": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 202, 203, 205, 476], "onnx": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 461, 466, 471, 476], "def": [0, 1, 76, 466, 467, 468, 476, 477, 479], "node": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 199, 200, 202, 203, 204, 205, 459, 462, 464, 471, 473, 476, 478, 479], "nodeproto": [0, 459, 464, 466, 471, 473, 479], "input": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 459, 462, 464, 468, 471, 472, 473, 474, 475, 476, 478], "ndarrai": [0, 459, 468, 479], "name": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 459, 462, 463, 464, 465, 466, 468, 471, 473, 474, 476, 477, 479], "str": [0, 19, 20, 27, 51, 177, 180, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 477], "kwarg": [0, 459, 464, 467, 473], "none": [0, 19, 20, 76, 82, 100, 107, 122, 123, 125, 126, 127, 128, 129, 130, 131, 141, 142, 160, 168, 173, 179, 192, 193, 196, 197, 199, 200, 459, 460, 462, 463, 464, 465, 468, 471, 472, 473, 474, 479], "build": [0, 1, 469, 477, 479], "model": [0, 1, 42, 70, 82, 101, 192, 193, 204, 205, 459, 460, 462, 463, 465, 466, 472, 473, 474, 475, 476, 477], "present_input": 0, "x": [0, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 88, 89, 90, 92, 95, 96, 97, 99, 100, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 121, 132, 134, 135, 136, 137, 138, 139, 143, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 471, 477, 479], "present_output": 0, "input_type_proto": [0, 19, 20, 69, 82, 106, 107, 150], "len": [0, 19, 20, 27, 51, 76, 148, 158, 177, 179, 477], "del": [0, 479], "output_type_proto": [0, 19, 20, 69, 70, 150], "inputs_vi": 0, "_extract_value_info": 0, "arr": [0, 468], "arr_nam": 0, "input_typ": 0, "zip": [0, 139, 179], "outputs_vi": 0, "output_typ": [0, 104], "graph": [0, 1, 70, 82, 139, 150, 204, 462, 464, 471, 472, 473, 477, 479], "helper": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 202, 203, 205, 466, 467, 479], "make_graph": [0, 70, 82, 139, 150, 464, 479], "producer_nam": [0, 462, 477, 479], "backend": [0, 466, 476], "opset_import": [0, 42, 69, 70, 82, 139, 140, 181, 202, 203, 205, 464, 479], "To": [0, 96, 204, 463], "make": [0, 63, 76, 82, 90, 175, 199, 200, 476, 477, 479], "sure": 0, "produc": [0, 2, 3, 16, 19, 20, 21, 25, 29, 42, 44, 45, 52, 55, 66, 67, 70, 77, 82, 89, 90, 99, 102, 104, 109, 111, 121, 132, 136, 139, 140, 141, 142, 143, 149, 152, 153, 158, 161, 166, 173, 174, 188, 462, 477, 479], "same": [0, 6, 8, 9, 15, 16, 19, 20, 23, 27, 28, 29, 36, 39, 41, 44, 47, 49, 50, 53, 55, 57, 58, 59, 60, 63, 68, 70, 71, 75, 76, 81, 87, 88, 90, 91, 92, 94, 96, 97, 101, 104, 109, 111, 112, 113, 114, 115, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 139, 140, 141, 142, 145, 148, 150, 152, 154, 159, 167, 169, 170, 175, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 195, 196, 198, 199, 200, 202, 205, 462, 464, 471, 472, 476, 477, 479], "opset_vers": 0, "after": [0, 15, 25, 37, 82, 83, 110, 134, 151, 160, 164, 165, 168, 181, 202, 463, 476, 479], "opset": [0, 1, 6, 41, 97, 141, 142, 169, 464, 465, 466, 475, 478], "chang": [0, 6, 19, 33, 36, 41, 82, 97, 139, 141, 142, 169, 190, 476, 477, 479], "By": [0, 28, 33, 36, 37, 38, 50, 133, 173, 177, 204, 462], "default": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 187, 191, 192, 193, 202, 203, 462, 464, 465, 472, 477, 478], "us": [0, 14, 15, 16, 18, 19, 22, 31, 32, 33, 37, 38, 42, 44, 50, 53, 57, 59, 63, 64, 65, 71, 75, 76, 82, 84, 88, 89, 90, 92, 93, 95, 98, 101, 104, 110, 112, 115, 117, 119, 134, 136, 139, 140, 141, 142, 151, 158, 164, 165, 173, 176, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 204, 205, 459, 462, 463, 464, 468, 471, 476, 477, 478, 479], "since_vers": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "produce_opset_vers": 0, "get_schema": [0, 467], "op_typ": [0, 464, 467, 471, 479], "domain": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 462, 464, 467, 478, 479], "make_operatorsetid": [0, 464, 479], "make_model_gen_vers": [0, 479], "ar": [0, 6, 14, 15, 17, 19, 23, 25, 26, 31, 32, 33, 37, 38, 39, 41, 43, 44, 49, 50, 53, 54, 55, 56, 58, 59, 60, 63, 70, 71, 73, 74, 75, 76, 82, 83, 84, 88, 89, 90, 92, 93, 97, 101, 102, 104, 110, 111, 112, 115, 117, 119, 133, 134, 136, 138, 139, 140, 141, 144, 147, 148, 151, 158, 163, 168, 169, 173, 176, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 193, 194, 196, 199, 200, 201, 202, 203, 204, 205, 462, 464, 472, 476, 477, 479], "ones": [0, 30, 42, 49, 50, 53, 75, 100, 115, 160, 195, 479], "sess": [0, 479], "inferencesess": [0, 479], "serializetostr": [0, 471, 479], "feed": [0, 204], "valu": [0, 5, 11, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 68, 70, 71, 72, 75, 76, 81, 82, 84, 86, 88, 90, 93, 98, 100, 101, 104, 105, 106, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 148, 151, 152, 156, 158, 159, 160, 162, 163, 164, 165, 167, 168, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 195, 199, 200, 201, 202, 203, 204, 205, 462, 463, 464, 468, 472, 473, 477, 478], "result": [0, 6, 7, 8, 9, 17, 19, 31, 32, 33, 41, 46, 61, 62, 68, 78, 79, 85, 86, 87, 90, 91, 94, 96, 97, 101, 102, 104, 108, 112, 113, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 158, 168, 169, 170, 173, 176, 178, 183, 193, 202, 203, 205, 459, 472, 476, 477, 479], "run": [0, 15, 42, 70, 82, 139, 150, 203, 459, 474, 476, 477, 479], "assert_allclos": 0, "open": [1, 471, 478, 479], "neural": [1, 74, 82, 95, 477, 478], "network": [1, 63, 74, 82, 477, 478], "exchang": [1, 478], "an": [1, 6, 8, 9, 14, 15, 16, 19, 23, 24, 25, 26, 31, 32, 33, 36, 37, 41, 42, 44, 50, 53, 54, 55, 56, 57, 58, 59, 60, 63, 68, 70, 74, 75, 77, 81, 82, 84, 86, 88, 89, 90, 96, 97, 100, 101, 105, 106, 107, 110, 111, 112, 113, 115, 117, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 138, 139, 140, 141, 142, 144, 146, 147, 148, 151, 157, 158, 159, 160, 167, 169, 173, 175, 176, 177, 179, 180, 184, 186, 187, 188, 189, 191, 195, 198, 200, 204, 205, 460, 462, 463, 464, 466, 468, 471, 474, 478, 479], "ecosystem": [1, 477], "empow": 1, "ai": [1, 467, 477, 479], "develop": [1, 476, 477], "choos": [1, 173, 205, 464, 465], "right": [1, 6, 7, 17, 41, 43, 44, 46, 49, 61, 78, 93, 97, 108, 111, 169, 183, 476, 477], "tool": [1, 466, 478], "project": 1, "evolv": [1, 479], "provid": [1, 8, 9, 23, 26, 29, 33, 68, 81, 82, 83, 96, 100, 101, 107, 110, 117, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 140, 159, 160, 167, 179, 187, 191, 193, 196, 201, 204, 462, 472, 473, 477, 479], "sourc": [1, 140, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "format": [1, 14, 25, 29, 31, 32, 33, 53, 75, 84, 88, 90, 101, 104, 110, 112, 115, 173, 465, 469, 471, 476, 479], "both": [1, 39, 70, 82, 134, 139, 173, 201, 462, 476, 479], "deep": [1, 74, 476, 477], "learn": [1, 173, 202, 203, 205, 477, 478, 479], "tradit": 1, "ml": [1, 467, 476, 477, 479], "It": [1, 15, 17, 24, 32, 33, 36, 37, 39, 42, 43, 47, 49, 53, 54, 55, 56, 74, 75, 82, 86, 100, 101, 106, 112, 113, 114, 115, 133, 134, 135, 138, 139, 140, 141, 144, 147, 148, 149, 150, 152, 154, 158, 160, 165, 168, 173, 180, 181, 188, 191, 202, 203, 204, 205, 462, 465, 476, 477, 478, 479], "defin": [1, 6, 7, 41, 46, 56, 61, 63, 74, 76, 78, 82, 90, 93, 97, 108, 111, 130, 169, 183, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 462, 464, 466, 474, 476, 477, 479], "extens": [1, 478], "comput": [1, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 18, 31, 32, 33, 34, 35, 37, 38, 39, 47, 48, 53, 56, 57, 63, 64, 65, 68, 71, 75, 76, 80, 81, 82, 84, 88, 90, 100, 112, 113, 114, 115, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 138, 139, 150, 151, 154, 155, 156, 158, 159, 160, 162, 171, 172, 173, 202, 203, 204, 205, 472, 476, 477, 479], "well": [1, 82, 139, 477, 479], "definit": [1, 76, 204, 476, 477, 479], "built": [1, 476, 477, 479], "oper": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 459, 462, 464, 466, 472, 474, 478, 479], "standard": [1, 76, 116, 117, 173, 198, 205, 476, 477], "data": [1, 3, 8, 9, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33, 38, 42, 43, 45, 49, 50, 52, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 74, 77, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 101, 104, 109, 110, 111, 112, 113, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 140, 141, 142, 143, 145, 146, 148, 151, 152, 153, 157, 158, 161, 163, 166, 167, 170, 174, 177, 179, 180, 181, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 459, 463, 464, 468, 471, 472, 476, 477], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 461, 463, 464, 465, 471, 473, 476, 477, 478, 479], "introduc": [1, 476, 479], "python": [1, 25, 63, 468, 476, 477, 478], "packag": [1, 63, 476, 477, 479], "http": [15, 18, 25, 26, 57, 63, 64, 65, 71, 74, 76, 82, 85, 86, 100, 102, 113, 114, 134, 136, 158, 179, 182, 202, 459, 465], "github": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 459, 465], "com": [25, 76, 82, 179, 459, 465], "_": [53, 75, 115, 134, 150, 479], "A": [1, 6, 7, 18, 27, 29, 36, 41, 43, 46, 49, 51, 53, 57, 61, 62, 64, 65, 75, 78, 79, 82, 85, 86, 92, 95, 96, 97, 100, 107, 108, 110, 111, 115, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 138, 139, 160, 164, 165, 169, 175, 176, 177, 178, 179, 183, 186, 187, 188, 190, 191, 192, 199, 200, 202, 203, 204, 205, 462, 465, 471, 477, 478], "tutori": 1, "show": [1, 139, 466, 471, 476, 477, 478, 479], "how": [1, 93, 134, 139, 200, 466, 471, 477, 478, 479], "through": [1, 36, 82, 136, 158, 173, 477, 479], "api": [1, 477, 478, 479], "can": [1, 2, 6, 14, 17, 19, 23, 25, 26, 31, 32, 33, 36, 37, 39, 41, 42, 50, 56, 57, 76, 82, 84, 88, 90, 93, 96, 97, 101, 109, 111, 112, 114, 133, 134, 135, 138, 139, 140, 141, 142, 150, 151, 157, 160, 164, 165, 168, 169, 173, 179, 180, 190, 191, 198, 199, 200, 202, 203, 204, 205, 459, 460, 462, 466, 468, 471, 473, 476, 477, 479], "consum": [1, 14, 31, 32, 33, 39, 53, 58, 59, 60, 75, 82, 84, 88, 89, 112, 113, 114, 115, 136, 476], "specif": [1, 38, 44, 140, 141, 142, 150, 163, 168, 173, 202, 203, 204, 205, 476, 477, 479], "describ": [1, 15, 18, 64, 65, 68, 71, 76, 81, 82, 134, 136, 159, 205, 459, 466, 471, 476, 477, 478, 479], "last": [1, 8, 9, 53, 75, 76, 83, 104, 110, 115, 139, 142, 147, 151, 165, 184, 190, 479], "section": [1, 2, 466, 471, 476, 477, 479], "list": [1, 2, 15, 27, 53, 75, 82, 87, 91, 92, 94, 110, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 139, 158, 164, 167, 168, 170, 173, 177, 180, 189, 191, 195, 196, 197, 199, 202, 203, 204, 205, 459, 462, 464, 465, 466, 467, 468, 471, 473, 474, 476, 478, 479], "all": [1, 2, 3, 6, 8, 9, 14, 15, 16, 19, 23, 24, 25, 26, 27, 28, 29, 30, 38, 40, 41, 42, 44, 46, 47, 49, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 68, 69, 70, 75, 76, 78, 79, 82, 84, 87, 88, 90, 91, 92, 93, 94, 97, 98, 100, 102, 104, 105, 106, 110, 115, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 139, 140, 141, 142, 145, 151, 154, 158, 160, 163, 164, 165, 167, 168, 169, 170, 173, 175, 177, 178, 179, 180, 181, 182, 188, 189, 190, 194, 195, 198, 199, 200, 202, 203, 204, 205, 459, 462, 463, 464, 465, 466, 476, 477, 479], "exist": [1, 468, 471, 477, 479], "follow": [1, 6, 14, 15, 19, 25, 31, 32, 33, 37, 38, 41, 42, 44, 49, 53, 55, 56, 57, 75, 76, 84, 88, 90, 93, 97, 110, 111, 112, 115, 138, 139, 142, 158, 160, 169, 202, 203, 204, 466, 471, 473, 476, 477, 479], "version": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 462, 464, 465, 466, 475, 476, 478, 479], "below": [1, 2, 15, 38, 53, 56, 75, 82, 115, 120, 140, 141, 178, 179, 202, 203, 204, 477], "onnx_opset_vers": [1, 466, 467, 477], "print": [1, 26, 49, 54, 55, 100, 104, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 140, 141, 176, 179, 466, 471, 477, 479], "f": [1, 25, 45, 53, 75, 76, 77, 87, 93, 94, 109, 110, 111, 115, 141, 142, 190, 198, 199, 200, 471, 477, 479], "__version__": [1, 466, 477], "r": [1, 8, 9, 23, 26, 27, 28, 39, 42, 51, 53, 54, 55, 56, 68, 75, 76, 81, 104, 110, 114, 115, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 151, 158, 159, 164, 167, 176, 179, 180, 202, 203, 204, 205, 476, 479], "1": [1, 5, 11, 12, 13, 16, 17, 18, 20, 22, 23, 25, 26, 28, 30, 32, 34, 35, 36, 37, 39, 40, 43, 44, 47, 49, 50, 55, 56, 63, 64, 65, 67, 72, 76, 86, 90, 92, 93, 95, 96, 100, 101, 102, 104, 105, 106, 107, 112, 113, 114, 120, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 152, 154, 155, 156, 160, 165, 168, 171, 173, 174, 178, 179, 182, 206, 207, 208, 459, 462, 466, 467, 473, 475, 476, 477, 479], "12": [1, 14, 25, 27, 31, 32, 33, 36, 38, 53, 63, 86, 104, 112, 115, 122, 123, 127, 129, 130, 131, 133, 134, 135, 139, 142, 148, 163, 164, 169, 170, 173, 208, 466, 467, 477, 479], "0": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 48, 50, 51, 53, 54, 55, 56, 57, 59, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 192, 195, 199, 200, 202, 203, 205, 462, 463, 466, 476, 477, 479], "18": [1, 14, 31, 33, 38, 53, 88, 97, 112, 115, 127, 163, 208, 466, 477, 479], "introduct": 1, "concept": [1, 204, 478], "challeng": [1, 478], "refer": [1, 15, 23, 26, 63, 76, 82, 85, 86, 102, 110, 113, 114, 134, 139, 158, 179, 182, 202, 479], "structur": [1, 477, 479], "main": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 459, 465, 476, 477, 479], "preview": [1, 467], "train": [1, 15, 42, 76, 173, 467, 477, 479], "tabl": [1, 82], "out": [2, 15, 19, 54, 55, 56, 63, 70, 71, 82, 93, 101, 134, 140, 141, 144, 147, 148, 151, 476], "For": [2, 6, 14, 15, 17, 19, 25, 31, 32, 33, 36, 37, 41, 53, 55, 58, 59, 60, 63, 68, 70, 71, 74, 75, 76, 81, 84, 88, 90, 97, 110, 111, 112, 113, 114, 115, 134, 135, 138, 139, 140, 141, 150, 151, 158, 159, 169, 173, 175, 177, 180, 188, 191, 194, 195, 199, 200, 202, 203, 204, 205, 466, 474, 479], "each": [2, 14, 15, 17, 23, 25, 26, 31, 32, 33, 44, 55, 56, 63, 68, 81, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 110, 112, 134, 135, 136, 137, 139, 140, 141, 142, 150, 158, 159, 160, 164, 165, 170, 173, 179, 180, 181, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 202, 203, 204, 459, 462, 463, 476, 477, 479], "usag": [2, 82, 139, 459], "guid": 2, "paramet": [2, 33, 53, 74, 75, 82, 115, 116, 117, 119, 139, 167, 182, 188, 199, 200, 202, 203, 205, 460, 462, 463, 464, 465, 468, 469, 471, 472, 473, 474, 475, 477, 479], "line": [2, 464, 476, 477, 479], "histori": [2, 77, 109, 182], "also": [2, 15, 33, 36, 42, 49, 50, 53, 55, 57, 63, 75, 76, 82, 90, 96, 100, 104, 115, 133, 139, 164, 173, 202, 204, 463, 476, 477, 479], "includ": [2, 6, 14, 36, 41, 43, 93, 97, 111, 133, 134, 151, 169, 175, 178, 181, 182, 204, 462, 471, 476, 477, 479], "detail": [2, 6, 7, 15, 17, 19, 20, 33, 41, 42, 46, 53, 57, 61, 62, 75, 78, 79, 87, 91, 94, 96, 97, 108, 109, 111, 113, 114, 115, 134, 169, 170, 182, 183, 187, 205, 478], "its": [2, 6, 17, 32, 41, 55, 74, 82, 97, 109, 111, 112, 113, 139, 140, 141, 142, 158, 160, 169, 173, 179, 188, 191, 202, 204, 205, 465, 476, 477, 479], "done": [2, 42, 57, 194, 204, 476, 479], "md": [2, 76, 476], "which": [2, 8, 9, 14, 15, 17, 19, 22, 24, 26, 27, 28, 31, 32, 33, 36, 37, 39, 42, 43, 51, 54, 55, 63, 68, 73, 74, 76, 81, 82, 83, 84, 88, 90, 92, 93, 101, 102, 104, 110, 112, 114, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 139, 140, 141, 142, 150, 157, 159, 164, 165, 168, 173, 175, 176, 180, 187, 188, 190, 191, 194, 196, 198, 199, 202, 203, 204, 459, 463, 464, 471, 474, 476, 477, 479], "One": [2, 110, 115, 134, 164, 165, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 459, 476], "found": [2, 25, 173, 187, 188, 191, 195, 204, 459, 465, 479], "first": [2, 6, 7, 8, 9, 17, 18, 20, 23, 36, 37, 41, 46, 56, 58, 59, 60, 61, 62, 64, 65, 68, 70, 76, 78, 79, 82, 90, 97, 108, 109, 110, 111, 120, 133, 135, 139, 140, 142, 150, 160, 168, 169, 173, 176, 179, 183, 184, 196, 198, 202, 203, 204, 205, 459, 462, 476, 477, 479], "page": [2, 466, 471], "link": [2, 479], "sampl": [2, 15, 63, 82, 93, 98, 100, 134, 136, 138, 139, 150, 160], "test": [2, 15, 18, 33, 42, 63, 64, 65, 138, 151, 459, 460, 476, 478], "code": [2, 82, 139, 202, 203, 205, 471, 476, 477, 479], "ab": [2, 15, 27, 51, 63, 71, 81, 122, 136, 159, 162, 166, 208, 475, 477, 479], "aco": [2, 208], "acosh": [2, 208], "add": [2, 7, 14, 31, 33, 46, 61, 76, 77, 78, 82, 84, 88, 91, 108, 109, 110, 139, 141, 142, 150, 170, 182, 183, 202, 203, 205, 208, 462, 464, 471, 475, 476, 477, 479], "And": [2, 14, 88, 208, 475, 477, 479], "argmax": [2, 208, 476], "argmin": [2, 208], "asin": [2, 208], "asinh": [2, 208], "atan": [2, 208], "atanh": [2, 208], "averagepool": [2, 58, 208, 475], "batchnorm": [2, 208, 475], "bernoulli": [2, 208], "bitshift": [2, 208], "blackmanwindow": [2, 208], "cast": [2, 20, 43, 76, 104, 186, 195, 208, 475, 476, 477, 479], "castlik": [2, 208], "ceil": [2, 14, 31, 32, 74, 84, 88, 112, 120, 134, 136, 208, 475], "celu": [2, 208], "centercroppad": [2, 208], "clip": [2, 43, 45, 53, 66, 75, 77, 109, 115, 132, 143, 174, 208, 475], "col2im": [2, 208], "compress": [2, 208], "concat": [2, 28, 53, 75, 115, 139, 208, 475], "concatfromsequ": [2, 208], "constant": [2, 14, 70, 82, 88, 110, 139, 202, 203, 208, 477, 479], "constantofshap": [2, 208], "conv": [2, 204, 208, 477], "convinteg": [2, 208], "convtranspos": [2, 208], "co": [2, 18, 64, 65, 138, 208], "cosh": [2, 208], "cumsum": [2, 208], "dft": [2, 93, 138, 208], "depthtospac": [2, 208], "dequantizelinear": [2, 208], "det": [2, 208], "div": [2, 208, 475], "dropout": [2, 82, 208, 475, 477], "dynamicquantizelinear": [2, 208], "einsum": [2, 208], "elu": [2, 53, 75, 115, 208, 475], "equal": [2, 6, 8, 9, 14, 15, 23, 25, 31, 32, 33, 37, 39, 41, 49, 56, 58, 59, 60, 84, 88, 90, 97, 100, 111, 112, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 139, 142, 157, 160, 164, 165, 167, 169, 173, 181, 182, 187, 188, 190, 199, 208, 472, 475, 476, 477, 479], "erf": [2, 208, 476], "exp": [2, 22, 45, 80, 95, 125, 143, 153, 159, 161, 208, 475], "expand": [2, 180, 208], "eyelik": [2, 208], "flatten": [2, 15, 19, 20, 26, 29, 82, 88, 90, 179, 208, 479], "floor": [2, 14, 37, 74, 88, 93, 134, 138, 181, 208, 475], "gru": [2, 204, 208, 475], "gather": [2, 55, 56, 101, 208], "gatherel": [2, 140, 141, 208], "gathernd": [2, 101, 142, 208], "gemm": [2, 204, 208, 475, 477], "globalaveragepool": [2, 208], "globallppool": [2, 208, 475], "globalmaxpool": [2, 208], "greater": [2, 14, 25, 31, 32, 33, 37, 82, 84, 88, 90, 104, 112, 134, 181, 185, 208, 475, 477, 479], "greaterorequ": [2, 208], "gridsampl": [2, 208], "hammingwindow": [2, 208], "hannwindow": [2, 208], "hardsigmoid": [2, 53, 67, 75, 115, 208, 475], "hardswish": [2, 208], "hardmax": [2, 208], "ident": [2, 17, 82, 130, 139, 150, 160, 173, 191, 208, 479], "If": [2, 6, 7, 8, 9, 14, 15, 17, 18, 23, 25, 26, 30, 31, 32, 33, 36, 37, 41, 42, 44, 46, 50, 51, 53, 56, 57, 61, 63, 64, 65, 75, 76, 78, 82, 84, 86, 88, 90, 96, 97, 100, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 138, 139, 151, 152, 154, 158, 160, 164, 165, 166, 167, 168, 169, 173, 176, 178, 179, 183, 186, 187, 190, 191, 193, 195, 196, 202, 203, 204, 205, 208, 462, 463, 464, 465, 471, 472, 474, 476], "instancenorm": [2, 208, 475], "isinf": [2, 208], "isnan": [2, 208, 477], "lrn": [2, 208], "lstm": [2, 53, 115, 204, 208, 475], "layernorm": [2, 208], "leakyrelu": [2, 53, 75, 115, 208, 475], "less": [2, 26, 33, 37, 101, 134, 139, 142, 208, 475, 476, 479], "lessorequ": [2, 208], "log": [2, 53, 75, 81, 98, 100, 115, 124, 125, 160, 161, 208, 475], "logsoftmax": [2, 208], "loop": [2, 139, 140, 142, 208, 474, 478], "lpnormal": [2, 208], "lppool": [2, 59, 208, 475], "matmul": [2, 86, 113, 208, 476, 477, 479], "matmulinteg": [2, 208], "max": [2, 8, 14, 22, 24, 43, 53, 60, 66, 67, 74, 75, 88, 89, 115, 120, 126, 132, 134, 136, 139, 141, 142, 167, 173, 194, 200, 208, 475], "maxpool": [2, 60, 90, 208, 475, 477], "maxroipool": [2, 208], "maxunpool": [2, 208], "mean": [2, 8, 9, 14, 15, 23, 26, 27, 28, 31, 32, 33, 36, 39, 43, 51, 53, 54, 55, 58, 68, 71, 75, 76, 81, 83, 84, 88, 92, 96, 100, 101, 104, 110, 112, 114, 115, 116, 117, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 137, 139, 140, 141, 144, 147, 148, 151, 158, 159, 160, 164, 165, 167, 176, 179, 180, 198, 202, 203, 208, 462, 471, 472, 475, 476, 477, 479], "meanvariancenorm": [2, 208], "melweightmatrix": [2, 208], "min": [2, 9, 22, 24, 43, 53, 56, 66, 67, 74, 75, 115, 128, 134, 141, 142, 200, 208, 475], "mish": [2, 208], "mod": [2, 31, 208], "mul": [2, 76, 141, 142, 208, 475], "multinomi": [2, 192, 208], "neg": [2, 19, 23, 26, 27, 36, 39, 51, 54, 55, 68, 72, 76, 81, 100, 104, 110, 114, 134, 139, 140, 141, 144, 147, 148, 151, 153, 158, 159, 164, 165, 166, 167, 176, 178, 179, 180, 208, 462, 473, 475], "negativeloglikelihoodloss": [2, 208], "nonmaxsuppress": [2, 208], "nonzero": [2, 15, 19, 42, 182, 208], "Not": [2, 76, 82, 208], "onehot": [2, 208], "option": [2, 14, 15, 16, 24, 26, 30, 31, 32, 33, 37, 39, 42, 50, 53, 55, 57, 69, 70, 72, 74, 75, 76, 82, 86, 88, 90, 98, 100, 101, 104, 106, 107, 110, 112, 114, 115, 116, 117, 118, 119, 130, 133, 134, 135, 138, 139, 140, 141, 142, 146, 147, 148, 151, 158, 160, 164, 165, 167, 178, 179, 193, 204, 208, 459, 461, 462, 463, 464, 465, 471, 473, 476, 477, 479], "optionalgetel": [2, 82, 208], "optionalhasel": [2, 82, 208], "Or": [2, 31, 32, 112, 208, 471, 475], "prelu": [2, 208, 475], "pad": [2, 14, 23, 25, 31, 32, 33, 37, 53, 63, 75, 84, 88, 90, 112, 115, 139, 208, 475], "pow": [2, 208, 475], "qlinearconv": [2, 208], "qlinearmatmul": [2, 208], "quantizelinear": [2, 208], "rnn": [2, 53, 75, 82, 139, 204, 208, 475, 477], "randomnorm": [2, 208], "randomnormallik": [2, 208], "randomuniform": [2, 208], "randomuniformlik": [2, 208], "rang": [2, 8, 9, 16, 19, 23, 26, 27, 28, 36, 39, 43, 51, 53, 54, 55, 58, 60, 63, 68, 75, 76, 81, 90, 93, 100, 101, 104, 110, 114, 115, 118, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 138, 139, 140, 141, 144, 147, 148, 150, 151, 154, 158, 159, 160, 164, 165, 167, 176, 177, 179, 180, 208], "reciproc": [2, 76, 208, 475], "reducel1": [2, 208], "reducel2": [2, 208], "reducelogsum": [2, 208], "reducelogsumexp": [2, 208], "reducemax": [2, 208], "reducemean": [2, 15, 76, 160, 208, 479], "reducemin": [2, 208, 477], "reduceprod": [2, 208], "reducesum": [2, 159, 160, 208, 477, 479], "reducesumsquar": [2, 208, 479], "relu": [2, 53, 75, 115, 208, 475, 477], "reshap": [2, 19, 20, 32, 36, 37, 38, 39, 40, 43, 49, 51, 82, 96, 111, 112, 114, 122, 123, 138, 139, 163, 167, 168, 180, 208, 475, 476, 477, 479], "resiz": [2, 82, 181, 208], "reversesequ": [2, 208], "roialign": [2, 208], "round": [2, 19, 43, 113, 114, 134, 208], "stft": [2, 93, 208], "scan": [2, 82, 173, 208], "scatter": [2, 141, 208], "scatterel": [2, 55, 140, 208], "scatternd": [2, 56, 208], "selu": [2, 208, 475], "sequenceat": [2, 208], "sequenceconstruct": [2, 70, 82, 208], "sequenceempti": [2, 208], "sequenceeras": [2, 208], "sequenceinsert": [2, 82, 208], "sequencelength": [2, 208], "sequencemap": [2, 208], "shape": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 459, 460, 464, 472, 473, 476, 478], "shrink": [2, 208], "sigmoid": [2, 53, 75, 115, 196, 197, 208, 475], "sign": [2, 19, 96, 99, 132, 158, 208, 479], "sin": [2, 208], "sinh": [2, 208], "size": [2, 6, 14, 15, 18, 19, 25, 26, 27, 28, 31, 32, 33, 39, 41, 49, 50, 54, 55, 56, 58, 59, 60, 63, 64, 65, 68, 71, 74, 81, 84, 88, 89, 90, 93, 97, 100, 104, 109, 111, 112, 133, 134, 136, 138, 139, 140, 141, 151, 158, 159, 164, 165, 169, 173, 175, 178, 189, 195, 196, 199, 200, 208, 463, 465, 473, 477, 479], "slice": [2, 26, 56, 82, 135, 142, 151, 179, 208], "softmax": [2, 81, 160, 192, 193, 196, 197, 199, 200, 208, 477], "softmaxcrossentropyloss": [2, 208], "softplu": [2, 53, 75, 95, 115, 208], "softsign": [2, 53, 75, 115, 208], "spacetodepth": [2, 38, 208], "split": [2, 14, 31, 32, 33, 76, 84, 88, 112, 165, 199, 200, 208, 475], "splittosequ": [2, 208], "sqrt": [2, 15, 71, 76, 92, 123, 194, 202, 203, 208, 475, 479], "squeez": [2, 208], "stringnorm": [2, 208], "sub": [2, 76, 82, 139, 150, 158, 204, 208, 474, 475, 477, 479], "sum": [2, 6, 14, 15, 36, 44, 74, 82, 88, 100, 122, 123, 124, 125, 130, 131, 134, 139, 160, 164, 165, 194, 200, 205, 208, 475, 479], "tan": [2, 208], "tanh": [2, 53, 75, 95, 115, 139, 208], "tfidfvector": [2, 208], "thresholdedrelu": [2, 53, 75, 115, 208], "tile": [2, 49, 208, 475], "topk": [2, 208, 479], "transpos": [2, 33, 38, 57, 163, 208, 477, 479], "trilu": [2, 208], "uniqu": [2, 70, 138, 208, 464, 473, 477], "unsqueez": [2, 82, 208, 462], "upsampl": [2, 134, 208, 475], "where": [2, 3, 8, 9, 14, 15, 16, 21, 23, 25, 26, 27, 28, 31, 32, 33, 38, 39, 40, 42, 43, 44, 45, 51, 52, 54, 55, 56, 57, 58, 59, 60, 63, 66, 67, 68, 71, 74, 76, 77, 81, 84, 88, 89, 90, 98, 99, 100, 101, 104, 109, 110, 111, 112, 114, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 138, 139, 140, 141, 142, 143, 144, 147, 148, 151, 153, 158, 159, 160, 161, 163, 164, 166, 167, 174, 176, 178, 179, 180, 188, 190, 195, 199, 200, 202, 203, 204, 205, 208, 463, 477, 479], "xor": [2, 208, 475], "arrayfeatureextractor": [2, 206, 479], "binar": [2, 206], "castmap": [2, 206], "categorymapp": [2, 206], "dictvector": [2, 206], "featurevector": [2, 206], "imput": [2, 206, 477], "labelencod": [2, 206, 477], "linearclassifi": [2, 206], "linearregressor": [2, 206], "normal": [2, 15, 63, 71, 74, 76, 83, 92, 101, 116, 117, 134, 159, 168, 206], "onehotencod": [2, 206, 477], "svmclassifi": [2, 206], "svmregressor": [2, 206, 477], "scaler": [2, 206], "treeensembleclassifi": [2, 206], "treeensembleregressor": [2, 206, 476], "zipmap": [2, 206], "adagrad": [2, 207], "adam": [2, 207], "gradient": [2, 15, 76, 100, 160, 202, 203, 205, 207], "momentum": [2, 15, 203, 207], "fals": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 459, 460, 462, 463, 464, 465, 472, 473], "support_level": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "supporttyp": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "common": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 476, 477], "infer": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 460, 472, 476, 478], "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 191, 192, 195, 196, 199, 200, 201, 202, 203, 205, 460, 462, 463, 464, 471, 474, 479], "ha": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 466, 471, 476, 477, 479], "been": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "avail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 471, 476, 478, 479], "sinc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "summari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 476, 479], "absolut": [3, 101, 477], "take": [3, 14, 21, 25, 26, 31, 32, 33, 40, 42, 45, 52, 54, 55, 66, 67, 77, 84, 88, 90, 99, 107, 109, 111, 112, 121, 132, 133, 134, 137, 139, 140, 141, 142, 143, 151, 152, 153, 157, 161, 166, 167, 174, 178, 179, 180, 181, 472, 477, 479], "tensor": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 461, 463, 464, 466, 468, 471, 474, 479], "t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 102, 103, 108, 109, 110, 111, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 464, 476, 479], "y": [3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 92, 95, 96, 97, 99, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 121, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 471, 476, 477, 479], "appli": [3, 14, 15, 19, 21, 25, 45, 52, 53, 58, 59, 60, 66, 67, 75, 77, 83, 84, 88, 89, 99, 100, 109, 110, 111, 115, 121, 132, 136, 141, 142, 143, 150, 153, 158, 160, 161, 164, 166, 174, 179, 184, 190, 192, 193, 196, 197, 198, 199, 200, 203, 459, 472, 475, 476, 477], "elementwis": [3, 7, 21, 45, 46, 52, 61, 62, 66, 67, 77, 78, 79, 99, 108, 109, 111, 121, 132, 143, 153, 161, 166, 174, 183], "heterogen": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205], "constraint": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 477], "bfloat16": [3, 6, 8, 9, 15, 16, 18, 19, 20, 21, 23, 24, 25, 27, 29, 36, 37, 38, 41, 42, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 61, 62, 64, 65, 68, 69, 70, 73, 74, 76, 77, 78, 79, 80, 81, 82, 85, 87, 91, 92, 93, 94, 96, 97, 99, 102, 109, 110, 111, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 141, 142, 151, 153, 154, 157, 158, 159, 160, 163, 164, 166, 167, 169, 170, 172, 175, 177, 178, 180, 182, 477], "doubl": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 477], "float": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 459, 464, 476, 477, 479], "float16": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 109, 110, 111, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 204, 467, 477, 479], "int16": [3, 6, 8, 9, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 38, 41, 44, 46, 47, 49, 50, 51, 54, 55, 56, 61, 62, 63, 64, 65, 69, 70, 78, 79, 82, 87, 93, 94, 96, 97, 99, 102, 104, 105, 106, 107, 110, 111, 117, 119, 120, 132, 133, 134, 135, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 163, 164, 165, 167, 169, 175, 176, 177, 178, 179, 180, 181, 182, 204, 467, 477, 479], "int32": [3, 6, 8, 9, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 41, 44, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 69, 70, 75, 78, 79, 82, 85, 86, 87, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 160, 163, 164, 165, 167, 169, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 467, 477, 479], "int64": [3, 6, 8, 9, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 36, 37, 38, 41, 42, 44, 46, 47, 49, 50, 51, 54, 55, 56, 57, 61, 62, 63, 64, 65, 69, 70, 78, 79, 82, 85, 87, 88, 90, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 160, 163, 164, 165, 167, 169, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 467, 477, 479], "int8": [3, 6, 8, 9, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 38, 39, 41, 43, 44, 46, 47, 49, 50, 51, 54, 55, 56, 61, 62, 63, 64, 65, 69, 70, 78, 79, 82, 86, 87, 88, 93, 94, 96, 97, 99, 102, 104, 105, 106, 107, 110, 111, 112, 113, 114, 117, 119, 126, 128, 132, 133, 134, 135, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 163, 164, 165, 167, 169, 175, 176, 177, 178, 179, 180, 181, 182, 204, 467, 477, 479], "uint16": [3, 6, 8, 9, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 38, 41, 44, 46, 47, 49, 50, 51, 54, 55, 56, 61, 62, 63, 64, 65, 69, 70, 78, 79, 82, 87, 93, 94, 96, 97, 102, 104, 105, 106, 107, 110, 111, 117, 119, 133, 134, 135, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 163, 164, 165, 167, 169, 175, 176, 177, 178, 179, 180, 181, 182, 204, 467, 477, 479], "uint32": [3, 6, 8, 9, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 36, 38, 41, 44, 46, 47, 49, 50, 51, 54, 55, 56, 57, 61, 62, 63, 64, 65, 69, 70, 78, 79, 82, 85, 87, 93, 94, 96, 97, 102, 104, 105, 106, 107, 109, 110, 111, 117, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 163, 164, 165, 167, 169, 175, 176, 177, 178, 179, 180, 181, 182, 204, 467, 477, 479], "uint64": [3, 6, 8, 9, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 36, 38, 41, 44, 46, 47, 49, 50, 51, 54, 55, 56, 57, 61, 62, 63, 64, 65, 69, 70, 78, 79, 82, 85, 87, 93, 94, 96, 97, 102, 104, 105, 106, 107, 109, 110, 111, 117, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 163, 164, 165, 167, 169, 175, 176, 177, 178, 179, 180, 181, 182, 204, 467, 477, 479], "uint8": [3, 6, 8, 9, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 38, 39, 41, 43, 44, 46, 47, 49, 50, 51, 54, 55, 56, 61, 62, 63, 64, 65, 69, 70, 78, 79, 82, 86, 87, 88, 93, 94, 96, 97, 102, 104, 105, 106, 107, 110, 111, 112, 113, 114, 117, 119, 126, 128, 133, 134, 135, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 163, 164, 165, 167, 169, 175, 176, 177, 178, 179, 180, 181, 182, 204, 467, 477, 479], "constrain": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 202, 203, 205], "numer": [3, 6, 8, 9, 16, 18, 19, 24, 25, 30, 36, 41, 44, 46, 47, 61, 62, 64, 65, 78, 79, 87, 92, 93, 94, 96, 97, 99, 104, 110, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 152, 154, 169, 176, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 477], "make_nod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 202, 203, 205, 464, 479], "random": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 20, 21, 23, 24, 29, 34, 35, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 57, 58, 60, 61, 66, 67, 68, 74, 76, 77, 78, 80, 81, 85, 88, 97, 98, 99, 100, 103, 108, 109, 110, 111, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 143, 150, 151, 153, 155, 156, 157, 158, 159, 161, 162, 163, 166, 167, 169, 171, 172, 174, 175, 177, 178, 180, 183, 479], "randn": [3, 6, 7, 11, 12, 14, 21, 23, 24, 29, 34, 35, 41, 42, 44, 45, 46, 47, 48, 52, 53, 54, 58, 60, 61, 66, 67, 68, 74, 76, 77, 78, 80, 81, 85, 88, 97, 99, 103, 108, 109, 110, 111, 115, 132, 143, 151, 153, 155, 156, 157, 158, 159, 161, 162, 166, 167, 169, 171, 172, 174, 180, 183, 479], "3": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 90, 91, 92, 94, 96, 97, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 196, 197, 202, 203, 205, 206, 208, 467, 473, 475, 476, 477, 479], "4": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 111, 114, 115, 120, 121, 122, 123, 124, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 151, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 195, 202, 203, 205, 208, 467, 473, 475, 477, 479], "5": [3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 18, 19, 21, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 80, 81, 82, 86, 87, 88, 89, 90, 94, 96, 97, 99, 100, 101, 103, 104, 108, 109, 110, 111, 114, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 169, 171, 172, 173, 174, 175, 176, 178, 180, 183, 191, 202, 203, 205, 208, 467, 473, 475, 477, 479], "astyp": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 60, 61, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 80, 81, 82, 85, 87, 88, 91, 93, 94, 96, 97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 111, 114, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 143, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 183, 476, 479], "float32": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 202, 203, 205, 467, 476, 479], "test_ab": 3, "v": [3, 6, 7, 8, 9, 14, 15, 19, 21, 24, 26, 27, 29, 31, 33, 36, 38, 39, 41, 42, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 66, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 90, 91, 92, 94, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 150, 151, 153, 154, 157, 158, 159, 160, 163, 164, 166, 167, 169, 170, 172, 175, 176, 177, 180, 181, 182, 183, 191, 199, 200, 203, 204, 205, 464], "attribut": [3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 42, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 68, 70, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 146, 150, 151, 152, 153, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 463, 464, 474, 478], "consumed_input": [3, 6, 15, 21, 24, 41, 42, 45, 48, 52, 66, 71, 77, 80, 87, 91, 94, 97, 99, 109, 121, 132, 133, 143, 153, 166, 169, 170, 172], "legaci": [3, 6, 15, 21, 24, 41, 42, 45, 48, 52, 66, 71, 77, 80, 84, 87, 91, 94, 97, 99, 109, 121, 132, 133, 143, 153, 166, 169, 170, 172], "optim": [3, 6, 15, 21, 24, 41, 42, 45, 48, 52, 66, 71, 77, 80, 82, 87, 91, 94, 97, 99, 109, 121, 132, 133, 143, 153, 166, 169, 170, 172, 202, 203, 204, 205, 476, 477, 479], "calcul": [4, 5, 10, 11, 12, 13, 14, 15, 22, 25, 33, 34, 35, 40, 43, 48, 80, 92, 95, 96, 100, 134, 142, 154, 155, 156, 162, 171, 172], "arccosin": [4, 5], "invers": [4, 10, 12, 37, 55, 56, 76, 90, 140, 141, 142, 173, 476], "cosin": [4, 34, 35], "element": [4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 24, 26, 29, 30, 32, 33, 34, 35, 36, 38, 41, 47, 48, 50, 53, 55, 56, 68, 70, 73, 74, 75, 76, 80, 82, 86, 87, 88, 90, 91, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 142, 150, 154, 155, 156, 157, 158, 160, 162, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 181, 182, 184, 185, 186, 188, 189, 190, 191, 194, 195, 196, 197, 199, 200, 202, 203, 205, 459, 462, 464, 468, 479], "wise": [4, 5, 6, 10, 11, 12, 13, 17, 22, 34, 35, 41, 47, 48, 80, 82, 87, 91, 94, 95, 96, 97, 103, 137, 154, 155, 156, 162, 169, 170, 171, 172, 185, 191, 194, 202, 203, 205], "The": [4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 48, 49, 50, 51, 53, 56, 57, 58, 59, 60, 63, 64, 65, 68, 70, 71, 74, 75, 76, 80, 81, 82, 83, 84, 86, 88, 90, 92, 93, 96, 97, 98, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 146, 150, 151, 152, 154, 155, 156, 158, 159, 160, 162, 164, 165, 169, 171, 172, 173, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 461, 462, 463, 464, 465, 466, 471, 473, 474, 476, 477, 479], "arrai": [4, 5, 8, 9, 10, 11, 12, 13, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 63, 66, 68, 69, 70, 72, 73, 75, 77, 80, 81, 82, 86, 87, 88, 90, 91, 92, 94, 96, 97, 99, 101, 102, 104, 106, 107, 110, 111, 112, 113, 114, 115, 121, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 184, 188, 189, 190, 193, 195, 196, 199, 200, 202, 203, 205, 471, 476, 477, 479], "arcco": 4, "test_acos_exampl": 4, "rand": [4, 10, 41, 100, 121, 175], "test_aco": 4, "hyperbol": [5, 11, 13, 35, 156, 172], "10": [5, 8, 9, 16, 18, 23, 25, 27, 30, 31, 33, 36, 37, 38, 46, 53, 54, 57, 63, 64, 65, 80, 82, 93, 95, 97, 100, 104, 115, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 140, 142, 148, 150, 151, 163, 164, 175, 178, 203, 208, 467, 476, 477, 479], "e": [5, 6, 7, 15, 17, 19, 37, 40, 41, 43, 46, 50, 53, 56, 61, 62, 75, 76, 78, 79, 82, 87, 90, 91, 92, 93, 94, 95, 96, 97, 101, 104, 106, 108, 111, 115, 133, 136, 138, 143, 168, 169, 170, 182, 183, 192, 199, 205, 474, 479], "arccosh": 5, "2": [5, 6, 8, 9, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 64, 65, 66, 68, 69, 70, 72, 74, 75, 76, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 104, 106, 107, 111, 112, 114, 115, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 151, 152, 157, 158, 159, 160, 163, 165, 166, 167, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 189, 194, 202, 203, 204, 205, 206, 208, 467, 475, 476, 477, 479], "99322295": 5, "65745449": 5, "test_acosh_exampl": 5, "uniform": [5, 8, 9, 13, 16, 118, 119, 122, 123, 125, 126, 127, 128, 129, 130, 131, 150], "test_acosh": 5, "perform": [6, 7, 17, 22, 36, 37, 41, 44, 46, 61, 62, 68, 76, 78, 79, 81, 92, 95, 96, 97, 108, 138, 139, 140, 141, 159, 168, 169, 183, 193, 199, 200, 472], "binari": [6, 16, 17, 41, 96, 97, 169, 471, 476], "addit": [6, 33, 90, 104, 141, 142, 150, 465, 476, 477, 479], "style": [6, 7, 17, 41, 46, 61, 62, 78, 79, 82, 87, 91, 94, 96, 97, 108, 111, 169, 170, 182, 183, 202, 203, 205], "broadcast": [6, 7, 17, 41, 44, 46, 49, 57, 61, 62, 78, 79, 87, 91, 94, 96, 97, 108, 109, 111, 169, 170, 175, 182, 183, 190, 202, 203, 205], "support": [6, 7, 17, 19, 20, 25, 41, 43, 46, 50, 53, 57, 61, 62, 63, 75, 78, 79, 82, 83, 84, 87, 91, 94, 96, 97, 108, 109, 110, 111, 115, 136, 139, 142, 169, 170, 182, 183, 186, 196, 197, 202, 203, 205, 459, 472, 475, 476, 478], "multidirect": [6, 7, 17, 41, 46, 61, 62, 78, 79, 87, 91, 94, 96, 97, 108, 111, 169, 170, 182, 183], "more": [6, 7, 8, 9, 15, 17, 19, 25, 31, 32, 33, 38, 40, 41, 42, 46, 53, 57, 61, 62, 63, 75, 78, 79, 87, 91, 94, 96, 97, 101, 108, 109, 111, 112, 115, 134, 139, 142, 163, 164, 165, 169, 170, 173, 178, 182, 183, 195, 202, 204, 205, 459, 476, 477, 479], "pleas": [6, 7, 17, 41, 46, 57, 61, 62, 78, 79, 87, 91, 94, 96, 97, 108, 109, 111, 140, 169, 170, 182, 183], "extend": [6, 41, 97, 120, 169, 202, 205, 471, 477], "operand": [6, 7, 17, 41, 44, 46, 61, 62, 78, 79, 97, 108, 111, 169, 183], "b": [6, 7, 15, 31, 33, 38, 41, 46, 51, 53, 56, 57, 61, 62, 70, 71, 75, 76, 78, 79, 82, 85, 86, 96, 97, 107, 108, 111, 112, 113, 115, 163, 169, 175, 179, 182, 183, 188, 204, 473, 479], "second": [6, 7, 17, 20, 23, 41, 46, 61, 62, 76, 78, 79, 90, 93, 97, 108, 110, 111, 133, 164, 169, 173, 179, 182, 183, 189, 196, 198, 203, 459, 462, 476, 477, 479], "c": [6, 7, 14, 15, 25, 31, 32, 33, 38, 41, 46, 57, 58, 59, 60, 61, 62, 63, 70, 71, 74, 75, 78, 79, 82, 84, 85, 88, 89, 90, 92, 96, 97, 100, 108, 112, 136, 150, 160, 163, 168, 169, 173, 181, 183, 187, 188, 189, 190, 192, 194, 196, 197, 204, 476, 477], "two": [6, 14, 19, 29, 31, 32, 33, 41, 42, 49, 55, 58, 59, 60, 76, 84, 88, 92, 97, 104, 112, 113, 115, 134, 136, 142, 152, 169, 173, 176, 181, 187, 191, 202, 203, 205, 462, 476, 477, 479], "test_add": 6, "_add_uint8": 6, "randint": [6, 41, 50, 97, 100, 150, 169, 175, 178], "24": [6, 14, 25, 31, 32, 33, 39, 41, 51, 88, 97, 114, 133, 169], "dtype": [6, 8, 9, 16, 18, 19, 20, 22, 23, 27, 30, 37, 39, 41, 49, 50, 55, 56, 63, 64, 65, 69, 72, 73, 86, 87, 90, 92, 94, 95, 96, 97, 98, 102, 104, 110, 112, 113, 114, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 140, 141, 142, 146, 150, 152, 158, 167, 169, 175, 176, 179, 181, 182, 202, 203, 205, 459, 467, 468, 476, 479], "test_add_uint8": 6, "_add_broadcast": 6, "test_add_bcast": 6, "high": [6, 36, 41, 96, 97, 100, 101, 114, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 169, 175, 204, 476], "precis": [6, 19, 36, 39, 41, 76, 96, 97, 114, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 169, 477, 479], "limit": [6, 24, 41, 97, 120, 169, 472, 479], "necessari": [6, 41, 97, 111, 169, 204, 205, 475, 477, 479], "hand": [6, 7, 41, 44, 46, 61, 78, 97, 108, 111, 169, 183], "side": [6, 7, 14, 17, 23, 31, 32, 33, 41, 44, 46, 61, 78, 84, 88, 97, 108, 111, 112, 169, 183, 477], "argument": [6, 7, 15, 19, 24, 41, 42, 46, 50, 53, 57, 61, 75, 77, 78, 90, 97, 104, 108, 111, 115, 116, 117, 118, 119, 133, 164, 165, 169, 176, 180, 183, 189, 462, 464, 479], "match": [6, 7, 14, 19, 31, 33, 39, 41, 46, 57, 61, 68, 70, 78, 81, 82, 84, 88, 97, 108, 111, 114, 142, 150, 159, 169, 183, 191, 193, 196, 465, 477], "left": [6, 7, 17, 41, 44, 46, 61, 78, 93, 97, 108, 111, 169, 183, 199, 200, 476, 479], "when": [6, 14, 15, 18, 19, 28, 37, 39, 40, 41, 44, 49, 51, 53, 64, 65, 68, 81, 89, 97, 100, 101, 104, 111, 112, 130, 133, 134, 136, 138, 139, 141, 142, 158, 159, 160, 169, 173, 177, 179, 182, 187, 191, 192, 201, 204, 462, 463, 468, 475, 476, 477, 478, 479], "specifi": [6, 16, 17, 18, 19, 23, 24, 25, 26, 29, 30, 33, 37, 39, 41, 42, 50, 53, 57, 63, 64, 65, 68, 75, 76, 82, 84, 90, 97, 98, 100, 104, 105, 110, 111, 114, 115, 116, 117, 118, 119, 133, 134, 135, 139, 140, 141, 142, 144, 147, 151, 158, 160, 164, 165, 168, 169, 173, 176, 178, 179, 191, 201, 204, 462, 463, 464, 468, 479], "either": [6, 14, 17, 29, 31, 32, 33, 39, 41, 42, 82, 84, 88, 97, 100, 105, 111, 112, 113, 114, 150, 160, 165, 169, 173, 179, 182, 185, 186, 187, 188, 190, 191, 196, 197, 201, 205, 479], "scalar": [6, 18, 24, 29, 30, 32, 37, 39, 40, 41, 42, 43, 56, 57, 64, 65, 70, 82, 86, 97, 100, 101, 102, 104, 107, 110, 111, 112, 113, 114, 120, 133, 138, 144, 147, 148, 149, 157, 160, 165, 169, 191, 202, 203, 205], "rank": [6, 8, 9, 23, 26, 27, 28, 36, 39, 41, 50, 51, 54, 55, 56, 58, 59, 60, 68, 70, 76, 81, 97, 104, 110, 111, 114, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 140, 141, 142, 151, 158, 159, 164, 165, 167, 169, 176, 178, 179, 180, 181, 479], "smaller": [6, 23, 41, 49, 97, 109, 111, 134, 165, 169, 479], "than": [6, 8, 9, 14, 23, 25, 26, 31, 32, 33, 37, 41, 49, 84, 88, 90, 97, 101, 104, 111, 112, 134, 139, 142, 158, 169, 173, 181, 185, 195, 476, 477, 479], "have": [6, 8, 9, 16, 20, 27, 28, 39, 41, 49, 51, 53, 56, 57, 63, 68, 70, 75, 76, 81, 86, 87, 90, 91, 93, 94, 97, 100, 101, 104, 106, 111, 112, 113, 114, 115, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 138, 139, 141, 142, 145, 148, 150, 152, 158, 159, 160, 169, 170, 190, 191, 194, 195, 199, 200, 462, 463, 464, 473, 476, 477, 479], "contigu": [6, 41, 97, 111, 169, 193, 471, 476, 477], "subset": [6, 14, 23, 41, 84, 88, 97, 111, 134, 169, 476], "": [6, 8, 9, 15, 17, 19, 20, 25, 27, 28, 32, 36, 37, 39, 41, 42, 43, 53, 54, 55, 56, 57, 63, 68, 70, 75, 76, 81, 86, 93, 97, 100, 102, 110, 111, 112, 114, 115, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 158, 159, 160, 165, 169, 173, 175, 178, 188, 190, 191, 192, 193, 202, 203, 204, 205, 459, 463, 464, 465, 471, 473, 476, 477, 479], "start": [6, 14, 25, 31, 32, 33, 41, 56, 84, 88, 90, 97, 110, 111, 112, 120, 138, 151, 158, 169, 173, 200], "mutual": [6, 41, 97, 111, 169], "axi": [6, 7, 8, 9, 14, 15, 23, 25, 26, 27, 28, 31, 32, 33, 36, 37, 38, 39, 41, 46, 51, 53, 54, 55, 56, 58, 60, 61, 68, 76, 78, 81, 83, 84, 88, 90, 92, 97, 98, 104, 108, 110, 111, 112, 114, 115, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 140, 141, 151, 158, 159, 163, 164, 165, 167, 169, 175, 176, 179, 180, 183, 194, 476, 477], "set": [6, 7, 15, 33, 36, 37, 41, 42, 44, 46, 50, 61, 63, 70, 72, 78, 82, 90, 96, 97, 100, 101, 108, 111, 130, 133, 134, 136, 141, 142, 158, 168, 169, 173, 178, 183, 187, 188, 191, 193, 195, 196, 204, 205, 462, 463, 464, 465, 473, 476, 477, 479], "suffix": [6, 41, 97, 111, 169, 199, 200, 466], "assum": [6, 15, 23, 31, 32, 33, 41, 53, 75, 90, 97, 110, 111, 112, 115, 134, 139, 150, 169, 173, 191, 195, 199, 200, 202, 203, 205, 477, 479], "dim": [6, 23, 29, 41, 82, 97, 111, 158, 164, 167, 169, 464, 473, 477, 479], "expans": [6, 41, 97, 111, 169], "doesn": [6, 14, 33, 41, 76, 97, 111, 169, 202], "work": [6, 41, 97, 111, 169, 471, 479], "yet": [6, 19, 41, 97, 111, 169], "need": [6, 33, 41, 42, 68, 81, 82, 90, 97, 111, 134, 139, 159, 168, 169, 179, 190, 202, 204, 471, 476, 477, 479], "pass": [6, 41, 42, 82, 97, 111, 139, 158, 169, 184, 193, 195, 203, 204, 465], "enabl": [6, 7, 14, 37, 41, 44, 46, 61, 78, 88, 97, 108, 111, 138, 139, 169, 183, 472], "dimens": [6, 7, 8, 9, 14, 15, 23, 25, 26, 27, 28, 31, 32, 33, 36, 37, 38, 39, 40, 41, 44, 46, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 68, 71, 74, 75, 76, 78, 81, 82, 84, 87, 88, 89, 90, 91, 94, 97, 102, 104, 108, 110, 111, 112, 114, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 139, 140, 141, 142, 151, 158, 159, 160, 163, 164, 165, 167, 169, 170, 175, 176, 177, 178, 179, 180, 181, 183, 184, 190, 195, 198, 461, 464, 473, 477, 479], "see": [6, 7, 15, 20, 33, 41, 42, 46, 53, 57, 61, 63, 75, 78, 82, 97, 100, 108, 111, 115, 164, 169, 183, 476, 477, 479], "doc": [6, 7, 25, 26, 33, 41, 46, 61, 63, 76, 78, 85, 86, 97, 100, 102, 108, 111, 113, 158, 169, 179, 182, 183, 476], "should": [6, 14, 15, 16, 19, 25, 30, 31, 32, 33, 41, 51, 56, 57, 63, 70, 72, 82, 84, 88, 89, 90, 96, 97, 100, 109, 110, 112, 134, 139, 141, 142, 150, 157, 160, 164, 169, 173, 180, 181, 187, 190, 191, 202, 203, 205, 462, 463, 464, 474, 476, 477, 479], "share": [6, 41, 97, 169, 479], "With": [6, 41, 97, 169, 477], "disabl": [6, 41, 97, 169, 479], "logic": [7, 46, 61, 62, 78, 79, 108, 183], "t1": [7, 15, 16, 18, 19, 20, 26, 30, 32, 37, 42, 43, 46, 50, 53, 61, 62, 63, 64, 65, 72, 73, 75, 78, 79, 86, 90, 93, 98, 104, 108, 111, 112, 113, 114, 115, 117, 119, 134, 136, 138, 139, 151, 157, 173, 175, 183, 186, 187, 188, 189, 191, 192, 196, 199, 202, 203, 204, 205], "bool": [7, 16, 19, 20, 23, 25, 26, 27, 28, 29, 30, 38, 42, 46, 49, 50, 51, 54, 55, 56, 61, 62, 63, 69, 70, 72, 73, 78, 79, 82, 102, 103, 104, 105, 106, 107, 108, 110, 117, 119, 133, 134, 135, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 157, 158, 163, 164, 165, 167, 175, 177, 178, 179, 180, 181, 182, 183, 204, 459, 460, 462, 463, 464, 465, 467, 471, 472, 473, 474, 477, 479], "boolean": [7, 19, 26, 42, 46, 61, 62, 72, 73, 78, 79, 82, 103, 107, 108, 168, 178, 182, 183, 479], "2d": [7, 27, 31, 32, 33, 50, 51, 68, 76, 81, 85, 86, 103, 108, 110, 112, 113, 134, 159, 183, 477, 479], "z": [7, 17, 41, 42, 44, 46, 53, 61, 78, 88, 96, 97, 108, 111, 139, 169, 175, 182, 183, 184, 188, 192, 196, 199, 201, 204, 471, 476, 477, 479], "logical_and": 7, "test_and2d": 7, "3d": [7, 27, 85, 103, 108, 113, 183], "test_and3d": 7, "4d": [7, 85, 103, 108, 183], "6": [7, 14, 25, 26, 27, 30, 31, 32, 33, 36, 38, 43, 49, 53, 55, 56, 58, 60, 63, 67, 72, 75, 82, 86, 88, 90, 96, 100, 101, 103, 108, 111, 115, 120, 122, 123, 129, 130, 131, 134, 135, 139, 142, 148, 151, 154, 157, 158, 163, 164, 168, 173, 176, 178, 182, 183, 191, 203, 205, 208, 467, 475, 477, 479], "test_and4d": 7, "_and_broadcast": 7, "1d": [7, 27, 29, 30, 31, 33, 45, 108, 110, 112, 134, 151, 160, 161, 175, 183, 479], "test_and_bcast3v1d": 7, "test_and_bcast3v2d": 7, "test_and_bcast4v2d": 7, "test_and_bcast4v3d": 7, "test_and_bcast4v4d": 7, "descript": [7, 46, 61, 78, 108, 183], "rule": [7, 19, 46, 49, 61, 78, 108, 137, 183, 476, 477], "indic": [8, 9, 15, 18, 23, 25, 26, 31, 32, 33, 42, 44, 49, 51, 53, 54, 55, 56, 57, 64, 65, 68, 75, 76, 81, 88, 90, 100, 101, 102, 104, 107, 110, 112, 115, 133, 134, 139, 140, 141, 142, 151, 158, 159, 167, 173, 176, 178, 179, 180, 182, 184, 186, 192, 193, 196, 197, 199, 200, 464, 477, 479], "along": [8, 9, 14, 25, 26, 31, 32, 33, 36, 38, 44, 53, 54, 55, 56, 68, 75, 81, 83, 84, 88, 90, 92, 98, 104, 110, 112, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 139, 140, 141, 158, 159, 164, 165, 175, 176, 179, 181, 189, 190, 194, 202, 203, 477, 479], "keepdim": [8, 9, 58, 60, 92, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 159, 165, 476, 479], "reduc": [8, 9, 44, 92, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 160, 202], "prune": [8, 9, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "select_last_index": [8, 9], "index": [8, 9, 26, 37, 50, 54, 55, 56, 63, 88, 90, 101, 104, 134, 135, 136, 139, 140, 141, 142, 144, 147, 148, 158, 160, 173, 176, 179, 180, 184, 186, 187, 188, 191, 195, 199, 200, 202, 462, 476], "occurr": [8, 9, 44, 68, 179, 204], "select": [8, 9, 26, 33, 68, 88, 101, 158, 167, 182, 184], "appear": [8, 9, 44, 176, 200, 204], "onc": [8, 9, 44, 139, 200, 476, 477], "otherwis": [8, 9, 26, 31, 32, 33, 36, 68, 70, 100, 104, 107, 112, 134, 152, 160, 164, 165, 174, 177, 178, 179, 182, 196, 205, 462, 464, 472], "integ": [8, 9, 17, 19, 23, 32, 39, 43, 53, 54, 55, 56, 75, 86, 92, 93, 96, 100, 101, 104, 110, 112, 113, 114, 115, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 140, 141, 142, 158, 160, 167, 173, 176, 177, 180, 186, 187, 188, 189, 190, 191, 192, 195, 196, 199, 201, 202, 203, 205, 464, 477, 479], "arg": [8, 9, 164, 200, 467], "accept": [8, 9, 15, 23, 26, 27, 28, 39, 54, 55, 68, 81, 104, 110, 114, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 139, 140, 141, 144, 147, 148, 158, 159, 164, 165, 167, 168, 176, 179, 180, 464], "keep": [8, 9, 63, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 165, 476, 477], "whether": [8, 9, 14, 31, 32, 33, 37, 42, 57, 72, 82, 84, 88, 96, 101, 112, 139, 168, 176, 178, 179, 186, 190, 192, 197, 459, 462, 465, 474, 476], "multipl": [8, 9, 15, 31, 57, 68, 82, 89, 97, 136, 139, 141, 142, 158, 173, 199, 200, 202, 203, 205, 476], "_no_keepdim": [8, 9], "argmax_use_numpi": 8, "test_argmax_no_keepdims_exampl": 8, "test_argmax_no_keepdims_random": 8, "_keepdim": [8, 9, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "test_argmax_keepdims_exampl": 8, "test_argmax_keepdims_random": 8, "_default_axes_keepdim": [8, 9, 122, 123, 125, 126, 127, 128, 129, 130, 131], "test_argmax_default_axis_exampl": 8, "test_argmax_default_axis_random": 8, "_negative_axis_keepdim": [8, 9], "test_argmax_negative_axis_keepdims_exampl": 8, "test_argmax_negative_axis_keepdims_random": 8, "_no_keepdims_select_last_index": [8, 9], "argmax_use_numpy_select_last_index": 8, "test_argmax_no_keepdims_example_select_last_index": 8, "test_argmax_no_keepdims_random_select_last_index": 8, "_keepdims_select_last_index": [8, 9], "test_argmax_keepdims_example_select_last_index": 8, "test_argmax_keepdims_random_select_last_index": 8, "_default_axes_keepdims_select_last_index": [8, 9], "test_argmax_default_axis_example_select_last_index": 8, "test_argmax_default_axis_random_select_last_index": 8, "_negative_axis_keepdims_select_last_index": [8, 9], "test_argmax_negative_axis_keepdims_example_select_last_index": 8, "test_argmax_negative_axis_keepdims_random_select_last_index": 8, "content": [9, 51, 120, 464, 471, 479], "argmin_use_numpi": 9, "test_argmin_no_keepdims_exampl": 9, "test_argmin_no_keepdims_random": 9, "test_argmin_keepdims_exampl": 9, "test_argmin_keepdims_random": 9, "test_argmin_default_axis_exampl": 9, "test_argmin_default_axis_random": 9, "test_argmin_negative_axis_keepdims_exampl": 9, "test_argmin_negative_axis_keepdims_random": 9, "argmin_use_numpy_select_last_index": 9, "test_argmin_no_keepdims_example_select_last_index": 9, "test_argmin_no_keepdims_random_select_last_index": 9, "test_argmin_keepdims_example_select_last_index": 9, "test_argmin_keepdims_random_select_last_index": 9, "test_argmin_default_axis_example_select_last_index": 9, "test_argmin_default_axis_random_select_last_index": 9, "test_argmin_negative_axis_keepdims_example_select_last_index": 9, "test_argmin_negative_axis_keepdims_random_select_last_index": 9, "arcsin": [10, 11], "sine": [10, 155, 156], "test_asin_exampl": 10, "test_asin": 10, "arcsinh": 11, "88137358": 11, "test_asinh_exampl": 11, "test_asinh": 11, "arctang": [12, 13], "tangent": [12, 171, 172], "arctan": 12, "test_atan_exampl": 12, "test_atan": 12, "arctanh": 13, "54930615": 13, "test_atanh_exampl": 13, "test_atanh": 13, "averag": [14, 58, 88, 100, 134, 200, 203], "pool": [14, 58, 59, 60, 84, 88, 89, 90, 136, 173], "across": [14, 15, 58, 59, 60, 74, 82, 84, 88, 89, 136, 139, 200], "accord": [14, 84, 88, 93, 98, 168, 177, 463, 479], "kernel": [14, 31, 32, 33, 58, 59, 60, 84, 88, 90, 112, 196, 197], "stride": [14, 25, 31, 32, 33, 84, 88, 90, 112, 158, 477], "length": [14, 18, 26, 31, 32, 33, 37, 53, 64, 65, 75, 84, 88, 112, 115, 134, 135, 138, 139, 149, 150, 158, 164, 165, 173, 175, 186, 187, 188, 190, 193, 198, 199, 200, 463], "consist": [14, 55, 82, 84, 88, 139, 178, 460, 465, 479], "downsampl": [14, 84, 88, 134], "further": [14, 20, 84, 88, 168, 479], "process": [14, 36, 84, 88, 139, 150, 179, 190, 477, 479], "spatial": [14, 15, 25, 31, 32, 33, 38, 58, 59, 60, 63, 84, 88, 89, 90, 112, 136, 163], "output_spatial_shap": [14, 88], "input_spatial_shap": [14, 88], "pad_shap": [14, 88], "kernel_spatial_shap": [14, 88], "strides_spatial_shap": [14, 88], "ceil_mod": [14, 88], "auto_pad": [14, 31, 32, 33, 84, 88, 90, 112], "deprec": [14, 84, 88, 140, 181, 476], "you": [14, 49, 70, 82, 88, 202, 205, 477, 479], "them": [14, 49, 54, 88, 137, 158, 173, 203, 466, 476, 477, 479], "current": [14, 63, 88, 139, 202, 205, 477], "valid": [14, 31, 32, 33, 50, 84, 88, 112, 117, 119, 134, 168, 468, 476, 479], "same_upp": [14, 31, 32, 33, 84, 88, 112], "same_low": [14, 31, 32, 33, 84, 88, 112], "window": [14, 18, 23, 37, 64, 65, 88, 138, 476], "divid": [14, 31, 32, 33, 91, 100, 112, 160, 202, 203], "number": [14, 15, 16, 19, 25, 31, 32, 33, 44, 53, 56, 58, 59, 60, 63, 70, 71, 74, 75, 82, 84, 88, 89, 90, 93, 98, 101, 104, 110, 112, 115, 120, 133, 134, 136, 138, 139, 144, 147, 148, 149, 150, 157, 158, 160, 165, 173, 175, 176, 178, 180, 181, 193, 197, 200, 202, 203, 205, 464, 476, 477, 479], "exclud": [14, 36, 88, 178], "count_include_pad": 14, "zero": [14, 15, 19, 20, 23, 30, 31, 32, 33, 37, 39, 40, 42, 43, 50, 53, 57, 63, 71, 74, 75, 76, 86, 90, 93, 96, 98, 100, 102, 112, 113, 114, 115, 133, 139, 140, 141, 150, 160, 164, 173, 178, 188, 194, 195, 196, 197, 199, 200, 202, 203, 205, 479], "must": [14, 15, 18, 19, 24, 27, 28, 29, 30, 31, 32, 33, 36, 39, 44, 49, 50, 51, 53, 56, 64, 65, 68, 70, 75, 76, 81, 82, 84, 86, 87, 88, 90, 91, 93, 94, 96, 104, 109, 112, 113, 114, 115, 116, 117, 118, 119, 134, 135, 138, 139, 142, 144, 145, 147, 148, 149, 150, 158, 159, 164, 165, 170, 173, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 464, 468, 471, 476, 477, 479], "notset": [14, 31, 32, 33, 84, 88, 112], "explicit": [14, 31, 32, 33, 44, 84, 88, 112, 477], "so": [14, 17, 23, 31, 32, 33, 42, 72, 84, 88, 90, 109, 112, 134, 135, 158, 173, 191, 202, 203, 476], "output_shap": [14, 31, 32, 33, 56, 84, 88, 90, 112], "input_shap": [14, 31, 32, 33, 84, 88, 112], "between": [14, 15, 19, 24, 27, 31, 32, 33, 37, 39, 42, 44, 53, 56, 57, 70, 75, 76, 82, 84, 86, 87, 88, 90, 91, 94, 100, 101, 105, 107, 110, 112, 114, 115, 130, 134, 138, 139, 145, 147, 148, 150, 158, 160, 164, 165, 167, 170, 173, 178, 179, 187, 189, 202, 203, 204, 205, 477, 479], "almost": [14, 31, 32, 33, 84, 88, 112, 476, 479], "depend": [14, 15, 31, 32, 33, 42, 56, 76, 82, 84, 88, 96, 112, 134, 139, 142, 158, 168, 182, 187, 190, 191, 196, 199, 477, 479], "even": [14, 16, 23, 31, 32, 33, 43, 84, 88, 112, 113, 114, 137, 191, 465, 477, 479], "odd": [14, 31, 32, 33, 84, 88, 112], "In": [14, 19, 26, 31, 32, 33, 36, 38, 39, 44, 68, 70, 81, 82, 84, 88, 90, 93, 96, 104, 112, 133, 134, 137, 141, 142, 159, 165, 173, 190, 192, 194, 202, 205, 459, 477, 479], "case": [14, 15, 19, 26, 31, 32, 33, 39, 42, 43, 44, 55, 58, 59, 60, 68, 71, 74, 76, 81, 84, 88, 89, 90, 96, 100, 104, 106, 112, 133, 134, 137, 140, 141, 142, 151, 159, 160, 168, 192, 198, 202, 459, 464, 465, 476, 477, 479], "extra": [14, 15, 31, 32, 33, 84, 88, 112, 139, 195, 462], "ad": [14, 25, 31, 32, 33, 53, 75, 84, 88, 90, 104, 110, 112, 115, 151, 152, 158, 199, 200, 462, 472, 477, 479], "begin": [14, 25, 31, 32, 33, 44, 84, 88, 90, 110, 112, 120], "pixel": [14, 25, 31, 32, 33, 63, 84, 88, 90, 110, 112, 134, 136], "edg": [14, 93, 110, 462], "count": [14, 23, 26, 27, 33, 36, 39, 51, 54, 55, 68, 76, 81, 82, 104, 110, 114, 134, 139, 140, 141, 144, 147, 148, 151, 158, 159, 164, 165, 167, 173, 176, 179, 180, 195, 198, 202, 203, 205, 462], "kernel_shap": [14, 31, 32, 33, 84, 88, 90, 112], "requir": [14, 15, 17, 19, 25, 27, 28, 29, 38, 44, 57, 70, 74, 76, 82, 84, 88, 89, 90, 104, 110, 116, 118, 133, 139, 150, 158, 163, 173, 176, 180, 181, 192, 199, 202, 203, 204, 205, 464, 476, 477, 479], "repres": [14, 19, 23, 25, 31, 32, 33, 37, 44, 56, 63, 70, 84, 88, 90, 98, 101, 104, 112, 138, 139, 158, 186, 204, 462, 465, 477, 479], "part": [14, 25, 31, 32, 33, 37, 84, 88, 90, 104, 112, 164, 165, 178, 202, 476, 477, 479], "correspond": [14, 17, 18, 25, 31, 32, 33, 37, 44, 49, 53, 56, 63, 64, 65, 68, 70, 75, 81, 84, 88, 90, 93, 98, 101, 110, 112, 115, 133, 134, 136, 139, 140, 141, 142, 158, 159, 173, 176, 178, 179, 180, 188, 194, 201, 202, 203, 464, 477], "x1_begin": [14, 25, 31, 32, 33, 84, 88, 90, 110, 112], "x2_begin": [14, 25, 31, 32, 33, 84, 88, 90, 110, 112], "x1_end": [14, 25, 31, 32, 33, 84, 88, 90, 110, 112], "x2_end": [14, 25, 31, 32, 33, 84, 88, 90, 110, 112], "xi_begin": [14, 25, 31, 32, 33, 84, 88, 90, 110, 112], "xi_end": [14, 25, 31, 32, 33, 84, 88, 90, 110, 112], "cannot": [14, 31, 32, 33, 70, 82, 84, 88, 90, 107, 112, 150, 158, 173, 186, 188, 204, 477, 479], "simultan": [14, 31, 32, 33, 84, 88, 90, 112], "present": [14, 15, 25, 31, 32, 33, 42, 53, 57, 70, 75, 84, 88, 90, 112, 115, 158, 173, 179, 188, 195, 462], "previou": [14, 15, 31, 32, 33, 53, 58, 59, 60, 71, 74, 75, 82, 84, 88, 89, 112, 115, 136, 205, 466, 476, 477, 479], "imag": [14, 15, 25, 31, 32, 33, 37, 58, 59, 60, 71, 74, 84, 88, 89, 90, 112, 134, 136, 138, 477, 479], "n": [14, 15, 25, 31, 32, 33, 37, 38, 39, 56, 57, 58, 59, 60, 63, 68, 70, 71, 74, 81, 82, 84, 85, 86, 88, 89, 90, 100, 102, 112, 113, 114, 134, 136, 139, 144, 147, 148, 150, 158, 159, 160, 163, 173, 178, 179, 181, 187, 190, 192, 193, 194, 196, 197, 198, 199, 200, 476, 479], "h": [14, 15, 31, 32, 33, 38, 53, 58, 59, 60, 63, 71, 74, 75, 84, 88, 89, 90, 112, 115, 136, 150, 163, 181, 202, 203, 204, 473, 476, 479], "w": [14, 15, 31, 32, 33, 37, 38, 53, 58, 59, 60, 63, 71, 74, 75, 76, 84, 88, 89, 90, 112, 115, 136, 138, 150, 160, 163, 181, 204, 473, 477, 479], "batch": [14, 15, 25, 31, 32, 33, 37, 38, 40, 53, 56, 58, 59, 60, 63, 68, 71, 74, 75, 81, 84, 88, 89, 90, 98, 101, 112, 115, 135, 136, 139, 159, 163, 178, 194, 462, 479], "channel": [14, 15, 25, 31, 32, 33, 38, 58, 59, 60, 63, 71, 74, 84, 88, 89, 90, 92, 109, 112, 136, 163], "height": [14, 15, 31, 32, 33, 38, 58, 59, 60, 63, 71, 74, 84, 88, 89, 90, 101, 112, 136, 163, 181], "width": [14, 15, 31, 32, 33, 38, 58, 59, 60, 63, 71, 74, 84, 88, 89, 90, 101, 112, 136, 163, 181, 190], "non": [14, 15, 16, 19, 23, 42, 57, 58, 59, 60, 71, 74, 84, 88, 90, 95, 102, 104, 105, 134, 139, 158, 167, 180, 204, 463], "form": [14, 15, 40, 44, 56, 58, 59, 60, 71, 74, 84, 88, 90, 164, 165, 199, 204, 479], "d1": [14, 15, 31, 32, 33, 58, 59, 60, 71, 74, 84, 86, 88, 90, 100, 112, 113, 160], "d2": [14, 15, 31, 32, 33, 58, 59, 60, 71, 74, 84, 86, 88, 90, 100, 112, 113, 160], "dn": [14, 15, 31, 32, 33, 51, 58, 59, 60, 71, 74, 84, 88, 90, 112, 477], "denot": [14, 31, 32, 56, 74, 88, 90, 112, 134, 136, 139, 142, 160, 168, 173, 203, 204], "effect": [14, 17, 31, 32, 74, 88, 90, 112, 134, 158, 173, 202], "arriv": [14, 31, 32, 74, 88, 90, 112], "data_batch": [14, 31, 32, 74, 88, 90, 112], "data_channel": [14, 31, 32, 74, 88, 90, 112], "data_featur": [14, 31, 32, 74, 88, 90, 112], "vari": [14, 84, 88], "variou": [14, 84, 88], "_averagepool_2d_precomputed_pad": 14, "8": [14, 17, 19, 20, 23, 25, 27, 29, 31, 32, 33, 38, 39, 40, 43, 53, 55, 58, 60, 63, 72, 75, 82, 86, 90, 93, 96, 104, 112, 113, 114, 115, 120, 122, 123, 126, 128, 129, 130, 131, 134, 135, 137, 138, 142, 148, 158, 163, 164, 168, 173, 176, 178, 182, 188, 195, 203, 205, 208, 467, 475, 477, 479], "9": [14, 23, 25, 27, 31, 32, 33, 36, 38, 43, 53, 54, 55, 58, 60, 63, 75, 86, 88, 101, 111, 112, 115, 120, 122, 123, 129, 130, 131, 134, 135, 137, 142, 148, 163, 164, 166, 170, 176, 178, 203, 208, 467, 476, 477, 479], "13": [14, 25, 31, 33, 53, 63, 86, 88, 90, 112, 113, 115, 135, 208, 467, 475, 477, 479], "14": [14, 19, 25, 27, 31, 33, 38, 57, 63, 88, 130, 134, 135, 142, 163, 208, 467, 475, 477, 479], "15": [14, 23, 25, 27, 31, 32, 33, 36, 53, 63, 88, 90, 112, 115, 122, 134, 135, 142, 163, 208, 467, 476, 477, 479], "16": [14, 17, 25, 27, 31, 32, 33, 53, 88, 93, 115, 123, 134, 138, 163, 208, 467, 476, 477, 479], "17": [14, 25, 31, 32, 33, 53, 88, 115, 142, 163, 173, 208, 467], "19": [14, 25, 31, 33, 38, 88, 122, 163], "20": [14, 23, 25, 31, 33, 38, 88, 114, 125, 126, 127, 128, 130, 131, 142, 150, 158, 163, 479], "21": [14, 25, 31, 33, 38, 88, 112, 163, 479], "22": [14, 25, 31, 33, 38, 88, 130, 163], "23": [14, 25, 31, 33, 38, 88, 112, 122, 163, 479], "25": [14, 25, 31, 33, 57, 64, 88, 111, 112, 121, 123, 127, 134], "test_averagepool_2d_precomputed_pad": 14, "_averagepool_2d_precomputed_pads_count_include_pad": 14, "5200": 14, "6000": [14, 63], "8000": [14, 63], "0800": 14, "2400": [14, 479], "5600": 14, "4000": [14, 63], "0400": 14, "2000": [14, 63], "0000": [14, 63], "9600": 14, "9200": 14, "1200": 14, "8800": 14, "8400": 14, "test_averagepool_2d_precomputed_pads_count_include_pad": 14, "_averagepool_2d_precomputed_strid": 14, "test_averagepool_2d_precomputed_strid": 14, "_averagepool_2d_precomputed_same_upp": 14, "test_averagepool_2d_precomputed_same_upp": 14, "_averagepool_1d_default": 14, "32": [14, 17, 19, 25, 31, 32, 33, 38, 39, 47, 76, 86, 88, 111, 112, 113, 114, 142, 477], "31": [14, 25, 31, 33, 38, 88], "x_shape": [14, 88], "out_shap": [14, 88], "get_output_shap": [14, 88], "avg": [14, 136], "test_averagepool_1d_default": 14, "_averagepool_2d_default": 14, "test_averagepool_2d_default": 14, "_averagepool_3d_default": 14, "test_averagepool_3d_default": 14, "_averagepool_2d_same_upp": 14, "get_pad_shap": [14, 88], "pad_top": [14, 88], "pad_bottom": [14, 88], "pad_left": [14, 88], "pad_right": [14, 88], "mode": [14, 15, 38, 42, 44, 63, 82, 88, 110, 134, 136, 173, 181, 194, 200, 204, 205], "constant_valu": [14, 88, 110], "nan": [14, 19, 20, 72, 73, 88, 166, 190, 191, 199, 200], "test_averagepool_2d_same_upp": 14, "_averagepool_2d_same_low": 14, "test_averagepool_2d_same_low": 14, "_averagepool_2d_pad": 14, "28": [14, 25, 31, 32, 33, 38, 88, 173], "30": [14, 25, 31, 33, 38, 88, 96, 125, 126, 127, 128, 150], "test_averagepool_2d_pad": 14, "_averagepool_2d_pads_count_include_pad": 14, "test_averagepool_2d_pads_count_include_pad": 14, "_averagepool_2d_strid": 14, "test_averagepool_2d_strid": 14, "_averagepool_2d_ceil": 14, "test_averagepool_2d_ceil": 14, "carri": [15, 71, 82, 139], "paper": [15, 18, 64, 65, 71, 74, 136, 202], "arxiv": [15, 63, 71, 136], "org": [15, 18, 25, 26, 57, 63, 64, 65, 71, 85, 86, 100, 102, 113, 114, 134, 136, 158, 179, 182, 202, 477], "1502": 15, "03167": 15, "being": [15, 26, 42, 63, 82, 96, 100, 101, 134, 190, 203, 479], "There": [15, 19, 56, 82, 194, 199, 200, 201, 476, 477, 479], "five": [15, 476], "scale": [15, 39, 42, 43, 53, 71, 74, 75, 76, 89, 93, 112, 113, 114, 115, 116, 117, 134, 136, 143, 173, 181, 198, 205], "input_mean": 15, "input_var": 15, "note": [15, 19, 25, 31, 32, 33, 37, 42, 53, 75, 82, 84, 101, 112, 115, 134, 138, 139, 142, 151, 173, 202, 203, 204, 463, 474], "estim": [15, 196, 202, 479], "statist": [15, 476], "training_mod": [15, 42], "we": [15, 16, 19, 42, 68, 81, 82, 98, 116, 117, 118, 119, 159, 165, 173, 179, 195, 202, 204, 205, 464, 473, 479], "running_mean": 15, "running_var": 15, "invalid": [15, 472, 476], "updat": [15, 53, 139, 140, 141, 142, 202, 203, 205, 459, 473, 477], "current_mean": 15, "current_var": 15, "epsilon": [15, 71, 76, 202, 203], "all_except_channel_index": 15, "reducevar": 15, "notic": [15, 191], "popul": [15, 50], "varianc": [15, 71, 76, 92, 198], "sqrd": 15, "x_i": [15, 477, 479], "x_avg": 15, "formula": [15, 22, 25, 39, 43, 92, 93, 95, 113, 114, 152, 194], "doe": [15, 33, 42, 49, 68, 81, 100, 106, 139, 142, 159, 160, 168, 179, 180, 463, 471, 476, 477, 479], "avoid": [15, 71, 76, 136, 202, 203, 477, 479], "overflow": [15, 32, 86, 113], "depreci": 15, "implementor": 15, "suggest": 15, "befor": [15, 25, 26, 53, 57, 104, 158, 179, 462, 471, 479], "op": [15, 38, 50, 82, 90, 107, 130, 139, 141, 142, 163, 181, 479], "about": [15, 42, 53, 56, 57, 75, 115, 471, 476, 479], "represent": [15, 17, 19, 42, 53, 57, 75, 104, 115, 173, 190], "empti": [15, 24, 30, 40, 42, 53, 57, 70, 75, 82, 105, 106, 107, 110, 115, 130, 133, 134, 138, 139, 144, 146, 147, 148, 149, 165, 168, 204, 462, 464, 468, 477, 479], "string": [15, 19, 20, 23, 25, 26, 27, 28, 29, 38, 42, 44, 49, 50, 51, 53, 54, 55, 56, 57, 63, 69, 70, 75, 82, 102, 104, 105, 106, 107, 110, 115, 117, 119, 133, 134, 135, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 157, 158, 163, 164, 165, 167, 168, 173, 175, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 191, 192, 195, 196, 199, 201, 204, 462, 463, 464, 469, 471, 474, 477, 479], "mai": [15, 16, 19, 32, 42, 44, 53, 57, 70, 75, 86, 100, 113, 115, 134, 139, 160, 173, 190, 191, 199, 200, 202, 476, 477, 479], "place": [15, 42, 53, 57, 75, 115, 195, 463], "actual": [15, 17, 42, 53, 57, 75, 76, 82, 115, 133], "miss": [15, 42, 53, 57, 75, 115, 190, 199, 476, 477, 479], "trail": [15, 42, 53, 57, 75, 115, 142], "those": [15, 42, 53, 57, 75, 104, 115, 134, 202, 203, 462, 477], "simpli": [15, 42, 53, 57, 75, 115, 472], "omit": [15, 42, 53, 57, 75, 82, 115, 136, 139, 151, 158, 199, 200, 204], "divis": [15, 41, 71, 76, 165], "factor": [15, 89, 114, 134, 136, 202, 205], "g": [15, 19, 31, 40, 53, 75, 82, 93, 115, 136, 202, 203, 205, 474, 479], "would": [15, 17, 19, 25, 30, 36, 42, 130, 168, 173, 191, 202, 203, 205, 477, 479], "everi": [15, 44, 134, 139, 195, 463, 464, 466, 471, 476, 477, 479], "over": [15, 44, 59, 74, 82, 84, 89, 101, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 138, 139, 477, 479], "becom": [15, 63, 173, 205, 479], "singl": [15, 27, 28, 101, 139, 142, 167, 176, 178, 180, 195, 202, 459, 462, 477, 479], "bia": [15, 31, 33, 53, 71, 74, 75, 76, 112, 115, 139, 152, 477, 479], "t2": [15, 16, 18, 19, 20, 30, 32, 36, 37, 42, 43, 50, 63, 64, 65, 72, 73, 86, 90, 93, 98, 104, 112, 113, 114, 117, 119, 134, 136, 138, 139, 186, 187, 188, 191, 192, 196, 199, 202, 203, 204, 205], "u": [15, 44, 56, 76], "allow": [15, 19, 49, 76, 77, 109, 136, 139, 141, 142, 182, 204, 477, 479], "var": [15, 76], "saved_mean": 15, "saved_var": 15, "save": [15, 76, 173, 463, 473, 474, 477, 479], "dure": [15, 42, 76, 88], "speed": [15, 76], "up": [15, 37, 51, 76, 82, 120, 134, 139, 140, 173, 188, 191, 476], "per": [15, 32, 39, 43, 71, 86, 93, 101, 112, 113, 114, 190, 192, 193, 196, 197, 202, 476], "activ": [15, 53, 75, 95, 115, 477], "featur": [15, 31, 32, 33, 112, 136, 190, 195, 198, 199, 200, 476, 477, 479], "mini": 15, "1e": [15, 19, 71, 76, 92, 202, 203], "5f": [15, 71], "is_test": [15, 42], "9f": 15, "dimension": [15, 25, 56, 68, 71, 81, 85, 86, 113, 139, 142, 159, 160, 167, 180], "nchw": [15, 71], "draw": 16, "distribut": [16, 98, 116, 117, 118, 119], "contain": [16, 25, 29, 31, 32, 33, 40, 42, 44, 56, 68, 81, 90, 93, 100, 104, 105, 107, 110, 112, 120, 135, 145, 148, 149, 150, 151, 159, 165, 173, 176, 178, 179, 180, 196, 197, 204, 205, 459, 463, 464, 471, 476, 477, 479], "probabl": [16, 98, 100, 160, 196], "p": [16, 59, 75, 83, 84, 160, 479], "determinist": 16, "differ": [16, 19, 49, 70, 76, 82, 102, 109, 134, 135, 204, 205, 476, 477, 479], "seed": [16, 42, 98, 100, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 129, 130, 131], "gener": [16, 18, 19, 20, 25, 26, 30, 33, 42, 50, 57, 63, 64, 65, 82, 85, 86, 90, 93, 98, 101, 102, 110, 113, 116, 117, 118, 119, 120, 134, 139, 173, 179, 182, 193, 202, 204, 476, 477, 479], "auto": [16, 33, 42, 90, 98, 116, 117, 118, 119, 204], "onli": [16, 25, 31, 32, 33, 36, 37, 43, 50, 63, 70, 83, 84, 86, 93, 104, 110, 113, 134, 138, 139, 152, 165, 168, 173, 186, 187, 188, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 463, 471, 476, 477, 479], "_bernoulli_without_dtyp": 16, "bernoulli_reference_implement": 16, "test_bernoulli": 16, "_bernoulli_with_dtyp": 16, "tensorproto": [16, 18, 19, 20, 29, 30, 50, 64, 65, 69, 70, 82, 93, 106, 107, 116, 117, 118, 119, 139, 150, 463, 464, 466, 468, 471, 477, 479], "float64": [16, 36, 50, 96, 467, 476, 479], "test_bernoulli_doubl": 16, "_bernoulli_with_se": 16, "test_bernoulli_se": 16, "bitwis": 17, "shift": [17, 76, 136], "direct": [17, 36, 53, 75, 115, 139, 202, 203, 205], "move": [17, 38, 163, 202, 203, 478], "toward": 17, "decreas": 17, "bit": [17, 19, 32, 39, 43, 76, 86, 88, 112, 113, 114, 126, 128, 191, 202, 203, 205, 477], "increas": [17, 25, 200, 202, 477], "anoth": [17, 25, 70, 139, 190, 191, 204, 476, 477, 479], "amount": [17, 33], "becaus": [17, 19, 25, 37, 68, 81, 90, 138, 139, 159, 202, 203, 479], "necessarili": [17, 173], "_right_unit8": 17, "test_bitshift_right_uint8": 17, "_right_unit16": 17, "test_bitshift_right_uint16": 17, "_right_unit32": 17, "test_bitshift_right_uint32": 17, "_right_unit64": 17, "test_bitshift_right_uint64": 17, "_left_unit8": 17, "test_bitshift_left_uint8": 17, "_left_unit16": 17, "test_bitshift_left_uint16": 17, "_left_unit32": 17, "test_bitshift_left_uint32": 17, "_left_unit64": 17, "test_bitshift_left_uint64": 17, "blackman": 18, "ieeexplor": [18, 64, 65, 134], "ieee": [18, 64, 65, 134], "1455106": [18, 64, 65], "output_datatyp": [18, 64, 65, 93], "strictli": [18, 19, 64, 65, 93], "datatyp": [18, 19, 30, 50, 64, 65, 93, 116, 117, 118, 119, 152, 468], "enum": [18, 19, 50, 64, 65, 93, 116, 117, 118, 119, 168, 200], "whose": [18, 24, 64, 65, 93, 135, 160, 173], "period": [18, 64, 65], "symmetr": [18, 64, 65], "hann": [18, 64, 65], "point": [18, 19, 32, 39, 40, 42, 43, 56, 63, 64, 65, 76, 82, 86, 96, 100, 112, 113, 114, 134, 136, 189, 199, 204], "int64_t": [18, 37, 64, 65, 138], "a0": [18, 64, 65, 138], "42": [18, 25, 33, 112, 479], "a1": [18, 64, 65, 138], "a2": 18, "08": [18, 129], "1415": [18, 64, 65, 138], "arang": [18, 37, 40, 49, 54, 64, 65, 93, 96, 111, 122, 123, 138, 152, 177, 179], "test_blackmanwindow": 18, "test_blackmanwindow_symmetr": 18, "convert": [19, 20, 42, 43, 133, 136, 186, 187, 188, 191, 463, 468, 475, 477, 478, 479], "field": [19, 50, 63, 116, 117, 118, 119, 199, 200, 463, 464, 465, 472, 479], "messag": [19, 50, 116, 117, 118, 119, 461, 465, 466, 471], "plain": 19, "1000": [19, 63, 114, 158], "scientif": 19, "1e8": 19, "100": [19, 25, 37, 50, 101, 114, 131], "some": [19, 33, 49, 53, 56, 75, 115, 134, 141, 142, 190, 202, 203, 204, 475, 476, 477, 478, 479], "liter": 19, "reserv": 19, "special": [19, 100, 202, 476, 477], "inf": [19, 20, 24, 45, 72, 77, 109, 132, 143, 174], "posit": [19, 55, 72, 104, 139, 140, 141, 142, 144, 147, 148, 150, 158, 165, 176, 178, 186, 479], "infin": [19, 72], "respect": [19, 24, 76, 101, 140, 173, 202, 203, 204], "exactli": [19, 29, 44, 104, 136, 474, 479], "insensit": 19, "wai": [19, 476, 477, 479], "map": [19, 31, 32, 33, 56, 72, 93, 112, 136, 139, 173, 179, 185, 186, 187, 188, 191, 201, 205, 461, 464, 466, 468, 476, 477, 479], "infinit": [19, 477], "similarli": [19, 25, 139, 199], "314": [19, 479], "15926": 19, "hello": 19, "world": 19, "undefin": [19, 23, 106, 110, 134, 139, 158, 176, 199, 200, 479], "behavior": [19, 23, 28, 36, 96, 102, 106, 110, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 139, 158, 202, 203, 205], "arithmet": [19, 202, 203], "718": 19, "int": [19, 20, 42, 51, 57, 74, 76, 82, 85, 93, 109, 111, 120, 136, 139, 173, 178, 187, 191, 195, 201, 459, 462, 463, 464, 465, 466, 467, 468, 473, 475, 479], "convers": [19, 464, 475, 476], "alwai": [19, 205], "user": [19, 42, 82, 134, 150, 158, 204, 465, 471, 476, 477], "awar": 19, "loss": [19, 100, 160, 204], "caus": [19, 33, 63, 90, 96], "64": [19, 25, 33, 38, 112, 142, 202, 203, 205], "1415926459": 19, "141592": 19, "36": [19, 25, 33, 38, 173], "truncat": [19, 173], "store": [19, 173, 203, 463, 464, 471, 477, 479], "target": [19, 100, 134, 140, 141, 160, 193, 197, 200, 204, 475], "among": [19, 476, 479], "oor": 19, "fix": [19, 44, 476, 477], "els": [19, 20, 33, 50, 51, 53, 57, 68, 70, 75, 76, 81, 93, 107, 115, 130, 148, 159, 477, 479], "uint": 19, "discard": [19, 26], "higher": [19, 33, 178], "reinterpret": 19, "complement": 19, "200": [19, 39, 479], "56": [19, 25, 33, 38, 86, 112, 479], "complex": [19, 20, 37, 50, 138, 468, 476, 477, 479], "test_cas": [19, 20, 27, 133, 148, 459], "from_typ": [19, 20], "to_typ": [19, 20], "np_fp32": [19, 20], "47892547": [19, 20], "48033667": [19, 20], "49968487": [19, 20], "81910545": [19, 20], "47031248": [19, 20], "816468": [19, 20], "21087195": [19, 20], "7229038": [19, 20], "little_endisan": [19, 20], "sy": [19, 20], "byteord": [19, 20], "littl": [19, 20], "np_uint16_view": [19, 20], "view": [19, 20, 202, 204, 205, 477], "np_bfp16": [19, 20], "assert": [19, 20, 56], "make_tensor_type_proto": [19, 20, 69, 70, 82, 106, 107, 150, 464, 479], "bfloat": [19, 20, 182], "np_fp32_zero": [19, 20], "np_fp32_from_bfloat": [19, 20], "elif": [19, 20], "random_sampl": [19, 20, 51, 133, 163, 177], "tensor_type_to_np_typ": [19, 20, 479], "getattr": [19, 20, 477, 479], "give": [19, 20, 90, 476, 477, 479], "object": [19, 20, 168, 461, 463, 464, 466, 468, 471, 479], "script": [19, 20, 63, 477], "ss": [19, 20], "encod": [19, 20, 100, 139, 194, 195, 462, 477], "utf": [19, 20, 29, 168, 173], "su": [19, 20], "decod": [19, 20, 200], "append": [19, 20, 139, 479], "test_cast_": 19, "_to_": [19, 20], "target_typ": 20, "like": [20, 26, 68, 81, 85, 86, 96, 113, 139, 159, 182, 471, 476, 477, 479], "test_castlike_": 20, "test_ceil_exampl": 21, "test_ceil": 21, "continu": [22, 107, 189, 477], "differenti": [22, 204], "exponenti": [22, 48, 143, 159, 203], "linear": [22, 39, 53, 82, 90, 93, 95, 114, 132, 134, 143, 174, 181, 192, 193, 196, 197, 204, 476, 477, 478], "unit": [22, 76, 95, 143, 198, 476], "alpha": [22, 45, 53, 57, 66, 67, 74, 75, 77, 115, 143, 174, 203, 205, 477], "control": [22, 33, 173, 474, 479], "input_data": [22, 23, 92, 95], "8439683": [22, 92], "5665144": [22, 92], "05836735": [22, 92], "02916367": [22, 92], "12964272": [22, 92], "5060197": [22, 92], "79538304": [22, 92], "9411346": [22, 92], "9546573": [22, 92], "17730942": [22, 92], "46192095": [22, 92], "26480448": [22, 92], "6746842": [22, 92], "01665257": [22, 92], "62473077": [22, 92], "9240844": [22, 92], "9722341": [22, 92], "11965699": [22, 92], "41356155": [22, 92], "9129373": [22, 92], "59330076": [22, 92], "81929934": [22, 92], "7862604": [22, 92], "11799799": [22, 92], "69248444": [22, 92], "54119414": [22, 92], "07513223": [22, 92], "positive_input": 22, "maximum": [22, 24, 43, 68, 82, 87, 88, 101, 126, 139, 141, 142, 173], "negative_input": 22, "minimum": [22, 24, 43, 94, 128, 141, 142, 173, 464], "expected_output": [22, 56, 92, 95, 164], "test_celu": 22, "center": [23, 63, 93], "crop": 23, "ax": [23, 76, 82, 92, 110, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 151, 158, 167, 177, 180, 184, 476, 477, 479], "bigger": [23, 479], "extract": [23, 150, 158, 173, 465, 474, 476, 479], "back": [23, 25, 26, 27, 36, 39, 51, 54, 55, 68, 76, 81, 90, 104, 110, 114, 134, 139, 140, 141, 144, 147, 148, 151, 158, 159, 164, 165, 167, 176, 179, 180, 462], "repeat": [23, 44, 75, 110, 134, 158, 175], "tind": [23, 54, 55, 100, 110, 140, 141, 158, 160], "d": [23, 25, 32, 36, 39, 40, 49, 53, 55, 56, 63, 68, 75, 76, 81, 86, 88, 89, 90, 110, 112, 113, 114, 115, 120, 134, 136, 140, 141, 158, 159, 160, 165, 172, 173, 176, 178, 179, 181, 186, 188, 189, 204, 473, 479], "output_data": 23, "complex128": [23, 25, 26, 27, 28, 29, 38, 49, 51, 54, 55, 56, 63, 69, 70, 82, 102, 104, 105, 106, 107, 110, 117, 119, 133, 134, 135, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 157, 158, 163, 164, 165, 167, 175, 177, 178, 179, 180, 181, 182, 204, 467, 477, 479], "complex64": [23, 25, 26, 27, 28, 29, 37, 38, 49, 51, 54, 55, 56, 63, 69, 70, 82, 102, 104, 105, 106, 107, 110, 117, 119, 133, 134, 135, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 157, 158, 163, 164, 165, 167, 175, 177, 178, 179, 180, 181, 182, 204, 464, 467, 477, 479], "_center_crop_pad_crop": 23, "diff": [23, 76], "uneven": 23, "7": [23, 25, 27, 31, 32, 33, 36, 54, 55, 56, 58, 60, 63, 72, 86, 88, 90, 96, 104, 110, 112, 122, 123, 129, 130, 131, 134, 135, 137, 142, 148, 158, 163, 164, 173, 176, 178, 182, 203, 205, 208, 467, 475, 477, 479], "test_center_crop_pad_crop": 23, "_center_crop_pad_pad": 23, "test_center_crop_pad_pad": 23, "_center_crop_pad_crop_and_pad": 23, "third": [23, 90, 179, 182], "stai": 23, "test_center_crop_pad_crop_and_pad": 23, "_center_crop_pad_crop_axes_hwc": 23, "test_center_crop_pad_crop_axes_hwc": 23, "_center_crop_pad_crop_axes_chw": 23, "test_center_crop_pad_crop_axes_chw": 23, "within": [24, 44, 54, 55, 56, 140, 141, 180, 190, 200, 477], "interv": [24, 101, 476], "thei": [24, 63, 93, 112, 113, 139, 151, 158, 179, 190, 196, 200, 202, 203, 476, 477, 479], "numeric_limit": 24, "lowest": [24, 93], "under": [24, 471, 477], "replac": [24, 142, 190, 195, 479], "abov": [24, 53, 68, 75, 76, 81, 82, 100, 115, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 142, 159, 173, 178, 476], "min_val": 24, "max_val": 24, "test_clip_exampl": 24, "test_clip": 24, "test_clip_inbound": 24, "test_clip_outbound": 24, "test_clip_splitbound": 24, "_clip_default": 24, "test_clip_default_min": 24, "no_min": 24, "suppli": [24, 82, 101, 138, 139], "test_clip_default_max": 24, "no_max": 24, "test_clip_default_inbound": 24, "_clip_default_int8": 24, "iinfo": 24, "test_clip_default_int8_min": 24, "test_clip_default_int8_max": 24, "test_clip_default_int8_inbound": 24, "rearrang": [25, 38, 163], "column": [25, 38, 88, 113, 201, 479], "block": [25, 38, 163, 477], "multidimension": [25, 477], "behav": [25, 26, 85, 86, 96, 102, 113, 182, 477], "pytorch": [25, 63, 100, 101, 134, 476], "fold": [25, 139], "stabl": [25, 100, 158], "torch": [25, 55, 63, 100, 140, 141, 476], "nn": [25, 63, 100], "html": [25, 26, 63, 85, 86, 100, 102, 113, 158, 179, 182], "multi": [25, 82], "dangel": 25, "unfoldnd": 25, "although": 25, "image_shap": 25, "look": [25, 188, 191, 476, 477, 479], "redund": 25, "could": [25, 32, 86, 112, 133, 150, 476, 477, 479], "convolut": [25, 31, 32, 33, 74, 112], "advanc": 25, "scenario": [25, 165, 477], "explain": [25, 476, 478], "blob": [25, 76, 164, 459], "master": [25, 63], "aten": 25, "src": 25, "nativ": 25, "cpp": 25, "l10": 25, "dilat": [25, 31, 32, 33, 88, 112], "ari": 25, "product": [25, 32, 56, 57, 85, 86, 113, 129, 476, 477, 478], "block_shap": 25, "l": [25, 160, 204, 476], "enumer": 25, "lexicograph": 25, "order": [25, 37, 38, 53, 75, 82, 83, 88, 102, 110, 115, 142, 150, 176, 179, 180, 186, 189, 196, 197, 204, 476], "least": [25, 167, 476], "h_img": 25, "w_img": 25, "dim_i1": 25, "dim_i2": 25, "dim_in": 25, "h_block": 25, "w_block": 25, "dim_b1": 25, "dim_b2": 25, "dim_bn": 25, "11": [25, 32, 42, 53, 63, 86, 115, 135, 163, 208, 467, 476, 477, 479], "test_col2im": 25, "_col2im_strid": 25, "test_col2im_strid": 25, "_col2im_pad": 25, "26": [25, 31, 33, 113], "41": [25, 33, 38, 112], "46": [25, 33, 38, 64], "51": [25, 31, 33, 113], "61": 25, "66": [25, 33, 38, 113, 479], "71": 25, "27": [25, 31, 33, 38, 111], "37": [25, 33, 38], "47": [25, 33, 38], "52": [25, 33, 112], "57": [25, 33, 38, 100, 127, 479], "62": 25, "67": [25, 33, 38, 112, 479], "72": [25, 31, 33, 142], "33": [25, 31, 33, 479], "38": [25, 33, 38, 86], "43": [25, 33, 112], "48": [25, 33, 38, 129], "53": [25, 33], "58": [25, 33, 38, 112], "63": [25, 31, 33, 38], "68": [25, 33, 38], "73": [25, 479], "29": [25, 31, 33, 38, 113, 479], "34": [25, 31, 33, 39, 43, 112], "39": [25, 33, 38, 112], "44": [25, 33, 86, 114, 479], "49": [25, 33, 38], "54": [25, 31, 33, 38], "59": [25, 33, 38, 39, 112], "69": [25, 112], "74": [25, 39, 131], "35": [25, 33, 57, 127, 129], "40": [25, 33, 38, 112, 125, 126, 127, 128, 150], "45": [25, 33, 38], "50": [25, 33, 38, 86, 114], "55": [25, 33, 38, 125, 126, 127, 128], "60": [25, 33, 111, 112, 113, 125, 126, 127, 128, 142], "65": [25, 38, 479], "70": [25, 479], "75": [25, 42, 74, 101, 134], "111": [25, 31, 33, 479], "114": [25, 33, 112, 113], "117": [25, 31, 33], "84": [25, 31, 39, 114, 142], "98": [25, 33, 86], "156": [25, 33], "159": [25, 33], "162": [25, 31, 33, 112, 114], "128": [25, 33, 39, 86, 112, 114, 138, 142], "201": [25, 479], "204": [25, 479], "207": [25, 31, 33, 479], "144": [25, 31, 33, 479], "test_col2im_pad": 25, "_col2im_dil": 25, "test_col2im_dil": 25, "_col2im_5d": 25, "76": [25, 33, 114], "81": [25, 31, 33, 112], "86": 25, "91": 25, "96": [25, 142], "101": [25, 101, 112], "106": [25, 33], "116": 25, "77": [25, 112, 479], "82": 25, "87": [25, 33, 39, 112, 479], "92": [25, 112], "97": 25, "102": [25, 33, 39, 112], "107": [25, 112], "112": [25, 31, 479], "78": [25, 33, 122, 130, 479], "83": [25, 86, 112], "88": [25, 33, 479], "93": [25, 31, 33, 112], "103": 25, "108": [25, 31, 33, 479], "113": [25, 33, 86, 113, 479], "118": [25, 113], "79": 25, "89": [25, 39, 112], "94": [25, 173, 203, 205], "99": [25, 31, 33, 39, 129], "104": [25, 33], "109": 25, "119": 25, "80": [25, 112], "85": [25, 33, 203, 205], "90": [25, 33, 479], "95": [25, 101, 112, 203, 205], "105": [25, 33, 142], "110": 25, "115": [25, 113], "120": [25, 33, 129, 479], "test_col2im_5d": 25, "condit": [26, 56, 70, 82, 102, 182, 477, 479], "evalu": [26, 44, 193, 477], "scipi": [26, 85, 86, 102, 113, 158, 179, 182, 476], "Its": [26, 55, 100, 134, 140, 141, 142, 173, 187, 196, 205], "exceed": 26, "_compress_0": 26, "test_compress_0": 26, "_compress_1": 26, "test_compress_1": 26, "_compress_default_axi": 26, "test_compress_default_axi": 26, "_compress_negative_axi": 26, "test_compress_negative_axi": 26, "alon": [26, 190], "concaten": [27, 28, 53, 54, 75, 82, 115, 139, 142, 189, 202, 204, 205, 462, 477], "except": [27, 28, 82, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 150, 460, 467, 475, 479], "2147483647": [27, 44, 70, 82, 87, 91, 94, 139, 145, 150, 164, 170, 189, 202, 203, 204, 205], "variad": [27, 44, 70, 82, 87, 91, 94, 139, 145, 150, 164, 170, 189, 202, 203, 204, 205], "concat_result": [27, 28], "dict": [27, 459, 464, 465, 467, 468, 473, 479], "values_": [27, 191], "item": [27, 107, 133, 148, 173, 188, 477, 479], "asarrai": [27, 179], "in_arg": 27, "k": [27, 50, 54, 55, 57, 68, 81, 82, 86, 100, 104, 113, 134, 139, 142, 150, 159, 160, 176, 178, 479], "test_concat_": 27, "_axis_": 27, "_axis_negative_": 27, "new_axi": 28, "similar": [28, 49, 55, 96, 102, 110, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 139, 140, 141, 158, 177, 476, 477], "stack": [28, 37, 138], "insert": [28, 104, 110, 148, 180, 188, 204, 462, 477, 479], "new": [28, 133, 139, 148, 202, 203, 205, 466, 476, 477, 479], "do": [28, 36, 44, 57, 63, 82, 88, 90, 96, 114, 160, 176, 192, 199, 200, 204, 476, 477, 479], "input_sequ": [28, 144, 147, 148, 149, 150], "seq": [28, 69, 70, 82, 105, 106, 107, 144, 145, 146, 147, 148, 149, 150, 165, 201], "sparse_valu": 29, "value_": [29, 191], "spars": [29, 173, 186, 462, 471, 479], "value_float": 29, "sole": 29, "value_int": 29, "value_str": 29, "make_tensor": [29, 30, 82, 464, 479], "const_tensor": [29, 82], "data_typ": [29, 82, 464, 479], "val": [29, 82, 464], "test_const": 29, "taken": [30, 133], "_float_on": 30, "tensor_valu": [30, 467], "test_constantofshape_float_on": 30, "_int32_zero": 30, "test_constantofshape_int_zero": 30, "_int32_shape_zero": 30, "test_constantofshape_int_shape_zero": 30, "filter": [31, 32, 33, 88, 101, 112, 134, 465], "group": [31, 32, 33, 112, 479], "layer": [31, 32, 33, 39, 43, 53, 68, 75, 76, 81, 82, 112, 114, 115, 159, 476, 477], "weight": [31, 32, 33, 53, 75, 93, 100, 112, 115, 134, 139, 160, 173, 192, 193, 199, 200], "m": [31, 32, 33, 37, 40, 57, 82, 86, 93, 112, 113, 138, 139, 150, 178, 193, 477, 479], "kh": [31, 32, 33, 112], "kw": [31, 32, 33, 112], "k1": [31, 32, 33, 112], "k2": [31, 32, 33, 112], "kn": [31, 32, 33, 112], "filter_out_channel": [31, 32, 112], "filter_in_channel": [31, 32, 112], "filter_spati": [31, 32, 112], "other": [31, 32, 36, 44, 58, 59, 60, 68, 72, 104, 112, 135, 139, 150, 178, 185, 190, 194, 202, 203, 204, 205, 471, 478, 479], "word": [31, 32, 112, 168, 173, 190, 194], "multipli": [31, 53, 57, 85, 86, 93, 113, 198, 476, 479], "node_with_pad": 31, "y_with_pad": 31, "153": [31, 43, 112], "123": [31, 33, 82, 112], "test_basic_conv_with_pad": 31, "without": [31, 32, 68, 81, 159, 199, 200, 476, 477, 479], "node_without_pad": 31, "y_without_pad": 31, "test_basic_conv_without_pad": 31, "_conv_with_strid": 31, "198": [31, 33], "141": [31, 33, 112], "177": 31, "124": [31, 112], "test_conv_with_strides_pad": 31, "234": [31, 33, 112, 479], "252": [31, 114, 479], "test_conv_with_strides_no_pad": 31, "nxcxhxw": 31, "node_with_asymmetric_pad": 31, "y_with_asymmetric_pad": 31, "189": [31, 33], "171": [31, 33], "183": 31, "test_conv_with_strides_and_asymmetric_pad": 31, "_conv_with_autopad_sam": 31, "test_conv_with_autopad_sam": 31, "never": [32, 86, 113, 477, 479], "accumul": [32, 82, 86, 113, 139, 202, 203, 205], "ofpixel": [32, 112], "defaultsto": [32, 112], "x_zero_point": [32, 39, 112], "quantiz": [32, 39, 43, 86, 112, 113, 114, 136], "w_zero_point": [32, 112], "t3": [32, 86, 93, 104, 112, 113, 139, 202, 203, 205], "_without_pad": 32, "convinteger_nod": 32, "test_convinteger_without_pad": 32, "_with_pad": 32, "convinteger_node_with_pad": 32, "test_convinteger_with_pad": 32, "via": [33, 53, 75, 115, 142, 204], "equat": [33, 42, 44, 53, 55, 75, 76, 115, 134, 142], "input_s": [33, 53, 75, 115], "output_pad": 33, "start_i": 33, "end_i": 33, "explicitli": [33, 42, 68, 81, 84, 90, 110, 133, 134, 159], "total_pad": 33, "coordin": [33, 89, 92, 101, 134, 136, 173, 202], "vector": [33, 37, 47, 53, 63, 68, 75, 81, 86, 110, 113, 115, 159, 160, 173, 188, 192, 193, 196, 197], "directli": [33, 136, 139, 462, 466, 472], "affect": 33, "remov": [33, 101, 110, 136, 147, 167, 168, 198, 463, 479], "contribut": [33, 100, 134, 160], "particip": 33, "adj": 33, "adjust": [33, 43, 134, 158], "framework": [33, 84, 476, 477], "ignor": [33, 39, 42, 82, 90, 100, 114, 160, 165, 173, 463], "test_convtranspos": 33, "_convtranspose_1d": 33, "test_convtranspose_1d": 33, "_convtranspose_3d": 33, "174": [33, 112], "186": [33, 112], "288": 33, "306": [33, 479], "324": [33, 479], "222": 33, "246": [33, 113], "378": 33, "396": 33, "414": 33, "282": 33, "184": 33, "294": 33, "208": [33, 113], "168": [33, 112, 113, 142], "135": 33, "276": [33, 479], "423": 33, "441": 33, "459": 33, "312": [33, 479], "225": [33, 479], "702": 33, "729": [33, 111], "756": 33, "513": 33, "261": [33, 479], "270": [33, 114, 479], "549": 33, "837": 33, "864": 33, "891": 33, "603": 33, "195": [33, 112], "621": 33, "639": 33, "432": 33, "219": 33, "213": [33, 112, 479], "333": [33, 479], "342": [33, 134, 479], "231": [33, 479], "122": [33, 479], "192": 33, "134": [33, 112], "130": [33, 114], "264": [33, 479], "402": 33, "426": 33, "146": 33, "210": [33, 479], "648": 33, "666": 33, "684": 33, "462": 33, "240": [33, 112, 479], "486": 33, "738": 33, "774": 33, "522": 33, "170": 33, "344": 33, "534": 33, "546": 33, "368": 33, "182": [33, 479], "194": 33, "126": [33, 112, 142], "129": [33, 112, 114], "172": [33, 112], "267": 33, "273": 33, "291": 33, "147": [33, 142, 479], "150": 33, "303": [33, 479], "468": 33, "477": 33, "321": 33, "212": [33, 112, 479], "327": [33, 479], "224": [33, 479], "test_convtranspose_3d": 33, "_convtranspose_attribut": 33, "test_convtranspose_output_shap": 33, "test_convtranspose_pad": 33, "test_convtranspose_kernel_shap": 33, "_convtranspose_pad": 33, "_convtranspose_dil": 33, "test_convtranspose_dil": 33, "_convtranspose_autopad_sam": 33, "test_convtranspose_autopad_sam": 33, "test_cos_exampl": 34, "test_co": 34, "54308069": 35, "test_cosh_exampl": 35, "test_cosh": 35, "cumul": 36, "inclus": [36, 56, 180], "copi": [36, 38, 42, 50, 69, 117, 119, 133, 135, 140, 141, 142, 144, 158, 163, 175, 189, 462, 476], "exclus": [36, 51, 120, 151, 158], "summat": [36, 44], "opposit": 36, "revers": [36, 38, 53, 75, 115, 135, 139, 177, 204, 477], "input_x": [36, 179], "top": [36, 93, 176, 199, 479], "term": [36, 44, 93, 173], "j": [36, 55, 93, 104, 139, 140, 141, 477, 479], "th": [36, 76, 136, 139, 150, 173, 191, 203, 204], "_cumsum_1d": 36, "test_cumsum_1d": 36, "_cumsum_1d_exclus": 36, "test_cumsum_1d_exclus": 36, "_cumsum_1d_revers": 36, "test_cumsum_1d_revers": 36, "_cumsum_1d_reverse_exclus": 36, "test_cumsum_1d_reverse_exclus": 36, "_cumsum_2d_axis_0": 36, "test_cumsum_2d_axis_0": 36, "_cumsum_2d_axis_1": 36, "test_cumsum_2d_axis_1": 36, "_cumsum_2d_negative_axi": 36, "test_cumsum_2d_negative_axi": 36, "discret": 37, "fourier": [37, 138], "transform": [37, 38, 53, 63, 101, 134, 138, 173, 192, 193, 196, 197, 199, 200, 476, 477], "onesid": [37, 93, 138], "n_fft": [37, 138], "real": [37, 138], "satisfi": [37, 138], "conjug": [37, 138], "symmetri": [37, 138], "possibl": [37, 49, 70, 98, 138, 165, 204, 476, 477, 479], "fast": [37, 138], "rfft": [37, 138], "invok": [37, 138, 205], "batch_idx": 37, "signal_dim1": 37, "signal_dim2": 37, "signal_dimn": 37, "diment": [37, 189], "signal": [37, 93, 138], "final": [37, 76, 82, 133, 139, 158, 160, 199, 200, 205, 476, 478, 479], "imaginari": [37, 138], "dft_length": [37, 93], "signal_dim": 37, "fft": [37, 138], "test_dft": 37, "test_dft_axi": 37, "ifft": 37, "test_dft_invers": 37, "permut": [38, 177, 479], "depth": [38, 104, 163], "dcr": 38, "row": [38, 86, 88, 90, 102, 113, 173, 194, 477, 479], "tmp": [38, 163], "blocksiz": [38, 163], "crd": 38, "re": [38, 70, 93, 465, 477, 479], "arrang": 38, "_default_mode_exampl": 38, "test_depthtospace_exampl": 38, "_crd_mode_exampl": 38, "test_depthtospace_crd_mode_exampl": 38, "dequant": 39, "full": [39, 114, 477], "x_scale": [39, 112], "suppos": 39, "de": 39, "255": [39, 43, 112, 113, 114, 479], "256": [39, 479], "250": [39, 479], "254": [39, 113, 114, 479], "test_dequantizelinear": 39, "_axi": [39, 114], "245": [39, 114, 479], "142": 39, "121": [39, 112], "196": [39, 112, 114], "test_dequantizelinear_axi": 39, "determin": [40, 55, 82, 120, 150, 173, 178, 191, 195, 204, 464], "squar": [40, 123, 131, 166, 202, 203, 205], "matrix": [40, 50, 51, 53, 57, 68, 75, 81, 83, 85, 86, 93, 113, 115, 159, 173, 178, 476, 477, 479], "matric": [40, 178, 477, 479], "inner": [40, 51, 82, 139], "most": [40, 54, 55, 63, 68, 81, 133, 140, 141, 142, 159, 476, 477, 479], "submatric": 40, "_2d": [40, 164], "linalg": 40, "test_det_2d": 40, "_nd": 40, "test_det_nd": 40, "test_div_exampl": 41, "test_div": 41, "test_div_uint8": 41, "_div_broadcast": 41, "test_div_bcast": 41, "ratio": [42, 134], "mask": [42, 136], "wa": [42, 82, 195, 202, 476, 477, 479], "simpl": [42, 115, 139, 191, 459, 476, 477, 478], "typic": [42, 90, 139, 190], "henc": [42, 142], "unless": [42, 476, 477, 479], "mimic": 42, "noth": 42, "drop": [42, 168], "request": 42, "_default": [42, 53, 74, 75, 115, 174, 177], "test_dropout_default": 42, "_default_ratio": 42, "test_dropout_default_ratio": 42, "_default_mask": 42, "return_mask": 42, "test_dropout_default_mask": 42, "_default_mask_ratio": 42, "test_dropout_default_mask_ratio": 42, "_training_default": 42, "bool_": 42, "test_training_dropout_default": 42, "_training_default_ratio_mask": 42, "test_training_dropout_default_mask": 42, "_train": 42, "test_training_dropout": 42, "_training_ratio_mask": 42, "test_training_dropout_mask": 42, "_training_default_zero_ratio": 42, "test_training_dropout_zero_ratio": 42, "_training_default_zero_ratio_mask": 42, "test_training_dropout_zero_ratio_mask": 42, "old": [42, 476], "_default_old": 42, "test_dropout_default_old": 42, "make_opsetid": [42, 69, 70, 82, 139, 140, 181, 202, 203, 205, 464, 479], "_random_old": 42, "test_dropout_random_old": 42, "our": [42, 205], "phase": 42, "fill": [42, 56, 104, 110, 479], "fuse": [43, 479], "fp32": 43, "8bit": 43, "zeropoint": 43, "y_scale": [43, 112, 113, 114], "qmax": 43, "qmin": 43, "intermediate_zero_point": 43, "y_zero_point": [43, 112, 113, 114], "satur": [43, 113, 114], "itermediate_zero_point": 43, "127": [43, 112, 113, 114], "now": [43, 476, 479], "nearest": [43, 63, 113, 114, 134, 137, 181, 479], "ti": [43, 113, 114], "unsign": 43, "0196078438": 43, "x_min": 43, "x_max": 43, "y_zeropoint": 43, "test_dynamicquantizelinear": 43, "0156862754": 43, "test_dynamicquantizelinear_max_adjust": 43, "345": [43, 479], "test_dynamicquantizelinear_min_adjust": 43, "term1": 44, "term2": 44, "occur": [44, 179], "algebra": 44, "einstein": 44, "convent": 44, "comma": [44, 477], "separ": [44, 477], "lower": [44, 50, 93, 118, 119, 168, 176, 178], "letter": [44, 479], "charact": [44, 479], "classic": [44, 479], "implicitli": [44, 82], "alphabet": 44, "sort": [44, 176, 179, 477, 479], "ellipsi": 44, "implicit": [44, 477], "space": [44, 479], "0020": 44, "express": [44, 199, 200, 477, 479], "_einsum_transpos": 44, "eqn": 44, "ij": [44, 479], "ji": 44, "einsum_reference_implement": 44, "test_einsum_transpos": 44, "_einsum_sum": 44, "test_einsum_sum": 44, "_einsum_batch_diagon": 44, "ii": 44, "test_einsum_batch_diagon": 44, "_einsum_inner_prod": 44, "test_einsum_inner_prod": 44, "_einsum_batch_matmul": 44, "bij": 44, "bjk": 44, "bik": 44, "test_einsum_batch_matmul": 44, "coeffici": [45, 77, 134, 143, 192, 193, 196, 197, 202, 203, 205, 476, 477, 479], "2642411": 45, "test_elu_exampl": 45, "test_elu": 45, "_elu_default": 45, "default_alpha": [45, 66, 77, 143, 174], "test_elu_default": 45, "test_equ": 46, "_equal_broadcast": 46, "test_equal_bcast": 46, "integr": [46, 98, 144, 147, 148, 149, 165], "error": [47, 54, 55, 56, 68, 81, 82, 106, 134, 139, 140, 141, 144, 147, 148, 159, 167, 180, 472, 479], "math": [47, 74], "test_erf": 47, "36787945": 48, "71828175": 48, "test_exp_exampl": 48, "test_exp": 48, "align": [49, 136], "broadcast_to": 49, "major": [49, 88, 90, 102, 466, 476], "ndim": [49, 58, 60, 158, 175, 180], "want": [49, 63], "_dim_chang": 49, "new_shap": [49, 51], "prod": [49, 51, 122, 123, 129], "test_expand_dim_chang": 49, "_dim_unchang": 49, "test_expand_dim_unchang": 49, "diagon": [50, 82, 101, 178], "everywher": 50, "upper": [50, 118, 119, 120, 168, 178], "notspecifi": 50, "inform": [50, 90, 93, 117, 119, 158, 203, 463, 471, 472, 476, 477, 479], "_without_dtyp": 50, "ey": 50, "test_eyelike_without_dtyp": 50, "_with_dtyp": 50, "test_eyelike_with_dtyp": 50, "_populate_off_main_diagon": 50, "off_diagonal_offset": 50, "test_eyelike_populate_off_main_diagon": 50, "d_0": 51, "d_1": [51, 100], "d_n": 51, "d_": 51, "d_axi": 51, "outer": [51, 54, 55, 139, 140, 141], "remain": [51, 133, 139, 142, 462, 477, 479], "test_flatten_axi": 51, "_flatten_with_default_axi": 51, "test_flatten_default_axi": 51, "_flatten_negative_axi": 51, "test_flatten_negative_axi": 51, "test_floor_exampl": 52, "test_floor": 52, "usual": [53, 75, 115, 202, 204, 476, 477, 479], "custom": [53, 75, 115, 476, 477, 479], "cudnn": [53, 75, 82, 115], "notat": [53, 75, 115, 139], "gate": [53, 75, 115], "reset": 53, "hidden": [53, 75, 115, 139], "time": [53, 75, 82, 98, 115, 135, 138, 139, 173, 476, 477, 479], "step": [53, 75, 82, 115, 120, 138, 158, 476, 477, 479], "zrh": 53, "recurr": [53, 75, 82, 115, 139], "wb": [53, 75, 471, 479], "rb": [53, 75, 471, 479], "backward": [53, 75, 115, 136, 139, 158, 476], "wbb": [53, 75], "rbb": [53, 75], "state": [53, 75, 82, 115, 139], "num_direct": [53, 75, 115], "bidirect": [53, 75, 115, 139], "2x": [53, 75, 115], "affin": [53, 75, 115], "beta": [53, 57, 66, 67, 74, 75, 115, 203, 205, 477], "scaledtanh": [53, 75, 115], "zt": 53, "xt": [53, 75, 90, 115], "wz": 53, "ht": [53, 75, 115, 139], "rz": 53, "wbz": 53, "rbz": 53, "rt": 53, "wr": [53, 115], "rr": [53, 115], "wbr": 53, "rbr": 53, "wh": 53, "rh": 53, "rbh": 53, "wbh": 53, "linear_before_reset": 53, "activation_alpha": [53, 75, 115], "01": [53, 75, 77, 115, 205], "activation_beta": [53, 75, 115], "cell": [53, 75, 115, 139], "threshold": [53, 75, 101, 115, 174, 185, 199, 200, 463, 479], "bound": [53, 54, 55, 56, 63, 75, 82, 93, 101, 115, 140, 141, 144, 147, 148], "No": [53, 75, 115, 151, 168, 181], "forward": [53, 75, 115, 139, 158, 204], "hidden_s": [53, 75, 115], "neuron": [53, 75, 115], "layout": [53, 75, 115], "initial_h": [53, 75, 115], "y_h": [53, 75, 115, 139], "seq_length": [53, 75, 115], "batch_siz": [53, 68, 75, 81, 98, 115, 135, 138, 139, 159, 160], "pack": [53, 75, 115, 186], "potenti": [53, 75, 115], "sequence_len": [53, 75, 115, 135, 139], "initi": [53, 75, 82, 115, 139, 158, 202, 203, 462, 464, 471, 476, 478], "intermedi": [53, 75, 115, 139, 168, 179, 204, 476, 477, 479], "seq_len": [53, 75, 115], "weight_scal": [53, 75, 115], "number_of_g": [53, 75], "gru_help": 53, "test_gru_default": 53, "_initial_bia": [53, 75, 115], "custom_bia": [53, 75, 115], "w_b": [53, 75, 115], "r_b": [53, 75, 115], "test_gru_with_initial_bia": 53, "_seq_length": [53, 115], "test_gru_seq_length": 53, "_batchwis": [53, 75, 115], "test_gru_batchwis": 53, "output_sequ": [53, 75, 115, 145, 147, 148, 165], "q": [54, 56, 142, 476], "entri": [54, 104, 120, 140, 141, 142, 165, 167, 180], "let": [54, 56, 76, 134, 142, 173, 191, 202, 203, 204, 205, 477, 479], "i_": 54, "Then": [54, 158, 476], "j_": 54, "_gather_0": 54, "test_gather_0": 54, "_gather_1": 54, "test_gather_1": 54, "_gather_2d_indic": 54, "test_gather_2d_indic": 54, "_gather_negative_indic": 54, "test_gather_negative_indic": 54, "identifi": [55, 139, 140, 141, 204, 464, 477], "instanc": [55, 71, 140, 141, 464, 473], "_gather_elements_0": 55, "gather_el": 55, "test_gather_elements_0": 55, "_gather_elements_1": 55, "test_gather_elements_1": 55, "_gather_elements_negative_indic": 55, "test_gather_elements_negative_indic": 55, "batch_dim": 56, "indices_shap": [56, 142], "best": 56, "thought": 56, "tupl": [56, 58, 60, 122, 123, 125, 126, 127, 128, 129, 130, 131, 142, 199, 200, 459, 462, 464, 467, 479], "lead": [56, 205], "salient": 56, "honor": [56, 133], "met": [56, 477], "data_shap": 56, "obtain": [56, 101, 139, 140, 141, 477], "think": 56, "indices_slic": 56, "locat": [56, 63, 104, 134, 136, 142, 463, 465], "_int32": 56, "gather_nd_impl": 56, "array_equ": 56, "test_gathernd_example_int32": 56, "_float32": 56, "test_gathernd_example_float32": 56, "_int32_batchdim_1": 56, "test_gathernd_example_int32_batch_dim1": 56, "en": [57, 113, 114], "wikipedia": [57, 113, 114], "wiki": [57, 113, 114], "basic_linear_algebra_subprogram": 57, "level_3": 57, "transa": [57, 477], "transb": [57, 477], "unidirect": [57, 109], "_default_zero_bia": 57, "ranf": [57, 124], "gemm_reference_implement": 57, "test_gemm_default_zero_bia": 57, "_default_no_bia": 57, "test_gemm_default_no_bia": 57, "_default_scalar_bia": 57, "test_gemm_default_scalar_bia": 57, "_default_single_elem_vector_bia": 57, "test_gemm_default_single_elem_vector_bia": 57, "_default_vector_bia": 57, "test_gemm_default_vector_bia": 57, "_default_matrix_bia": 57, "test_gemm_default_matrix_bia": 57, "_transposea": 57, "test_gemm_transposea": 57, "_transposeb": 57, "test_gemm_transposeb": 57, "_alpha": 57, "test_gemm_alpha": 57, "_beta": 57, "test_gemm_beta": 57, "_all_attribut": 57, "test_gemm_all_attribut": 57, "inplac": [57, 462, 476, 477, 479], "equival": [58, 59, 60, 82, 130, 139, 151, 168, 176, 479], "while": [58, 59, 60, 82, 134, 136, 158, 189, 191, 201, 205, 477, 479], "test_globalaveragepool": 58, "_globalaveragepool_precomput": 58, "test_globalaveragepool_precomput": 58, "lp": [59, 83, 84], "norm": [59, 84, 122, 123, 194, 202, 203, 205, 477, 479], "test_globalmaxpool": 60, "_globalmaxpool_precomput": 60, "test_globalmaxpool_precomput": 60, "test_great": 61, "_greater_broadcast": 61, "test_greater_bcast": 61, "greater_equ": 62, "flow": [63, 474, 479], "grid": [63, 136], "h_out": 63, "w_out": 63, "interpol": [63, 134, 136, 181], "often": [63, 68, 81, 159, 477, 479], "sampler": 63, "1506": 63, "02025": 63, "grid_sampl": 63, "align_corn": [63, 134], "extrema": 63, "consid": [63, 88, 90, 173, 191, 204, 476, 479], "corner": [63, 101], "instead": [63, 82, 102, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 199, 200], "resolut": 63, "agnost": [63, 101], "three": [63, 90, 110, 134, 140, 141, 142, 179, 182, 194, 476, 479], "bilinear": [63, 134, 136, 181], "bicub": [63, 134], "padding_mod": 63, "outsid": [63, 100, 104, 134, 160, 477], "border": 63, "reflect": [63, 101, 110], "margin": 63, "far": 63, "awai": 63, "until": 63, "offset": [63, 198, 463], "therefor": [63, 82, 188, 202, 204, 471, 477, 479], "handl": [63, 202, 205], "_gridsampl": 63, "1500": 63, "5500": 63, "9500": 63, "3500": 63, "7500": 63, "5000": 63, "3000": [63, 479], "9000": 63, "7000": [63, 136], "test_gridsampl": 63, "_gridsample_paddingmod": 63, "y_zero": 63, "test_gridsample_zeros_pad": 63, "y_border": 63, "test_gridsample_border_pad": 63, "y_reflect": 63, "test_gridsample_reflection_pad": 63, "_gridsample_mode_aligncorn": 63, "y_bilinear": 63, "2500": 63, "test_gridsample_bilinear": 63, "y_align_corn": 63, "test_gridsample_aligncorners_tru": 63, "y_nearest": 63, "test_gridsample_nearest": 63, "y_bicub": 63, "1406": 63, "3828": 63, "7556": 63, "9688": 63, "1445": 63, "3906": 63, "test_gridsample_bicub": 63, "someon": 63, "who": 63, "comment": 63, "ci": 63, "ham": 64, "test_hammingwindow": 64, "test_hammingwindow_symmetr": 64, "test_hannwindow": 65, "test_hannwindow_symmetr": 65, "test_hardsigmoid_exampl": 66, "test_hardsigmoid": 66, "_hardsigmoid_default": 66, "default_beta": 66, "test_hardsigmoid_default": 66, "test_hardswish": 67, "test_hardmax_exampl": 68, "maxim": [68, 90], "hot": [68, 104], "test_hardmax_one_hot": 68, "_hardmax_axi": 68, "test_hardmax_axis_0": 68, "test_hardmax_axis_1": 68, "test_hardmax_axis_2": 68, "test_hardmax_negative_axi": 68, "test_hardmax_default_axi": 68, "rather": [68, 81, 159], "coerc": [68, 81, 159], "arbitrari": [68, 81, 151, 157, 159], "a_0": [68, 81, 159], "a_1": [68, 81, 159, 176], "a_": [68, 81, 159, 176], "a_k": [68, 81, 159], "situat": [68, 81, 159, 190], "correctli": [68, 81, 159], "throw": [68, 81, 159, 472], "0th": [68, 81, 159], "nxd": [68, 81, 159], "origin": [68, 76, 81, 90, 93, 101, 134, 135, 136, 151, 159, 173, 176, 179, 180, 472, 474, 476], "coercion": [68, 81, 159], "input_feature_dimens": [68, 81, 159], "test_ident": 69, "_sequenc": 69, "test_identity_sequ": 69, "_identity_opt": 69, "ten_in_tp": [69, 70, 82], "seq_in_tp": [69, 70, 82], "make_sequence_type_proto": [69, 70, 82, 106, 150, 464, 479], "opt_in_tp": [69, 82], "make_optional_type_proto": [69, 70, 82, 106, 107, 464, 479], "identity_nod": [69, 82], "opt_in": [69, 82], "opt_out": 69, "test_identity_opt": 69, "else_branch": [70, 82, 477, 479], "wish": [70, 82], "live": [70, 82], "enclos": [70, 82, 105, 145], "scope": [70, 82, 459, 476], "then_branch": [70, 82, 477, 479], "cond": [70, 82, 479], "branch": [70, 199, 200, 465, 479], "static": [70, 82], "s1": 70, "s2": 70, "variabl": [70, 76, 82, 92, 139, 202, 203, 204, 205, 479], "compat": [70, 136, 476, 477], "union": [70, 101, 460, 464, 470, 471, 472], "file": [70, 459, 463, 465, 471, 476, 477, 479], "neither": 70, "dim_valu": [70, 479], "nor": 70, "dim_param": [70, 473, 479], "contrast": [70, 96, 173], "_if": 70, "then_out": [70, 479], "make_tensor_value_info": [70, 82, 139, 150, 464, 479], "else_out": [70, 479], "then_const_nod": [70, 479], "numpy_help": [70, 466, 479], "from_arrai": [70, 468, 479], "else_const_nod": [70, 479], "then_bodi": [70, 82, 479], "else_bodi": [70, 82, 479], "if_nod": [70, 82, 479], "test_if": 70, "_if_seq": 70, "make_tensor_sequence_value_info": [70, 82, 464, 479], "then_seq_nod": 70, "else_seq_nod": 70, "test_if_seq": 70, "_if_opt": 70, "then_out_tensor_tp": 70, "then_out_seq_tp": 70, "then_out_opt_tp": 70, "make_value_info": [70, 82, 464, 479], "optional_empti": 70, "else_out_tensor_tp": 70, "else_out_seq_tp": 70, "else_out_opt_tp": 70, "else_opt": 70, "compute_if_output": 70, "opt_empty_in": 70, "else_seq": 70, "else_optional_seq_nod": 70, "test_if_opt": 70, "1607": 71, "08022": 71, "detect_neg": 72, "induc": 72, "detect_posit": 72, "_infin": 72, "ninf": 72, "test_isinf": 72, "_positive_infinity_onli": 72, "isposinf": 72, "test_isinf_posit": 72, "_negative_infinity_onli": 72, "isneginf": 72, "test_isinf_neg": 72, "test_isnan": 73, "local": [74, 90, 168, 462], "respons": 74, "propos": [74, 136, 202], "alexnet": 74, "nip": 74, "cc": [74, 476], "4824": 74, "imagenet": 74, "classif": [74, 192, 196, 199, 200], "pdf": [74, 202], "region": [74, 89, 136], "dk": [74, 100, 160], "square_sum": 74, "expon": [74, 111, 125], "0002": 74, "nsize": 74, "ndindex": [74, 142], "test_lrn": 74, "0001": 74, "test_lrn_default": 74, "o": [75, 105, 106, 107, 204, 467, 479], "forget": 75, "iofc": 75, "iof": 75, "peephol": 75, "pb": [75, 471, 479], "wi": [75, 115, 139], "ri": [75, 115, 139], "pi": 75, "ct": 75, "wbi": [75, 115, 139], "rbi": [75, 115, 139], "ft": 75, "wf": 75, "rf": [75, 479], "pf": 75, "wbf": 75, "rbf": [75, 196, 197], "wc": 75, "rc": 75, "wbc": 75, "rbc": 75, "ot": 75, "wo": 75, "ro": 75, "po": 75, "wbo": 75, "rbo": 75, "input_forget": 75, "coupl": 75, "initial_c": 75, "y_c": 75, "hidde_s": 75, "lstm_helper": 75, "test_lstm_default": 75, "test_lstm_with_initial_bia": 75, "_peephol": 75, "number_of_peephol": 75, "init_h": 75, "init_c": 75, "test_lstm_with_peephol": 75, "test_lstm_batchwis": 75, "overal": 76, "stage": 76, "normalized_ax": 76, "dd": 76, "varep": 76, "stddev": 76, "invstddev": 76, "stand": [76, 134], "deviat": [76, 116, 117], "stash_typ": 76, "happen": [76, 477, 479], "outcom": [76, 98, 185], "normalizedsc": 76, "syntax": [76, 459, 476, 477], "normalized_shap": 76, "calculate_normalized_shap": 76, "inv_std_dev": 76, "_layer_norm": 76, "test_layer_normalization_4d_axis_negative_": 76, "test_layer_normalization_4d_axi": 76, "_default_axi": 76, "test_layer_normalization_default_axi": 76, "test_layer_normalization_2d_axis_negative_": 76, "test_layer_normalization_2d_axi": 76, "3d_epsilon": 76, "test_layer_normalization_3d_axis_negative_": 76, "_epsilon": 76, "test_layer_normalization_3d_axi": 76, "leakag": 77, "test_leakyrelu_exampl": 77, "test_leakyrelu": 77, "_leakyrelu_default": 77, "test_leakyrelu_default": 77, "test_less": 78, "_less_broadcast": 78, "test_less_bcast": 78, "less_equ": 79, "natur": 80, "30258512": 80, "test_log_exampl": 80, "test_log": 80, "4076061": 81, "407606": 81, "test_logsoftmax_example_1": 81, "_logsoftmax_axi": 81, "10000": [81, 95, 159], "10001": [81, 159], "10002": [81, 159], "10003": [81, 159], "4401896": 81, "44018966": 81, "test_logsoftmax_large_numb": 81, "test_logsoftmax_axis_0": 81, "test_logsoftmax_axis_1": 81, "test_logsoftmax_axis_2": 81, "test_logsoftmax_negative_axi": 81, "test_logsoftmax_default_axi": 81, "construct": [82, 105, 139, 145, 146, 173, 175, 179, 464], "termin": 82, "trip": 82, "iter": [82, 135, 139, 142, 202, 203, 205, 477, 479], "bodi": [82, 139, 150, 479], "yield": [82, 182], "summar": 82, "max_trip_count": 82, "condition_var": 82, "analog": 82, "trip_count": 82, "predict": [82, 90, 160, 197, 476, 477, 479], "net": 82, "keepgo": 82, "keepgoing_out": 82, "b_out": 82, "user_defined_v": 82, "keepgoing_in": 82, "incom": 82, "b_in": 82, "my_loc": 82, "outgo": 82, "const": 82, "imagin": [82, 202, 205], "bind": 82, "formal": 82, "read": [82, 471, 476, 477, 479], "fine": 82, "access": [82, 479], "sever": [82, 90, 205, 477], "thing": [82, 479], "snippet": 82, "referenc": [82, 477], "subsequ": [82, 205], "pair": [82, 101, 112, 462, 464], "eg": 82, "These": [82, 199, 476, 477], "scan_output": [82, 139], "creat": [82, 93, 139, 140, 141, 142, 201, 202, 203, 205, 462, 464, 466, 476, 477, 479], "mechan": [82, 477], "semant": [82, 479], "wavefront": 82, "execut": [82, 139, 150, 476, 477, 479], "devblog": 82, "nvidia": 82, "frontend": 82, "emit": 82, "seri": 82, "success": [82, 138], "possibli": 82, "go": [82, 479], "residu": 82, "connect": [82, 462, 474], "subgraph": [82, 139, 150, 464, 474, 478], "figur": [82, 93, 202], "iteration_num": 82, "skip": [82, 173, 204, 479], "v_initi": 82, "v_final_and_scan_output": 82, "_loop_11": 82, "x1": [82, 89, 101, 136, 139, 150, 202, 203, 205, 479], "xn": [82, 139], "x2": [82, 89, 101, 136, 139, 202, 203, 205, 479], "y_in": 82, "y_out": 82, "scan_out": [82, 139, 479], "cond_in": 82, "cond_out": 82, "iter_count": 82, "x_const_nod": 82, "const_tensor_x": 82, "one_const_nod": 82, "const_tensor_on": 82, "i_add_nod": 82, "start_unsqueeze_nod": 82, "slice_start": 82, "end_unsqueeze_nod": 82, "slice_end": 82, "slice_nod": 82, "slice_out": 82, "y_add_nod": 82, "scan_identity_nod": 82, "loop_bodi": 82, "res_i": 82, "res_scan": 82, "test_loop11": 82, "_loop_13": 82, "seq_in": 82, "seq_out": 82, "zero_const_nod": 82, "const_tensor_zero": 82, "axes_nod": 82, "const_tensor_ax": 82, "add_nod": [82, 139], "insert_nod": 82, "seq_empti": 82, "seq_r": 82, "test_loop13_seq": 82, "_loop_16_non": 82, "x0": [82, 150], "opt_seq_in": 82, "optional_has_elem_nod": 82, "optional_has_elem": 82, "optional_is_non": 82, "optional_get_elem": 82, "constant_in": 82, "seq_const_in": 82, "init_seq_in": 82, "then_seq_out": 82, "else_seq_out": 82, "opt_seq": 82, "compute_loop_output": 82, "test_loop16_seq_non": 82, "write": [82, 140, 463, 471, 476, 477, 479], "declar": [82, 479], "intend": [84, 90, 139], "author": [84, 477], "encourag": 84, "test_matmul_2d": 85, "test_matmul_3d": 85, "test_matmul_4d": 85, "a_zero_point": [86, 113], "wherea": [86, 113], "zp_1": 86, "zp_2": 86, "zp_m": 86, "b_zero_point": [86, 113], "col": 86, "zp_n": 86, "test_matmulinteg": 86, "data_0": [87, 91, 94, 170], "data_1": [87, 91, 94, 170], "data_2": [87, 91, 94, 170], "test_max_exampl": 87, "test_max_one_input": 87, "test_max_two_input": 87, "_max_all_numeric_typ": 87, "op_dtyp": [87, 94], "all_numeric_dtyp": [87, 94], "test_max_": 87, "storage_ord": 88, "storag": [88, 90], "_maxpool_2d_uint8": 88, "test_maxpool_2d_uint8": 88, "_maxpool_2d_precomputed_pad": 88, "test_maxpool_2d_precomputed_pad": 88, "_maxpool_with_argmax_2d_precomputed_pad": 88, "test_maxpool_with_argmax_2d_precomputed_pad": 88, "_maxpool_2d_precomputed_strid": 88, "test_maxpool_2d_precomputed_strid": 88, "_maxpool_with_argmax_2d_precomputed_strid": 88, "test_maxpool_with_argmax_2d_precomputed_strid": 88, "_maxpool_2d_precomputed_same_upp": 88, "test_maxpool_2d_precomputed_same_upp": 88, "_maxpool_1d_default": 88, "test_maxpool_1d_default": 88, "_maxpool_2d_default": 88, "test_maxpool_2d_default": 88, "_maxpool_3d_default": 88, "test_maxpool_3d_default": 88, "_maxpool_2d_same_upp": 88, "test_maxpool_2d_same_upp": 88, "_maxpool_2d_same_low": 88, "test_maxpool_2d_same_low": 88, "_maxpool_2d_pad": 88, "test_maxpool_2d_pad": 88, "_maxpool_2d_strid": 88, "test_maxpool_2d_strid": 88, "_maxpool_2d_ceil": 88, "test_maxpool_2d_ceil": 88, "_maxpool_2d_dil": 88, "test_maxpool_2d_dil": 88, "roi": [89, 134, 136], "interest": [89, 136, 479], "num_roi": [89, 136], "pooled_shap": 89, "spatial_scal": [89, 136], "translat": [89, 101, 136], "batch_id": 89, "y1": [89, 101, 136, 150, 479], "y2": [89, 101, 136, 476, 479], "essenti": [90, 173], "partial": [90, 142, 204], "unpool": 90, "corrspond": 90, "ambigu": 90, "output_s": [90, 134], "meant": 90, "disambigu": 90, "known": [90, 134, 471, 477, 479], "exact": [90, 477], "try": [90, 479], "invert": 90, "_without_output_shap": 90, "xi": 90, "test_maxunpool_export_without_output_shap": 90, "_with_output_shap": 90, "test_maxunpool_export_with_output_shap": 90, "test_mean_exampl": 91, "test_mean_one_input": 91, "test_mean_two_input": 91, "br": [92, 134, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201], "ex": 92, "cacul": [92, 160], "associ": [92, 134, 173, 199, 200, 465, 476], "data_mean": 92, "data_mean_squar": 92, "power": [92, 93, 111, 203], "data_squar": 92, "data_squared_mean": 92, "std": 92, "test_mvn": 92, "linearli": 93, "frequenc": [93, 173], "spectra": 93, "num_mel_bin": 93, "lower_edge_hertz": 93, "upper_edge_hertz": 93, "mel": 93, "hertz": 93, "2595": 93, "log10": 93, "700": 93, "triangl": 93, "filterbank": 93, "peak": 93, "spectrogram": 93, "frame": [93, 138], "num_spectrogram_bin": 93, "spectrum": 93, "magnitud": [93, 476], "band": 93, "understood": 93, "nonredund": 93, "bin": [93, 136], "sample_r": 93, "dictat": 93, "triangular": [93, 178], "desir": [93, 186, 205], "highest": 93, "8192": 93, "frequency_bin": 93, "low_frequency_mel": 93, "high_frequency_mel": 93, "mel_step": 93, "flag": [93, 139, 197], "writeabl": 93, "lower_frequency_valu": 93, "center_frequency_point": 93, "higher_frequency_point": 93, "low_to_cent": 93, "center_to_high": 93, "000000": 93, "test_melweightmatrix": 93, "test_min_exampl": 94, "test_min_one_input": 94, "test_min_two_input": 94, "_min_all_numeric_typ": 94, "test_min_": 94, "self": 95, "regular": [95, 202, 203, 205], "monoton": 95, "ln": [95, 161], "linspac": 95, "log1p": 95, "test_mish": 95, "modulu": 96, "remaind": 96, "divisor": [96, 194], "fmod": 96, "howev": [96, 158, 476, 477], "dividend": 96, "forc": [96, 465], "platform": [96, 168, 476], "treatment": 96, "_mod_mixed_sign_float64": 96, "test_mod_mixed_sign_float64": 96, "_mod_mixed_sign_float32": 96, "10000038": 96, "39999962": 96, "test_mod_mixed_sign_float32": 96, "_mod_mixed_sign_float16": 96, "10156": 96, "3984": 96, "test_mod_mixed_sign_float16": 96, "_mod_mixed_sign_int64": 96, "test_mod_mixed_sign_int64": 96, "_mod_mixed_sign_int32": 96, "test_mod_mixed_sign_int32": 96, "_mod_mixed_sign_int16": 96, "test_mod_mixed_sign_int16": 96, "_mod_mixed_sign_int8": 96, "test_mod_mixed_sign_int8": 96, "_mod_uint8": 96, "test_mod_uint8": 96, "_mod_uint16": 96, "test_mod_uint16": 96, "_mod_uint32": 96, "test_mod_uint32": 96, "_mod_uint64": 96, "test_mod_uint64": 96, "_mod_int64_fmod": 96, "test_mod_int64_fmod": 96, "_mod_broadcast": 96, "test_mod_broadcast": 96, "test_mul_exampl": 97, "test_mul": 97, "test_mul_uint8": 97, "_mul_broadcast": 97, "test_mul_bcast": 97, "sample_s": 98, "class_siz": [98, 160], "unnorm": 98, "flip": 99, "test_neg_exampl": 99, "test_neg": 99, "likelihood": 100, "d_2": 100, "d_k": 100, "class": [100, 101, 104, 160, 192, 196, 197, 199, 200, 459, 461, 463, 465, 466, 474, 477, 479], "label": [100, 160, 191, 192, 196, 199, 476], "ignore_index": [100, 160], "classifi": [100, 192, 196, 199, 476], "reduct": [100, 141, 142, 160, 477], "nllloss": 100, "weight_tot": 100, "shall": [100, 160], "rescal": [100, 160, 198], "treat": [100, 142, 158, 160, 189, 192, 463], "_input_shape_is_nc": 100, "negative_log_likelihood_loss": 100, "compute_negative_log_likelihood_loss": 100, "test_nllloss_nc": 100, "_input_shape_is_ncd1d2": 100, "dim1": 100, "dim2": 100, "test_nllloss_ncd1d2": 100, "_input_shape_is_ncd1d2_reduction_mean": 100, "test_nllloss_ncd1d2_reduction_mean": 100, "_input_shape_is_ncd1d2_reduction_sum": 100, "test_nllloss_ncd1d2_reduction_sum": 100, "_input_shape_is_ncd1d2_with_weight": 100, "test_nllloss_ncd1d2_with_weight": 100, "_input_shape_is_ncd1d2_with_weight_reduction_mean": 100, "test_nllloss_ncd1d2_with_weight_reduction_mean": 100, "_input_shape_is_ncd1d2_with_weight_reduction_sum": 100, "test_nllloss_ncd1d2_with_weight_reduction_sum": 100, "_input_shape_is_ncd1d2_with_weight_reduction_sum_ii": 100, "test_nllloss_ncd1d2_with_weight_reduction_sum_ii": 100, "_input_shape_is_ncd1d2_no_weight_reduction_mean_ii": 100, "test_nllloss_ncd1d2_no_weight_reduction_mean_ii": 100, "_input_shape_is_ncd1": 100, "test_nllloss_ncd1": 100, "_input_shape_is_ncd1_weight": 100, "test_nllloss_ncd1_weight": 100, "_input_shape_is_ncd1_ii": 100, "test_nllloss_ncd1_ii": 100, "_input_shape_is_ncd1_weight_ii": 100, "test_nllloss_ncd1_weight_ii": 100, "_input_shape_is_ncd1d2d3d4d5_mean_weight": 100, "dim3": 100, "dim4": 100, "dim5": 100, "test_nllloss_ncd1d2d3d4d5_mean_weight": 100, "_input_shape_is_ncd1d2d3d4d5_none_no_weight": 100, "test_nllloss_ncd1d2d3d4d5_none_no_weight": 100, "_input_shape_is_ncd1_mean_weight_negative_ii": 100, "test_nllloss_ncd1_mean_weight_negative_ii": 100, "_input_shape_is_ncd1d2d3_none_no_weight_negative_ii": 100, "test_nllloss_ncd1d2d3_none_no_weight_negative_ii": 100, "_input_shape_is_ncd1d2d3_sum_weight_high_ii": 100, "test_nllloss_ncd1d2d3_sum_weight_high_ii": 100, "box": 101, "intersect": 101, "iou": 101, "overlap": [101, 462], "previous": [101, 203, 479], "score": [101, 160, 192, 196, 197, 199, 200], "score_threshold": 101, "center_point_box": 101, "algorithm": [101, 202, 203, 204, 205, 464], "system": [101, 134, 136, 463], "invari": 101, "orthogon": 101, "thu": [101, 142, 151], "selected_indic": 101, "collect": [101, 173, 189, 192], "ly": 101, "mostli": 101, "tf": [101, 134, 173], "x_center": 101, "y_center": 101, "num_batch": 101, "spatial_dimens": 101, "num_class": 101, "max_output_boxes_per_class": 101, "iou_threshold": 101, "decid": [101, 168], "too": [101, 202, 205, 476], "much": [101, 476, 477, 479], "num_selected_indic": 101, "batch_index": 101, "class_index": 101, "box_index": 101, "_nonmaxsuppression_suppress_by_i": 101, "test_nonmaxsuppression_suppress_by_i": 101, "_nonmaxsuppression_suppress_by_iou_and_scor": 101, "test_nonmaxsuppression_suppress_by_iou_and_scor": 101, "_nonmaxsuppression_flipped_coordin": 101, "test_nonmaxsuppression_flipped_coordin": 101, "_nonmaxsuppression_limit_output_s": 101, "test_nonmaxsuppression_limit_output_s": 101, "_nonmaxsuppression_single_box": 101, "test_nonmaxsuppression_single_box": 101, "_nonmaxsuppression_identical_box": 101, "test_nonmaxsuppression_identical_box": 101, "_nonmaxsuppression_center_point_box_format": 101, "test_nonmaxsuppression_center_point_box_format": 101, "_nonmaxsuppression_two_class": 101, "test_nonmaxsuppression_two_class": 101, "_nonmaxsuppression_two_batch": 101, "test_nonmaxsuppression_two_batch": 101, "test_nonzero_exampl": 102, "negat": 103, "logical_not": 103, "test_not_2d": 103, "test_not_3d": 103, "test_not_4d": 103, "on_valu": 104, "off_valu": 104, "innermost": 104, "_without_axi": 104, "one_hot": 104, "test_onehot_without_axi": 104, "_with_axi": 104, "axisvalu": 104, "test_onehot_with_axi": 104, "_with_negative_indic": 104, "test_onehot_negative_indic": 104, "_with_negative_axi": 104, "test_onehot_with_negative_axi": 104, "certain": 105, "_get_element_tensor": 106, "tensor_type_proto": [106, 107], "elem_typ": [106, 107, 464, 479], "optional_type_proto": [106, 107], "optional_input": [106, 107], "optional_get_element_reference_implement": 106, "test_optional_get_element_optional_tensor": 106, "test_optional_get_element_tensor": 106, "_get_element_sequ": 106, "seq_type_proto": 106, "test_optional_get_element_optional_sequ": 106, "test_optional_get_element_sequ": 106, "optional_has_element_reference_implement": 107, "test_nam": [107, 133, 148], "test_optional_has_element_": 107, "tensor_input": 107, "_empti": 107, "input_name_opt": 107, "empty_no_input_nam": 107, "empty_no_input": 107, "test_name_surfix": 107, "input_nam": [107, 474, 476], "_optional_input": 107, "_tensor_input": 107, "logical_or": 108, "test_or2d": 108, "test_or3d": 108, "test_or4d": 108, "_or_broadcast": 108, "test_or_bcast3v1d": 108, "test_or_bcast3v2d": 108, "test_or_bcast4v2d": 108, "test_or_bcast4v3d": 108, "test_or_bcast4v4d": 108, "slope": 109, "test_prelu_exampl": 109, "_prelu_broadcast": 109, "test_prelu_broadcast": 109, "sharedacross": 109, "mirror": [110, 202], "num_ax": 110, "chosen": [110, 197, 476], "input_rank": 110, "_constant_pad": 110, "pad_impl": 110, "test_constant_pad": 110, "_reflection_and_edge_pad": 110, "test_": 110, "_pad": 110, "_constant_pad_ax": 110, "test_constant_pad_ax": 110, "test_pow_exampl": 111, "test_pow": 111, "_pow_broadcast": 111, "test_pow_bcast_scalar": 111, "216": [111, 112, 479], "test_pow_bcast_arrai": 111, "_type": 111, "test_pow_types_float32_int64": 111, "test_pow_types_int64_float32": 111, "test_pow_types_float32_int32": 111, "test_pow_types_int32_float32": 111, "test_pow_types_float32_uint64": 111, "test_pow_types_float32_uint32": 111, "test_pow_types_int64_int64": 111, "test_pow_types_int32_int32": 111, "compon": [111, 138], "relat": 112, "w_scale": 112, "t4": [112, 139], "zero_point": 112, "203": [112, 479], "237": [112, 479], "242": [112, 479], "221": [112, 479], "166": 112, "232": [112, 114, 479], "178": 112, "188": 112, "230": 112, "154": [112, 479], "148": 112, "247": [112, 113, 479], "00369204697": 112, "132": [112, 479], "00172794575": 112, "00162681262": 112, "197": 112, "160": 112, "191": 112, "199": 112, "243": [112, 479], "131": 112, "175": 112, "214": [112, 113, 479], "215": 112, "163": 112, "test_qlinearconv": 112, "v_1": 113, "v_2": 113, "v_m": 113, "v_k": 113, "a_scal": 113, "b_scale": 113, "236": [113, 479], "238": 113, "0066": 113, "152": 113, "244": [113, 131, 479], "00705": 113, "0107": 113, "151": 113, "test_qlinearmatmul_2d": 113, "test_qlinearmatmul_3d": 113, "low": [114, 118, 119, 175], "get": [114, 134, 465, 476, 477, 479], "test_quantizelinear": 114, "485": 114, "960": 114, "375": [114, 134, 479], "470": 114, "test_quantizelinear_axi": 114, "wbbi": 115, "rbbi": 115, "rnn_helper": 115, "test_simple_rnn_default": 115, "test_simple_rnn_with_initial_bia": 115, "test_rnn_seq_length": 115, "test_simple_rnn_batchwis": 115, "drawn": [116, 117, 118, 119], "boundari": [118, 119, 173], "increment": [120, 200, 466, 477], "delta": 120, "number_of_el": 120, "pseudocod": 120, "shown": [120, 204, 476], "test_reciprocal_exampl": 121, "test_reciproc": 121, "l1": [122, 194], "_do_not_keepdim": [122, 123, 125, 126, 127, 128, 129, 130, 131], "test_reduce_l1_do_not_keepdims_exampl": 122, "test_reduce_l1_do_not_keepdims_random": 122, "test_reduce_l1_keep_dims_exampl": 122, "test_reduce_l1_keep_dims_random": 122, "test_reduce_l1_default_axes_keepdims_exampl": 122, "test_reduce_l1_default_axes_keepdims_random": 122, "_negative_axes_keepdim": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "test_reduce_l1_negative_axes_keep_dims_exampl": 122, "test_reduce_l1_negative_axes_keep_dims_random": 122, "l2": [123, 194, 202, 203, 205], "23606798": 123, "81024968": 123, "63014581": 123, "45362405": 123, "2788206": 123, "test_reduce_l2_do_not_keepdims_exampl": 123, "test_reduce_l2_do_not_keepdims_random": 123, "test_reduce_l2_keep_dims_exampl": 123, "test_reduce_l2_keep_dims_random": 123, "49509757": 123, "test_reduce_l2_default_axes_keepdims_exampl": 123, "test_reduce_l2_default_axes_keepdims_random": 123, "test_reduce_l2_negative_axes_keep_dims_exampl": 123, "test_reduce_l2_negative_axes_keep_dims_random": 123, "_nokeepdim": 124, "test_reduce_log_sum_desc_ax": 124, "test_reduce_log_sum_asc_ax": 124, "test_reduce_log_sum_default": 124, "test_reduce_log_sum_negative_ax": 124, "31326175": 125, "00004578": 125, "00671387": 125, "test_reduce_log_sum_exp_do_not_keepdims_exampl": 125, "test_reduce_log_sum_exp_do_not_keepdims_random": 125, "test_reduce_log_sum_exp_keepdims_exampl": 125, "test_reduce_log_sum_exp_keepdims_random": 125, "test_reduce_log_sum_exp_default_axes_keepdims_exampl": 125, "test_reduce_log_sum_exp_default_axes_keepdims_random": 125, "test_reduce_log_sum_exp_negative_axes_keepdims_exampl": 125, "test_reduce_log_sum_exp_negative_axes_keepdims_random": 125, "test_reduce_max_do_not_keepdims_exampl": 126, "test_reduce_max_do_not_keepdims_random": 126, "test_reduce_max_keepdims_exampl": 126, "test_reduce_max_keepdims_random": 126, "test_reduce_max_default_axes_keepdim_exampl": 126, "test_reduce_max_default_axes_keepdims_random": 126, "test_reduce_max_negative_axes_keepdims_exampl": 126, "test_reduce_max_negative_axes_keepdims_random": 126, "test_reduce_mean_do_not_keepdims_exampl": 127, "test_reduce_mean_do_not_keepdims_random": 127, "test_reduce_mean_keepdims_exampl": 127, "test_reduce_mean_keepdims_random": 127, "test_reduce_mean_default_axes_keepdims_exampl": 127, "test_reduce_mean_default_axes_keepdims_random": 127, "test_reduce_mean_negative_axes_keepdims_exampl": 127, "test_reduce_mean_negative_axes_keepdims_random": 127, "test_reduce_min_do_not_keepdims_exampl": 128, "test_reduce_min_do_not_keepdims_random": 128, "test_reduce_min_keepdims_exampl": 128, "test_reduce_min_keepdims_random": 128, "test_reduce_min_default_axes_keepdims_exampl": 128, "test_reduce_min_default_axes_keepdims_random": 128, "test_reduce_min_negative_axes_keepdims_exampl": 128, "test_reduce_min_negative_axes_keepdims_random": 128, "test_reduce_prod_do_not_keepdims_exampl": 129, "test_reduce_prod_do_not_keepdims_random": 129, "test_reduce_prod_keepdims_exampl": 129, "test_reduce_prod_keepdims_random": 129, "790016e": 129, "test_reduce_prod_default_axes_keepdims_exampl": 129, "test_reduce_prod_default_axes_keepdims_random": 129, "test_reduce_prod_negative_axes_keepdims_exampl": 129, "test_reduce_prod_negative_axes_keepdims_random": 129, "noop_with_empty_ax": 130, "behaviour": 130, "act": 130, "tolist": [130, 476], "test_reduce_sum_do_not_keepdims_exampl": 130, "test_reduce_sum_do_not_keepdims_random": 130, "test_reduce_sum_keepdims_exampl": 130, "test_reduce_sum_keepdims_random": 130, "test_reduce_sum_default_axes_keepdims_exampl": 130, "test_reduce_sum_default_axes_keepdims_random": 130, "test_reduce_sum_negative_axes_keepdims_exampl": 130, "test_reduce_sum_negative_axes_keepdims_random": 130, "_empty_axes_input_noop": 130, "test_reduce_sum_empty_axes_input_noop_exampl": 130, "202": 131, "test_reduce_sum_square_do_not_keepdims_exampl": 131, "test_reduce_sum_square_do_not_keepdims_random": 131, "test_reduce_sum_square_keepdims_exampl": 131, "test_reduce_sum_square_keepdims_random": 131, "650": 131, "test_reduce_sum_square_default_axes_keepdims_exampl": 131, "test_reduce_sum_square_default_axes_keepdims_random": 131, "test_reduce_sum_square_negative_axes_keepdims_exampl": 131, "test_reduce_sum_square_negative_axes_keepdims_random": 131, "rectifi": [132, 174], "test_relu": 132, "At": [133, 202, 203, 479], "unchang": [133, 168, 479], "allowzero": [133, 479], "dynam": [133, 479], "_reshap": 133, "original_shap": 133, "reordered_all_dim": 133, "reordered_last_dim": 133, "reduced_dim": 133, "extended_dim": 133, "one_dim": 133, "negative_dim": 133, "negative_extended_dim": 133, "zero_dim": 133, "zero_and_negative_dim": 133, "reshape_reference_implement": 133, "test_reshape_": 133, "_allowzero": 133, "allowzero_reord": 133, "neighborhood": 134, "output_dimens": [134, 181], "input_dimens": [134, 181], "roi_end": 134, "roi_start": 134, "antialia": 134, "cubic": 134, "antialias": 134, "downscal": 134, "achiev": 134, "stretch": 134, "resampl": 134, "interpret": 134, "coordinate_transformation_mod": [134, 136], "individu": 134, "x_resiz": 134, "x_origin": 134, "length_origin": 134, "length_res": 134, "roi_x": 134, "start_x": 134, "end_x": 134, "half_pixel": [134, 136], "pytorch_half_pixel": 134, "asymmetr": 134, "tf_crop_and_res": 134, "cubic_coeff_a": 134, "choic": 134, "tensorflow": [134, 476], "1163711": 134, "exclude_outsid": 134, "renorm": 134, "extrapolation_valu": 134, "0f": [134, 136], "keep_aspect_ratio_polici": 134, "regard": 134, "aspect": 134, "applic": [134, 205, 477], "disregard": 134, "out_siz": 134, "not_larg": 134, "extent": [134, 462], "larger": [134, 158, 173], "in_siz": 134, "round_int": 134, "not_smal": 134, "halfwai": 134, "nearest_mod": 134, "four": [134, 477, 479], "round_prefer_floor": 134, "half": [134, 137], "down": 134, "round_prefer_ceil": 134, "start1": 134, "startn": 134, "end1": 134, "endn": 134, "_resize_upsample_scales_nearest": 134, "interpolate_nd": 134, "lambda": 134, "nearest_coeff": 134, "scale_factor": 134, "test_resize_upsample_scales_nearest": 134, "_resize_downsample_scales_nearest": 134, "test_resize_downsample_scales_nearest": 134, "_resize_upsample_sizes_nearest": 134, "test_resize_upsample_sizes_nearest": 134, "_resize_downsample_sizes_nearest": 134, "test_resize_downsample_sizes_nearest": 134, "_resize_upsample_scales_linear": 134, "linear_coeff": 134, "test_resize_upsample_scales_linear": 134, "_resize_upsample_scales_linear_align_corn": 134, "33333333": 134, "66666667": 134, "test_resize_upsample_scales_linear_align_corn": 134, "_resize_downsample_scales_linear": 134, "6666665": 134, "3333331": 134, "test_resize_downsample_scales_linear": 134, "_resize_downsample_scales_linear_align_corn": 134, "142857": 134, "test_resize_downsample_scales_linear_align_corn": 134, "_resize_upsample_scales_cub": 134, "47265625": 134, "76953125": 134, "24609375": 134, "875": 134, "28125": 134, "91015625": 134, "38671875": 134, "68359375": 134, "66015625": 134, "95703125": 134, "43359375": 134, "0625": 134, "46875": 134, "09765625": 134, "57421875": 134, "87109375": 134, "56640625": 134, "86328125": 134, "33984375": 134, "96875": 134, "00390625": 134, "48046875": 134, "77734375": 134, "08203125": 134, "37890625": 134, "85546875": 134, "484375": 134, "890625": 134, "51953125": 134, "99609375": 134, "29296875": 134, "70703125": 134, "109375": 134, "515625": 134, "14453125": 134, "62109375": 134, "91796875": 134, "22265625": 134, "625": 134, "03125": 134, "13671875": 134, "12890625": 134, "42578125": 134, "90234375": 134, "53125": 134, "9375": 134, "04296875": 134, "31640625": 134, "61328125": 134, "08984375": 134, "71875": 134, "125": 134, "75390625": 134, "23046875": 134, "52734375": 134, "cubic_coeff": 134, "test_resize_upsample_scales_cub": 134, "_resize_upsample_scales_cubic_align_corn": 134, "34110787": 134, "80029155": 134, "32944606": 134, "67055394": 134, "19970845": 134, "65889213": 134, "36443149": 134, "70553936": 134, "16472303": 134, "69387755": 134, "03498542": 134, "56413994": 134, "02332362": 134, "20116618": 134, "54227405": 134, "00145773": 134, "53061224": 134, "87172012": 134, "40087464": 134, "86005831": 134, "31778426": 134, "1180758": 134, "64723032": 134, "98833819": 134, "51749271": 134, "97667638": 134, "68221574": 134, "48250729": 134, "01166181": 134, "35276968": 134, "8819242": 134, "79883382": 134, "13994169": 134, "59912536": 134, "12827988": 134, "46938776": 134, "99854227": 134, "45772595": 134, "63556851": 134, "43586006": 134, "96501458": 134, "30612245": 134, "83527697": 134, "29446064": 134, "test_resize_upsample_scales_cubic_align_corn": 134, "_resize_downsample_scales_cub": 134, "47119141": 134, "78125": 134, "08251953": 134, "71142578": 134, "02148438": 134, "32275391": 134, "91650391": 134, "2265625": 134, "52783203": 134, "test_resize_downsample_scales_cub": 134, "_resize_downsample_scales_cubic_align_corn": 134, "39519159": 134, "79038317": 134, "58076634": 134, "97595793": 134, "37114951": 134, "16153268": 134, "55672427": 134, "95191585": 134, "test_resize_downsample_scales_cubic_align_corn": 134, "_resize_upsample_sizes_cub": 134, "45507922": 134, "64057922": 134, "97157922": 134, "42257922": 134, "90732922": 134, "22332922": 134, "70807922": 134, "15907922": 134, "49007922": 134, "67557922": 134, "39437963": 134, "57987963": 134, "91087963": 134, "36187963": 134, "84662963": 134, "16262963": 134, "64737963": 134, "09837963": 134, "42937963": 134, "61487963": 134, "95130693": 134, "13680693": 134, "46780693": 134, "91880693": 134, "40355693": 134, "71955693": 134, "20430693": 134, "65530693": 134, "98630693": 134, "17180693": 134, "20525069": 134, "39075069": 134, "72175069": 134, "17275069": 134, "65750069": 134, "97350069": 134, "45825069": 134, "90925069": 134, "24025069": 134, "42575069": 134, "88975": 134, "07525": 134, "40625": 134, "85725": 134, "658": 134, "14275": 134, "59375": 134, "92475": 134, "11025": 134, "57424931": 134, "75974931": 134, "09074931": 134, "54174931": 134, "02649931": 134, "34249931": 134, "82724931": 134, "27824931": 134, "60924931": 134, "79474931": 134, "82819307": 134, "01369307": 134, "34469307": 134, "79569307": 134, "28044307": 134, "59644307": 134, "08119307": 134, "53219307": 134, "86319307": 134, "04869307": 134, "38512037": 134, "57062037": 134, "90162037": 134, "35262037": 134, "83737037": 134, "15337037": 134, "63812037": 134, "08912037": 134, "42012037": 134, "60562037": 134, "32442078": 134, "50992078": 134, "84092078": 134, "29192078": 134, "77667078": 134, "09267078": 134, "57742078": 134, "02842078": 134, "35942078": 134, "54492078": 134, "test_resize_upsample_sizes_cub": 134, "_resize_downsample_sizes_cub": 134, "63078704": 134, "00462963": 134, "37847222": 134, "12615741": 134, "87384259": 134, "62152778": 134, "99537037": 134, "36921296": 134, "test_resize_downsample_sizes_cub": 134, "v1": [134, 203, 205], "half_pixel_cent": 134, "_resize_upsample_scales_cubic_a_n0p5_exclude_outsid": 134, "55882353": 134, "81494204": 134, "35698249": 134, "89705882": 134, "39705882": 134, "93713516": 134, "47917561": 134, "73529412": 134, "58329755": 134, "83941606": 134, "38145651": 134, "92153285": 134, "42153285": 134, "96160918": 134, "50364964": 134, "75976814": 134, "75145936": 134, "00757787": 134, "54961832": 134, "08969466": 134, "58969466": 134, "12977099": 134, "67181144": 134, "92792995": 134, "91176471": 134, "16788321": 134, "70992366": 134, "29007634": 134, "83211679": 134, "08823529": 134, "07207005": 134, "32818856": 134, "87022901": 134, "41030534": 134, "91030534": 134, "45038168": 134, "99242213": 134, "24854064": 134, "24023186": 134, "49635036": 134, "03839082": 134, "57846715": 134, "07846715": 134, "61854349": 134, "16058394": 134, "41670245": 134, "26470588": 134, "52082439": 134, "06286484": 134, "60294118": 134, "10294118": 134, "64301751": 134, "18505796": 134, "44117647": 134, "test_resize_upsample_scales_cubic_a_n0p5_exclude_outsid": 134, "_resize_downsample_scales_cubic_a_n0p5_exclude_outsid": 134, "36812675": 134, "6695014": 134, "0133367": 134, "57362535": 134, "2188353": 134, "94896657": 134, "25034122": 134, "59417652": 134, "test_resize_downsample_scales_cubic_a_n0p5_exclude_outsid": 134, "_resize_upsample_scales_cubic_asymmetr": 134, "09375": 134, "21875": 134, "test_resize_upsample_scales_cubic_asymmetr": 134, "_resize_tf_crop_and_res": 134, "inaccur": 134, "6000004": 134, "400001": 134, "test_resize_tf_crop_and_res": 134, "_resize_tf_crop_and_resize_extrapolation_valu": 134, "_resize_downsample_sizes_linear_pytorch_half_pixel": 134, "6666666": 134, "333333": 134, "test_resize_downsample_sizes_linear_pytorch_half_pixel": 134, "_resize_upsample_sizes_nearest_floor_align_corn": 134, "test_resize_upsample_sizes_nearest_floor_align_corn": 134, "_resize_upsample_sizes_nearest_round_prefer_ceil_asymmetr": 134, "test_resize_upsample_sizes_nearest_round_prefer_ceil_asymmetr": 134, "_resize_upsample_sizes_nearest_ceil_half_pixel": 134, "test_resize_upsample_sizes_nearest_ceil_half_pixel": 134, "_resize_downsample_scales_linear_antialia": 134, "linear_coeffs_antialia": 134, "test_resize_downsample_scales_linear_antialia": 134, "_resize_downsample_sizes_linear_antialia": 134, "3636363": 134, "590909": 134, "818182": 134, "2727275": 134, "727273": 134, "181818": 134, "409091": 134, "636364": 134, "test_resize_downsample_sizes_linear_antialia": 134, "_resize_downsample_scales_cubic_antialia": 134, "5180721": 134, "2858863": 134, "589329": 134, "357142": 134, "cubic_coeffs_antialia": 134, "test_resize_downsample_scales_cubic_antialia": 134, "_resize_downsample_sizes_cubic_antialia": 134, "7750092": 134, "1200073": 134, "4650054": 134, "1550016": 134, "844998": 134, "534994": 134, "8799925": 134, "224991": 134, "test_resize_downsample_sizes_cubic_antialia": 134, "_resize_upsample_scales_nearest_axes_2_3": 134, "test_resize_upsample_scales_nearest_axes_2_3": 134, "_resize_upsample_scales_nearest_axes_3_2": 134, "test_resize_upsample_scales_nearest_axes_3_2": 134, "_resize_upsample_sizes_nearest_axes_2_3": 134, "test_resize_upsample_sizes_nearest_axes_2_3": 134, "_resize_upsample_sizes_nearest_axes_3_2": 134, "test_resize_upsample_sizes_nearest_axes_3_2": 134, "_resize_tf_crop_and_resize_axes_2_3": 134, "test_resize_tf_crop_and_resize_axes_2_3": 134, "_resize_tf_crop_and_resize_axes_3_2": 134, "test_resize_tf_crop_and_resize_axes_3_2": 134, "_resize_upsample_sizes_nearest_not_larg": 134, "7x7": 134, "test_resize_upsample_sizes_nearest_not_larg": 134, "_resize_upsample_sizes_nearest_not_smal": 134, "8x8": 134, "_resize_downsample_sizes_nearest_not_larg": 134, "1x2": 134, "test_resize_downsample_sizes_nearest_not_larg": 134, "_resize_downsample_sizes_nearest_not_smal": 134, "2x3": 134, "test_resize_downsample_sizes_nearest_not_smal": 134, "tf_half_pixel_for_nn": 134, "trilinear": [134, 181], "etc": [134, 181, 465], "beyond": 135, "time_axi": 135, "batch_axi": 135, "_reversesequence_tim": 135, "test_reversesequence_tim": 135, "_reversesequence_batch": 135, "test_reversesequence_batch": 135, "cnn": 136, "1703": 136, "06870": 136, "output_height": [136, 181], "output_width": [136, 181], "misalign": 136, "output_half_pixel": 136, "recommend": [136, 158], "method": [136, 205, 471, 479], "sampling_ratio": 136, "adapt": [136, 202, 475], "roi_width": 136, "likewis": 136, "rel": [136, 465], "batch_indic": 136, "_roialign_aligned_fals": 136, "get_roi_align_input_valu": 136, "4664": 136, "4466": 136, "3405": 136, "5688": 136, "6068": 136, "3714": 136, "4296": 136, "3835": 136, "5562": 136, "3510": 136, "2768": 136, "4883": 136, "5222": 136, "5528": 136, "4171": 136, "4713": 136, "4844": 136, "6904": 136, "4920": 136, "8774": 136, "6239": 136, "7125": 136, "6289": 136, "3355": 136, "3495": 136, "3022": 136, "4305": 136, "4696": 136, "3978": 136, "5423": 136, "3656": 136, "7050": 136, "5165": 136, "3172": 136, "7015": 136, "2912": 136, "5059": 136, "6476": 136, "6235": 136, "8299": 136, "5916": 136, "7389": 136, "7048": 136, "8372": 136, "8893": 136, "6227": 136, "6153": 136, "7097": 136, "6154": 136, "4585": 136, "2384": 136, "3379": 136, "3717": 136, "6100": 136, "7601": 136, "3767": 136, "3785": 136, "7147": 136, "9243": 136, "9727": 136, "5749": 136, "5826": 136, "5709": 136, "7619": 136, "8770": 136, "5355": 136, "2566": 136, "2141": 136, "2796": 136, "3600": 136, "4365": 136, "3504": 136, "2887": 136, "3661": 136, "2349": 136, "test_roialign_aligned_fals": 136, "_roialign_aligned_tru": 136, "5178": 136, "3434": 136, "3229": 136, "4474": 136, "6344": 136, "4031": 136, "5366": 136, "4428": 136, "4861": 136, "4023": 136, "2512": 136, "4002": 136, "5155": 136, "6954": 136, "3465": 136, "3350": 136, "4601": 136, "5881": 136, "3439": 136, "6849": 136, "4932": 136, "7141": 136, "8217": 136, "4719": 136, "4039": 136, "3070": 136, "2187": 136, "3337": 136, "4880": 136, "4870": 136, "1871": 136, "4914": 136, "5561": 136, "4192": 136, "3686": 136, "1433": 136, "4608": 136, "5971": 136, "5310": 136, "4982": 136, "2788": 136, "4386": 136, "6022": 136, "7524": 136, "5774": 136, "7024": 136, "7251": 136, "7338": 136, "8163": 136, "2393": 136, "4075": 136, "2525": 136, "4743": 136, "3671": 136, "2702": 136, "4105": 136, "6419": 136, "8308": 136, "5556": 136, "4543": 136, "5564": 136, "7502": 136, "9300": 136, "6626": 136, "5617": 136, "4813": 136, "4954": 136, "6663": 136, "6636": 136, "3721": 136, "2056": 136, "1928": 136, "2478": 136, "test_roialign_aligned_tru": 136, "find": [137, 179, 468], "test_round": 137, "short": [138, 476, 479], "signal_length": 138, "frame_step": 138, "slid": 138, "window_shap": 138, "frame_length": 138, "dft_unique_bin": 138, "onesided_length": 138, "no_window": 138, "nstft": 138, "stop": [138, 168, 472], "complex_out": 138, "test_stft": 138, "test_stft_with_window": 138, "scan_input": 139, "combin": [139, 140, 141, 173, 462, 477], "idea": 139, "program": [139, 477], "state_vari": 139, "context": [139, 479], "involv": 139, "scan_output_el": 139, "restrict": 139, "impos": 139, "effici": [139, 476, 477, 479], "memori": [139, 471, 477, 479], "alloc": [139, 477], "scan_input_direct": 139, "twice": [139, 476], "scan_output_direct": 139, "prepend": 139, "scan_input_ax": 139, "scan_output_ax": 139, "togeth": [139, 473], "num_scan_input": [139, 479], "axis_1": 139, "axis_m": 139, "init_1": 139, "init_n": 139, "scan_1": 139, "scan_m": 139, "pseudo": [139, 202, 203, 205, 477], "scan_i": 139, "axis_i": 139, "scan_j": 139, "axis_j": 139, "sequence_length": 139, "st_1": 139, "st_n": 139, "scan_out_1": 139, "scan_out_k": 139, "si_1": 139, "si_m": 139, "so_1": 139, "so_k": 139, "h_0": 139, "scanloop": 139, "nest": 139, "h_tminus1": 139, "x_t": 139, "t5": 139, "scan_input_elt": 139, "scan_output_elt": 139, "initial_state_and_scan_input": 139, "final_state_and_scan_output": 139, "_scan_8": 139, "sum_in": 139, "next": [139, 466, 471, 476, 479], "sum_out": 139, "id_nod": 139, "scan_bodi": 139, "no_sequence_len": 139, "test_scan_sum": 139, "_scan_9": 139, "test_scan9_sum": 139, "max_sequence_length": 139, "bst_1": 139, "bst_n": 139, "meaning": 139, "b_scan_out_1": 139, "b_scan_out_k": 139, "itself": [140, 141, 477, 479], "_scatter_without_axi": 140, "test_scatter_without_axi": 140, "_scatter_with_axi": 140, "test_scatter_with_axi": 140, "counter": 140, "duplic": [141, 142, 180], "idx1": [141, 142], "idx2": [141, 142], "_scatter_elements_without_axi": 141, "scatter_el": 141, "test_scatter_elements_without_axi": 141, "_scatter_elements_with_axi": 141, "test_scatter_elements_with_axi": 141, "_scatter_elements_with_negative_indic": 141, "test_scatter_elements_with_negative_indic": 141, "_scatter_elements_with_duplicate_indic": 141, "test_scatter_elements_with_duplicate_indic": 141, "_scatter_elements_with_reduction_max": 141, "test_scatter_elements_with_reduction_max": 141, "_scatter_elements_with_reduction_min": 141, "test_scatter_elements_with_reduction_min": 141, "That": [142, 176, 202, 203, 205, 476, 477, 479], "update_indic": 142, "idx": 142, "particular": [142, 459], "ensur": [142, 476], "_scatternd": 142, "scatter_nd_impl": 142, "test_scatternd": 142, "_scatternd_add": 142, "test_scatternd_add": 142, "_scatternd_multipli": 142, "test_scatternd_multipli": 142, "_scatternd_max": 142, "test_scatternd_max": 142, "_scatternd_min": 142, "test_scatternd_min": 142, "gamma": [143, 196, 197], "67326319217681884765625": 143, "approxim": 143, "6732632423543772848170429916717": 143, "05070102214813232421875": 143, "0507009873554804934193349852946": 143, "79272318": 143, "test_selu_exampl": 143, "test_selu": 143, "_selu_default": 143, "default_gamma": 143, "test_selu_default": 143, "6732": 143, "0507": 143, "eras": 147, "at_back": 148, "at_front": 148, "test_input": 148, "sequence_insert_reference_implement": 148, "test_sequence_insert_": 148, "independ": [150, 194, 203, 204, 477], "parallel": [150, 173, 191, 476], "additional_input": 150, "out_sequ": 150, "_sequence_map_identity_1_sequ": 150, "in0": [150, 462], "out0": [150, 462], "seq_map_bodi": 150, "test_sequence_map_identity_1_sequ": 150, "_sequence_map_identity_2_sequ": 150, "in1": [150, 462], "out1": [150, 462], "y0": 150, "test_sequence_map_identity_2_sequ": 150, "_sequence_map_identity_1_sequence_1_tensor": 150, "test_sequence_map_identity_1_sequence_1_tensor": 150, "_sequence_map_add_2_sequ": 150, "test_sequence_map_add_2_sequ": 150, "_sequence_map_add_1_sequence_1_tensor": 150, "test_sequence_map_add_1_sequence_1_tensor": 150, "_sequence_map_extract_shap": 150, "in_seq": 150, "test_sequence_map_extract_shap": 150, "upto": 151, "clamp": [151, 158], "test_shap": 151, "_exampl": [151, 163], "preserv": 151, "_start_1": 151, "_end_1": 151, "_start_negative_1": 151, "_end_negative_1": 151, "_start_1_end_negative_1": 151, "_start_1_end_2": 151, "_clip_start": 151, "_clip_end": 151, "lambd": 152, "formul": 152, "_hard_shrink": 152, "test_shrink_hard": 152, "_soft_shrink": 152, "test_shrink_soft": 152, "26894143": 153, "7310586": 153, "test_sigmoid_exampl": 153, "test_sigmoid": 153, "test_sign": 154, "test_sin_exampl": 155, "test_sin": 155, "17520118": 156, "test_sinh_exampl": 156, "test_sinh": 156, "total": [157, 186, 193, 195, 200], "though": 157, "test_size_exampl": 157, "test_siz": 157, "basic": [158, 168], "highlight": [158, 479], "made": [158, 477], "negatv": 158, "accommod": 158, "unknown": 158, "int_max": 158, "int_min": 158, "_slice": 158, "test_slic": 158, "_slice_neg": 158, "test_slice_neg": 158, "_slice_start_out_of_bound": 158, "test_slice_start_out_of_bound": 158, "_slice_end_out_of_bound": 158, "test_slice_end_out_of_bound": 158, "_slice_default_ax": 158, "test_slice_default_ax": 158, "_slice_default_step": 158, "test_slice_default_step": 158, "_slice_neg_step": 158, "test_slice_neg_step": 158, "_slice_negative_ax": 158, "test_slice_negative_ax": 158, "09003058": 159, "24472848": 159, "66524094": 159, "test_softmax_exampl": 159, "_softmax_axi": 159, "032058604": 159, "08714432": 159, "23688284": 159, "6439143": 159, "test_softmax_large_numb": 159, "test_softmax_axis_0": 159, "test_softmax_axis_1": 159, "test_softmax_axis_2": 159, "test_softmax_negative_axi": 159, "test_softmax_default_axi": 159, "measur": [160, 476], "cross": 160, "entropi": 160, "l_1": 160, "l_2": 160, "l_n": 160, "j_1": 160, "j_2": 160, "j_k": 160, "l_i": 160, "ground": 160, "truth": 160, "manual": 160, "assign": [160, 202, 204, 205], "log_prob": 160, "prob": 160, "31326166": 161, "69314718": 161, "31326163": 161, "test_softplus_exampl": 161, "test_softplu": 161, "test_softsign_exampl": 162, "test_softsign": 162, "test_spacetodepth": 163, "test_spacetodepth_exampl": 163, "_1d": 164, "output_1": 164, "output_2": 164, "output_3": 164, "test_split_equal_parts_1d": 164, "test_split_variable_parts_1d": 164, "test_split_equal_parts_2d": 164, "test_split_variable_parts_2d": 164, "_default_valu": 164, "test_split_equal_parts_default_axi": 164, "test_split_variable_parts_default_axi": 164, "_zero_size_split": 164, "emtpi": 164, "test_split_zero_size_split": 164, "chunk": 165, "root": [166, 202, 203, 465], "test_sqrt_exampl": 166, "test_sqrt": 166, "rais": [167, 460, 475, 479], "_squeez": 167, "test_squeez": 167, "_squeeze_negative_ax": 167, "test_squeeze_negative_ax": 167, "clean": 168, "examin": 168, "stopword": 168, "lowercas": 168, "uppercas": 168, "just": [168, 202, 464, 477, 479], "case_change_act": 168, "is_case_sensit": 168, "identif": 168, "sensit": [168, 465], "environ": [168, 476, 477], "en_u": 168, "_nostopwords_nochangecas": 168, "mondai": 168, "tuesdai": 168, "noop": 168, "test_strnormalizer_nostopwords_nochangecas": 168, "_monday_casesensintive_nochangecas": 168, "wednesdai": 168, "thursdai": 168, "test_strnormalizer_export_monday_casesensintive_nochangecas": 168, "_monday_casesensintive_low": 168, "test_strnormalizer_export_monday_casesensintive_low": 168, "_monday_casesensintive_upp": 168, "test_strnormalizer_export_monday_casesensintive_upp": 168, "_monday_empty_output": 168, "test_strnormalizer_export_monday_empty_output": 168, "_monday_insensintive_upper_twodim": 168, "cecedil": 168, "accent": 168, "german": 168, "umlaut": 168, "fail": [168, 195, 460, 479], "eszett": 168, "test_strnormalizer_export_monday_insensintive_upper_twodim": 168, "subtract": 169, "test_sub_exampl": 169, "test_sub": 169, "test_sub_uint8": 169, "_sub_broadcast": 169, "test_sub_bcast": 169, "test_sum_exampl": 170, "test_sum_one_input": 170, "test_sum_two_input": 170, "test_tan_exampl": 171, "test_tan": 171, "76159418": 172, "test_tanh_exampl": 172, "test_tanh": 172, "gram": 173, "ngram_index": 173, "consecut": 173, "discontinu": 173, "token": 173, "pool_int64": 173, "ngram_count": 173, "pool_str": 173, "idf": 173, "tfidf": 173, "max_gram_length": 173, "max_skip_count": 173, "min_gram_length": 173, "skip_count": 173, "criteria": [173, 464], "csr": 173, "csc": 173, "due": [173, 479], "popular": [173, 199, 200, 477], "attributeproto": [173, 464, 479], "pool_": 173, "ngram": 173, "ether": 173, "_tf_only_bigrams_skip0": 173, "unigram": 173, "bigram": 173, "tfidfvectorizerhelp": 173, "make_node_noweight": 173, "test_tfidfvectorizer_tf_only_bigrams_skip0": 173, "_tf_batch_onlybigrams_skip0": 173, "test_tfidfvectorizer_tf_batch_onlybigrams_skip0": 173, "_tf_onlybigrams_levelempti": 173, "test_tfidfvectorizer_tf_onlybigrams_levelempti": 173, "_tf_onlybigrams_skip5": 173, "test_tfidfvectorizer_tf_onlybigrams_skip5": 173, "_tf_batch_onlybigrams_skip5": 173, "test_tfidfvectorizer_tf_batch_onlybigrams_skip5": 173, "_tf_uniandbigrams_skip5": 173, "test_tfidfvectorizer_tf_uniandbigrams_skip5": 173, "_tf_batch_uniandbigrams_skip5": 173, "test_tfidfvectorizer_tf_batch_uniandbigrams_skip5": 173, "test_thresholdedrelu_exampl": 174, "test_thresholdedrelu": 174, "test_thresholdedrelu_default": 174, "output_dim": [175, 473], "input_dim": [175, 473], "_tile": 175, "test_til": 175, "_tile_precomput": 175, "test_tile_precomput": 175, "retriev": [176, 466, 476], "largest": [176, 465, 479], "smallest": 176, "a_2": 176, "a_n": 176, "tiebreak": 176, "_top_k": 176, "values_ref": 176, "indices_ref": 176, "topk_sorted_implement": 176, "test_top_k": 176, "_top_k_smallest": 176, "test_top_k_smallest": 176, "_top_k_negative_axi": 176, "test_top_k_negative_axi": 176, "perm": [177, 479], "test_transpose_default": 177, "_all_permut": 177, "itertool": 177, "test_transpose_all_permutations_": 177, "retain": [178, 179], "_triu": 178, "triu_reference_implement": 178, "test_triu": 178, "_triu_neg": 178, "test_triu_neg": 178, "_triu_out_neg_out": 178, "test_triu_out_neg_out": 178, "_triu_po": 178, "test_triu_po": 178, "_triu_out_po": 178, "test_triu_out_po": 178, "_triu_squar": 178, "test_triu_squar": 178, "_triu_square_neg": 178, "test_triu_square_neg": 178, "_triu_one_row": 178, "test_triu_one_row": 178, "_triu_zero": 178, "test_triu_zero": 178, "_tril": 178, "tril_reference_implement": 178, "test_tril": 178, "_tril_neg": 178, "test_tril_neg": 178, "_tril_out_neg": 178, "test_tril_out_neg": 178, "_tril_po": 178, "test_tril_po": 178, "_tril_out_po": 178, "test_tril_out_po": 178, "_tril_squar": 178, "test_tril_squar": 178, "_tril_square_neg": 178, "test_tril_square_neg": 178, "_tril_one_row": 178, "test_tril_one_row_neg": 178, "_tril_zero": 178, "test_tril_zero": 178, "subtensor": 179, "inverse_indic": 179, "fourth": 179, "ascend": [179, 186], "attribute_sort": 179, "attribute_axi": 179, "output_i": 179, "output_indic": 179, "output_inverse_indic": 179, "output_count": 179, "better": [179, 203, 477, 479], "understand": 179, "maintain": [179, 181, 189], "_sorted_without_axi": 179, "node_sort": 179, "specify_int64": 179, "test_unique_sorted_without_axi": 179, "_not_sorted_without_axi": 179, "node_not_sort": 179, "issu": [179, 476], "8621": 179, "recov": 179, "unsort": 179, "prepar": 179, "argsorted_indic": 179, "argsort": 179, "inverse_indices_map": 179, "si": [179, 477], "test_unique_not_sorted_without_axi": 179, "_sorted_with_axi": 179, "test_unique_sorted_with_axi": 179, "_sorted_with_axis_3d": 179, "test_unique_sorted_with_axis_3d": 179, "_sorted_with_negative_axi": 179, "test_unique_sorted_with_negative_axi": 179, "output_rank": 180, "plu": 180, "matter": 180, "come": [180, 479], "_unsqueeze_one_axi": 180, "expand_dim": 180, "test_unsqueeze_axis_": 180, "_unsqueeze_two_ax": 180, "test_unsqueeze_two_ax": 180, "_unsqueeze_three_ax": 180, "test_unsqueeze_three_ax": 180, "_unsqueeze_unsorted_ax": 180, "test_unsqueeze_unsorted_ax": 180, "_unsqueeze_negative_ax": 180, "test_unsqueeze_negative_ax": 180, "seen": [180, 479], "_nearest": 181, "test_upsample_nearest": 181, "experiment": 181, "input_width": 181, "width_scal": 181, "input_height": 181, "height_scal": 181, "test_where_exampl": 182, "_long": 182, "test_where_long_exampl": 182, "logical_xor": 183, "test_xor2d": 183, "test_xor3d": 183, "test_xor4d": 183, "_xor_broadcast": 183, "test_xor_bcast3v1d": 183, "test_xor_bcast3v2d": 183, "test_xor_bcast4v2d": 183, "test_xor_bcast4v3d": 183, "test_xor_bcast4v4d": 183, "comparison": [185, 191, 199, 200, 479], "against": [185, 204], "kei": [186, 188, 191, 201, 463, 464, 477, 479], "dens": [186, 477], "exce": 186, "max_map": 186, "cast_to": 186, "to_float": 186, "to_str": 186, "to_int64": 186, "map_form": 186, "vice": [187, 191], "versa": [187, 191], "cats_int64": [187, 195], "cats_str": [187, 195], "default_int64": [187, 191], "default_": [187, 191], "default_str": [187, 191], "dictionari": [188, 477], "vocabulari": 188, "string_vocabulari": 188, "int64_vocabulari": 188, "hold": [188, 190, 463, 479], "inputdimens": 189, "leav": [190, 199, 200, 476], "canon": 190, "extrem": 190, "imputed_value_float": 190, "imputed_value_int64": 190, "fit": 190, "replaced_value_float": 190, "replaced_value_int64": 190, "imputed_valu": 190, "keys_": 191, "impli": 191, "keys_str": 191, "ami": 191, "salli": 191, "values_int64": 191, "dori": 191, "default_float": 191, "keys_float": 191, "keys_int64": 191, "values_float": 191, "values_str": 191, "fetch": 191, "classes_str": 191, "classlabels_int": [192, 196], "classlabel": 192, "classlabels_str": [192, 196, 199, 201], "intercept": [192, 193, 476], "multi_class": 192, "ovr": 192, "post_transform": [192, 193, 196, 197, 199, 200], "logist": [192, 193, 196, 197, 199, 200], "softmax_zero": [192, 193, 196, 197, 199, 200], "probit": [192, 193, 196, 197, 199, 200], "latter": 192, "regress": [193, 197, 200, 477, 478], "univari": 193, "infix": 194, "wide": [194, 204], "categori": [195, 479], "lookup": 195, "cats_": 195, "machin": [196, 197, 476, 477, 479], "classlabels_": [196, 199, 201], "kernel_param": [196, 197], "coef0": [196, 197], "degre": [196, 197], "unus": [196, 197], "kernel_typ": [196, 197], "poli": [196, 197], "prob_a": 196, "prob_b": 196, "raw": [196, 463, 464, 468], "rho": [196, 197], "support_vector": [196, 197], "vectors_per_class": 196, "bactch": 196, "svm": [197, 477], "anomali": 197, "detect": [197, 479], "n_support": 197, "one_class": 197, "regardless": 198, "tree": [199, 200, 477], "ensembl": [199, 200], "nodes_x": 199, "prefix": [199, 200, 464], "class_": 199, "vote": [199, 200], "leaf": [199, 200], "class_weight": 199, "classlabels_int64": [199, 201], "class_id": 199, "_as_tensor": [199, 200], "base_valu": [199, 200], "unassign": [199, 200], "base_values_as_tensor": [199, 200], "class_nodeid": 199, "id": [199, 200, 459, 464], "class_treeid": 199, "class_weights_as_tensor": 199, "nodes_falsenodeid": [199, 200], "child": [199, 200], "nodes_featureid": [199, 200], "nodes_hitr": [199, 200], "nodes_hitrates_as_tensor": [199, 200], "nodes_missing_value_tracks_tru": [199, 200], "what": [199, 200, 478, 479], "presenc": [199, 200], "defalt": [199, 200], "nodes_mod": [199, 200], "kind": [199, 200, 204, 459, 477, 479], "branch_leq": [199, 200], "branch_lt": [199, 200], "branch_gt": [199, 200], "branch_eq": [199, 200], "branch_neq": [199, 200], "nodes_nodeid": [199, 200], "restart": [199, 200], "nodes_treeid": [199, 200], "nodes_truenodeid": [199, 200], "nodes_valu": [199, 200], "nodes_values_as_tensor": [199, 200], "regressor": [200, 477, 479], "nodes_": 200, "target_": 200, "target_weight": 200, "aggregate_funct": 200, "aggreg": 200, "n_target": 200, "sequenti": [200, 202, 205], "target_id": 200, "target_nodeid": 200, "target_treeid": 200, "target_weights_as_tensor": 200, "stochast": [202, 203, 205], "conduct": [202, 203, 205], "As": [202, 205, 476, 477, 479], "rate": [202, 203, 205], "norm_coeffici": [202, 203, 205], "decai": [202, 205], "decay_factor": 202, "small": [202, 203, 476, 479], "x_new": [202, 203, 205], "h_new": [202, 203], "_2": [202, 203], "g_regular": [202, 203, 205], "h_adapt": 202, "x_1": [202, 203, 205], "x_2": [202, 203, 205], "jointli": [202, 205], "cours": [202, 205], "reus": [202, 204, 477], "entir": [202, 477], "jmlr": 202, "volume12": 202, "duchi11a": 202, "composit": 202, "descent": 202, "_adagrad": 202, "001": [202, 203, 205, 479], "ai_onnx_preview_training_domain": [202, 203, 205], "apply_adagrad": 202, "test_adagrad": 202, "_adagrad_multipl": 202, "g1": [202, 203, 205, 462], "g2": [202, 203, 205, 462], "h1": [202, 203, 205], "h2": [202, 203, 205], "x1_new": [202, 203, 205], "x2_new": [202, 203, 205], "h1_new": [202, 203], "h2_new": [202, 203], "test_adagrad_multipl": 202, "histor": 203, "rest": 203, "moreov": 203, "v_new": [203, 205], "h_sqrt": 203, "r_adjust": 203, "post": 203, "x_final": 203, "norm_coefficient_post": 203, "999": 203, "aka": 203, "_adam": 203, "apply_adam": 203, "test_adam": 203, "_adam_multipl": 203, "v2": [203, 205], "v1_new": [203, 205], "v2_new": [203, 205], "test_adam_multipl": 203, "deriv": 204, "illustr": [204, 477], "trainabl": 204, "sake": [204, 205], "simplic": [204, 205], "dy": 204, "dw": 204, "dz": 204, "1st": 204, "2nd": 204, "3rd": 204, "reason": 204, "dh": 204, "2o": 204, "dx": 204, "h_1": 204, "z_1": 204, "y_1": 204, "minim": [204, 479], "fed": 204, "symbol": 204, "substitut": 204, "sg": 205, "nesterov": 205, "beta_adjust": 205, "_momentum": 205, "apply_momentum": 205, "test_momentum": 205, "_nesterov_momentum": 205, "apply_nesterov": 205, "test_nesterov_momentum": 205, "_momentum_multipl": 205, "test_momentum_multipl": 205, "classmethod": 459, "run_nod": 459, "cpu": 459, "outputs_info": 459, "param": 459, "__init__": 459, "py": [459, 476, 477, 479], "supports_devic": 459, "compil": [459, 476, 477], "suit": 459, "device_typ": 459, "device_id": 459, "cuda": 459, "loader": 459, "data_dir": 459, "home": 459, "xadupr": 459, "xagit": 459, "load": [459, 463, 473, 477, 479], "disk": [459, 479], "parent_modul": 459, "properti": [459, 465], "parent": 459, "global": [459, 477], "backendtest": 459, "test_suit": 459, "testsuit": 459, "testrunn": 459, "unittest": 459, "texttestrunn": 459, "host": 459, "onnx_backend_test": 459, "model_nam": 459, "url": [459, 477], "model_dir": 459, "onnx_ml_pb2": [459, 479], "modelproto": [459, 460, 462, 463, 464, 465, 469, 470, 471, 472, 473, 474, 475, 479], "data_set": 459, "rtol": 459, "atol": 459, "__test__": 459, "byte": [460, 464, 471, 472, 479], "full_check": 460, "descriptor": [461, 477], "googl": [461, 464], "_upb": 461, "_messag": 461, "protobuf": [461, 464, 466, 471, 478, 479], "stringstringentryproto": [461, 479], "segment": 461, "opaqu": 461, "sparsetensor": [461, 464], "graphproto": [462, 464, 469, 470, 473, 479], "io_map": 462, "prefix1": 462, "prefix2": 462, "doc_str": [462, 464, 477, 479], "undescor": 462, "delimit": 462, "docstr": [462, 473], "m1": 462, "m2": 462, "producer_vers": [462, 477, 479], "model_vers": [462, 477, 479], "ir": [462, 464, 479], "add_prefix_graph": 462, "rename_nod": 462, "rename_edg": 462, "rename_input": 462, "rename_output": 462, "rename_initi": 462, "rename_value_info": 462, "info": [462, 465], "util": [462, 466], "merg": [462, 477, 479], "mutat": 462, "add_prefix": 462, "rename_funct": 462, "_prefix": 462, "nane": 462, "expand_out_dim": 462, "dim_idx": 462, "expand_out_dim_graph": 462, "extern": [463, 468, 471], "embed": 463, "save_model": 463, "all_tensors_to_one_fil": 463, "size_threshold": 463, "1024": 463, "convert_attribut": 463, "prece": 463, "base_dir": [463, 468], "directori": [463, 471], "ideal": 463, "field_kei": 463, "external_data": 463, "modifi": [463, 476, 477, 479], "base_path": 463, "serial": [463, 464, 466, 475, 478], "path": [463, 465, 468, 472, 474, 476], "folder": [463, 476], "checksum": 463, "basepath": 463, "filepath": 463, "strip": 463, "get_attribute_valu": 464, "attr": 464, "printable_attribut": 464, "printable_dim": 464, "printable_graph": 464, "displai": [464, 479], "printable_nod": 464, "printable_tensor_proto": 464, "printable_typ": 464, "typeproto": [464, 479], "printable_value_info": 464, "valueinfoproto": [464, 479], "find_min_ir_version_for": 464, "opsetidlist": 464, "operatorsetidproto": [464, 479], "split_complex_to_pair": 464, "ca": 464, "make_attribut": [464, 479], "make_empty_tensor_value_info": [464, 479], "make_funct": [464, 479], "fname": 464, "functionproto": [464, 469, 470, 479], "value_info": [464, 472, 479], "sparse_initi": 464, "sparsetensorproto": [464, 477, 479], "make_map": [464, 479], "key_typ": 464, "sequenceproto": [464, 468, 477, 479], "mapproto": [464, 468, 477, 479], "make_model": [464, 479], "make_opt": [464, 479], "intern": [464, 479], "enum_type_wrapp": 464, "enumtypewrapp": 464, "0x7fb6ed416be0": 464, "optionalproto": [464, 468, 479], "inner_type_proto": 464, "make_sequ": [464, 479], "0x7fb6ed76a370": 464, "make_sparse_tensor": [464, 479], "make_sparse_tensor_type_proto": [464, 479], "shape_denot": 464, "make_sparse_tensor_value_info": [464, 479], "proto": [464, 466, 470, 479], "raw_data": [464, 479], "elem_shape_denot": 464, "make_training_info": [464, 479], "algorithm_bind": 464, "initialization_bind": 464, "traininginfoproto": [464, 477, 479], "type_proto": 464, "raw_model_info": 465, "metadata": [465, 478], "sha": 465, "tag": 465, "model_path": [465, 472], "zoo": 465, "repo": 465, "io": [465, 471], "port": 465, "model_sha": 465, "sha256": 465, "digest": 465, "search": [465, 476], "manifest": 465, "force_reload": 465, "silent": [465, 479], "download": 465, "automat": [465, 476, 477], "alreadi": [465, 472, 477], "cach": 465, "suppress": 465, "warn": 465, "trust": 465, "releas": [466, 476], "faster": [466, 477, 479], "verifi": 466, "checker": [466, 474, 478], "compos": [466, 476], "external_data_help": 466, "hub": 466, "parser": [466, 479], "printer": 466, "shape_infer": [466, 479], "version_convert": [466, 476], "pprint": [467, 479], "sparse_tensor_valu": 467, "sequence_valu": 467, "map_valu": 467, "optional_valu": 467, "float_data": [467, 479], "int32_data": 467, "int64_data": 467, "string_data": 467, "double_data": 467, "uint64_data": 467, "get_all_schemas_with_histori": 467, "onnx_cpp2py_export": [467, 479], "opschema": 467, "get_function_op": 467, "overload": 467, "max_inclusive_vers": 467, "submodul": [467, 476], "schemaerror": 467, "get_all_schema": 467, "has_schema": 467, "schema_version_map": 467, "to_arrai": [468, 479], "help": [468, 477], "to_list": 468, "from_list": 468, "lst": 468, "to_dict": 468, "from_dict": 468, "to_opt": 468, "opt": 468, "from_opt": 468, "convert_endian": 468, "endia": 468, "combine_pairs_to_complex": 468, "fa": 468, "function_text": 469, "pars": [469, 477, 478], "graph_text": 469, "model_text": 469, "buffer": [471, 477], "onnx_model": [471, 479], "signatur": [471, 476, 477], "autom": [471, 476], "restor": [471, 479], "load_external_data": 471, "load_external_data_for_model": 471, "futur": 471, "load_model_from_str": 471, "know": [471, 477], "he": 471, "parsefromstr": [471, 479], "tp2": 471, "shortcut": 471, "load_tensor_from_str": [471, 479], "check_typ": 472, "strict_mod": 472, "data_prop": 472, "conflict": 472, "bug": 472, "unspecifi": [472, 476], "stricter": 472, "propag": 472, "output_path": [472, 474], "2gb": 472, "getpydotgraph": 473, "rankdir": 473, "lr": [473, 479], "node_produc": 473, "callabl": 473, "embed_docstr": 473, "dot": 473, "getopnodeproduc": 473, "pydot_graph": 473, "model_onnx": 473, "tp": 473, "write_dot": 473, "update_model_dim": 473, "input_1": 473, "input_2": 473, "put": 473, "updated_model": 473, "input_path": 474, "output_nam": [474, 476], "check_model": [474, 479], "_boundari": 474, "model_": 474, "_cut": 474, "through_": 474, "_main": 474, "graph_": 474, "target_vers": 475, "runtimeerror": 475, "unsupport": 475, "deploi": [476, 477, 479], "latenc": 476, "easi": [476, 479], "piec": [476, 479], "veri": [476, 477, 479], "sklearn": 476, "scikit": 476, "rewrit": 476, "whatev": 476, "close": 476, "own": [476, 477], "design": [476, 477], "why": [476, 477], "onnxmltool": 476, "lightgbm": 476, "xgboost": 476, "pyspark": 476, "libsvm": 476, "rythm": 476, "everytim": 476, "year": 476, "dedic": [476, 477], "goe": 476, "difficult": 476, "somehow": 476, "primit": 476, "long": [476, 477, 479], "subpart": 476, "stori": 476, "reli": [476, 477, 479], "predictor": 476, "minor": [476, 477], "latest": [476, 479], "newest": 476, "instal": [476, 479], "offer": [476, 477, 479], "target_opset": [476, 479], "languag": [476, 477, 479], "upgrad": 476, "verbos": 476, "whole": [476, 479], "pictur": 476, "hide": 476, "creation": [476, 479], "deal": 476, "coef": 476, "get_unique_variable_nam": 476, "model_coef": 476, "classifier_attr": 476, "number_of_class": 476, "add_initi": 476, "proto_dtyp": 476, "ravel": 476, "model_intercept": 476, "full_nam": 476, "get_unique_operator_nam": 476, "argmax_output_nam": 476, "raw_score_nam": 476, "compact": 476, "kmean": 476, "easier": [476, 477, 479], "onnxreducesumsquar": 476, "op_vers": 476, "opv": 476, "gemm_out": 476, "onnxmatmul": 476, "onnxadd": 476, "c2": 476, "ll": 476, "onnxargmin": 476, "onnxsqrt": 476, "strongli": [476, 477, 479], "signific": 476, "impact": 476, "switch": 476, "insight": 476, "topic": 476, "weird": 476, "1e17": 476, "rare": [476, 477, 479], "decis": 476, "forest": 476, "fall": 476, "fastest": 476, "woe": 476, "repositori": 476, "fork": 476, "clone": 476, "conda": 476, "might": 476, "date": 476, "azur": 476, "pipelin": [476, 479], "instruct": 476, "anaconda": 476, "ye": 476, "quiet": 476, "py3": 476, "forg": 476, "libprotobuf": 476, "git": 476, "init": [476, 479], "recurs": 476, "onnx_build_test": 476, "onnx_ml": 476, "cmake_arg": 476, "donnx_use_protobuf_shared_lib": 476, "ON": 476, "donnx_use_lite_proto": 476, "donnx_werror": 476, "setup": 476, "bdist_wheel": 476, "linux": 476, "build_ext": 476, "gen_proto": 476, "cmd_tool": 476, "stat_coverag": 476, "gen_doc": 476, "subfold": 476, "recent": [476, 477], "pattern": 476, "operator_set": 476, "header": 476, "regist": 476, "schema": [476, 479], "again": [476, 479], "pr": 476, "changelog": 476, "testcoverag": 476, "compar": [477, 479], "mathemat": 477, "langag": 477, "onnx_linear_regressor": 477, "developp": 477, "aim": 477, "interpretor": 477, "task": 477, "written": 477, "axc": 477, "turn": [477, 479], "visual": [477, 479], "frozen": 477, "deploy": 477, "replic": 477, "docker": 477, "suitabl": 477, "java": 477, "javascript": 477, "webassembli": 477, "arm": 477, "But": [477, 479], "refresh": 477, "track": 477, "human": 477, "readabl": 477, "markdown": 477, "namespac": 477, "metadata_prop": [477, 479], "distinct": [477, 479], "model_author": 477, "person": 477, "organ": 477, "model_licens": 477, "licens": 477, "training_info": [477, 479], "cover": 477, "few": 477, "text": 477, "hardli": 477, "treeensmbl": 477, "preprocess": 477, "librari": [477, 478, 479], "competit": 477, "null": 477, "np_type_to_tensor_typ": 477, "reg": 477, "9a": 477, "z_": 477, "att": [477, 479], "dir": [477, 479], "imposs": [477, 479], "bring": 477, "attach": 477, "insid": [477, 479], "slow": 477, "exeut": 477, "pairwis": [477, 479], "distanc": [477, 479], "x_j": 477, "still": [477, 479], "slower": 477, "anymor": 477, "your": 477, "improv": [477, 479], "cdist": 477, "prove": 477, "significantli": 477, "enough": 477, "effort": 477, "advantag": 477, "shorter": 477, "leverag": 477, "manag": 477, "obvious": 477, "offici": 477, "netron": 477, "screenshot": 477, "onnx2pi": 477, "zetan": 477, "face": 478, "trick": 478, "experi": 478, "xa": 479, "decompos": 479, "said": 479, "set_model_prop": 479, "node1": 479, "node2": 479, "metata": 479, "ir_vers": 479, "tensor_typ": 479, "tell": 479, "inspect": 479, "shape2tupl": 479, "nice": 479, "obj": 479, "deseri": 479, "address": 479, "linear_regress": 479, "gb": 479, "overcom": 479, "numpy_tensor": 479, "onnx_tensor": 479, "serialized_tensor": 479, "saved_tensor": 479, "endswith": 479, "operatorproto": 479, "operatorsetproto": 479, "tensorshapeproto": 479, "simplifi": 479, "were": 479, "conveni": 479, "around": 479, "000": 479, "031": 479, "277": 479, "315": 479, "intial": 479, "kept": 479, "initiliaz": 479, "tranpos": 479, "node_transpos": 479, "ta": 479, "startswith": 479, "make_attribute_ref": 479, "distinguish": 479, "someth": 479, "prop": 479, "key1": 479, "value1": 479, "key2": 479, "value2": 479, "training_tool_test": 479, "rsum": 479, "then_cst": 479, "cst1": 479, "wrap": 479, "else_cst": 479, "cst2": 479, "freez": 479, "onnx_if_sign": 479, "seem": 479, "quit": 479, "prealloc": 479, "neighbor": 479, "problem": 479, "dist": 479, "m_": 479, "w_j": 479, "next_in": 479, "next_out": 479, "cdistd_17_ident": 479, "cdistdf_17_c0": 479, "cdistdf_17_sub": 479, "cdistdf_17_reduced0": 479, "cdistdf_17_reducesumsquar": 479, "cdistdf_17_ident": 479, "onnxident": 479, "list_valu": 479, "29599822460675": 479, "86516699239603": 479, "70495899914215": 479, "260": 479, "08772982740413": 479, "65272105889147": 479, "23295157108991": 479, "45232560871727": 479, "83789715805776": 479, "92727431421793": 479, "48710175784703": 479, "27761768038069": 479, "87785569894749": 479, "71487894705504": 479, "301": 479, "0518319089629": 479, "64235742280055": 479, "78493504731911": 479, "41218591022718": 479, "26561056133608": 479, "04032954135549": 479, "229": 479, "5428380626701": 479, "549262642481615": 479, "140": 479, "95737409864623": 479, "8145187836131": 479, "61397011283958": 479, "185488100413366": 479, "864151796743855": 479, "09054590340892": 479, "187": 479, "72501631246712": 479, "779503579806025": 479, "642642730674076": 479, "58517761667535": 479, "56025104939847": 479, "92423223842056": 479, "9166231927213": 479, "73512816431007": 479, "150864499514297": 479, "37105466673813": 479, "5755688281476": 479, "68676290979731": 479, "36748960443065": 479, "knny_arrayfeatureextractorcst": 479, "1394007205963135": 479, "6848101019859314": 479, "234825849533081": 479, "4023416340351105": 479, "17742614448070526": 479, "46278226375579834": 479, "4017809331417084": 479, "630198359489441": 479, "5096521973609924": 479, "7774903774261475": 479, "4380742907524109": 479, "2527953386306763": 479, "0485529899597168": 479, "950775384902954": 479, "420017957687378": 479, "7062702178955078": 479, "8675580024719238": 479, "15135720372200012": 479, "9772778749465942": 479, "9500884413719177": 479, "5529897212982178": 479, "7421650290489197": 479, "653618574142456": 479, "8644362092018127": 479, "5327792167663574": 479, "37816253304481506": 479, "4693588018417358": 479, "154947429895401": 479, "6724604368209839": 479, "7262825965881348": 479, "35955315828323364": 479, "8131462931632996": 479, "8707971572875977": 479, "056165341287851334": 479, "5788496732711792": 479, "3115525245666504": 479, "2302906513214111": 479, "302302747964859": 479, "202379822731018": 479, "38732680678367615": 479, "269754648208618": 479, "18718385696411133": 479, "4543657302856445": 479, "04575851559638977": 479, "9072983860969543": 479, "12898291647434235": 479, "05194539576768875": 479, "7290905714035034": 479, "4940791130065918": 479, "8540957570075989": 479, "2051582634449005": 479, "3130677044391632": 479, "764052391052246": 479, "2408931255340576": 479, "40015721321105957": 479, "978738009929657": 479, "06651721894741058": 479, "3627411723136902": 479, "30247190594673157": 479, "6343221068382263": 479, "5108051300048828": 479, "4283318817615509": 479, "18063223361969": 479, "02818222902715206": 479, "6138978004455566": 479, "38690251111984253": 479, "21274028718471527": 479, "8954665660858154": 479, "7610377073287964": 479, "3336743414402008": 479, "12167501449584961": 479, "44386324286460876": 479, "10321885347366333": 479, "4542734622955322": 479, "4105985164642334": 479, "14404356479644775": 479, "8877857327461243": 479, "15634897351264954": 479, "980796456336975": 479, "34791216254234314": 479, "sc_scancst": 479, "to_topkcst": 479, "knny_reshapecst": 479, "uu032uu": 479, "uu033uu": 479, "sc_scan": 479, "tr_transposed0": 479, "tr_transpos": 479, "sq_y0": 479, "sq_sqrt": 479, "to_values0": 479, "to_indices1": 479, "to_topk": 479, "knny_output0": 479, "knny_flatten": 479, "knny_z0": 479, "knny_arrayfeatureextractor": 479, "knny_reshaped0": 479, "knny_reshap": 479, "knny_transposed0": 479, "knny_transpos": 479, "ca_output0": 479, "ca_cast": 479, "re_reducemean": 479, "knn": 479, "skl2onnx": 479, "pylint": 479, "e1101": 479, "dom": 479, "op_set": 479, "knnr": 479, "306k7": 479, "333z": 479, "300": 479, "304": 479, "006": 479, "217": 479, "026b": 479, "300z9dwgap": 479, "027": 479, "343tc": 479, "330": 479, "350": 479, "022": 479, "216sy": 479, "356n": 479, "237h": 479, "263": 479, "320": 479, "332f": 479, "235": 479, "336": 479, "370lv": 479, "226ob": 479, "362": 479, "021v": 479, "mv": 479, "322": 479, "223": 479, "355": 479, "036": 479, "262m": 479, "320r": 479, "ne": 479, "211q": 479, "021n5": 479, "211": 479, "215i": 479, "300h": 479, "232p": 479, "377": 479, "020": 479, "317k": 479, "302": 479, "202p": 479, "261l": 479, "317": 479, "236a": 479, "fd": 479, "023": 479, "364u": 479, "327lik": 479, "247v": 479, "300j": 479, "366": 479, "227l": 479, "262": 479, "206": 479, "234nl": 479, "013": 479, "313e": 479, "343hu3wg": 479, "3370": 479, "367": 479, "305": 479, "306ce": 479, "336a": 479, "347": 479, "2445": 479, "300f": 479, "374": 479, "347jf": 479, "325": 479, "2557": 479, "331": 479, "354": 479, "3547": 479, "307o": 479, "372t": 479, "005": 479, "000w": 479, "014or": 479, "025": 479, "227": 479, "034": 479, "310": 479, "227q": 479, "300l_": 479, "326dp": 479, "333kk": 479, "363": 479, "267o": 479, "016": 479, "271": 479, "2575": 479, "361": 479, "266": 479, "276w": 479, "221x": 479, "002": 479, "tg": 479, "fk": 479, "340": 479, "3746": 479, "371": 479, "265": 479, "020g": 479, "332": 479, "014": 479, "357": 479, "032": 479, "3778": 479, "376": 479, "261k": 479, "0342": 479, "205": 479, "274": 479, "334": 479, "277z": 479, "220": 479, "241": 479, "024": 479, "307": 479, "263o": 479, "251c": 479, "021": 479, "272": 479, "277hm": 479, "265dh": 479, "004": 479, "304t": 479, "246z": 479, "025r": 479, "276ij": 479, "341": 479, "313j": 479, "017": 479, "216z": 479, "335": 479, "357b": 479, "277qn": 479, "365": 479, "277k": 479, "346": 479, "2744": 479, "316": 479, "026": 479, "030": 479, "330y": 479, "276l": 479, "323b": 479, "013b": 479, "343": 479, "hd": 479, "323": 479, "275": 479, "3709": 479, "355ec": 479, "green": 479, "blue": 479, "mention": 479, "chapter": 479, "shorten": 479, "templat": 479, "new_domain": 479, "linearregress": 479, "ref_attr_nam": 479, "cst": 479, "former_b": 479, "modul": 479, "lot": 479, "agraph": 479, "parse_model": 479, "whenev": 479, "inconsist": 479, "parseerror": 479, "nerror": 479, "nexpect": 479, "serv": 479, "purpos": 479, "consumpt": 479, "beforehand": 479, "inferred_model": 479, "infer_shap": 479, "abl": 479, "easili": 479, "wrapper": 479, "pointer": 479, "receiv": 479, "longer": 479, "safer": 479, "clear": 479, "puzzl": 479, "create_model": 479, "0d": 479, "6303494": 479, "242733": 479, "715594": 479, "8516501": 479, "27537465": 479, "2327129": 479, "onnxruntimeerror": 479, "shapeinferenceerror": 479, "wrong": 479, "validationerror": 479, "57007396": 479, "45437858": 479}, "objects": {"onnx": [[461, 0, 1, "", "AttributeProto"], [461, 0, 1, "", "FunctionProto"], [461, 0, 1, "", "GraphProto"], [461, 0, 1, "", "MapProto"], [471, 0, 1, "id0", "ModelProto"], [461, 0, 1, "", "NodeProto"], [461, 0, 1, "", "OperatorProto"], [461, 0, 1, "", "OperatorSetIdProto"], [461, 0, 1, "", "OperatorSetProto"], [461, 0, 1, "", "OptionalProto"], [461, 0, 1, "", "SequenceProto"], [461, 0, 1, "", "SparseTensorProto"], [461, 0, 1, "", "TensorProto"], [461, 0, 1, "", "TensorShapeProto"], [461, 0, 1, "", "TrainingInfoProto"], [461, 0, 1, "", "TypeProto"], [461, 0, 1, "", "ValueInfoProto"], [471, 3, 1, "", "load"], [471, 3, 1, "", "load_model_from_string"], [471, 3, 1, "", "load_tensor_from_string"]], "onnx.AttributeProto": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.FunctionProto": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.GraphProto": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.MapProto": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.ModelProto": [[461, 1, 1, "", "DESCRIPTOR"], [471, 2, 1, "id1", "SerializeToString"]], "onnx.NodeProto": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.OperatorProto": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.OperatorSetIdProto": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.OperatorSetProto": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.OptionalProto": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.SequenceProto": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.SparseTensorProto": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.TensorProto": [[461, 1, 1, "", "DESCRIPTOR"], [461, 0, 1, "", "Segment"]], "onnx.TensorProto.Segment": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.TensorShapeProto": [[461, 1, 1, "", "DESCRIPTOR"], [461, 0, 1, "", "Dimension"]], "onnx.TensorShapeProto.Dimension": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.TrainingInfoProto": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.TypeProto": [[461, 1, 1, "", "DESCRIPTOR"], [461, 0, 1, "", "Map"], [461, 0, 1, "", "Opaque"], [461, 0, 1, "", "Optional"], [461, 0, 1, "", "Sequence"], [461, 0, 1, "", "SparseTensor"], [461, 0, 1, "", "Tensor"]], "onnx.TypeProto.Map": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.TypeProto.Opaque": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.TypeProto.Optional": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.TypeProto.Sequence": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.TypeProto.SparseTensor": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.TypeProto.Tensor": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.ValueInfoProto": [[461, 1, 1, "", "DESCRIPTOR"]], "onnx.backend.base": [[459, 0, 1, "", "Backend"], [459, 0, 1, "", "BackendRep"], [459, 0, 1, "", "Device"], [459, 0, 1, "", "DeviceType"]], "onnx.backend.base.Backend": [[459, 2, 1, "", "run_node"], [459, 2, 1, "", "supports_device"]], "onnx.backend.test.case": [[459, 3, 1, "", "collect_snippets"]], "onnx.backend.test.case.test_case": [[459, 0, 1, "", "TestCase"]], "onnx.backend.test.loader": [[459, 3, 1, "", "load_model_tests"]], "onnx.backend.test.runner": [[459, 0, 1, "", "Runner"]], "onnx.backend.test.runner.Runner": [[459, 4, 1, "", "test_cases"], [459, 4, 1, "", "test_suite"], [459, 4, 1, "", "tests"]], "onnx.checker": [[460, 3, 1, "", "check_model"]], "onnx.compose": [[462, 3, 1, "", "add_prefix"], [462, 3, 1, "", "add_prefix_graph"], [462, 3, 1, "", "expand_out_dim"], [462, 3, 1, "", "expand_out_dim_graph"], [462, 3, 1, "", "merge_graphs"], [462, 3, 1, "", "merge_models"]], "onnx.defs": [[467, 3, 1, "", "get_all_schemas_with_history"], [467, 3, 1, "", "get_function_ops"], [467, 3, 1, "", "get_schema"], [466, 3, 1, "", "onnx_opset_version"]], "onnx.external_data_helper": [[463, 0, 1, "", "ExternalDataInfo"], [463, 3, 1, "", "convert_model_from_external_data"], [463, 3, 1, "", "convert_model_to_external_data"], [463, 3, 1, "", "load_external_data_for_model"], [463, 3, 1, "", "load_external_data_for_tensor"], [463, 3, 1, "", "remove_external_data_field"], [463, 3, 1, "", "save_external_data"], [463, 3, 1, "", "set_external_data"], [463, 3, 1, "", "write_external_data_tensors"]], "onnx.helper": [[464, 3, 1, "", "find_min_ir_version_for"], [464, 3, 1, "id2", "get_attribute_value"], [464, 3, 1, "", "make_attribute"], [464, 3, 1, "", "make_empty_tensor_value_info"], [464, 3, 1, "", "make_function"], [464, 3, 1, "", "make_graph"], [464, 3, 1, "", "make_map"], [464, 3, 1, "", "make_model"], [464, 3, 1, "", "make_node"], [464, 3, 1, "", "make_operatorsetid"], [464, 3, 1, "", "make_opsetid"], [464, 3, 1, "", "make_optional"], [464, 3, 1, "", "make_optional_type_proto"], [464, 3, 1, "", "make_sequence"], [464, 3, 1, "", "make_sequence_type_proto"], [464, 3, 1, "", "make_sparse_tensor"], [464, 3, 1, "", "make_sparse_tensor_type_proto"], [464, 3, 1, "", "make_sparse_tensor_value_info"], [464, 3, 1, "", "make_tensor"], [464, 3, 1, "", "make_tensor_sequence_value_info"], [464, 3, 1, "id0", "make_tensor_type_proto"], [464, 3, 1, "", "make_tensor_value_info"], [464, 3, 1, "", "make_training_info"], [464, 3, 1, "", "make_value_info"], [464, 3, 1, "id4", "printable_attribute"], [464, 3, 1, "id5", "printable_dim"], [464, 3, 1, "id6", "printable_graph"], [464, 3, 1, "id7", "printable_node"], [464, 3, 1, "id8", "printable_tensor_proto"], [464, 3, 1, "id9", "printable_type"], [464, 3, 1, "id10", "printable_value_info"], [464, 3, 1, "", "split_complex_to_pairs"]], "onnx.hub": [[465, 0, 1, "", "ModelInfo"], [465, 3, 1, "", "get_model_info"], [465, 3, 1, "", "list_models"], [465, 3, 1, "", "load"]], "onnx.hub.ModelInfo": [[465, 1, 1, "", "metadata"], [465, 1, 1, "", "model"], [465, 1, 1, "", "model_path"], [465, 1, 1, "", "model_sha"], [465, 1, 1, "", "opset"], [465, 1, 1, "", "tags"]], "onnx.numpy_helper": [[468, 3, 1, "", "combine_pairs_to_complex"], [468, 3, 1, "", "convert_endian"], [468, 3, 1, "", "from_array"], [468, 3, 1, "", "from_dict"], [468, 3, 1, "", "from_list"], [468, 3, 1, "", "from_optional"], [468, 3, 1, "", "to_array"], [468, 3, 1, "", "to_dict"], [468, 3, 1, "", "to_list"], [468, 3, 1, "", "to_optional"]], "onnx.onnx_cpp2py_export": [[467, 5, 0, "-", "defs"]], "onnx.onnx_cpp2py_export.defs": [[467, 6, 1, "", "SchemaError"], [467, 3, 1, "", "get_all_schemas"], [467, 3, 1, "", "get_all_schemas_with_history"], [467, 3, 1, "", "get_schema"], [467, 3, 1, "", "has_schema"], [467, 3, 1, "", "schema_version_map"]], "onnx.parser": [[469, 3, 1, "", "parse_function"], [469, 3, 1, "", "parse_graph"], [469, 3, 1, "", "parse_model"]], "onnx.printer": [[470, 3, 1, "", "to_text"]], "onnx.shape_inference": [[472, 3, 1, "", "infer_shapes"], [472, 3, 1, "", "infer_shapes_path"]], "onnx.tools.net_drawer": [[473, 3, 1, "", "GetOpNodeProducer"], [473, 3, 1, "", "GetPydotGraph"]], "onnx.tools.update_model_dims": [[473, 3, 1, "", "update_inputs_outputs_dims"]], "onnx.utils": [[474, 0, 1, "", "Extractor"], [474, 3, 1, "", "extract_model"]], "onnx.version_converter": [[475, 3, 1, "", "convert_version"]]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:module", "6": "py:exception"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "module", "Python module"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"sampl": 0, "oper": [0, 2, 206, 207, 208, 467, 476, 477], "test": [0, 477, 479], "code": 0, "onnx": [1, 2, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479], "document": [1, 476], "expect": 2, "main": [2, 208], "ai": [2, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "ml": [2, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206], "preview": [2, 202, 203, 204, 205, 207], "train": [2, 202, 203, 204, 205, 207], "tabl": [2, 206, 207, 208], "ab": [3, 209, 210], "13": [3, 6, 8, 9, 19, 21, 24, 27, 29, 38, 39, 41, 42, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 61, 68, 69, 70, 73, 74, 78, 80, 81, 82, 85, 87, 91, 92, 94, 96, 97, 99, 100, 102, 110, 111, 114, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 141, 142, 151, 153, 154, 157, 158, 159, 160, 163, 164, 166, 167, 169, 170, 172, 175, 177, 180, 210, 211, 214, 217, 220, 232, 234, 236, 240, 244, 250, 252, 253, 256, 258, 263, 266, 268, 269, 270, 274, 278, 280, 281, 283, 292, 294, 296, 298, 299, 300, 303, 304, 313, 314, 317, 318, 319, 324, 330, 334, 337, 338, 342, 343, 346, 348, 349, 351, 360, 361, 364, 365, 368, 372, 373, 375, 377, 379, 382, 384, 387, 389, 391, 393, 395, 397, 398, 400, 402, 403, 408, 409, 411, 412, 416, 417, 419, 420, 421, 423, 425, 426, 428, 429, 433, 434, 436, 439, 442, 444, 446, 449, 452], "6": [3, 6, 15, 19, 21, 24, 41, 42, 45, 48, 52, 57, 66, 71, 77, 80, 87, 91, 94, 97, 99, 109, 121, 132, 143, 153, 166, 169, 170, 172, 175, 209, 210, 212, 213, 226, 227, 230, 231, 233, 234, 237, 238, 254, 255, 259, 260, 262, 267, 268, 273, 274, 284, 285, 293, 302, 308, 309, 316, 317, 331, 332, 335, 336, 339, 340, 344, 345, 347, 348, 356, 357, 371, 372, 396, 397, 415, 418, 419, 432, 433, 437, 438, 440, 441, 443, 444, 445, 446], "1": [3, 6, 7, 8, 9, 14, 15, 19, 21, 24, 27, 29, 31, 33, 38, 41, 42, 45, 46, 48, 51, 52, 53, 54, 57, 58, 59, 60, 61, 66, 68, 69, 70, 71, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 94, 97, 99, 103, 108, 109, 110, 111, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 143, 151, 153, 157, 158, 159, 161, 162, 163, 164, 166, 167, 169, 170, 172, 175, 176, 177, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 212, 215, 218, 221, 223, 226, 230, 233, 237, 241, 245, 247, 248, 251, 254, 259, 262, 264, 267, 271, 273, 275, 282, 284, 288, 290, 293, 295, 298, 301, 302, 304, 305, 307, 308, 311, 315, 316, 320, 321, 323, 327, 331, 335, 339, 344, 347, 355, 356, 362, 366, 369, 371, 374, 376, 378, 380, 383, 385, 388, 390, 392, 394, 396, 399, 415, 417, 418, 421, 424, 427, 428, 430, 432, 435, 437, 440, 443, 445, 448, 449, 450, 451, 453, 454, 458], "aco": 4, "7": [4, 6, 7, 10, 12, 14, 15, 34, 41, 42, 46, 53, 57, 61, 75, 78, 97, 98, 108, 109, 111, 115, 155, 169, 171, 181, 183, 213, 214, 215, 223, 224, 227, 228, 255, 256, 260, 261, 264, 265, 276, 277, 285, 286, 290, 291, 305, 306, 311, 312, 345, 346, 355, 357, 358, 366, 367, 369, 370, 438, 439, 454, 455, 458], "acosh": 5, "9": [5, 11, 13, 15, 19, 26, 29, 30, 35, 47, 50, 51, 57, 61, 73, 78, 85, 90, 92, 102, 104, 109, 139, 140, 152, 154, 156, 173, 181, 182, 228, 229, 231, 232, 239, 245, 246, 266, 271, 272, 286, 287, 291, 292, 303, 312, 313, 323, 324, 329, 334, 351, 352, 358, 359, 406, 407, 414, 420, 455, 456, 457], "add": [6, 211, 212, 213, 214], "14": [6, 15, 36, 41, 53, 67, 69, 75, 97, 115, 132, 133, 169, 178, 211, 225, 229, 249, 253, 277, 296, 297, 306, 343, 370, 395, 398, 436], "And": [7, 215], "argmax": [8, 216, 217, 218], "12": [8, 9, 22, 24, 29, 42, 44, 56, 62, 79, 87, 88, 94, 100, 111, 126, 128, 160, 216, 217, 219, 220, 235, 236, 243, 244, 257, 258, 279, 280, 289, 310, 326, 330, 333, 338, 341, 349, 364, 367, 381, 382, 386, 387, 425], "11": [8, 9, 14, 17, 24, 26, 27, 28, 29, 31, 33, 36, 38, 40, 43, 46, 51, 54, 55, 56, 57, 68, 70, 81, 82, 84, 88, 90, 101, 104, 110, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 158, 159, 164, 165, 167, 176, 179, 180, 216, 218, 219, 221, 222, 235, 238, 239, 240, 242, 243, 246, 247, 248, 249, 250, 251, 263, 265, 270, 272, 278, 279, 281, 282, 283, 287, 294, 295, 299, 301, 314, 315, 318, 320, 322, 325, 326, 329, 350, 352, 360, 363, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 401, 402, 405, 407, 408, 411, 414, 422, 423, 426, 427, 429, 431, 434, 435, 447, 452, 453], "argmin": [9, 219, 220, 221], "asin": 10, "asinh": 11, "atan": 12, "atanh": 13, "averagepool": [14, 222, 223, 224], "10": [14, 32, 39, 42, 72, 86, 88, 96, 101, 112, 113, 114, 134, 135, 136, 158, 168, 174, 176, 181, 222, 224, 252, 257, 261, 325, 328, 342, 350, 368, 401, 404, 422, 424, 447, 448, 456], "batchnorm": [15, 225, 226, 227, 228, 229], "15": [15, 16, 20, 105, 106, 107, 111, 151, 225, 353, 354, 365, 416], "bernoulli": 16, "bitshift": 17, "blackmanwindow": 18, "17": [18, 37, 64, 65, 76, 93, 138, 150], "cast": [19, 230, 231, 232], "castlik": 20, "ceil": [21, 233, 234], "celu": 22, "centercroppad": 23, "18": [23, 25, 95, 106, 107, 110, 134, 141, 142, 353, 354, 361, 403, 410, 413], "clip": [24, 235, 236, 237, 238], "col2im": 25, "compress": [26, 239], "concat": [27, 240, 241, 242], "4": [27, 241, 242], "concatfromsequ": 28, "constant": [29, 243, 244, 245, 246], "constantofshap": 30, "conv": [31, 248], "convinteg": 32, "convtranspos": [33, 247], "co": 34, "cosh": 35, "cumsum": [36, 249], "dft": 37, "depthtospac": [38, 250, 251], "dequantizelinear": [39, 252], "det": 40, "div": [41, 253, 254, 255, 256], "dropout": [42, 257, 258, 259, 260, 261], "dynamicquantizelinear": 43, "einsum": 44, "elu": [45, 262], "equal": [46, 263, 264, 265], "erf": [47, 266], "exp": [48, 267, 268], "expand": [49, 269], "8": [49, 87, 88, 91, 94, 139, 170, 269, 327, 328, 332, 333, 336, 337, 340, 341, 406, 441, 442], "eyelik": 50, "flatten": [51, 270, 271, 272], "floor": [52, 273, 274], "gru": [53, 275, 276, 277], "3": [53, 199, 200, 275, 276, 450, 451], "gather": [54, 281, 282], "gatherel": [55, 278], "gathernd": [56, 279, 280], "gemm": [57, 283, 284, 285, 286, 287], "globalaveragepool": 58, "globallppool": [59, 288], "2": [59, 84, 110, 164, 191, 288, 307, 321, 322, 362, 363, 430, 431], "globalmaxpool": 60, "greater": [61, 290, 291, 292], "greaterorequ": [62, 289], "16": [62, 63, 69, 70, 77, 79, 82, 109, 136, 139, 141, 142, 182, 289, 297, 300, 309, 310, 319, 359, 404, 405, 409, 410, 412, 413, 457], "gridsampl": 63, "hammingwindow": 64, "hannwindow": 65, "hardsigmoid": [66, 293], "hardswish": 67, "hardmax": [68, 294, 295], "ident": [69, 296, 297, 298], "If": [70, 299, 300, 301, 477, 479], "instancenorm": [71, 302], "isinf": 72, "isnan": [73, 303], "lrn": [74, 304], "lstm": [75, 305, 306], "layernorm": 76, "leakyrelu": [77, 308, 309], "less": [78, 311, 312, 313], "lessorequ": [79, 310], "log": [80, 316, 317], "logsoftmax": [81, 314, 315], "loop": [82, 318, 319, 320, 477, 479], "lpnormal": 83, "lppool": [84, 321, 322], "matmul": [85, 323, 324], "matmulinteg": 86, "max": [87, 330, 331, 332, 333], "maxpool": [88, 325, 326, 327, 328], "maxroipool": 89, "maxunpool": [90, 329], "mean": [91, 335, 336, 337], "meanvariancenorm": [92, 334], "melweightmatrix": 93, "min": [94, 338, 339, 340, 341], "mish": 95, "mod": [96, 342], "mul": [97, 343, 344, 345, 346], "multinomi": 98, "neg": [99, 347, 348], "negativeloglikelihoodloss": [100, 349], "nonmaxsuppress": [101, 350], "nonzero": [102, 351], "Not": 103, "onehot": [104, 352], "option": [105, 468], "optionalgetel": [106, 353], "optionalhasel": [107, 354], "Or": [108, 355], "prelu": [109, 356, 357, 358, 359], "pad": [110, 360, 361, 362, 363], "pow": [111, 364, 365, 366, 367], "qlinearconv": 112, "qlinearmatmul": 113, "quantizelinear": [114, 368], "rnn": [115, 369, 370], "randomnorm": 116, "randomnormallik": 117, "randomuniform": 118, "randomuniformlik": 119, "rang": 120, "reciproc": [121, 371, 372], "reducel1": [122, 373, 374], "reducel2": [123, 375, 376], "reducelogsum": [124, 379, 380], "reducelogsumexp": [125, 377, 378], "reducemax": [126, 381, 382, 383], "reducemean": [127, 384, 385], "reducemin": [128, 386, 387, 388], "reduceprod": [129, 389, 390], "reducesum": [130, 393, 394], "reducesumsquar": [131, 391, 392], "relu": [132, 395, 396, 397], "reshap": [133, 398, 399, 400], "5": [133, 399, 400], "resiz": [134, 401, 402, 403], "reversesequ": 135, "roialign": [136, 404], "round": 137, "stft": 138, "scan": [139, 405, 406, 407, 477, 479], "scatter": [140, 414], "scatterel": [141, 408, 409, 410], "scatternd": [142, 411, 412, 413], "selu": [143, 415], "sequenceat": 144, "sequenceconstruct": 145, "sequenceempti": 146, "sequenceeras": 147, "sequenceinsert": 148, "sequencelength": 149, "sequencemap": 150, "shape": [151, 416, 417, 477, 479], "shrink": 152, "sigmoid": [153, 418, 419], "sign": [154, 420], "sin": 155, "sinh": 156, "size": [157, 421], "slice": [158, 422, 423, 424], "softmax": [159, 426, 427], "softmaxcrossentropyloss": [160, 425], "softplu": 161, "softsign": 162, "spacetodepth": [163, 428], "split": [164, 429, 430, 431], "splittosequ": 165, "sqrt": [166, 432, 433], "squeez": [167, 434, 435], "stringnorm": 168, "sub": [169, 436, 437, 438, 439], "sum": [170, 440, 441, 442], "tan": 171, "tanh": [172, 443, 444], "tfidfvector": 173, "thresholdedrelu": 174, "tile": [175, 445, 446], "topk": [176, 447, 448], "transpos": [177, 449], "trilu": 178, "uniqu": 179, "unsqueez": [180, 452, 453], "upsampl": [181, 454, 455, 456], "where": [182, 457], "xor": [183, 458], "arrayfeatureextractor": 184, "binar": 185, "castmap": 186, "categorymapp": 187, "dictvector": 188, "featurevector": 189, "imput": 190, "labelencod": [191, 307], "linearclassifi": 192, "linearregressor": 193, "normal": 194, "onehotencod": 195, "svmclassifi": 196, "svmregressor": 197, "scaler": 198, "treeensembleclassifi": [199, 450], "treeensembleregressor": [200, 451], "zipmap": 201, "adagrad": 202, "adam": 203, "gradient": 204, "momentum": 205, "domain": [206, 207, 208, 477], "v": [209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "backend": 459, "backendrep": 459, "collect_snippet": 459, "devic": 459, "devicetyp": 459, "load_model_test": 459, "runner": 459, "testcas": 459, "checker": [460, 479], "check_model": 460, "proto": [461, 471], "attributeproto": 461, "functionproto": 461, "graphproto": 461, "mapproto": 461, "modelproto": 461, "nodeproto": 461, "operatorproto": 461, "operatorsetidproto": 461, "operatorsetproto": 461, "optionalproto": 461, "sequenceproto": 461, "sparsetensorproto": 461, "tensorproto": 461, "tensorshapeproto": 461, "traininginfoproto": 461, "typeproto": 461, "valueinfoproto": 461, "compos": 462, "merge_graph": 462, "merge_model": 462, "prefix": 462, "dimens": 462, "external_data_help": 463, "convert_model_from_external_data": 463, "convert_model_to_external_data": 463, "externaldatainfo": 463, "load_external_data_for_model": 463, "load_external_data_for_tensor": 463, "remove_external_data_field": 463, "save_external_data": 463, "set_external_data": 463, "write_external_data_tensor": 463, "helper": 464, "getter": 464, "print": 464, "tool": [464, 468, 473, 477], "make": 464, "function": [464, 466, 467, 476, 477, 479], "hub": 465, "modelinfo": 465, "list_model": 465, "get_model_info": 465, "load": [465, 471], "api": [466, 476], "refer": 466, "data": [466, 479], "structur": 466, "map": 467, "type": [467, 477], "np_type_to_tensor_typ": 467, "op_set_id_version_map": 467, "optional_element_type_to_field": 467, "storage_element_type_to_field": 467, "storage_tensor_type_to_field": 467, "tensor_type_to_np_typ": 467, "tensor_type_to_storage_tensor_typ": 467, "opset": [467, 476, 477, 479], "version": [467, 477], "schema": 467, "intern": 467, "modul": 467, "numpy_help": 468, "arrai": 468, "sequenc": 468, "dictionari": 468, "parser": 469, "parse_funct": 469, "parse_graph": 469, "parse_model": 469, "printer": 470, "to_text": 470, "serial": [471, 477, 479], "save": 471, "model": [471, 479], "ani": 471, "class": [471, 476], "shape_infer": 472, "infer_shap": 472, "infer_shapes_path": 472, "net_draw": 473, "update_inputs_outputs_dim": 473, "util": 474, "extractor": 474, "extract_model": 474, "version_convert": 475, "convert_vers": 475, "challeng": 476, "what": [476, 477], "i": [476, 477], "convert": 476, "librari": 476, "other": [476, 477], "A": [476, 479], "graph": 476, "method": 476, "add_nod": 476, "trick": 476, "learn": 476, "from": 476, "experi": 476, "discrep": 476, "isolationforest": 476, "discret": 476, "contribut": 476, "build": 476, "markdown": 476, "updat": 476, "an": [476, 477], "exist": 476, "concept": 477, "input": [477, 479], "output": 477, "node": 477, "initi": [477, 479], "attribut": [477, 479], "protobuf": 477, "metadata": [477, 479], "list": 477, "avail": 477, "support": 477, "element": 477, "spars": 477, "tensor": 477, "subgraph": [477, 479], "extens": 477, "infer": [477, 479], "introduct": 478, "python": 479, "simpl": 479, "exampl": 479, "linear": 479, "regress": 479, "default": 479, "valu": 479, "pars": 479, "implement": 479, "detail": 479, "c": 479}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 56}})