Search.setIndex({"docnames": ["expect", "index", "onnx_doc_folder/index", "onnx_doc_folder/onnx__Abs", "onnx_doc_folder/onnx__Acos", "onnx_doc_folder/onnx__Acosh", "onnx_doc_folder/onnx__Add", "onnx_doc_folder/onnx__And", "onnx_doc_folder/onnx__ArgMax", "onnx_doc_folder/onnx__ArgMin", "onnx_doc_folder/onnx__Asin", "onnx_doc_folder/onnx__Asinh", "onnx_doc_folder/onnx__Atan", "onnx_doc_folder/onnx__Atanh", "onnx_doc_folder/onnx__AttributeHasValue", "onnx_doc_folder/onnx__AveragePool", "onnx_doc_folder/onnx__BatchNormalization", "onnx_doc_folder/onnx__Bernoulli", "onnx_doc_folder/onnx__BitShift", "onnx_doc_folder/onnx__BlackmanWindow", "onnx_doc_folder/onnx__Cast", "onnx_doc_folder/onnx__CastLike", "onnx_doc_folder/onnx__Ceil", "onnx_doc_folder/onnx__Celu", "onnx_doc_folder/onnx__CenterCropPad", "onnx_doc_folder/onnx__Clip", "onnx_doc_folder/onnx__Col2Im", "onnx_doc_folder/onnx__Compress", "onnx_doc_folder/onnx__Concat", "onnx_doc_folder/onnx__ConcatFromSequence", "onnx_doc_folder/onnx__Constant", "onnx_doc_folder/onnx__ConstantOfShape", "onnx_doc_folder/onnx__Conv", "onnx_doc_folder/onnx__ConvInteger", "onnx_doc_folder/onnx__ConvTranspose", "onnx_doc_folder/onnx__Cos", "onnx_doc_folder/onnx__Cosh", "onnx_doc_folder/onnx__CumSum", "onnx_doc_folder/onnx__DFT", "onnx_doc_folder/onnx__DepthToSpace", "onnx_doc_folder/onnx__DequantizeLinear", "onnx_doc_folder/onnx__Det", "onnx_doc_folder/onnx__Div", "onnx_doc_folder/onnx__Dropout", "onnx_doc_folder/onnx__DynamicQuantizeLinear", "onnx_doc_folder/onnx__Einsum", "onnx_doc_folder/onnx__Elu", "onnx_doc_folder/onnx__Equal", "onnx_doc_folder/onnx__Erf", "onnx_doc_folder/onnx__Exp", "onnx_doc_folder/onnx__Expand", "onnx_doc_folder/onnx__EyeLike", "onnx_doc_folder/onnx__Flatten", "onnx_doc_folder/onnx__Floor", "onnx_doc_folder/onnx__GRU", "onnx_doc_folder/onnx__Gather", "onnx_doc_folder/onnx__GatherElements", "onnx_doc_folder/onnx__GatherND", "onnx_doc_folder/onnx__Gemm", "onnx_doc_folder/onnx__GlobalAveragePool", "onnx_doc_folder/onnx__GlobalLpPool", "onnx_doc_folder/onnx__GlobalMaxPool", "onnx_doc_folder/onnx__Greater", "onnx_doc_folder/onnx__GreaterOrEqual", "onnx_doc_folder/onnx__GridSample", "onnx_doc_folder/onnx__HammingWindow", "onnx_doc_folder/onnx__HannWindow", "onnx_doc_folder/onnx__HardSigmoid", "onnx_doc_folder/onnx__HardSwish", "onnx_doc_folder/onnx__Hardmax", "onnx_doc_folder/onnx__Identity", "onnx_doc_folder/onnx__If", "onnx_doc_folder/onnx__InstanceNormalization", "onnx_doc_folder/onnx__IsInf", "onnx_doc_folder/onnx__IsNaN", "onnx_doc_folder/onnx__LRN", "onnx_doc_folder/onnx__LSTM", "onnx_doc_folder/onnx__LayerNormalization", "onnx_doc_folder/onnx__LeakyRelu", "onnx_doc_folder/onnx__Less", "onnx_doc_folder/onnx__LessOrEqual", "onnx_doc_folder/onnx__Log", "onnx_doc_folder/onnx__LogSoftmax", "onnx_doc_folder/onnx__Loop", "onnx_doc_folder/onnx__LpNormalization", "onnx_doc_folder/onnx__LpPool", "onnx_doc_folder/onnx__MatMul", "onnx_doc_folder/onnx__MatMulInteger", "onnx_doc_folder/onnx__Max", "onnx_doc_folder/onnx__MaxPool", "onnx_doc_folder/onnx__MaxRoiPool", "onnx_doc_folder/onnx__MaxUnpool", "onnx_doc_folder/onnx__Mean", "onnx_doc_folder/onnx__MeanVarianceNormalization", "onnx_doc_folder/onnx__MelWeightMatrix", "onnx_doc_folder/onnx__Min", "onnx_doc_folder/onnx__Mish", "onnx_doc_folder/onnx__Mod", "onnx_doc_folder/onnx__Mul", "onnx_doc_folder/onnx__Multinomial", "onnx_doc_folder/onnx__Neg", "onnx_doc_folder/onnx__NegativeLogLikelihoodLoss", "onnx_doc_folder/onnx__NonMaxSuppression", "onnx_doc_folder/onnx__NonZero", "onnx_doc_folder/onnx__Not", "onnx_doc_folder/onnx__OneHot", "onnx_doc_folder/onnx__Optional", "onnx_doc_folder/onnx__OptionalGetElement", "onnx_doc_folder/onnx__OptionalHasElement", "onnx_doc_folder/onnx__Or", "onnx_doc_folder/onnx__PRelu", "onnx_doc_folder/onnx__Pad", "onnx_doc_folder/onnx__Pow", "onnx_doc_folder/onnx__QLinearConv", "onnx_doc_folder/onnx__QLinearMatMul", "onnx_doc_folder/onnx__QuantizeLinear", "onnx_doc_folder/onnx__RNN", "onnx_doc_folder/onnx__RandomNormal", "onnx_doc_folder/onnx__RandomNormalLike", "onnx_doc_folder/onnx__RandomUniform", "onnx_doc_folder/onnx__RandomUniformLike", "onnx_doc_folder/onnx__Range", "onnx_doc_folder/onnx__Reciprocal", "onnx_doc_folder/onnx__ReduceL1", "onnx_doc_folder/onnx__ReduceL2", "onnx_doc_folder/onnx__ReduceLogSum", "onnx_doc_folder/onnx__ReduceLogSumExp", "onnx_doc_folder/onnx__ReduceMax", "onnx_doc_folder/onnx__ReduceMean", "onnx_doc_folder/onnx__ReduceMin", "onnx_doc_folder/onnx__ReduceProd", "onnx_doc_folder/onnx__ReduceSum", "onnx_doc_folder/onnx__ReduceSumSquare", "onnx_doc_folder/onnx__Relu", "onnx_doc_folder/onnx__Reshape", "onnx_doc_folder/onnx__Resize", "onnx_doc_folder/onnx__ReverseSequence", "onnx_doc_folder/onnx__RoiAlign", "onnx_doc_folder/onnx__Round", "onnx_doc_folder/onnx__STFT", "onnx_doc_folder/onnx__Scan", "onnx_doc_folder/onnx__Scatter", "onnx_doc_folder/onnx__ScatterElements", "onnx_doc_folder/onnx__ScatterND", "onnx_doc_folder/onnx__Selu", "onnx_doc_folder/onnx__SequenceAt", "onnx_doc_folder/onnx__SequenceConstruct", "onnx_doc_folder/onnx__SequenceEmpty", "onnx_doc_folder/onnx__SequenceErase", "onnx_doc_folder/onnx__SequenceInsert", "onnx_doc_folder/onnx__SequenceLength", "onnx_doc_folder/onnx__SequenceMap", "onnx_doc_folder/onnx__Shape", "onnx_doc_folder/onnx__Shrink", "onnx_doc_folder/onnx__Sigmoid", "onnx_doc_folder/onnx__Sign", "onnx_doc_folder/onnx__Sin", "onnx_doc_folder/onnx__Sinh", "onnx_doc_folder/onnx__Size", "onnx_doc_folder/onnx__Slice", "onnx_doc_folder/onnx__Softmax", "onnx_doc_folder/onnx__SoftmaxCrossEntropyLoss", "onnx_doc_folder/onnx__Softplus", "onnx_doc_folder/onnx__Softsign", "onnx_doc_folder/onnx__SpaceToDepth", "onnx_doc_folder/onnx__Split", "onnx_doc_folder/onnx__SplitToSequence", "onnx_doc_folder/onnx__Sqrt", "onnx_doc_folder/onnx__Squeeze", "onnx_doc_folder/onnx__StringNormalizer", "onnx_doc_folder/onnx__Sub", "onnx_doc_folder/onnx__Sum", "onnx_doc_folder/onnx__Tan", "onnx_doc_folder/onnx__Tanh", "onnx_doc_folder/onnx__TfIdfVectorizer", "onnx_doc_folder/onnx__ThresholdedRelu", "onnx_doc_folder/onnx__Tile", "onnx_doc_folder/onnx__TopK", "onnx_doc_folder/onnx__Transpose", "onnx_doc_folder/onnx__Trilu", "onnx_doc_folder/onnx__Unique", "onnx_doc_folder/onnx__Unsqueeze", "onnx_doc_folder/onnx__Upsample", "onnx_doc_folder/onnx__Where", "onnx_doc_folder/onnx__Xor", "onnx_doc_folder/onnx_aionnxml_ArrayFeatureExtractor", "onnx_doc_folder/onnx_aionnxml_Binarizer", "onnx_doc_folder/onnx_aionnxml_CastMap", "onnx_doc_folder/onnx_aionnxml_CategoryMapper", "onnx_doc_folder/onnx_aionnxml_DictVectorizer", "onnx_doc_folder/onnx_aionnxml_FeatureVectorizer", "onnx_doc_folder/onnx_aionnxml_Imputer", "onnx_doc_folder/onnx_aionnxml_LabelEncoder", "onnx_doc_folder/onnx_aionnxml_LinearClassifier", "onnx_doc_folder/onnx_aionnxml_LinearRegressor", "onnx_doc_folder/onnx_aionnxml_Normalizer", "onnx_doc_folder/onnx_aionnxml_OneHotEncoder", "onnx_doc_folder/onnx_aionnxml_SVMClassifier", "onnx_doc_folder/onnx_aionnxml_SVMRegressor", "onnx_doc_folder/onnx_aionnxml_Scaler", "onnx_doc_folder/onnx_aionnxml_TreeEnsembleClassifier", "onnx_doc_folder/onnx_aionnxml_TreeEnsembleRegressor", "onnx_doc_folder/onnx_aionnxml_ZipMap", "onnx_doc_folder/onnx_aionnxpreviewtraining_Adagrad", "onnx_doc_folder/onnx_aionnxpreviewtraining_Adam", "onnx_doc_folder/onnx_aionnxpreviewtraining_Gradient", "onnx_doc_folder/onnx_aionnxpreviewtraining_Momentum", "onnx_doc_folder/table_ai_onnx", "onnx_doc_folder/table_ai_onnx_ml", "onnx_doc_folder/table_ai_onnx_preview_training", "onnx_doc_folder/text_diff_Abs_1_6", "onnx_doc_folder/text_diff_Abs_6_13", "onnx_doc_folder/text_diff_Add_13_14", "onnx_doc_folder/text_diff_Add_1_6", "onnx_doc_folder/text_diff_Add_6_7", "onnx_doc_folder/text_diff_Add_7_13", "onnx_doc_folder/text_diff_And_1_7", "onnx_doc_folder/text_diff_ArgMax_11_12", "onnx_doc_folder/text_diff_ArgMax_12_13", "onnx_doc_folder/text_diff_ArgMax_1_11", "onnx_doc_folder/text_diff_ArgMin_11_12", "onnx_doc_folder/text_diff_ArgMin_12_13", "onnx_doc_folder/text_diff_ArgMin_1_11", "onnx_doc_folder/text_diff_AveragePool_10_11", "onnx_doc_folder/text_diff_AveragePool_1_7", "onnx_doc_folder/text_diff_AveragePool_7_10", "onnx_doc_folder/text_diff_BatchNormalization_14_15", "onnx_doc_folder/text_diff_BatchNormalization_1_6", "onnx_doc_folder/text_diff_BatchNormalization_6_7", "onnx_doc_folder/text_diff_BatchNormalization_7_9", "onnx_doc_folder/text_diff_BatchNormalization_9_14", "onnx_doc_folder/text_diff_Cast_1_6", "onnx_doc_folder/text_diff_Cast_6_9", "onnx_doc_folder/text_diff_Cast_9_13", "onnx_doc_folder/text_diff_Ceil_1_6", "onnx_doc_folder/text_diff_Ceil_6_13", "onnx_doc_folder/text_diff_Clip_11_12", "onnx_doc_folder/text_diff_Clip_12_13", "onnx_doc_folder/text_diff_Clip_1_6", "onnx_doc_folder/text_diff_Clip_6_11", "onnx_doc_folder/text_diff_Compress_9_11", "onnx_doc_folder/text_diff_Concat_11_13", "onnx_doc_folder/text_diff_Concat_1_4", "onnx_doc_folder/text_diff_Concat_4_11", "onnx_doc_folder/text_diff_Constant_11_12", "onnx_doc_folder/text_diff_Constant_12_13", "onnx_doc_folder/text_diff_Constant_1_9", "onnx_doc_folder/text_diff_Constant_9_11", "onnx_doc_folder/text_diff_ConvTranspose_1_11", "onnx_doc_folder/text_diff_Conv_1_11", "onnx_doc_folder/text_diff_CumSum_11_14", "onnx_doc_folder/text_diff_DepthToSpace_11_13", "onnx_doc_folder/text_diff_DepthToSpace_1_11", "onnx_doc_folder/text_diff_DequantizeLinear_10_13", "onnx_doc_folder/text_diff_Div_13_14", "onnx_doc_folder/text_diff_Div_1_6", "onnx_doc_folder/text_diff_Div_6_7", "onnx_doc_folder/text_diff_Div_7_13", "onnx_doc_folder/text_diff_Dropout_10_12", "onnx_doc_folder/text_diff_Dropout_12_13", "onnx_doc_folder/text_diff_Dropout_1_6", "onnx_doc_folder/text_diff_Dropout_6_7", "onnx_doc_folder/text_diff_Dropout_7_10", "onnx_doc_folder/text_diff_Elu_1_6", "onnx_doc_folder/text_diff_Equal_11_13", "onnx_doc_folder/text_diff_Equal_1_7", "onnx_doc_folder/text_diff_Equal_7_11", "onnx_doc_folder/text_diff_Erf_9_13", "onnx_doc_folder/text_diff_Exp_1_6", "onnx_doc_folder/text_diff_Exp_6_13", "onnx_doc_folder/text_diff_Expand_8_13", "onnx_doc_folder/text_diff_Flatten_11_13", "onnx_doc_folder/text_diff_Flatten_1_9", "onnx_doc_folder/text_diff_Flatten_9_11", "onnx_doc_folder/text_diff_Floor_1_6", "onnx_doc_folder/text_diff_Floor_6_13", "onnx_doc_folder/text_diff_GRU_1_3", "onnx_doc_folder/text_diff_GRU_3_7", "onnx_doc_folder/text_diff_GRU_7_14", "onnx_doc_folder/text_diff_GatherElements_11_13", "onnx_doc_folder/text_diff_GatherND_11_12", "onnx_doc_folder/text_diff_GatherND_12_13", "onnx_doc_folder/text_diff_Gather_11_13", "onnx_doc_folder/text_diff_Gather_1_11", "onnx_doc_folder/text_diff_Gemm_11_13", "onnx_doc_folder/text_diff_Gemm_1_6", "onnx_doc_folder/text_diff_Gemm_6_7", "onnx_doc_folder/text_diff_Gemm_7_9", "onnx_doc_folder/text_diff_Gemm_9_11", "onnx_doc_folder/text_diff_GlobalLpPool_1_2", "onnx_doc_folder/text_diff_GreaterOrEqual_12_16", "onnx_doc_folder/text_diff_Greater_1_7", "onnx_doc_folder/text_diff_Greater_7_9", "onnx_doc_folder/text_diff_Greater_9_13", "onnx_doc_folder/text_diff_HardSigmoid_1_6", "onnx_doc_folder/text_diff_Hardmax_11_13", "onnx_doc_folder/text_diff_Hardmax_1_11", "onnx_doc_folder/text_diff_Identity_13_14", "onnx_doc_folder/text_diff_Identity_14_16", "onnx_doc_folder/text_diff_Identity_1_13", "onnx_doc_folder/text_diff_If_11_13", "onnx_doc_folder/text_diff_If_13_16", "onnx_doc_folder/text_diff_If_1_11", "onnx_doc_folder/text_diff_InstanceNormalization_1_6", "onnx_doc_folder/text_diff_IsNaN_9_13", "onnx_doc_folder/text_diff_LRN_1_13", "onnx_doc_folder/text_diff_LSTM_1_7", "onnx_doc_folder/text_diff_LSTM_7_14", "onnx_doc_folder/text_diff_LabelEncoder_1_2", "onnx_doc_folder/text_diff_LeakyRelu_1_6", "onnx_doc_folder/text_diff_LeakyRelu_6_16", "onnx_doc_folder/text_diff_LessOrEqual_12_16", "onnx_doc_folder/text_diff_Less_1_7", "onnx_doc_folder/text_diff_Less_7_9", "onnx_doc_folder/text_diff_Less_9_13", "onnx_doc_folder/text_diff_LogSoftmax_11_13", "onnx_doc_folder/text_diff_LogSoftmax_1_11", "onnx_doc_folder/text_diff_Log_1_6", "onnx_doc_folder/text_diff_Log_6_13", "onnx_doc_folder/text_diff_Loop_11_13", "onnx_doc_folder/text_diff_Loop_13_16", "onnx_doc_folder/text_diff_Loop_1_11", "onnx_doc_folder/text_diff_LpPool_1_2", "onnx_doc_folder/text_diff_LpPool_2_11", "onnx_doc_folder/text_diff_MatMul_1_9", "onnx_doc_folder/text_diff_MatMul_9_13", "onnx_doc_folder/text_diff_MaxPool_10_11", "onnx_doc_folder/text_diff_MaxPool_11_12", "onnx_doc_folder/text_diff_MaxPool_1_8", "onnx_doc_folder/text_diff_MaxPool_8_10", "onnx_doc_folder/text_diff_MaxUnpool_9_11", "onnx_doc_folder/text_diff_Max_12_13", "onnx_doc_folder/text_diff_Max_1_6", "onnx_doc_folder/text_diff_Max_6_8", "onnx_doc_folder/text_diff_Max_8_12", "onnx_doc_folder/text_diff_MeanVarianceNormalization_9_13", "onnx_doc_folder/text_diff_Mean_1_6", "onnx_doc_folder/text_diff_Mean_6_8", "onnx_doc_folder/text_diff_Mean_8_13", "onnx_doc_folder/text_diff_Min_12_13", "onnx_doc_folder/text_diff_Min_1_6", "onnx_doc_folder/text_diff_Min_6_8", "onnx_doc_folder/text_diff_Min_8_12", "onnx_doc_folder/text_diff_Mod_10_13", "onnx_doc_folder/text_diff_Mul_13_14", "onnx_doc_folder/text_diff_Mul_1_6", "onnx_doc_folder/text_diff_Mul_6_7", "onnx_doc_folder/text_diff_Mul_7_13", "onnx_doc_folder/text_diff_Neg_1_6", "onnx_doc_folder/text_diff_Neg_6_13", "onnx_doc_folder/text_diff_NegativeLogLikelihoodLoss_12_13", "onnx_doc_folder/text_diff_NonMaxSuppression_10_11", "onnx_doc_folder/text_diff_NonZero_9_13", "onnx_doc_folder/text_diff_OneHot_9_11", "onnx_doc_folder/text_diff_OptionalGetElement_15_18", "onnx_doc_folder/text_diff_OptionalHasElement_15_18", "onnx_doc_folder/text_diff_Or_1_7", "onnx_doc_folder/text_diff_PRelu_1_6", "onnx_doc_folder/text_diff_PRelu_6_7", "onnx_doc_folder/text_diff_PRelu_7_9", "onnx_doc_folder/text_diff_PRelu_9_16", "onnx_doc_folder/text_diff_Pad_11_13", "onnx_doc_folder/text_diff_Pad_13_18", "onnx_doc_folder/text_diff_Pad_1_2", "onnx_doc_folder/text_diff_Pad_2_11", "onnx_doc_folder/text_diff_Pow_12_13", "onnx_doc_folder/text_diff_Pow_13_15", "onnx_doc_folder/text_diff_Pow_1_7", "onnx_doc_folder/text_diff_Pow_7_12", "onnx_doc_folder/text_diff_QuantizeLinear_10_13", "onnx_doc_folder/text_diff_RNN_1_7", "onnx_doc_folder/text_diff_RNN_7_14", "onnx_doc_folder/text_diff_Reciprocal_1_6", "onnx_doc_folder/text_diff_Reciprocal_6_13", "onnx_doc_folder/text_diff_ReduceL1_11_13", "onnx_doc_folder/text_diff_ReduceL1_1_11", "onnx_doc_folder/text_diff_ReduceL2_11_13", "onnx_doc_folder/text_diff_ReduceL2_1_11", "onnx_doc_folder/text_diff_ReduceLogSumExp_11_13", "onnx_doc_folder/text_diff_ReduceLogSumExp_1_11", "onnx_doc_folder/text_diff_ReduceLogSum_11_13", "onnx_doc_folder/text_diff_ReduceLogSum_1_11", "onnx_doc_folder/text_diff_ReduceMax_11_12", "onnx_doc_folder/text_diff_ReduceMax_12_13", "onnx_doc_folder/text_diff_ReduceMax_1_11", "onnx_doc_folder/text_diff_ReduceMean_11_13", "onnx_doc_folder/text_diff_ReduceMean_1_11", "onnx_doc_folder/text_diff_ReduceMin_11_12", "onnx_doc_folder/text_diff_ReduceMin_12_13", "onnx_doc_folder/text_diff_ReduceMin_1_11", "onnx_doc_folder/text_diff_ReduceProd_11_13", "onnx_doc_folder/text_diff_ReduceProd_1_11", "onnx_doc_folder/text_diff_ReduceSumSquare_11_13", "onnx_doc_folder/text_diff_ReduceSumSquare_1_11", "onnx_doc_folder/text_diff_ReduceSum_11_13", "onnx_doc_folder/text_diff_ReduceSum_1_11", "onnx_doc_folder/text_diff_Relu_13_14", "onnx_doc_folder/text_diff_Relu_1_6", "onnx_doc_folder/text_diff_Relu_6_13", "onnx_doc_folder/text_diff_Reshape_13_14", "onnx_doc_folder/text_diff_Reshape_1_5", "onnx_doc_folder/text_diff_Reshape_5_13", "onnx_doc_folder/text_diff_Resize_10_11", "onnx_doc_folder/text_diff_Resize_11_13", "onnx_doc_folder/text_diff_Resize_13_18", "onnx_doc_folder/text_diff_RoiAlign_10_16", "onnx_doc_folder/text_diff_Scan_11_16", "onnx_doc_folder/text_diff_Scan_8_9", "onnx_doc_folder/text_diff_Scan_9_11", "onnx_doc_folder/text_diff_ScatterElements_11_13", "onnx_doc_folder/text_diff_ScatterElements_13_16", "onnx_doc_folder/text_diff_ScatterElements_16_18", "onnx_doc_folder/text_diff_ScatterND_11_13", "onnx_doc_folder/text_diff_ScatterND_13_16", "onnx_doc_folder/text_diff_ScatterND_16_18", "onnx_doc_folder/text_diff_Scatter_9_11", "onnx_doc_folder/text_diff_Selu_1_6", "onnx_doc_folder/text_diff_Shape_13_15", "onnx_doc_folder/text_diff_Shape_1_13", "onnx_doc_folder/text_diff_Sigmoid_1_6", "onnx_doc_folder/text_diff_Sigmoid_6_13", "onnx_doc_folder/text_diff_Sign_9_13", "onnx_doc_folder/text_diff_Size_1_13", "onnx_doc_folder/text_diff_Slice_10_11", "onnx_doc_folder/text_diff_Slice_11_13", "onnx_doc_folder/text_diff_Slice_1_10", "onnx_doc_folder/text_diff_SoftmaxCrossEntropyLoss_12_13", "onnx_doc_folder/text_diff_Softmax_11_13", "onnx_doc_folder/text_diff_Softmax_1_11", "onnx_doc_folder/text_diff_SpaceToDepth_1_13", "onnx_doc_folder/text_diff_Split_11_13", "onnx_doc_folder/text_diff_Split_1_2", "onnx_doc_folder/text_diff_Split_2_11", "onnx_doc_folder/text_diff_Sqrt_1_6", "onnx_doc_folder/text_diff_Sqrt_6_13", "onnx_doc_folder/text_diff_Squeeze_11_13", "onnx_doc_folder/text_diff_Squeeze_1_11", "onnx_doc_folder/text_diff_Sub_13_14", "onnx_doc_folder/text_diff_Sub_1_6", "onnx_doc_folder/text_diff_Sub_6_7", "onnx_doc_folder/text_diff_Sub_7_13", "onnx_doc_folder/text_diff_Sum_1_6", "onnx_doc_folder/text_diff_Sum_6_8", "onnx_doc_folder/text_diff_Sum_8_13", "onnx_doc_folder/text_diff_Tanh_1_6", "onnx_doc_folder/text_diff_Tanh_6_13", "onnx_doc_folder/text_diff_Tile_1_6", "onnx_doc_folder/text_diff_Tile_6_13", "onnx_doc_folder/text_diff_TopK_10_11", "onnx_doc_folder/text_diff_TopK_1_10", "onnx_doc_folder/text_diff_Transpose_1_13", "onnx_doc_folder/text_diff_TreeEnsembleClassifier_1_3", "onnx_doc_folder/text_diff_TreeEnsembleRegressor_1_3", "onnx_doc_folder/text_diff_Unsqueeze_11_13", "onnx_doc_folder/text_diff_Unsqueeze_1_11", "onnx_doc_folder/text_diff_Upsample_1_7", "onnx_doc_folder/text_diff_Upsample_7_9", "onnx_doc_folder/text_diff_Upsample_9_10", "onnx_doc_folder/text_diff_Where_9_16", "onnx_doc_folder/text_diff_Xor_1_7", "onnx_docs", "onnx_python/backend", "onnx_python/checker", "onnx_python/classes", "onnx_python/compose", "onnx_python/external_data_helper", "onnx_python/helper", "onnx_python/hub", "onnx_python/index", "onnx_python/mapping", "onnx_python/numpy_helper", "onnx_python/parser", "onnx_python/printer", "onnx_python/serialization", "onnx_python/shape_inference", "onnx_python/tools", "onnx_python/utils", "onnx_python/version_converter", "tutorial_python/concepts", "tutorial_python/converters", "tutorial_python/index", "tutorial_python/python"], "filenames": ["expect.rst", "index.rst", "onnx_doc_folder/index.rst", "onnx_doc_folder/onnx__Abs.rst", "onnx_doc_folder/onnx__Acos.rst", "onnx_doc_folder/onnx__Acosh.rst", "onnx_doc_folder/onnx__Add.rst", "onnx_doc_folder/onnx__And.rst", "onnx_doc_folder/onnx__ArgMax.rst", "onnx_doc_folder/onnx__ArgMin.rst", "onnx_doc_folder/onnx__Asin.rst", "onnx_doc_folder/onnx__Asinh.rst", "onnx_doc_folder/onnx__Atan.rst", "onnx_doc_folder/onnx__Atanh.rst", "onnx_doc_folder/onnx__AttributeHasValue.rst", "onnx_doc_folder/onnx__AveragePool.rst", "onnx_doc_folder/onnx__BatchNormalization.rst", "onnx_doc_folder/onnx__Bernoulli.rst", "onnx_doc_folder/onnx__BitShift.rst", "onnx_doc_folder/onnx__BlackmanWindow.rst", "onnx_doc_folder/onnx__Cast.rst", "onnx_doc_folder/onnx__CastLike.rst", "onnx_doc_folder/onnx__Ceil.rst", "onnx_doc_folder/onnx__Celu.rst", "onnx_doc_folder/onnx__CenterCropPad.rst", "onnx_doc_folder/onnx__Clip.rst", "onnx_doc_folder/onnx__Col2Im.rst", "onnx_doc_folder/onnx__Compress.rst", "onnx_doc_folder/onnx__Concat.rst", "onnx_doc_folder/onnx__ConcatFromSequence.rst", "onnx_doc_folder/onnx__Constant.rst", "onnx_doc_folder/onnx__ConstantOfShape.rst", "onnx_doc_folder/onnx__Conv.rst", "onnx_doc_folder/onnx__ConvInteger.rst", "onnx_doc_folder/onnx__ConvTranspose.rst", "onnx_doc_folder/onnx__Cos.rst", "onnx_doc_folder/onnx__Cosh.rst", "onnx_doc_folder/onnx__CumSum.rst", "onnx_doc_folder/onnx__DFT.rst", "onnx_doc_folder/onnx__DepthToSpace.rst", "onnx_doc_folder/onnx__DequantizeLinear.rst", "onnx_doc_folder/onnx__Det.rst", "onnx_doc_folder/onnx__Div.rst", "onnx_doc_folder/onnx__Dropout.rst", "onnx_doc_folder/onnx__DynamicQuantizeLinear.rst", "onnx_doc_folder/onnx__Einsum.rst", "onnx_doc_folder/onnx__Elu.rst", "onnx_doc_folder/onnx__Equal.rst", "onnx_doc_folder/onnx__Erf.rst", "onnx_doc_folder/onnx__Exp.rst", "onnx_doc_folder/onnx__Expand.rst", "onnx_doc_folder/onnx__EyeLike.rst", "onnx_doc_folder/onnx__Flatten.rst", "onnx_doc_folder/onnx__Floor.rst", "onnx_doc_folder/onnx__GRU.rst", "onnx_doc_folder/onnx__Gather.rst", "onnx_doc_folder/onnx__GatherElements.rst", "onnx_doc_folder/onnx__GatherND.rst", "onnx_doc_folder/onnx__Gemm.rst", "onnx_doc_folder/onnx__GlobalAveragePool.rst", "onnx_doc_folder/onnx__GlobalLpPool.rst", "onnx_doc_folder/onnx__GlobalMaxPool.rst", "onnx_doc_folder/onnx__Greater.rst", "onnx_doc_folder/onnx__GreaterOrEqual.rst", "onnx_doc_folder/onnx__GridSample.rst", "onnx_doc_folder/onnx__HammingWindow.rst", "onnx_doc_folder/onnx__HannWindow.rst", "onnx_doc_folder/onnx__HardSigmoid.rst", "onnx_doc_folder/onnx__HardSwish.rst", "onnx_doc_folder/onnx__Hardmax.rst", "onnx_doc_folder/onnx__Identity.rst", "onnx_doc_folder/onnx__If.rst", "onnx_doc_folder/onnx__InstanceNormalization.rst", "onnx_doc_folder/onnx__IsInf.rst", "onnx_doc_folder/onnx__IsNaN.rst", "onnx_doc_folder/onnx__LRN.rst", "onnx_doc_folder/onnx__LSTM.rst", "onnx_doc_folder/onnx__LayerNormalization.rst", "onnx_doc_folder/onnx__LeakyRelu.rst", "onnx_doc_folder/onnx__Less.rst", "onnx_doc_folder/onnx__LessOrEqual.rst", "onnx_doc_folder/onnx__Log.rst", "onnx_doc_folder/onnx__LogSoftmax.rst", "onnx_doc_folder/onnx__Loop.rst", "onnx_doc_folder/onnx__LpNormalization.rst", "onnx_doc_folder/onnx__LpPool.rst", "onnx_doc_folder/onnx__MatMul.rst", "onnx_doc_folder/onnx__MatMulInteger.rst", "onnx_doc_folder/onnx__Max.rst", "onnx_doc_folder/onnx__MaxPool.rst", "onnx_doc_folder/onnx__MaxRoiPool.rst", "onnx_doc_folder/onnx__MaxUnpool.rst", "onnx_doc_folder/onnx__Mean.rst", "onnx_doc_folder/onnx__MeanVarianceNormalization.rst", "onnx_doc_folder/onnx__MelWeightMatrix.rst", "onnx_doc_folder/onnx__Min.rst", "onnx_doc_folder/onnx__Mish.rst", "onnx_doc_folder/onnx__Mod.rst", "onnx_doc_folder/onnx__Mul.rst", "onnx_doc_folder/onnx__Multinomial.rst", "onnx_doc_folder/onnx__Neg.rst", "onnx_doc_folder/onnx__NegativeLogLikelihoodLoss.rst", "onnx_doc_folder/onnx__NonMaxSuppression.rst", "onnx_doc_folder/onnx__NonZero.rst", "onnx_doc_folder/onnx__Not.rst", "onnx_doc_folder/onnx__OneHot.rst", "onnx_doc_folder/onnx__Optional.rst", "onnx_doc_folder/onnx__OptionalGetElement.rst", "onnx_doc_folder/onnx__OptionalHasElement.rst", "onnx_doc_folder/onnx__Or.rst", "onnx_doc_folder/onnx__PRelu.rst", "onnx_doc_folder/onnx__Pad.rst", "onnx_doc_folder/onnx__Pow.rst", "onnx_doc_folder/onnx__QLinearConv.rst", "onnx_doc_folder/onnx__QLinearMatMul.rst", "onnx_doc_folder/onnx__QuantizeLinear.rst", "onnx_doc_folder/onnx__RNN.rst", "onnx_doc_folder/onnx__RandomNormal.rst", "onnx_doc_folder/onnx__RandomNormalLike.rst", "onnx_doc_folder/onnx__RandomUniform.rst", "onnx_doc_folder/onnx__RandomUniformLike.rst", "onnx_doc_folder/onnx__Range.rst", "onnx_doc_folder/onnx__Reciprocal.rst", "onnx_doc_folder/onnx__ReduceL1.rst", "onnx_doc_folder/onnx__ReduceL2.rst", "onnx_doc_folder/onnx__ReduceLogSum.rst", "onnx_doc_folder/onnx__ReduceLogSumExp.rst", "onnx_doc_folder/onnx__ReduceMax.rst", "onnx_doc_folder/onnx__ReduceMean.rst", "onnx_doc_folder/onnx__ReduceMin.rst", "onnx_doc_folder/onnx__ReduceProd.rst", "onnx_doc_folder/onnx__ReduceSum.rst", "onnx_doc_folder/onnx__ReduceSumSquare.rst", "onnx_doc_folder/onnx__Relu.rst", "onnx_doc_folder/onnx__Reshape.rst", "onnx_doc_folder/onnx__Resize.rst", "onnx_doc_folder/onnx__ReverseSequence.rst", "onnx_doc_folder/onnx__RoiAlign.rst", "onnx_doc_folder/onnx__Round.rst", "onnx_doc_folder/onnx__STFT.rst", "onnx_doc_folder/onnx__Scan.rst", "onnx_doc_folder/onnx__Scatter.rst", "onnx_doc_folder/onnx__ScatterElements.rst", "onnx_doc_folder/onnx__ScatterND.rst", "onnx_doc_folder/onnx__Selu.rst", "onnx_doc_folder/onnx__SequenceAt.rst", "onnx_doc_folder/onnx__SequenceConstruct.rst", "onnx_doc_folder/onnx__SequenceEmpty.rst", "onnx_doc_folder/onnx__SequenceErase.rst", "onnx_doc_folder/onnx__SequenceInsert.rst", "onnx_doc_folder/onnx__SequenceLength.rst", "onnx_doc_folder/onnx__SequenceMap.rst", "onnx_doc_folder/onnx__Shape.rst", "onnx_doc_folder/onnx__Shrink.rst", "onnx_doc_folder/onnx__Sigmoid.rst", "onnx_doc_folder/onnx__Sign.rst", "onnx_doc_folder/onnx__Sin.rst", "onnx_doc_folder/onnx__Sinh.rst", "onnx_doc_folder/onnx__Size.rst", "onnx_doc_folder/onnx__Slice.rst", "onnx_doc_folder/onnx__Softmax.rst", "onnx_doc_folder/onnx__SoftmaxCrossEntropyLoss.rst", "onnx_doc_folder/onnx__Softplus.rst", "onnx_doc_folder/onnx__Softsign.rst", "onnx_doc_folder/onnx__SpaceToDepth.rst", "onnx_doc_folder/onnx__Split.rst", "onnx_doc_folder/onnx__SplitToSequence.rst", "onnx_doc_folder/onnx__Sqrt.rst", "onnx_doc_folder/onnx__Squeeze.rst", "onnx_doc_folder/onnx__StringNormalizer.rst", "onnx_doc_folder/onnx__Sub.rst", "onnx_doc_folder/onnx__Sum.rst", "onnx_doc_folder/onnx__Tan.rst", "onnx_doc_folder/onnx__Tanh.rst", "onnx_doc_folder/onnx__TfIdfVectorizer.rst", "onnx_doc_folder/onnx__ThresholdedRelu.rst", "onnx_doc_folder/onnx__Tile.rst", "onnx_doc_folder/onnx__TopK.rst", "onnx_doc_folder/onnx__Transpose.rst", "onnx_doc_folder/onnx__Trilu.rst", "onnx_doc_folder/onnx__Unique.rst", "onnx_doc_folder/onnx__Unsqueeze.rst", "onnx_doc_folder/onnx__Upsample.rst", "onnx_doc_folder/onnx__Where.rst", "onnx_doc_folder/onnx__Xor.rst", "onnx_doc_folder/onnx_aionnxml_ArrayFeatureExtractor.rst", "onnx_doc_folder/onnx_aionnxml_Binarizer.rst", "onnx_doc_folder/onnx_aionnxml_CastMap.rst", "onnx_doc_folder/onnx_aionnxml_CategoryMapper.rst", "onnx_doc_folder/onnx_aionnxml_DictVectorizer.rst", "onnx_doc_folder/onnx_aionnxml_FeatureVectorizer.rst", "onnx_doc_folder/onnx_aionnxml_Imputer.rst", "onnx_doc_folder/onnx_aionnxml_LabelEncoder.rst", "onnx_doc_folder/onnx_aionnxml_LinearClassifier.rst", "onnx_doc_folder/onnx_aionnxml_LinearRegressor.rst", "onnx_doc_folder/onnx_aionnxml_Normalizer.rst", "onnx_doc_folder/onnx_aionnxml_OneHotEncoder.rst", "onnx_doc_folder/onnx_aionnxml_SVMClassifier.rst", "onnx_doc_folder/onnx_aionnxml_SVMRegressor.rst", "onnx_doc_folder/onnx_aionnxml_Scaler.rst", "onnx_doc_folder/onnx_aionnxml_TreeEnsembleClassifier.rst", "onnx_doc_folder/onnx_aionnxml_TreeEnsembleRegressor.rst", "onnx_doc_folder/onnx_aionnxml_ZipMap.rst", "onnx_doc_folder/onnx_aionnxpreviewtraining_Adagrad.rst", "onnx_doc_folder/onnx_aionnxpreviewtraining_Adam.rst", "onnx_doc_folder/onnx_aionnxpreviewtraining_Gradient.rst", "onnx_doc_folder/onnx_aionnxpreviewtraining_Momentum.rst", "onnx_doc_folder/table_ai_onnx.rst", "onnx_doc_folder/table_ai_onnx_ml.rst", "onnx_doc_folder/table_ai_onnx_preview_training.rst", "onnx_doc_folder/text_diff_Abs_1_6.rst", "onnx_doc_folder/text_diff_Abs_6_13.rst", "onnx_doc_folder/text_diff_Add_13_14.rst", "onnx_doc_folder/text_diff_Add_1_6.rst", "onnx_doc_folder/text_diff_Add_6_7.rst", "onnx_doc_folder/text_diff_Add_7_13.rst", "onnx_doc_folder/text_diff_And_1_7.rst", "onnx_doc_folder/text_diff_ArgMax_11_12.rst", "onnx_doc_folder/text_diff_ArgMax_12_13.rst", "onnx_doc_folder/text_diff_ArgMax_1_11.rst", "onnx_doc_folder/text_diff_ArgMin_11_12.rst", "onnx_doc_folder/text_diff_ArgMin_12_13.rst", "onnx_doc_folder/text_diff_ArgMin_1_11.rst", "onnx_doc_folder/text_diff_AveragePool_10_11.rst", "onnx_doc_folder/text_diff_AveragePool_1_7.rst", "onnx_doc_folder/text_diff_AveragePool_7_10.rst", "onnx_doc_folder/text_diff_BatchNormalization_14_15.rst", "onnx_doc_folder/text_diff_BatchNormalization_1_6.rst", "onnx_doc_folder/text_diff_BatchNormalization_6_7.rst", "onnx_doc_folder/text_diff_BatchNormalization_7_9.rst", "onnx_doc_folder/text_diff_BatchNormalization_9_14.rst", "onnx_doc_folder/text_diff_Cast_1_6.rst", "onnx_doc_folder/text_diff_Cast_6_9.rst", "onnx_doc_folder/text_diff_Cast_9_13.rst", "onnx_doc_folder/text_diff_Ceil_1_6.rst", "onnx_doc_folder/text_diff_Ceil_6_13.rst", "onnx_doc_folder/text_diff_Clip_11_12.rst", "onnx_doc_folder/text_diff_Clip_12_13.rst", "onnx_doc_folder/text_diff_Clip_1_6.rst", "onnx_doc_folder/text_diff_Clip_6_11.rst", "onnx_doc_folder/text_diff_Compress_9_11.rst", "onnx_doc_folder/text_diff_Concat_11_13.rst", "onnx_doc_folder/text_diff_Concat_1_4.rst", "onnx_doc_folder/text_diff_Concat_4_11.rst", "onnx_doc_folder/text_diff_Constant_11_12.rst", "onnx_doc_folder/text_diff_Constant_12_13.rst", "onnx_doc_folder/text_diff_Constant_1_9.rst", "onnx_doc_folder/text_diff_Constant_9_11.rst", "onnx_doc_folder/text_diff_ConvTranspose_1_11.rst", "onnx_doc_folder/text_diff_Conv_1_11.rst", "onnx_doc_folder/text_diff_CumSum_11_14.rst", "onnx_doc_folder/text_diff_DepthToSpace_11_13.rst", "onnx_doc_folder/text_diff_DepthToSpace_1_11.rst", "onnx_doc_folder/text_diff_DequantizeLinear_10_13.rst", "onnx_doc_folder/text_diff_Div_13_14.rst", "onnx_doc_folder/text_diff_Div_1_6.rst", "onnx_doc_folder/text_diff_Div_6_7.rst", "onnx_doc_folder/text_diff_Div_7_13.rst", "onnx_doc_folder/text_diff_Dropout_10_12.rst", "onnx_doc_folder/text_diff_Dropout_12_13.rst", "onnx_doc_folder/text_diff_Dropout_1_6.rst", "onnx_doc_folder/text_diff_Dropout_6_7.rst", "onnx_doc_folder/text_diff_Dropout_7_10.rst", "onnx_doc_folder/text_diff_Elu_1_6.rst", "onnx_doc_folder/text_diff_Equal_11_13.rst", "onnx_doc_folder/text_diff_Equal_1_7.rst", "onnx_doc_folder/text_diff_Equal_7_11.rst", "onnx_doc_folder/text_diff_Erf_9_13.rst", "onnx_doc_folder/text_diff_Exp_1_6.rst", "onnx_doc_folder/text_diff_Exp_6_13.rst", "onnx_doc_folder/text_diff_Expand_8_13.rst", "onnx_doc_folder/text_diff_Flatten_11_13.rst", "onnx_doc_folder/text_diff_Flatten_1_9.rst", "onnx_doc_folder/text_diff_Flatten_9_11.rst", "onnx_doc_folder/text_diff_Floor_1_6.rst", "onnx_doc_folder/text_diff_Floor_6_13.rst", "onnx_doc_folder/text_diff_GRU_1_3.rst", "onnx_doc_folder/text_diff_GRU_3_7.rst", "onnx_doc_folder/text_diff_GRU_7_14.rst", "onnx_doc_folder/text_diff_GatherElements_11_13.rst", "onnx_doc_folder/text_diff_GatherND_11_12.rst", "onnx_doc_folder/text_diff_GatherND_12_13.rst", "onnx_doc_folder/text_diff_Gather_11_13.rst", "onnx_doc_folder/text_diff_Gather_1_11.rst", "onnx_doc_folder/text_diff_Gemm_11_13.rst", "onnx_doc_folder/text_diff_Gemm_1_6.rst", "onnx_doc_folder/text_diff_Gemm_6_7.rst", "onnx_doc_folder/text_diff_Gemm_7_9.rst", "onnx_doc_folder/text_diff_Gemm_9_11.rst", "onnx_doc_folder/text_diff_GlobalLpPool_1_2.rst", "onnx_doc_folder/text_diff_GreaterOrEqual_12_16.rst", "onnx_doc_folder/text_diff_Greater_1_7.rst", "onnx_doc_folder/text_diff_Greater_7_9.rst", "onnx_doc_folder/text_diff_Greater_9_13.rst", "onnx_doc_folder/text_diff_HardSigmoid_1_6.rst", "onnx_doc_folder/text_diff_Hardmax_11_13.rst", "onnx_doc_folder/text_diff_Hardmax_1_11.rst", "onnx_doc_folder/text_diff_Identity_13_14.rst", "onnx_doc_folder/text_diff_Identity_14_16.rst", "onnx_doc_folder/text_diff_Identity_1_13.rst", "onnx_doc_folder/text_diff_If_11_13.rst", "onnx_doc_folder/text_diff_If_13_16.rst", "onnx_doc_folder/text_diff_If_1_11.rst", "onnx_doc_folder/text_diff_InstanceNormalization_1_6.rst", "onnx_doc_folder/text_diff_IsNaN_9_13.rst", "onnx_doc_folder/text_diff_LRN_1_13.rst", "onnx_doc_folder/text_diff_LSTM_1_7.rst", "onnx_doc_folder/text_diff_LSTM_7_14.rst", "onnx_doc_folder/text_diff_LabelEncoder_1_2.rst", "onnx_doc_folder/text_diff_LeakyRelu_1_6.rst", "onnx_doc_folder/text_diff_LeakyRelu_6_16.rst", "onnx_doc_folder/text_diff_LessOrEqual_12_16.rst", "onnx_doc_folder/text_diff_Less_1_7.rst", "onnx_doc_folder/text_diff_Less_7_9.rst", "onnx_doc_folder/text_diff_Less_9_13.rst", "onnx_doc_folder/text_diff_LogSoftmax_11_13.rst", "onnx_doc_folder/text_diff_LogSoftmax_1_11.rst", "onnx_doc_folder/text_diff_Log_1_6.rst", "onnx_doc_folder/text_diff_Log_6_13.rst", "onnx_doc_folder/text_diff_Loop_11_13.rst", "onnx_doc_folder/text_diff_Loop_13_16.rst", "onnx_doc_folder/text_diff_Loop_1_11.rst", "onnx_doc_folder/text_diff_LpPool_1_2.rst", "onnx_doc_folder/text_diff_LpPool_2_11.rst", "onnx_doc_folder/text_diff_MatMul_1_9.rst", "onnx_doc_folder/text_diff_MatMul_9_13.rst", "onnx_doc_folder/text_diff_MaxPool_10_11.rst", "onnx_doc_folder/text_diff_MaxPool_11_12.rst", "onnx_doc_folder/text_diff_MaxPool_1_8.rst", "onnx_doc_folder/text_diff_MaxPool_8_10.rst", "onnx_doc_folder/text_diff_MaxUnpool_9_11.rst", "onnx_doc_folder/text_diff_Max_12_13.rst", "onnx_doc_folder/text_diff_Max_1_6.rst", "onnx_doc_folder/text_diff_Max_6_8.rst", "onnx_doc_folder/text_diff_Max_8_12.rst", "onnx_doc_folder/text_diff_MeanVarianceNormalization_9_13.rst", "onnx_doc_folder/text_diff_Mean_1_6.rst", "onnx_doc_folder/text_diff_Mean_6_8.rst", "onnx_doc_folder/text_diff_Mean_8_13.rst", "onnx_doc_folder/text_diff_Min_12_13.rst", "onnx_doc_folder/text_diff_Min_1_6.rst", "onnx_doc_folder/text_diff_Min_6_8.rst", "onnx_doc_folder/text_diff_Min_8_12.rst", "onnx_doc_folder/text_diff_Mod_10_13.rst", "onnx_doc_folder/text_diff_Mul_13_14.rst", "onnx_doc_folder/text_diff_Mul_1_6.rst", "onnx_doc_folder/text_diff_Mul_6_7.rst", "onnx_doc_folder/text_diff_Mul_7_13.rst", "onnx_doc_folder/text_diff_Neg_1_6.rst", "onnx_doc_folder/text_diff_Neg_6_13.rst", "onnx_doc_folder/text_diff_NegativeLogLikelihoodLoss_12_13.rst", "onnx_doc_folder/text_diff_NonMaxSuppression_10_11.rst", "onnx_doc_folder/text_diff_NonZero_9_13.rst", "onnx_doc_folder/text_diff_OneHot_9_11.rst", "onnx_doc_folder/text_diff_OptionalGetElement_15_18.rst", "onnx_doc_folder/text_diff_OptionalHasElement_15_18.rst", "onnx_doc_folder/text_diff_Or_1_7.rst", "onnx_doc_folder/text_diff_PRelu_1_6.rst", "onnx_doc_folder/text_diff_PRelu_6_7.rst", "onnx_doc_folder/text_diff_PRelu_7_9.rst", "onnx_doc_folder/text_diff_PRelu_9_16.rst", "onnx_doc_folder/text_diff_Pad_11_13.rst", "onnx_doc_folder/text_diff_Pad_13_18.rst", "onnx_doc_folder/text_diff_Pad_1_2.rst", "onnx_doc_folder/text_diff_Pad_2_11.rst", "onnx_doc_folder/text_diff_Pow_12_13.rst", "onnx_doc_folder/text_diff_Pow_13_15.rst", "onnx_doc_folder/text_diff_Pow_1_7.rst", "onnx_doc_folder/text_diff_Pow_7_12.rst", "onnx_doc_folder/text_diff_QuantizeLinear_10_13.rst", "onnx_doc_folder/text_diff_RNN_1_7.rst", "onnx_doc_folder/text_diff_RNN_7_14.rst", "onnx_doc_folder/text_diff_Reciprocal_1_6.rst", "onnx_doc_folder/text_diff_Reciprocal_6_13.rst", "onnx_doc_folder/text_diff_ReduceL1_11_13.rst", "onnx_doc_folder/text_diff_ReduceL1_1_11.rst", "onnx_doc_folder/text_diff_ReduceL2_11_13.rst", "onnx_doc_folder/text_diff_ReduceL2_1_11.rst", "onnx_doc_folder/text_diff_ReduceLogSumExp_11_13.rst", "onnx_doc_folder/text_diff_ReduceLogSumExp_1_11.rst", "onnx_doc_folder/text_diff_ReduceLogSum_11_13.rst", "onnx_doc_folder/text_diff_ReduceLogSum_1_11.rst", "onnx_doc_folder/text_diff_ReduceMax_11_12.rst", "onnx_doc_folder/text_diff_ReduceMax_12_13.rst", "onnx_doc_folder/text_diff_ReduceMax_1_11.rst", "onnx_doc_folder/text_diff_ReduceMean_11_13.rst", "onnx_doc_folder/text_diff_ReduceMean_1_11.rst", "onnx_doc_folder/text_diff_ReduceMin_11_12.rst", "onnx_doc_folder/text_diff_ReduceMin_12_13.rst", "onnx_doc_folder/text_diff_ReduceMin_1_11.rst", "onnx_doc_folder/text_diff_ReduceProd_11_13.rst", "onnx_doc_folder/text_diff_ReduceProd_1_11.rst", "onnx_doc_folder/text_diff_ReduceSumSquare_11_13.rst", "onnx_doc_folder/text_diff_ReduceSumSquare_1_11.rst", "onnx_doc_folder/text_diff_ReduceSum_11_13.rst", "onnx_doc_folder/text_diff_ReduceSum_1_11.rst", "onnx_doc_folder/text_diff_Relu_13_14.rst", "onnx_doc_folder/text_diff_Relu_1_6.rst", "onnx_doc_folder/text_diff_Relu_6_13.rst", "onnx_doc_folder/text_diff_Reshape_13_14.rst", "onnx_doc_folder/text_diff_Reshape_1_5.rst", "onnx_doc_folder/text_diff_Reshape_5_13.rst", "onnx_doc_folder/text_diff_Resize_10_11.rst", "onnx_doc_folder/text_diff_Resize_11_13.rst", "onnx_doc_folder/text_diff_Resize_13_18.rst", "onnx_doc_folder/text_diff_RoiAlign_10_16.rst", "onnx_doc_folder/text_diff_Scan_11_16.rst", "onnx_doc_folder/text_diff_Scan_8_9.rst", "onnx_doc_folder/text_diff_Scan_9_11.rst", "onnx_doc_folder/text_diff_ScatterElements_11_13.rst", "onnx_doc_folder/text_diff_ScatterElements_13_16.rst", "onnx_doc_folder/text_diff_ScatterElements_16_18.rst", "onnx_doc_folder/text_diff_ScatterND_11_13.rst", "onnx_doc_folder/text_diff_ScatterND_13_16.rst", "onnx_doc_folder/text_diff_ScatterND_16_18.rst", "onnx_doc_folder/text_diff_Scatter_9_11.rst", "onnx_doc_folder/text_diff_Selu_1_6.rst", "onnx_doc_folder/text_diff_Shape_13_15.rst", "onnx_doc_folder/text_diff_Shape_1_13.rst", "onnx_doc_folder/text_diff_Sigmoid_1_6.rst", "onnx_doc_folder/text_diff_Sigmoid_6_13.rst", "onnx_doc_folder/text_diff_Sign_9_13.rst", "onnx_doc_folder/text_diff_Size_1_13.rst", "onnx_doc_folder/text_diff_Slice_10_11.rst", "onnx_doc_folder/text_diff_Slice_11_13.rst", "onnx_doc_folder/text_diff_Slice_1_10.rst", "onnx_doc_folder/text_diff_SoftmaxCrossEntropyLoss_12_13.rst", "onnx_doc_folder/text_diff_Softmax_11_13.rst", "onnx_doc_folder/text_diff_Softmax_1_11.rst", "onnx_doc_folder/text_diff_SpaceToDepth_1_13.rst", "onnx_doc_folder/text_diff_Split_11_13.rst", "onnx_doc_folder/text_diff_Split_1_2.rst", "onnx_doc_folder/text_diff_Split_2_11.rst", "onnx_doc_folder/text_diff_Sqrt_1_6.rst", "onnx_doc_folder/text_diff_Sqrt_6_13.rst", "onnx_doc_folder/text_diff_Squeeze_11_13.rst", "onnx_doc_folder/text_diff_Squeeze_1_11.rst", "onnx_doc_folder/text_diff_Sub_13_14.rst", "onnx_doc_folder/text_diff_Sub_1_6.rst", "onnx_doc_folder/text_diff_Sub_6_7.rst", "onnx_doc_folder/text_diff_Sub_7_13.rst", "onnx_doc_folder/text_diff_Sum_1_6.rst", "onnx_doc_folder/text_diff_Sum_6_8.rst", "onnx_doc_folder/text_diff_Sum_8_13.rst", "onnx_doc_folder/text_diff_Tanh_1_6.rst", "onnx_doc_folder/text_diff_Tanh_6_13.rst", "onnx_doc_folder/text_diff_Tile_1_6.rst", "onnx_doc_folder/text_diff_Tile_6_13.rst", "onnx_doc_folder/text_diff_TopK_10_11.rst", "onnx_doc_folder/text_diff_TopK_1_10.rst", "onnx_doc_folder/text_diff_Transpose_1_13.rst", "onnx_doc_folder/text_diff_TreeEnsembleClassifier_1_3.rst", "onnx_doc_folder/text_diff_TreeEnsembleRegressor_1_3.rst", "onnx_doc_folder/text_diff_Unsqueeze_11_13.rst", "onnx_doc_folder/text_diff_Unsqueeze_1_11.rst", "onnx_doc_folder/text_diff_Upsample_1_7.rst", "onnx_doc_folder/text_diff_Upsample_7_9.rst", "onnx_doc_folder/text_diff_Upsample_9_10.rst", "onnx_doc_folder/text_diff_Where_9_16.rst", "onnx_doc_folder/text_diff_Xor_1_7.rst", "onnx_docs.rst", "onnx_python/backend.rst", "onnx_python/checker.rst", "onnx_python/classes.rst", "onnx_python/compose.rst", "onnx_python/external_data_helper.rst", "onnx_python/helper.rst", "onnx_python/hub.rst", "onnx_python/index.rst", "onnx_python/mapping.rst", "onnx_python/numpy_helper.rst", "onnx_python/parser.rst", "onnx_python/printer.rst", "onnx_python/serialization.rst", "onnx_python/shape_inference.rst", "onnx_python/tools.rst", "onnx_python/utils.rst", "onnx_python/version_converter.rst", "tutorial_python/concepts.rst", "tutorial_python/converters.rst", "tutorial_python/index.rst", "tutorial_python/python.rst"], "titles": ["Sample operator test code", "ONNX", "ONNX Operators", "Abs", "Acos", "Acosh", "Add", "And", "ArgMax", "ArgMin", "Asin", "Asinh", "Atan", "Atanh", "AttributeHasValue", "AveragePool", "BatchNormalization", "Bernoulli", "BitShift", "BlackmanWindow", "Cast", "CastLike", "Ceil", "Celu", "CenterCropPad", "Clip", "Col2Im", "Compress", "Concat", "ConcatFromSequence", "Constant", "ConstantOfShape", "Conv", "ConvInteger", "ConvTranspose", "Cos", "Cosh", "CumSum", "DFT", "DepthToSpace", "DequantizeLinear", "Det", "Div", "Dropout", "DynamicQuantizeLinear", "Einsum", "Elu", "Equal", "Erf", "Exp", "Expand", "EyeLike", "Flatten", "Floor", "GRU", "Gather", "GatherElements", "GatherND", "Gemm", "GlobalAveragePool", "GlobalLpPool", "GlobalMaxPool", "Greater", "GreaterOrEqual", "GridSample", "HammingWindow", "HannWindow", "HardSigmoid", "HardSwish", "Hardmax", "Identity", "If", "InstanceNormalization", "IsInf", "IsNaN", "LRN", "LSTM", "LayerNormalization", "LeakyRelu", "Less", "LessOrEqual", "Log", "LogSoftmax", "Loop", "LpNormalization", "LpPool", "MatMul", "MatMulInteger", "Max", "MaxPool", "MaxRoiPool", "MaxUnpool", "Mean", "MeanVarianceNormalization", "MelWeightMatrix", "Min", "Mish", "Mod", "Mul", "Multinomial", "Neg", "NegativeLogLikelihoodLoss", "NonMaxSuppression", "NonZero", "Not", "OneHot", "Optional", "OptionalGetElement", "OptionalHasElement", "Or", "PRelu", "Pad", "Pow", "QLinearConv", "QLinearMatMul", "QuantizeLinear", "RNN", "RandomNormal", "RandomNormalLike", "RandomUniform", "RandomUniformLike", "Range", "Reciprocal", "ReduceL1", "ReduceL2", "ReduceLogSum", "ReduceLogSumExp", "ReduceMax", "ReduceMean", "ReduceMin", "ReduceProd", "ReduceSum", "ReduceSumSquare", "Relu", "Reshape", "Resize", "ReverseSequence", "RoiAlign", "Round", "STFT", "Scan", "Scatter", "ScatterElements", "ScatterND", "Selu", "SequenceAt", "SequenceConstruct", "SequenceEmpty", "SequenceErase", "SequenceInsert", "SequenceLength", "SequenceMap", "Shape", "Shrink", "Sigmoid", "Sign", "Sin", "Sinh", "Size", "Slice", "Softmax", "SoftmaxCrossEntropyLoss", "Softplus", "Softsign", "SpaceToDepth", "Split", "SplitToSequence", "Sqrt", "Squeeze", "StringNormalizer", "Sub", "Sum", "Tan", "Tanh", "TfIdfVectorizer", "ThresholdedRelu", "Tile", "TopK", "Transpose", "Trilu", "Unique", "Unsqueeze", "Upsample", "Where", "Xor", "ai.onnx.ml - ArrayFeatureExtractor", "ai.onnx.ml - Binarizer", "ai.onnx.ml - CastMap", "ai.onnx.ml - CategoryMapper", "ai.onnx.ml - DictVectorizer", "ai.onnx.ml - FeatureVectorizer", "ai.onnx.ml - Imputer", "ai.onnx.ml - LabelEncoder", "ai.onnx.ml - LinearClassifier", "ai.onnx.ml - LinearRegressor", "ai.onnx.ml - Normalizer", "ai.onnx.ml - OneHotEncoder", "ai.onnx.ml - SVMClassifier", "ai.onnx.ml - SVMRegressor", "ai.onnx.ml - Scaler", "ai.onnx.ml - TreeEnsembleClassifier", "ai.onnx.ml - TreeEnsembleRegressor", "ai.onnx.ml - ZipMap", "ai.onnx.preview.training - Adagrad", "ai.onnx.preview.training - Adam", "ai.onnx.preview.training - Gradient", "ai.onnx.preview.training - Momentum", "operator table for domain ai.onnx", "operator table for domain ai.onnx.ml", "operator table for domain ai.onnx.preview.training", "Abs - 1 vs 6", "Abs - 6 vs 13", "Add - 13 vs 14", "Add - 1 vs 6", "Add - 6 vs 7", "Add - 7 vs 13", "And - 1 vs 7", "ArgMax - 11 vs 12", "ArgMax - 12 vs 13", "ArgMax - 1 vs 11", "ArgMin - 11 vs 12", "ArgMin - 12 vs 13", "ArgMin - 1 vs 11", "AveragePool - 10 vs 11", "AveragePool - 1 vs 7", "AveragePool - 7 vs 10", "BatchNormalization - 14 vs 15", "BatchNormalization - 1 vs 6", "BatchNormalization - 6 vs 7", "BatchNormalization - 7 vs 9", "BatchNormalization - 9 vs 14", "Cast - 1 vs 6", "Cast - 6 vs 9", "Cast - 9 vs 13", "Ceil - 1 vs 6", "Ceil - 6 vs 13", "Clip - 11 vs 12", "Clip - 12 vs 13", "Clip - 1 vs 6", "Clip - 6 vs 11", "Compress - 9 vs 11", "Concat - 11 vs 13", "Concat - 1 vs 4", "Concat - 4 vs 11", "Constant - 11 vs 12", "Constant - 12 vs 13", "Constant - 1 vs 9", "Constant - 9 vs 11", "ConvTranspose - 1 vs 11", "Conv - 1 vs 11", "CumSum - 11 vs 14", "DepthToSpace - 11 vs 13", "DepthToSpace - 1 vs 11", "DequantizeLinear - 10 vs 13", "Div - 13 vs 14", "Div - 1 vs 6", "Div - 6 vs 7", "Div - 7 vs 13", "Dropout - 10 vs 12", "Dropout - 12 vs 13", "Dropout - 1 vs 6", "Dropout - 6 vs 7", "Dropout - 7 vs 10", "Elu - 1 vs 6", "Equal - 11 vs 13", "Equal - 1 vs 7", "Equal - 7 vs 11", "Erf - 9 vs 13", "Exp - 1 vs 6", "Exp - 6 vs 13", "Expand - 8 vs 13", "Flatten - 11 vs 13", "Flatten - 1 vs 9", "Flatten - 9 vs 11", "Floor - 1 vs 6", "Floor - 6 vs 13", "GRU - 1 vs 3", "GRU - 3 vs 7", "GRU - 7 vs 14", "GatherElements - 11 vs 13", "GatherND - 11 vs 12", "GatherND - 12 vs 13", "Gather - 11 vs 13", "Gather - 1 vs 11", "Gemm - 11 vs 13", "Gemm - 1 vs 6", "Gemm - 6 vs 7", "Gemm - 7 vs 9", "Gemm - 9 vs 11", "GlobalLpPool - 1 vs 2", "GreaterOrEqual - 12 vs 16", "Greater - 1 vs 7", "Greater - 7 vs 9", "Greater - 9 vs 13", "HardSigmoid - 1 vs 6", "Hardmax - 11 vs 13", "Hardmax - 1 vs 11", "Identity - 13 vs 14", "Identity - 14 vs 16", "Identity - 1 vs 13", "If - 11 vs 13", "If - 13 vs 16", "If - 1 vs 11", "InstanceNormalization - 1 vs 6", "IsNaN - 9 vs 13", "LRN - 1 vs 13", "LSTM - 1 vs 7", "LSTM - 7 vs 14", "LabelEncoder - 1 vs 2", "LeakyRelu - 1 vs 6", "LeakyRelu - 6 vs 16", "LessOrEqual - 12 vs 16", "Less - 1 vs 7", "Less - 7 vs 9", "Less - 9 vs 13", "LogSoftmax - 11 vs 13", "LogSoftmax - 1 vs 11", "Log - 1 vs 6", "Log - 6 vs 13", "Loop - 11 vs 13", "Loop - 13 vs 16", "Loop - 1 vs 11", "LpPool - 1 vs 2", "LpPool - 2 vs 11", "MatMul - 1 vs 9", "MatMul - 9 vs 13", "MaxPool - 10 vs 11", "MaxPool - 11 vs 12", "MaxPool - 1 vs 8", "MaxPool - 8 vs 10", "MaxUnpool - 9 vs 11", "Max - 12 vs 13", "Max - 1 vs 6", "Max - 6 vs 8", "Max - 8 vs 12", "MeanVarianceNormalization - 9 vs 13", "Mean - 1 vs 6", "Mean - 6 vs 8", "Mean - 8 vs 13", "Min - 12 vs 13", "Min - 1 vs 6", "Min - 6 vs 8", "Min - 8 vs 12", "Mod - 10 vs 13", "Mul - 13 vs 14", "Mul - 1 vs 6", "Mul - 6 vs 7", "Mul - 7 vs 13", "Neg - 1 vs 6", "Neg - 6 vs 13", "NegativeLogLikelihoodLoss - 12 vs 13", "NonMaxSuppression - 10 vs 11", "NonZero - 9 vs 13", "OneHot - 9 vs 11", "OptionalGetElement - 15 vs 18", "OptionalHasElement - 15 vs 18", "Or - 1 vs 7", "PRelu - 1 vs 6", "PRelu - 6 vs 7", "PRelu - 7 vs 9", "PRelu - 9 vs 16", "Pad - 11 vs 13", "Pad - 13 vs 18", "Pad - 1 vs 2", "Pad - 2 vs 11", "Pow - 12 vs 13", "Pow - 13 vs 15", "Pow - 1 vs 7", "Pow - 7 vs 12", "QuantizeLinear - 10 vs 13", "RNN - 1 vs 7", "RNN - 7 vs 14", "Reciprocal - 1 vs 6", "Reciprocal - 6 vs 13", "ReduceL1 - 11 vs 13", "ReduceL1 - 1 vs 11", "ReduceL2 - 11 vs 13", "ReduceL2 - 1 vs 11", "ReduceLogSumExp - 11 vs 13", "ReduceLogSumExp - 1 vs 11", "ReduceLogSum - 11 vs 13", "ReduceLogSum - 1 vs 11", "ReduceMax - 11 vs 12", "ReduceMax - 12 vs 13", "ReduceMax - 1 vs 11", "ReduceMean - 11 vs 13", "ReduceMean - 1 vs 11", "ReduceMin - 11 vs 12", "ReduceMin - 12 vs 13", "ReduceMin - 1 vs 11", "ReduceProd - 11 vs 13", "ReduceProd - 1 vs 11", "ReduceSumSquare - 11 vs 13", "ReduceSumSquare - 1 vs 11", "ReduceSum - 11 vs 13", "ReduceSum - 1 vs 11", "Relu - 13 vs 14", "Relu - 1 vs 6", "Relu - 6 vs 13", "Reshape - 13 vs 14", "Reshape - 1 vs 5", "Reshape - 5 vs 13", "Resize - 10 vs 11", "Resize - 11 vs 13", "Resize - 13 vs 18", "RoiAlign - 10 vs 16", "Scan - 11 vs 16", "Scan - 8 vs 9", "Scan - 9 vs 11", "ScatterElements - 11 vs 13", "ScatterElements - 13 vs 16", "ScatterElements - 16 vs 18", "ScatterND - 11 vs 13", "ScatterND - 13 vs 16", "ScatterND - 16 vs 18", "Scatter - 9 vs 11", "Selu - 1 vs 6", "Shape - 13 vs 15", "Shape - 1 vs 13", "Sigmoid - 1 vs 6", "Sigmoid - 6 vs 13", "Sign - 9 vs 13", "Size - 1 vs 13", "Slice - 10 vs 11", "Slice - 11 vs 13", "Slice - 1 vs 10", "SoftmaxCrossEntropyLoss - 12 vs 13", "Softmax - 11 vs 13", "Softmax - 1 vs 11", "SpaceToDepth - 1 vs 13", "Split - 11 vs 13", "Split - 1 vs 2", "Split - 2 vs 11", "Sqrt - 1 vs 6", "Sqrt - 6 vs 13", "Squeeze - 11 vs 13", "Squeeze - 1 vs 11", "Sub - 13 vs 14", "Sub - 1 vs 6", "Sub - 6 vs 7", "Sub - 7 vs 13", "Sum - 1 vs 6", "Sum - 6 vs 8", "Sum - 8 vs 13", "Tanh - 1 vs 6", "Tanh - 6 vs 13", "Tile - 1 vs 6", "Tile - 6 vs 13", "TopK - 10 vs 11", "TopK - 1 vs 10", "Transpose - 1 vs 13", "TreeEnsembleClassifier - 1 vs 3", "TreeEnsembleRegressor - 1 vs 3", "Unsqueeze - 11 vs 13", "Unsqueeze - 1 vs 11", "Upsample - 1 vs 7", "Upsample - 7 vs 9", "Upsample - 9 vs 10", "Where - 9 vs 16", "Xor - 1 vs 7", "Python Documentation of ONNX", "onnx.backend", "onnx.checker", "Protos", "onnx.compose", "onnx.external_data_helper", "onnx.helper", "onnx.hub", "API Reference", "onnx.mapping", "onnx.numpy_helper", "onnx.parser", "onnx.printer", "Serialization", "onnx.shape_inference", "onnx.tools", "onnx.utils", "onnx.version_converter", "ONNX Concepts", "Converters", "Introduction to ONNX", "ONNX with Python"], "terms": {"mani": [0, 140, 151, 187, 202, 463, 478, 479, 481], "exampl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 461, 463, 464, 468, 473, 475, 478, 479, 480], "from": [0, 7, 15, 16, 17, 19, 20, 21, 24, 26, 27, 28, 31, 32, 33, 34, 37, 39, 40, 43, 47, 51, 52, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72, 75, 77, 79, 80, 82, 83, 85, 86, 87, 89, 90, 91, 94, 99, 102, 103, 105, 109, 111, 113, 114, 115, 117, 118, 119, 120, 134, 135, 137, 140, 141, 142, 145, 148, 149, 151, 152, 159, 160, 164, 165, 166, 168, 169, 174, 177, 180, 181, 183, 184, 189, 192, 196, 202, 203, 205, 461, 463, 464, 465, 467, 468, 469, 473, 475, 476, 477, 478, 480, 481], "document": [0, 1, 19, 21, 65, 66, 135, 174, 463, 466, 478, 480, 481], "end": [0, 2, 15, 26, 32, 33, 34, 83, 85, 89, 91, 111, 113, 140, 152, 159, 174, 200, 201, 463, 468, 478, 481], "call": [0, 2, 34, 203, 204, 205, 206, 463, 465, 470, 473, 478, 479, 481], "function": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 460, 461, 462, 463, 464, 465, 473, 475, 480], "expect": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 203, 204, 206, 460, 464, 479, 481], "check": [0, 2, 6, 7, 18, 42, 47, 58, 62, 63, 79, 80, 88, 92, 95, 97, 98, 109, 110, 112, 135, 170, 171, 183, 184, 203, 204, 206, 461, 462, 474, 479, 481], "runtim": [0, 2, 83, 460, 478, 479, 481], "return": [0, 7, 14, 17, 19, 20, 37, 38, 47, 62, 63, 65, 66, 71, 74, 79, 80, 83, 94, 103, 104, 107, 108, 109, 139, 140, 152, 167, 169, 177, 179, 180, 183, 184, 196, 200, 201, 461, 463, 464, 465, 466, 467, 470, 471, 473, 474, 477, 478, 481], "output": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 461, 463, 464, 466, 473, 474, 475, 476, 479, 480, 481], "given": [0, 4, 5, 10, 11, 12, 13, 20, 21, 24, 25, 27, 31, 35, 36, 37, 44, 48, 49, 50, 55, 57, 64, 69, 71, 81, 82, 83, 84, 90, 101, 111, 135, 137, 140, 141, 147, 149, 155, 156, 157, 160, 161, 163, 166, 172, 173, 176, 177, 178, 179, 181, 182, 189, 203, 204, 205, 466, 467, 481], "here": [0, 83, 140, 174, 473, 478, 479, 481], "i": [0, 1, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 75, 76, 77, 78, 79, 80, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 473, 474, 475, 476, 477, 480, 481], "one": [0, 3, 14, 17, 19, 20, 22, 30, 31, 32, 34, 41, 43, 45, 46, 50, 51, 53, 54, 55, 56, 65, 66, 67, 68, 69, 76, 77, 78, 82, 83, 85, 94, 99, 100, 101, 105, 110, 112, 116, 117, 118, 119, 120, 122, 133, 134, 135, 136, 138, 140, 141, 144, 151, 152, 153, 154, 160, 161, 162, 167, 168, 169, 174, 175, 179, 180, 181, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 202, 203, 204, 205, 206, 461, 463, 464, 465, 473, 478, 479, 481], "implement": [0, 2, 17, 26, 43, 54, 76, 77, 83, 116, 169, 460, 473, 478, 479, 480], "base": [0, 15, 32, 33, 34, 83, 85, 89, 94, 102, 105, 112, 113, 174, 185, 186, 187, 200, 201, 203, 204, 205, 206, 461, 463, 465, 466, 468, 478, 481], "onnxruntim": [0, 478, 481], "type": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 461, 463, 465, 466, 470, 473, 474, 479, 480, 481], "import": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 203, 204, 206, 464, 468, 469, 473, 475, 478, 481], "ani": [0, 6, 14, 15, 20, 26, 28, 29, 32, 33, 34, 37, 42, 55, 56, 57, 83, 85, 89, 91, 94, 98, 102, 105, 112, 113, 118, 120, 134, 136, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 159, 170, 176, 180, 181, 185, 189, 192, 205, 460, 461, 465, 466, 467, 470, 474, 475, 478, 479, 481], "sequenc": [0, 28, 29, 45, 54, 70, 71, 76, 83, 106, 107, 108, 116, 121, 136, 140, 145, 146, 147, 148, 149, 150, 151, 166, 174, 188, 194, 200, 202, 461, 463, 466, 478], "numpi": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 203, 204, 206, 470, 478, 479, 481], "np": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 203, 204, 206, 479], "onnx": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 463, 468, 473, 479], "def": [0, 14, 77, 468, 469, 470, 478, 479, 481], "node": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 200, 201, 203, 204, 205, 206, 461, 463, 464, 466, 473, 475, 479, 480, 481], "nodeproto": [0, 461, 466, 468, 473, 475, 481], "input": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 461, 463, 464, 466, 470, 473, 474, 475, 476, 477, 479, 480], "ndarrai": [0, 470, 481], "name": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 463, 464, 465, 466, 467, 468, 470, 473, 475, 476, 478, 479, 481], "str": [0, 14, 20, 21, 28, 52, 178, 181, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 478], "kwarg": [0, 14, 461, 466, 469, 475], "none": [0, 14, 20, 21, 77, 83, 101, 108, 123, 124, 126, 127, 128, 129, 130, 131, 132, 142, 143, 161, 169, 174, 180, 193, 194, 197, 198, 200, 201, 461, 462, 464, 465, 466, 467, 470, 473, 474, 475, 476, 481], "build": [0, 460, 471, 478, 481], "model": [0, 1, 43, 71, 83, 102, 193, 194, 205, 206, 461, 462, 463, 464, 465, 467, 468, 474, 475, 476, 477, 478, 479], "present_input": 0, "x": [0, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 89, 90, 91, 93, 96, 97, 98, 100, 101, 103, 104, 109, 110, 111, 112, 113, 114, 115, 116, 122, 133, 135, 136, 137, 138, 139, 140, 144, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 473, 478, 481], "present_output": 0, "input_type_proto": [0, 20, 21, 70, 83, 107, 108, 151], "len": [0, 20, 21, 28, 52, 77, 149, 159, 178, 180, 478], "del": [0, 481], "output_type_proto": [0, 20, 21, 70, 71, 151], "inputs_vi": 0, "_extract_value_info": 0, "arr": [0, 470], "arr_nam": 0, "input_typ": 0, "zip": [0, 140, 180], "outputs_vi": 0, "output_typ": [0, 105], "graph": [0, 1, 14, 71, 83, 140, 151, 205, 460, 463, 464, 466, 473, 474, 475, 478, 481], "helper": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 203, 204, 206, 463, 468, 469, 481], "make_graph": [0, 71, 83, 140, 151, 466, 481], "producer_nam": [0, 463, 464, 478, 481], "backend": [0, 468, 479], "opset_import": [0, 43, 70, 71, 83, 140, 141, 182, 203, 204, 206, 463, 466, 481], "To": [0, 97, 205, 465], "make": [0, 64, 77, 83, 91, 176, 200, 201, 478, 479, 481], "sure": 0, "produc": [0, 2, 3, 17, 20, 21, 22, 26, 30, 43, 45, 46, 53, 56, 67, 68, 71, 78, 83, 90, 91, 100, 103, 105, 110, 112, 122, 133, 137, 140, 141, 142, 143, 144, 150, 153, 154, 159, 162, 167, 174, 175, 189, 463, 464, 478, 481], "same": [0, 6, 8, 9, 16, 17, 20, 21, 24, 28, 29, 30, 37, 40, 42, 45, 48, 50, 51, 54, 56, 58, 59, 60, 61, 64, 69, 71, 72, 76, 77, 82, 88, 89, 91, 92, 93, 95, 97, 98, 102, 105, 110, 112, 113, 114, 115, 116, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 140, 141, 142, 143, 146, 149, 151, 153, 155, 160, 168, 170, 171, 176, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 199, 200, 201, 203, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 463, 464, 466, 473, 474, 478, 479, 481], "opset_vers": [0, 463], "after": [0, 16, 26, 38, 83, 84, 111, 135, 152, 161, 165, 166, 169, 182, 203, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 463, 465, 479, 481], "opset": [0, 6, 42, 98, 142, 143, 170, 466, 467, 468, 477, 480], "chang": [0, 6, 20, 34, 37, 42, 83, 98, 140, 142, 143, 170, 191, 463, 478, 479, 481], "By": [0, 29, 34, 37, 38, 39, 51, 134, 174, 178, 205, 464], "default": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 188, 192, 193, 194, 203, 204, 463, 464, 466, 467, 474, 478, 480], "us": [0, 15, 16, 17, 19, 20, 23, 32, 33, 34, 38, 39, 43, 45, 51, 54, 58, 60, 64, 65, 66, 72, 76, 77, 83, 85, 89, 90, 91, 93, 94, 96, 99, 102, 105, 111, 113, 116, 118, 120, 135, 137, 140, 141, 142, 143, 152, 159, 165, 166, 174, 177, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 205, 206, 461, 463, 464, 465, 466, 470, 473, 478, 479, 480, 481], "since_vers": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 463], "produce_opset_vers": 0, "get_schema": [0, 469], "op_typ": [0, 463, 466, 469, 473, 481], "domain": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 463, 464, 466, 469, 480, 481], "make_operatorsetid": [0, 466, 481], "make_model_gen_vers": [0, 481], "ar": [0, 6, 15, 16, 18, 20, 24, 26, 27, 32, 33, 34, 38, 39, 40, 42, 44, 45, 50, 51, 54, 55, 56, 57, 59, 60, 61, 64, 71, 72, 74, 75, 76, 77, 83, 84, 85, 89, 90, 91, 93, 94, 98, 102, 103, 105, 111, 112, 113, 116, 118, 120, 134, 135, 137, 139, 140, 141, 142, 145, 148, 149, 152, 159, 164, 169, 170, 174, 177, 179, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192, 194, 195, 197, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 463, 464, 466, 474, 478, 479, 481], "ones": [0, 31, 43, 50, 51, 54, 76, 101, 116, 161, 196, 481], "sess": [0, 481], "inferencesess": [0, 481], "serializetostr": [0, 473, 481], "feed": [0, 205], "valu": [0, 5, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 43, 44, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 69, 71, 72, 73, 76, 77, 82, 83, 85, 87, 89, 91, 94, 99, 101, 102, 105, 106, 107, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 148, 149, 152, 153, 157, 159, 160, 161, 163, 164, 165, 166, 168, 169, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 196, 200, 201, 202, 203, 204, 205, 206, 463, 464, 465, 466, 470, 474, 475, 478, 480], "result": [0, 6, 7, 8, 9, 18, 20, 32, 33, 34, 42, 47, 62, 63, 69, 79, 80, 86, 87, 88, 91, 92, 95, 97, 98, 102, 103, 105, 109, 113, 114, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 159, 169, 170, 171, 174, 177, 179, 184, 194, 203, 204, 206, 461, 474, 478, 479, 481], "run": [0, 16, 43, 71, 83, 140, 151, 204, 461, 476, 478, 479, 481], "assert_allclos": 0, "open": [1, 473, 480, 481], "neural": [1, 75, 83, 96, 478, 480], "network": [1, 64, 75, 83, 463, 478, 480], "exchang": [1, 480], "an": [1, 6, 8, 9, 14, 15, 16, 17, 20, 24, 25, 26, 27, 32, 33, 34, 37, 38, 42, 43, 45, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 69, 71, 75, 76, 78, 82, 83, 85, 87, 89, 90, 91, 97, 98, 101, 102, 106, 107, 108, 111, 112, 113, 114, 116, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 142, 143, 145, 147, 148, 149, 152, 158, 159, 160, 161, 168, 170, 174, 176, 177, 178, 180, 181, 185, 187, 188, 189, 190, 192, 196, 199, 201, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 473, 476, 480, 481], "ecosystem": [1, 478], "empow": 1, "ai": [1, 460, 469, 478, 481], "develop": [1, 478, 479], "choos": [1, 174, 206, 466, 467], "right": [1, 6, 7, 18, 42, 44, 45, 47, 50, 62, 79, 94, 98, 109, 112, 170, 184, 478, 479], "tool": [1, 468, 480], "project": 1, "evolv": [1, 481], "provid": [1, 8, 9, 14, 24, 27, 30, 34, 69, 82, 83, 84, 97, 101, 102, 108, 111, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 141, 160, 161, 168, 180, 188, 192, 194, 197, 202, 205, 464, 474, 475, 478, 481], "sourc": [1, 141, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "format": [1, 15, 26, 30, 32, 33, 34, 54, 76, 85, 89, 91, 102, 105, 111, 113, 116, 174, 463, 467, 471, 473, 479, 481], "both": [1, 40, 71, 83, 135, 140, 174, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 464, 479, 481], "deep": [1, 75, 463, 478, 479], "learn": [1, 174, 203, 204, 206, 463, 478, 480, 481], "tradit": 1, "ml": [1, 460, 463, 469, 478, 479, 481], "It": [1, 16, 18, 25, 33, 34, 37, 38, 40, 43, 44, 48, 50, 54, 55, 56, 57, 75, 76, 83, 87, 101, 102, 107, 113, 114, 115, 116, 134, 135, 136, 139, 140, 141, 142, 145, 148, 149, 150, 151, 153, 155, 159, 161, 166, 169, 174, 181, 182, 189, 192, 203, 204, 205, 206, 460, 463, 464, 467, 478, 479, 480, 481], "defin": [1, 6, 7, 42, 47, 57, 62, 64, 75, 77, 79, 83, 91, 94, 98, 109, 112, 131, 170, 184, 188, 189, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 463, 464, 466, 468, 476, 478, 479, 481], "extens": [1, 480], "comput": [1, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 19, 32, 33, 34, 35, 36, 38, 39, 40, 48, 49, 54, 57, 58, 64, 65, 66, 69, 72, 76, 77, 81, 82, 83, 85, 89, 91, 101, 113, 114, 115, 116, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 139, 140, 151, 152, 155, 156, 157, 159, 160, 161, 163, 172, 173, 174, 203, 204, 205, 206, 461, 463, 474, 478, 479, 481], "well": [1, 83, 140, 478, 481], "definit": [1, 77, 205, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 478, 479, 481], "built": [1, 478, 479, 481], "oper": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 466, 468, 474, 476, 480, 481], "standard": [1, 77, 117, 118, 174, 199, 206, 463, 478, 479], "data": [1, 3, 8, 9, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 32, 33, 34, 39, 43, 44, 46, 50, 51, 53, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 75, 78, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 102, 105, 110, 111, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 141, 142, 143, 144, 146, 147, 149, 152, 153, 154, 158, 159, 162, 164, 167, 168, 171, 175, 178, 180, 181, 182, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 460, 461, 463, 465, 466, 470, 473, 474, 478, 479], "websit": 1, "main": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 461, 467, 478, 479, 481], "entri": [1, 55, 105, 121, 141, 142, 143, 166, 168, 181], "point": [1, 19, 20, 33, 40, 41, 43, 44, 57, 64, 65, 66, 77, 83, 87, 97, 101, 113, 114, 115, 135, 137, 190, 200, 205], "python": [1, 26, 64, 470, 478, 479, 480], "creat": [1, 83, 94, 140, 141, 142, 143, 202, 203, 204, 206, 463, 464, 466, 468, 478, 479, 481], "your": [1, 478], "own": [1, 478, 479], "api": [1, 460, 478, 480, 481], "list": [2, 16, 28, 54, 76, 83, 88, 92, 93, 95, 111, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 140, 159, 165, 168, 169, 171, 174, 178, 181, 190, 192, 196, 197, 198, 200, 203, 204, 205, 206, 460, 461, 463, 464, 466, 467, 468, 469, 470, 473, 475, 476, 479, 480, 481], "out": [2, 16, 20, 55, 56, 57, 64, 71, 72, 83, 94, 102, 135, 141, 142, 145, 148, 149, 152, 463, 479], "all": [2, 3, 6, 8, 9, 15, 16, 17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 39, 41, 42, 43, 45, 47, 48, 50, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 69, 70, 71, 76, 77, 79, 80, 83, 85, 88, 89, 91, 92, 93, 94, 95, 98, 99, 101, 103, 105, 106, 107, 111, 116, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 140, 141, 142, 143, 146, 152, 155, 159, 161, 164, 165, 166, 168, 169, 170, 171, 174, 176, 178, 179, 180, 181, 182, 183, 189, 190, 191, 195, 196, 199, 200, 201, 203, 204, 205, 206, 460, 461, 463, 464, 465, 466, 467, 468, 478, 479, 481], "For": [2, 6, 15, 16, 18, 20, 26, 32, 33, 34, 37, 38, 42, 54, 56, 59, 60, 61, 64, 69, 71, 72, 75, 76, 77, 82, 85, 89, 91, 98, 111, 112, 113, 114, 115, 116, 135, 136, 139, 140, 141, 142, 151, 152, 159, 160, 170, 174, 176, 178, 181, 189, 192, 195, 196, 200, 201, 203, 204, 205, 206, 461, 463, 468, 476, 481], "each": [2, 15, 16, 18, 24, 26, 27, 32, 33, 34, 45, 56, 57, 64, 69, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 111, 113, 135, 136, 137, 138, 140, 141, 142, 143, 151, 159, 160, 161, 165, 166, 171, 174, 180, 181, 182, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 203, 204, 205, 461, 463, 464, 465, 478, 479, 481], "usag": [2, 83, 140], "guid": 2, "paramet": [2, 34, 54, 75, 76, 83, 116, 117, 118, 120, 140, 168, 183, 189, 200, 201, 203, 204, 206, 462, 464, 465, 466, 467, 470, 471, 473, 474, 475, 476, 477, 478, 481], "line": [2, 466, 478, 479, 481], "version": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 463, 464, 466, 467, 468, 477, 479, 480, 481], "histori": [2, 78, 110, 183], "thi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 460, 463, 465, 466, 467, 473, 475, 478, 479, 480, 481], "section": [2, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 468, 473, 478, 479, 481], "also": [2, 16, 34, 37, 43, 50, 51, 54, 56, 58, 64, 76, 77, 83, 91, 97, 101, 105, 116, 134, 140, 165, 174, 203, 205, 463, 465, 478, 479, 481], "includ": [2, 6, 15, 37, 42, 44, 94, 98, 112, 134, 135, 152, 170, 176, 179, 182, 183, 205, 464, 473, 478, 479, 481], "detail": [2, 6, 7, 16, 18, 20, 21, 34, 42, 43, 47, 54, 58, 62, 63, 76, 79, 80, 88, 92, 95, 97, 98, 109, 110, 112, 114, 115, 116, 135, 170, 171, 183, 184, 188, 206, 480], "its": [2, 6, 18, 33, 42, 56, 75, 83, 98, 110, 112, 113, 114, 140, 141, 142, 143, 159, 161, 170, 174, 180, 189, 192, 203, 205, 206, 463, 467, 478, 479, 481], "done": [2, 43, 58, 195, 205, 479, 481], "md": [2, 6, 7, 16, 18, 42, 43, 47, 54, 58, 62, 63, 76, 77, 79, 80, 88, 92, 95, 97, 98, 109, 110, 112, 116, 170, 171, 183, 184, 479], "which": [2, 8, 9, 15, 16, 18, 20, 23, 25, 27, 28, 29, 32, 33, 34, 37, 38, 40, 43, 44, 52, 55, 56, 64, 69, 74, 75, 77, 82, 83, 84, 85, 89, 91, 93, 94, 102, 103, 105, 111, 113, 115, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 140, 141, 142, 143, 151, 158, 160, 165, 166, 169, 174, 176, 177, 181, 188, 189, 191, 192, 195, 197, 199, 200, 203, 204, 205, 461, 463, 465, 466, 473, 476, 478, 479, 481], "One": [2, 111, 116, 135, 165, 166, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 479], "can": [2, 6, 15, 18, 20, 24, 26, 27, 32, 33, 34, 37, 38, 40, 42, 43, 51, 57, 58, 77, 83, 85, 89, 91, 94, 97, 98, 102, 110, 112, 113, 115, 134, 135, 136, 139, 140, 141, 142, 143, 151, 152, 158, 161, 165, 166, 169, 170, 174, 180, 181, 191, 192, 199, 200, 201, 203, 204, 205, 206, 460, 461, 462, 463, 464, 468, 470, 473, 475, 478, 479, 481], "found": [2, 26, 174, 188, 189, 192, 196, 205, 461, 467, 481], "first": [2, 6, 7, 8, 9, 18, 19, 21, 24, 37, 38, 42, 47, 57, 59, 60, 61, 62, 63, 65, 66, 69, 71, 77, 79, 80, 83, 91, 98, 109, 110, 111, 112, 121, 134, 136, 140, 141, 143, 151, 161, 169, 170, 174, 177, 180, 184, 185, 197, 199, 203, 204, 205, 206, 461, 463, 464, 478, 479, 481], "page": [2, 468, 473], "link": [2, 481], "below": [2, 16, 39, 54, 57, 76, 83, 116, 121, 141, 142, 179, 180, 203, 204, 205, 460, 478], "ab": [2, 16, 28, 52, 64, 72, 82, 123, 137, 160, 163, 167, 207, 477, 478, 481], "aco": [2, 207], "acosh": [2, 207], "add": [2, 7, 15, 32, 34, 47, 62, 77, 78, 79, 83, 85, 89, 92, 109, 110, 111, 140, 142, 143, 151, 171, 183, 184, 203, 204, 206, 207, 464, 466, 473, 477, 478, 479, 481], "And": [2, 15, 89, 207, 477, 478, 481], "argmax": [2, 207, 479], "argmin": [2, 207], "asin": [2, 207], "asinh": [2, 207], "atan": [2, 207], "atanh": [2, 207], "attributehasvalu": [2, 207], "averagepool": [2, 59, 207, 477], "batchnorm": [2, 207, 477], "bernoulli": [2, 207], "bitshift": [2, 207], "blackmanwindow": [2, 207], "cast": [2, 21, 44, 77, 105, 187, 196, 207, 477, 478, 479, 481], "castlik": [2, 207], "ceil": [2, 15, 32, 33, 75, 85, 89, 113, 121, 135, 137, 207, 477], "celu": [2, 207], "centercroppad": [2, 207], "clip": [2, 44, 46, 54, 67, 76, 78, 110, 116, 133, 144, 175, 207, 477], "col2im": [2, 207], "compress": [2, 207], "concat": [2, 29, 54, 76, 116, 140, 207, 477], "concatfromsequ": [2, 207], "constant": [2, 15, 71, 83, 89, 111, 140, 203, 204, 207, 463, 478, 481], "constantofshap": [2, 207], "conv": [2, 205, 207, 463, 478], "convinteg": [2, 207], "convtranspos": [2, 207], "co": [2, 19, 65, 66, 139, 207], "cosh": [2, 207], "cumsum": [2, 207], "dft": [2, 94, 139, 207], "depthtospac": [2, 207], "dequantizelinear": [2, 207], "det": [2, 207], "div": [2, 207, 477], "dropout": [2, 83, 207, 477, 478], "dynamicquantizelinear": [2, 207], "einsum": [2, 207], "elu": [2, 54, 76, 116, 207, 477], "equal": [2, 6, 8, 9, 15, 16, 24, 26, 32, 33, 34, 38, 40, 42, 50, 57, 59, 60, 61, 85, 89, 91, 98, 101, 112, 113, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 140, 143, 158, 161, 165, 166, 168, 170, 174, 182, 183, 188, 189, 191, 200, 207, 474, 477, 478, 479, 481], "erf": [2, 207, 479], "exp": [2, 23, 46, 81, 96, 126, 144, 154, 160, 162, 207, 477], "expand": [2, 181, 207], "eyelik": [2, 207], "flatten": [2, 14, 16, 20, 21, 27, 30, 83, 89, 91, 180, 207, 481], "floor": [2, 15, 38, 75, 89, 94, 135, 139, 182, 207, 477], "gru": [2, 205, 207, 477], "gather": [2, 56, 57, 102, 207], "gatherel": [2, 141, 142, 207], "gathernd": [2, 102, 143, 207], "gemm": [2, 205, 207, 477, 478], "globalaveragepool": [2, 207], "globallppool": [2, 207, 477], "globalmaxpool": [2, 207], "greater": [2, 15, 26, 32, 33, 34, 38, 83, 85, 89, 91, 105, 113, 135, 182, 186, 207, 477, 478, 481], "greaterorequ": [2, 207], "gridsampl": [2, 207], "hammingwindow": [2, 207], "hannwindow": [2, 207], "hardsigmoid": [2, 54, 68, 76, 116, 207, 477], "hardswish": [2, 207], "hardmax": [2, 207], "ident": [2, 14, 18, 83, 131, 140, 151, 161, 174, 192, 207, 481], "If": [2, 6, 7, 8, 9, 14, 15, 16, 18, 19, 24, 26, 27, 31, 32, 33, 34, 37, 38, 42, 43, 45, 47, 51, 52, 54, 57, 58, 62, 64, 65, 66, 76, 77, 79, 83, 85, 87, 89, 91, 97, 98, 101, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 152, 153, 155, 159, 161, 165, 166, 167, 168, 169, 170, 174, 177, 179, 180, 184, 187, 188, 191, 192, 194, 196, 197, 203, 204, 205, 206, 207, 463, 464, 465, 466, 467, 473, 474, 476, 479], "instancenorm": [2, 207, 477], "isinf": [2, 207], "isnan": [2, 207, 478], "lrn": [2, 207], "lstm": [2, 54, 116, 205, 207, 477], "layernorm": [2, 207], "leakyrelu": [2, 54, 76, 116, 207, 477], "less": [2, 27, 34, 38, 102, 135, 140, 143, 207, 477, 479, 481], "lessorequ": [2, 207], "log": [2, 54, 76, 82, 99, 101, 116, 125, 126, 161, 162, 207, 477], "logsoftmax": [2, 207], "loop": [2, 140, 141, 143, 207, 463, 476, 480], "lpnormal": [2, 207], "lppool": [2, 60, 207, 477], "matmul": [2, 87, 114, 207, 478, 479, 481], "matmulinteg": [2, 207], "max": [2, 8, 15, 23, 25, 44, 54, 61, 67, 68, 75, 76, 89, 90, 116, 121, 127, 133, 135, 137, 140, 142, 143, 168, 174, 195, 201, 207, 477], "maxpool": [2, 61, 91, 207, 477, 478], "maxroipool": [2, 207], "maxunpool": [2, 207], "mean": [2, 8, 9, 15, 16, 24, 27, 28, 29, 32, 33, 34, 37, 40, 44, 52, 54, 55, 56, 59, 69, 72, 76, 77, 82, 84, 85, 89, 93, 97, 101, 102, 105, 111, 113, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 138, 140, 141, 142, 145, 148, 149, 152, 159, 160, 161, 165, 166, 168, 177, 180, 181, 199, 203, 204, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 463, 464, 473, 474, 477, 478, 479, 481], "meanvariancenorm": [2, 207], "melweightmatrix": [2, 207], "min": [2, 9, 23, 25, 44, 54, 57, 67, 68, 75, 76, 116, 129, 135, 142, 143, 201, 207, 477], "mish": [2, 207], "mod": [2, 32, 207], "mul": [2, 77, 142, 143, 207, 477], "multinomi": [2, 193, 207], "neg": [2, 20, 24, 27, 28, 37, 40, 52, 55, 56, 69, 73, 77, 82, 101, 105, 111, 115, 135, 140, 141, 142, 145, 148, 149, 152, 154, 159, 160, 165, 166, 167, 168, 177, 179, 180, 181, 207, 464, 475, 477], "negativeloglikelihoodloss": [2, 207], "nonmaxsuppress": [2, 207], "nonzero": [2, 16, 20, 43, 183, 207], "Not": [2, 77, 83, 207], "onehot": [2, 207], "option": [2, 15, 16, 17, 25, 27, 31, 32, 33, 34, 38, 40, 43, 51, 54, 56, 58, 70, 71, 73, 75, 76, 77, 83, 87, 89, 91, 99, 101, 102, 105, 107, 108, 111, 113, 115, 116, 117, 118, 119, 120, 131, 134, 135, 136, 139, 140, 141, 142, 143, 147, 148, 149, 152, 159, 161, 165, 166, 168, 179, 180, 194, 205, 207, 461, 463, 464, 465, 466, 467, 473, 475, 478, 479, 481], "optionalgetel": [2, 83, 207], "optionalhasel": [2, 83, 207], "Or": [2, 32, 33, 113, 207, 473, 477], "prelu": [2, 207, 477], "pad": [2, 15, 24, 26, 32, 33, 34, 38, 54, 64, 76, 85, 89, 91, 113, 116, 140, 207, 477], "pow": [2, 207, 477], "qlinearconv": [2, 207], "qlinearmatmul": [2, 207], "quantizelinear": [2, 207], "rnn": [2, 54, 76, 83, 140, 205, 207, 477, 478], "randomnorm": [2, 207], "randomnormallik": [2, 207], "randomuniform": [2, 207], "randomuniformlik": [2, 207], "rang": [2, 8, 9, 17, 20, 24, 27, 28, 29, 37, 40, 44, 52, 54, 55, 56, 59, 61, 64, 69, 76, 77, 82, 91, 94, 101, 102, 105, 111, 115, 116, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 139, 140, 141, 142, 145, 148, 149, 151, 152, 155, 159, 160, 161, 165, 166, 168, 177, 178, 180, 181, 207], "reciproc": [2, 77, 207, 477], "reducel1": [2, 207], "reducel2": [2, 207], "reducelogsum": [2, 207], "reducelogsumexp": [2, 207], "reducemax": [2, 207], "reducemean": [2, 16, 77, 161, 207, 481], "reducemin": [2, 207, 478], "reduceprod": [2, 207], "reducesum": [2, 160, 161, 207, 478, 481], "reducesumsquar": [2, 207, 481], "relu": [2, 54, 76, 116, 207, 477, 478], "reshap": [2, 20, 21, 33, 37, 38, 39, 40, 41, 44, 50, 52, 83, 97, 112, 113, 115, 123, 124, 139, 140, 164, 168, 169, 181, 207, 477, 478, 479, 481], "resiz": [2, 83, 182, 207], "reversesequ": [2, 207], "roialign": [2, 207], "round": [2, 20, 44, 114, 115, 135, 207], "stft": [2, 94, 207], "scan": [2, 83, 174, 207], "scatter": [2, 142, 207], "scatterel": [2, 56, 141, 207], "scatternd": [2, 57, 207], "selu": [2, 207, 477], "sequenceat": [2, 207], "sequenceconstruct": [2, 71, 83, 207], "sequenceempti": [2, 207], "sequenceeras": [2, 207], "sequenceinsert": [2, 83, 207], "sequencelength": [2, 207], "sequencemap": [2, 207], "shape": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 461, 462, 463, 466, 474, 475, 479, 480], "shrink": [2, 207], "sigmoid": [2, 54, 76, 116, 197, 198, 207, 477], "sign": [2, 20, 97, 100, 133, 159, 207, 481], "sin": [2, 207], "sinh": [2, 207], "size": [2, 6, 15, 16, 19, 20, 26, 27, 28, 29, 32, 33, 34, 40, 42, 50, 51, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 72, 75, 82, 85, 89, 90, 91, 94, 98, 101, 105, 110, 112, 113, 134, 135, 137, 139, 140, 141, 142, 152, 159, 160, 165, 166, 170, 174, 176, 179, 190, 196, 197, 200, 201, 207, 465, 467, 475, 478, 481], "slice": [2, 27, 57, 83, 136, 143, 152, 180, 207], "softmax": [2, 82, 161, 193, 194, 197, 198, 200, 201, 207, 478], "softmaxcrossentropyloss": [2, 207], "softplu": [2, 54, 76, 96, 116, 207], "softsign": [2, 54, 76, 116, 207], "spacetodepth": [2, 39, 207], "split": [2, 15, 32, 33, 34, 77, 85, 89, 113, 166, 200, 201, 207, 477], "splittosequ": [2, 207], "sqrt": [2, 16, 72, 77, 93, 124, 195, 203, 204, 207, 477, 481], "squeez": [2, 207], "stringnorm": [2, 207], "sub": [2, 77, 83, 140, 151, 159, 205, 207, 476, 477, 478, 481], "sum": [2, 6, 15, 16, 37, 45, 75, 83, 89, 101, 123, 124, 125, 126, 131, 132, 135, 140, 161, 165, 166, 195, 201, 206, 207, 477, 481], "tan": [2, 207], "tanh": [2, 54, 76, 96, 116, 140, 207], "tfidfvector": [2, 207], "thresholdedrelu": [2, 54, 76, 116, 207], "tile": [2, 50, 207, 477], "topk": [2, 207, 481], "transpos": [2, 34, 39, 58, 164, 207, 478, 481], "trilu": [2, 207], "uniqu": [2, 71, 139, 207, 463, 466, 475, 478], "unsqueez": [2, 83, 207, 464], "upsampl": [2, 135, 207, 477], "where": [2, 3, 8, 9, 15, 16, 17, 22, 24, 26, 27, 28, 29, 32, 33, 34, 39, 40, 41, 43, 44, 45, 46, 52, 53, 55, 56, 57, 58, 59, 60, 61, 64, 67, 68, 69, 72, 75, 77, 78, 82, 85, 89, 90, 91, 99, 100, 101, 102, 105, 110, 111, 112, 113, 115, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 139, 140, 141, 142, 143, 144, 145, 148, 149, 152, 154, 159, 160, 161, 162, 164, 165, 167, 168, 175, 177, 179, 180, 181, 189, 191, 196, 200, 201, 203, 204, 205, 206, 207, 463, 465, 478, 481], "xor": [2, 207, 477], "arrayfeatureextractor": [2, 208, 481], "binar": [2, 208], "castmap": [2, 208], "categorymapp": [2, 208], "dictvector": [2, 208], "featurevector": [2, 208], "imput": [2, 208, 478], "labelencod": [2, 208, 478], "linearclassifi": [2, 208], "linearregressor": [2, 208], "normal": [2, 16, 64, 72, 75, 77, 84, 93, 102, 117, 118, 135, 160, 169, 208], "onehotencod": [2, 208, 478], "svmclassifi": [2, 208], "svmregressor": [2, 208, 478], "scaler": [2, 208], "treeensembleclassifi": [2, 208], "treeensembleregressor": [2, 208, 479], "zipmap": [2, 208], "adagrad": [2, 209], "adam": [2, 209], "gradient": [2, 16, 77, 101, 161, 203, 204, 206, 209], "momentum": [2, 16, 204, 209], "sampl": [2, 16, 64, 83, 94, 99, 101, 135, 137, 139, 140, 151, 161], "test": [2, 14, 16, 19, 34, 43, 64, 65, 66, 139, 152, 461, 462, 463, 479, 480], "code": [2, 83, 140, 203, 204, 206, 473, 478, 479, 481], "github": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 461, 467], "fals": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 462, 464, 465, 466, 467, 474, 475], "support_level": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "supporttyp": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "common": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 478, 479], "infer": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 462, 474, 479, 480], "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 192, 193, 196, 197, 200, 201, 202, 203, 204, 206, 462, 464, 465, 466, 473, 476, 481], "ha": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 463, 468, 473, 478, 479, 481], "been": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 463], "avail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 463, 473, 479, 480, 481], "sinc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "summari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 479, 481], "absolut": [3, 102, 478], "take": [3, 15, 22, 26, 27, 32, 33, 34, 41, 43, 46, 53, 55, 56, 67, 68, 78, 85, 89, 91, 100, 108, 110, 112, 113, 122, 133, 134, 135, 138, 140, 141, 142, 143, 144, 152, 153, 154, 158, 162, 167, 168, 175, 179, 180, 181, 182, 461, 463, 474, 478, 481], "tensor": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 463, 465, 466, 468, 470, 473, 476, 481], "lt": [3, 6, 7, 16, 18, 22, 42, 43, 46, 47, 50, 51, 53, 54, 57, 58, 62, 63, 67, 68, 69, 75, 76, 77, 78, 79, 80, 82, 83, 88, 92, 93, 95, 97, 98, 100, 109, 110, 112, 116, 121, 122, 133, 135, 140, 144, 152, 153, 154, 155, 160, 161, 162, 167, 170, 171, 175, 183, 184, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202], "t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 95, 96, 97, 98, 100, 101, 103, 104, 109, 110, 111, 112, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 194, 195, 196, 198, 199, 201, 202, 203, 204, 205, 206, 463, 466, 479, 481], "gt": [3, 6, 7, 14, 15, 16, 18, 20, 22, 27, 31, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 67, 68, 69, 76, 77, 78, 79, 80, 82, 83, 88, 89, 92, 93, 94, 95, 97, 98, 100, 101, 104, 109, 110, 112, 116, 122, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 149, 152, 153, 154, 155, 160, 161, 162, 165, 166, 167, 170, 171, 175, 183, 184, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206], "y": [3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 96, 97, 98, 100, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 116, 122, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 473, 478, 479, 481], "appli": [3, 15, 16, 20, 22, 26, 46, 53, 54, 59, 60, 61, 67, 68, 76, 78, 84, 85, 89, 90, 100, 101, 110, 111, 112, 116, 122, 133, 137, 142, 143, 144, 151, 154, 159, 161, 162, 165, 167, 175, 180, 185, 191, 193, 194, 197, 198, 199, 200, 201, 204, 474, 477, 478, 479], "elementwis": [3, 7, 22, 46, 47, 53, 62, 63, 67, 68, 78, 79, 80, 100, 109, 110, 112, 122, 133, 144, 154, 162, 167, 175, 184], "heterogen": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206], "constraint": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 478], "bfloat16": [3, 6, 8, 9, 16, 17, 19, 20, 21, 22, 24, 25, 26, 28, 30, 37, 38, 39, 42, 43, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 62, 63, 65, 66, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 82, 83, 86, 88, 92, 93, 94, 95, 97, 98, 100, 103, 110, 111, 112, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 142, 143, 152, 154, 155, 158, 159, 160, 161, 164, 165, 167, 168, 170, 171, 173, 176, 178, 179, 181, 183, 478], "doubl": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 478], "float": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 463, 466, 478, 479, 481], "float16": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 110, 111, 112, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 205, 469, 478, 481], "int16": [3, 6, 8, 9, 17, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 39, 42, 45, 47, 48, 50, 51, 52, 55, 56, 57, 62, 63, 64, 65, 66, 70, 71, 79, 80, 83, 88, 94, 95, 97, 98, 100, 103, 105, 106, 107, 108, 111, 112, 118, 120, 121, 133, 134, 135, 136, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 164, 165, 166, 168, 170, 176, 177, 178, 179, 180, 181, 182, 183, 205, 463, 469, 478, 481], "int32": [3, 6, 8, 9, 17, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 42, 45, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 70, 71, 76, 79, 80, 83, 86, 87, 88, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 110, 111, 112, 113, 115, 116, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 161, 164, 165, 166, 168, 170, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 463, 469, 478, 481], "int64": [3, 6, 8, 9, 14, 17, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 37, 38, 39, 42, 43, 45, 47, 48, 50, 51, 52, 55, 56, 57, 58, 62, 63, 64, 65, 66, 70, 71, 79, 80, 83, 86, 88, 89, 91, 94, 95, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 161, 164, 165, 166, 168, 170, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 463, 469, 478, 481], "int8": [3, 6, 8, 9, 17, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 39, 40, 42, 44, 45, 47, 48, 50, 51, 52, 55, 56, 57, 62, 63, 64, 65, 66, 70, 71, 79, 80, 83, 87, 88, 89, 94, 95, 97, 98, 100, 103, 105, 106, 107, 108, 111, 112, 113, 114, 115, 118, 120, 127, 129, 133, 134, 135, 136, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 164, 165, 166, 168, 170, 176, 177, 178, 179, 180, 181, 182, 183, 205, 463, 469, 478, 481], "uint16": [3, 6, 8, 9, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 39, 42, 45, 47, 48, 50, 51, 52, 55, 56, 57, 62, 63, 64, 65, 66, 70, 71, 79, 80, 83, 88, 94, 95, 97, 98, 103, 105, 106, 107, 108, 111, 112, 118, 120, 134, 135, 136, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 164, 165, 166, 168, 170, 176, 177, 178, 179, 180, 181, 182, 183, 205, 463, 469, 478, 481], "uint32": [3, 6, 8, 9, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 37, 39, 42, 45, 47, 48, 50, 51, 52, 55, 56, 57, 58, 62, 63, 64, 65, 66, 70, 71, 79, 80, 83, 86, 88, 94, 95, 97, 98, 103, 105, 106, 107, 108, 110, 111, 112, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 164, 165, 166, 168, 170, 176, 177, 178, 179, 180, 181, 182, 183, 205, 463, 469, 478, 481], "uint64": [3, 6, 8, 9, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 37, 39, 42, 45, 47, 48, 50, 51, 52, 55, 56, 57, 58, 62, 63, 64, 65, 66, 70, 71, 79, 80, 83, 86, 88, 94, 95, 97, 98, 103, 105, 106, 107, 108, 110, 111, 112, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 164, 165, 166, 168, 170, 176, 177, 178, 179, 180, 181, 182, 183, 205, 463, 469, 478, 481], "uint8": [3, 6, 8, 9, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 39, 40, 42, 44, 45, 47, 48, 50, 51, 52, 55, 56, 57, 62, 63, 64, 65, 66, 70, 71, 79, 80, 83, 87, 88, 89, 94, 95, 97, 98, 103, 105, 106, 107, 108, 111, 112, 113, 114, 115, 118, 120, 127, 129, 134, 135, 136, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 164, 165, 166, 168, 170, 176, 177, 178, 179, 180, 181, 182, 183, 205, 463, 469, 478, 481], "constrain": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 203, 204, 206], "numer": [3, 6, 8, 9, 17, 19, 20, 25, 26, 31, 37, 42, 45, 47, 48, 62, 63, 65, 66, 79, 80, 88, 93, 94, 95, 97, 98, 100, 105, 111, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 153, 155, 170, 177, 185, 186, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 463, 478], "make_nod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 203, 204, 206, 466, 481], "34": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 203, 204, 205, 206], "random": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 24, 25, 30, 35, 36, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 58, 59, 61, 62, 67, 68, 69, 75, 77, 78, 79, 81, 82, 86, 89, 98, 99, 100, 101, 104, 109, 110, 111, 112, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 144, 151, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 167, 168, 170, 172, 173, 175, 176, 178, 179, 181, 184, 481], "randn": [3, 6, 7, 11, 12, 14, 15, 22, 24, 25, 30, 35, 36, 42, 43, 45, 46, 47, 48, 49, 53, 54, 55, 59, 61, 62, 67, 68, 69, 75, 77, 78, 79, 81, 82, 86, 89, 98, 100, 104, 109, 110, 111, 112, 116, 133, 144, 152, 154, 156, 157, 158, 159, 160, 162, 163, 167, 168, 170, 172, 173, 175, 181, 184, 481], "3": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 95, 97, 98, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 197, 198, 203, 204, 206, 207, 208, 469, 475, 477, 478, 479, 481], "4": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 95, 97, 98, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 112, 115, 116, 121, 122, 123, 124, 125, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 196, 203, 204, 206, 207, 469, 475, 477, 478, 481], "5": [3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 19, 20, 22, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 81, 82, 83, 87, 88, 89, 90, 91, 95, 97, 98, 100, 101, 102, 104, 105, 109, 110, 111, 112, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 170, 172, 173, 174, 175, 176, 177, 179, 181, 184, 192, 203, 204, 206, 207, 469, 475, 477, 478, 481], "astyp": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 59, 61, 62, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 81, 82, 83, 86, 88, 89, 92, 94, 95, 97, 98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 112, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 144, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 184, 479, 481], "float32": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 203, 204, 206, 469, 479, 481], "test_ab": 3, "v": [3, 6, 7, 8, 9, 15, 16, 20, 22, 25, 27, 28, 30, 32, 34, 37, 39, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 91, 92, 93, 95, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 151, 152, 154, 155, 158, 159, 160, 161, 164, 165, 167, 168, 170, 171, 173, 176, 177, 178, 181, 182, 183, 184, 192, 200, 201, 204, 205, 206, 466], "attribut": [3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 42, 43, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 65, 66, 67, 69, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 105, 106, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 147, 151, 152, 153, 154, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 463, 465, 466, 476, 480], "consumed_input": [3, 6, 16, 22, 25, 42, 43, 46, 49, 53, 67, 72, 78, 81, 88, 92, 95, 98, 100, 110, 122, 133, 134, 144, 154, 167, 170, 171, 173], "legaci": [3, 6, 16, 22, 25, 42, 43, 46, 49, 53, 67, 72, 78, 81, 85, 88, 92, 95, 98, 100, 110, 122, 133, 134, 144, 154, 167, 170, 171, 173], "optim": [3, 6, 16, 22, 25, 42, 43, 46, 49, 53, 67, 72, 78, 81, 83, 88, 92, 95, 98, 100, 110, 122, 133, 134, 144, 154, 167, 170, 171, 173, 203, 204, 205, 206, 478, 479, 481], "calcul": [4, 5, 10, 11, 12, 13, 15, 16, 23, 26, 34, 35, 36, 41, 44, 49, 81, 93, 96, 97, 101, 135, 143, 155, 156, 157, 163, 172, 173], "arccosin": [4, 5], "invers": [4, 10, 12, 38, 56, 57, 77, 91, 141, 142, 143, 174, 479], "cosin": [4, 35, 36], "element": [4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 23, 25, 27, 30, 31, 33, 34, 35, 36, 37, 39, 42, 48, 49, 51, 54, 56, 57, 69, 71, 74, 75, 76, 77, 81, 83, 87, 88, 89, 91, 92, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 143, 151, 155, 156, 157, 158, 159, 161, 163, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 182, 183, 185, 186, 187, 189, 190, 191, 192, 195, 196, 197, 198, 200, 201, 203, 204, 206, 461, 463, 464, 466, 470, 481], "wise": [4, 5, 6, 10, 11, 12, 13, 18, 23, 35, 36, 42, 48, 49, 81, 83, 88, 92, 95, 96, 97, 98, 104, 138, 155, 156, 157, 163, 170, 171, 172, 173, 186, 192, 195, 203, 204, 206], "The": [4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 54, 57, 58, 59, 60, 61, 64, 65, 66, 69, 71, 72, 75, 76, 77, 81, 82, 83, 84, 85, 87, 89, 91, 93, 94, 97, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 147, 151, 152, 153, 155, 156, 157, 159, 160, 161, 163, 165, 166, 170, 172, 173, 174, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 463, 464, 465, 466, 467, 468, 473, 475, 476, 478, 479, 481], "arrai": [4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 64, 67, 69, 70, 71, 73, 74, 76, 78, 81, 82, 83, 87, 88, 89, 91, 92, 93, 95, 97, 98, 100, 102, 103, 105, 107, 108, 111, 112, 113, 114, 115, 116, 122, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 185, 189, 190, 191, 194, 196, 197, 200, 201, 203, 204, 206, 473, 478, 479, 481], "0": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 49, 51, 52, 54, 55, 56, 57, 58, 60, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 193, 196, 200, 201, 203, 204, 206, 464, 465, 468, 478, 479, 481], "arcco": 4, "test_acos_exampl": 4, "rand": [4, 10, 42, 101, 122, 176], "test_aco": 4, "hyperbol": [5, 11, 13, 36, 157, 173], "10": [5, 8, 9, 14, 17, 19, 24, 26, 28, 31, 32, 34, 37, 38, 39, 47, 54, 55, 58, 64, 65, 66, 81, 83, 94, 96, 98, 101, 105, 116, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 141, 143, 149, 151, 152, 164, 165, 176, 179, 204, 207, 469, 478, 479, 481], "e": [5, 6, 7, 16, 18, 20, 38, 41, 42, 44, 47, 51, 54, 57, 62, 63, 76, 77, 79, 80, 83, 88, 91, 92, 93, 94, 95, 96, 97, 98, 102, 105, 107, 109, 112, 116, 134, 137, 139, 144, 169, 170, 171, 183, 184, 193, 200, 206, 461, 463, 476, 481], "1": [5, 11, 12, 13, 14, 17, 18, 19, 21, 23, 24, 26, 27, 29, 31, 33, 35, 36, 37, 38, 40, 41, 44, 45, 48, 50, 51, 56, 57, 64, 65, 66, 68, 73, 77, 87, 91, 93, 94, 96, 97, 101, 102, 103, 105, 106, 107, 108, 113, 114, 115, 121, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 151, 153, 155, 156, 157, 161, 166, 169, 172, 174, 175, 179, 180, 183, 207, 208, 209, 461, 464, 468, 469, 475, 477, 478, 479, 481], "arccosh": 5, "2": [5, 6, 8, 9, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 69, 70, 71, 73, 75, 76, 77, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 105, 107, 108, 112, 113, 115, 116, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149, 152, 153, 158, 159, 160, 161, 164, 166, 167, 168, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 190, 195, 203, 204, 205, 206, 207, 208, 463, 469, 477, 478, 479, 481], "99322295": 5, "65745449": 5, "test_acosh_exampl": 5, "uniform": [5, 8, 9, 13, 17, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 132, 151], "test_acosh": 5, "perform": [6, 7, 18, 23, 37, 38, 42, 45, 47, 62, 63, 69, 77, 79, 80, 82, 93, 96, 97, 98, 109, 139, 140, 141, 142, 160, 169, 170, 184, 194, 200, 201, 461, 463, 474], "binari": [6, 17, 18, 42, 97, 98, 170, 473, 479], "addit": [6, 34, 91, 105, 142, 143, 151, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 463, 467, 478, 479, 481], "style": [6, 7, 18, 42, 47, 62, 63, 79, 80, 83, 88, 92, 95, 97, 98, 109, 112, 170, 171, 183, 184, 203, 204, 206], "broadcast": [6, 7, 18, 42, 45, 47, 50, 58, 62, 63, 79, 80, 88, 92, 95, 97, 98, 109, 110, 112, 170, 171, 176, 183, 184, 191, 203, 204, 206], "support": [6, 7, 18, 20, 21, 26, 42, 44, 47, 51, 54, 58, 62, 63, 64, 76, 79, 80, 83, 84, 85, 88, 92, 95, 97, 98, 109, 110, 111, 112, 116, 137, 140, 143, 170, 171, 183, 184, 187, 197, 198, 203, 204, 206, 461, 474, 477, 479, 480], "multidirect": [6, 7, 18, 42, 47, 62, 63, 79, 80, 88, 92, 95, 97, 98, 109, 112, 170, 171, 183, 184], "more": [6, 7, 8, 9, 16, 18, 20, 26, 32, 33, 34, 39, 41, 42, 43, 47, 54, 58, 62, 63, 64, 76, 79, 80, 88, 92, 95, 97, 98, 102, 109, 110, 112, 113, 116, 135, 140, 143, 164, 165, 166, 170, 171, 174, 179, 183, 184, 196, 203, 205, 206, 461, 463, 478, 479, 481], "pleas": [6, 7, 18, 42, 47, 58, 62, 63, 79, 80, 88, 92, 95, 97, 98, 109, 110, 112, 141, 170, 171, 183, 184], "http": [6, 7, 16, 18, 19, 26, 27, 42, 43, 47, 54, 58, 62, 63, 64, 65, 66, 72, 75, 76, 77, 79, 80, 83, 86, 87, 88, 92, 95, 97, 98, 101, 103, 109, 110, 112, 114, 115, 116, 135, 137, 159, 170, 171, 180, 183, 184, 203, 461, 467], "com": [6, 7, 16, 18, 26, 42, 43, 47, 54, 58, 62, 63, 76, 77, 79, 80, 83, 88, 92, 95, 97, 98, 109, 110, 112, 116, 170, 171, 180, 183, 184, 461, 467], "blob": [6, 7, 16, 18, 26, 42, 43, 47, 54, 58, 62, 63, 76, 77, 79, 80, 88, 92, 95, 97, 98, 109, 110, 112, 116, 165, 170, 171, 183, 184, 461], "master": [6, 7, 16, 18, 26, 42, 43, 47, 54, 58, 62, 63, 64, 76, 79, 80, 88, 92, 95, 97, 98, 109, 110, 112, 116, 170, 171, 183, 184], "doc": [6, 7, 16, 18, 26, 27, 34, 42, 43, 47, 54, 58, 62, 63, 64, 76, 77, 79, 80, 86, 87, 88, 92, 95, 97, 98, 101, 103, 109, 110, 112, 114, 116, 159, 170, 171, 180, 183, 184, 479], "_": [6, 7, 16, 18, 42, 43, 47, 54, 58, 62, 63, 76, 79, 80, 88, 92, 95, 97, 98, 109, 110, 112, 116, 135, 151, 170, 171, 183, 184, 481], "extend": [6, 42, 98, 121, 170, 203, 206, 473, 478], "A": [6, 7, 14, 19, 28, 30, 37, 42, 44, 47, 50, 52, 54, 58, 62, 63, 65, 66, 76, 79, 80, 83, 86, 87, 93, 96, 97, 98, 101, 108, 109, 111, 112, 116, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 140, 161, 165, 166, 170, 176, 177, 178, 179, 180, 184, 187, 188, 189, 191, 192, 193, 200, 201, 203, 204, 205, 206, 460, 463, 464, 467, 473, 478, 480], "operand": [6, 7, 18, 42, 45, 47, 62, 63, 79, 80, 98, 109, 112, 170, 184], "b": [6, 7, 14, 16, 32, 34, 39, 42, 47, 52, 54, 57, 58, 62, 63, 71, 72, 76, 77, 79, 80, 83, 86, 87, 97, 98, 108, 109, 112, 113, 114, 116, 164, 170, 176, 180, 183, 184, 189, 205, 475, 481], "second": [6, 7, 18, 21, 24, 42, 47, 62, 63, 77, 79, 80, 91, 94, 98, 109, 111, 112, 134, 165, 170, 174, 180, 183, 184, 190, 197, 199, 204, 461, 464, 478, 479, 481], "c": [6, 7, 15, 16, 26, 32, 33, 34, 39, 42, 47, 58, 59, 60, 61, 62, 63, 64, 71, 72, 75, 76, 79, 80, 83, 85, 86, 89, 90, 91, 93, 97, 98, 101, 109, 113, 137, 151, 161, 164, 169, 170, 174, 182, 184, 188, 189, 190, 191, 193, 195, 197, 198, 205, 463, 478, 479], "two": [6, 15, 20, 30, 32, 33, 34, 42, 43, 50, 56, 59, 60, 61, 77, 85, 89, 93, 98, 105, 113, 114, 116, 135, 137, 143, 153, 170, 174, 177, 182, 188, 192, 203, 204, 206, 463, 464, 478, 479, 481], "test_add": 6, "_add_uint8": 6, "randint": [6, 42, 51, 98, 101, 151, 170, 176, 179], "24": [6, 15, 26, 32, 33, 34, 40, 42, 52, 89, 98, 115, 134, 170], "dtype": [6, 8, 9, 17, 19, 20, 21, 23, 24, 28, 31, 38, 40, 42, 50, 51, 56, 57, 64, 65, 66, 70, 73, 74, 87, 88, 91, 93, 95, 96, 97, 98, 99, 103, 105, 111, 113, 114, 115, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 141, 142, 143, 147, 151, 153, 159, 168, 170, 176, 177, 180, 182, 183, 203, 204, 206, 461, 469, 470, 479, 481], "test_add_uint8": 6, "_add_broadcast": 6, "test_add_bcast": 6, "high": [6, 37, 42, 97, 98, 101, 102, 115, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 170, 176, 205, 479], "precis": [6, 20, 37, 40, 42, 77, 97, 98, 115, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 170, 478, 481], "limit": [6, 25, 42, 98, 121, 170, 474, 481], "necessari": [6, 42, 98, 112, 170, 205, 206, 477, 478, 481], "hand": [6, 7, 42, 45, 47, 62, 79, 98, 109, 112, 170, 184], "side": [6, 7, 15, 18, 24, 32, 33, 34, 42, 45, 47, 62, 79, 85, 89, 98, 109, 112, 113, 170, 184, 478], "argument": [6, 7, 16, 20, 25, 42, 43, 47, 51, 54, 58, 62, 76, 78, 79, 91, 98, 105, 109, 112, 116, 117, 118, 119, 120, 134, 165, 166, 170, 177, 181, 184, 190, 464, 466, 481], "match": [6, 7, 15, 20, 32, 34, 40, 42, 47, 58, 62, 69, 71, 79, 82, 83, 85, 89, 98, 109, 112, 115, 143, 151, 160, 170, 184, 192, 194, 197, 467, 478], "left": [6, 7, 18, 42, 45, 47, 62, 79, 94, 98, 109, 112, 170, 184, 200, 201, 479, 481], "when": [6, 15, 16, 19, 20, 29, 38, 40, 41, 42, 45, 50, 52, 54, 65, 66, 69, 82, 90, 98, 101, 102, 105, 112, 113, 131, 134, 135, 137, 139, 140, 142, 143, 159, 160, 161, 170, 174, 178, 180, 183, 188, 192, 193, 202, 205, 463, 464, 465, 470, 477, 478, 479, 480, 481], "specifi": [6, 14, 17, 18, 19, 20, 24, 25, 26, 27, 30, 31, 34, 38, 40, 42, 43, 51, 54, 58, 64, 65, 66, 69, 76, 77, 83, 85, 91, 98, 99, 101, 105, 106, 111, 112, 115, 116, 117, 118, 119, 120, 134, 135, 136, 140, 141, 142, 143, 145, 148, 152, 159, 161, 165, 166, 169, 170, 174, 177, 179, 180, 192, 202, 205, 463, 464, 465, 466, 470, 481], "either": [6, 15, 18, 30, 32, 33, 34, 40, 42, 43, 83, 85, 89, 98, 101, 106, 112, 113, 114, 115, 151, 161, 166, 170, 174, 180, 183, 186, 187, 188, 189, 191, 192, 197, 198, 202, 206, 463, 481], "scalar": [6, 14, 19, 25, 30, 31, 33, 38, 40, 41, 42, 43, 44, 57, 58, 65, 66, 71, 83, 87, 98, 101, 102, 103, 105, 108, 111, 112, 113, 114, 115, 121, 134, 139, 145, 148, 149, 150, 158, 161, 166, 170, 192, 203, 204, 206], "rank": [6, 8, 9, 24, 27, 28, 29, 37, 40, 42, 51, 52, 55, 56, 57, 59, 60, 61, 69, 71, 77, 82, 98, 105, 111, 112, 115, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 141, 142, 143, 152, 159, 160, 165, 166, 168, 170, 177, 179, 180, 181, 182, 463, 481], "smaller": [6, 24, 42, 50, 98, 110, 112, 135, 166, 170, 481], "than": [6, 8, 9, 15, 24, 26, 27, 32, 33, 34, 38, 42, 50, 85, 89, 91, 98, 102, 105, 112, 113, 135, 140, 143, 159, 170, 174, 182, 186, 196, 478, 479, 481], "have": [6, 8, 9, 17, 21, 28, 29, 40, 42, 50, 52, 54, 57, 58, 64, 69, 71, 76, 77, 82, 87, 88, 91, 92, 94, 95, 98, 101, 102, 105, 107, 112, 113, 114, 115, 116, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 139, 140, 142, 143, 146, 149, 151, 153, 159, 160, 161, 170, 171, 191, 192, 195, 196, 200, 201, 463, 464, 465, 466, 475, 478, 479, 481], "contigu": [6, 42, 98, 112, 170, 194, 473, 478, 479], "subset": [6, 15, 24, 42, 85, 89, 98, 112, 135, 170, 479], "": [6, 8, 9, 16, 18, 20, 21, 26, 28, 29, 33, 37, 38, 40, 42, 43, 44, 54, 55, 56, 57, 58, 64, 69, 71, 76, 77, 82, 87, 94, 98, 101, 103, 111, 112, 113, 115, 116, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 159, 160, 161, 166, 170, 174, 176, 179, 189, 191, 192, 193, 194, 203, 204, 205, 206, 461, 463, 465, 466, 467, 473, 475, 478, 479, 481], "start": [6, 15, 26, 32, 33, 34, 42, 57, 85, 89, 91, 98, 111, 112, 113, 121, 139, 152, 159, 170, 174, 201], "mutual": [6, 42, 98, 112, 170], "axi": [6, 7, 8, 9, 15, 16, 24, 26, 27, 28, 29, 32, 33, 34, 37, 38, 39, 40, 42, 47, 52, 54, 55, 56, 57, 59, 61, 62, 69, 77, 79, 82, 84, 85, 89, 91, 93, 98, 99, 105, 109, 111, 112, 113, 115, 116, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 141, 142, 152, 159, 160, 164, 165, 166, 168, 170, 176, 177, 180, 181, 184, 195, 478, 479], "set": [6, 7, 16, 34, 37, 38, 42, 43, 45, 47, 51, 62, 64, 71, 73, 79, 83, 91, 97, 98, 101, 102, 109, 112, 131, 134, 135, 137, 142, 143, 159, 169, 170, 174, 179, 184, 188, 189, 192, 194, 196, 197, 205, 206, 463, 464, 465, 466, 467, 475, 478, 479, 481], "suffix": [6, 42, 98, 112, 170, 200, 201, 468], "assum": [6, 16, 24, 32, 33, 34, 42, 54, 76, 91, 98, 111, 112, 113, 116, 135, 140, 151, 170, 174, 192, 196, 200, 201, 203, 204, 206, 478, 481], "dim": [6, 14, 24, 30, 42, 83, 98, 112, 159, 165, 168, 170, 463, 466, 475, 478, 481], "expans": [6, 42, 98, 112, 170], "doesn": [6, 15, 34, 42, 77, 98, 112, 170, 203], "work": [6, 42, 98, 112, 170, 461, 473, 481], "yet": [6, 20, 42, 98, 112, 170], "follow": [6, 15, 16, 20, 26, 32, 33, 34, 38, 39, 42, 43, 45, 50, 54, 56, 57, 58, 76, 77, 85, 89, 91, 94, 98, 111, 112, 113, 116, 139, 140, 143, 159, 161, 170, 203, 204, 205, 460, 463, 468, 473, 475, 478, 479, 481], "need": [6, 34, 42, 43, 69, 82, 83, 91, 98, 112, 135, 140, 160, 169, 170, 180, 191, 203, 205, 463, 473, 478, 479, 481], "pass": [6, 42, 43, 83, 98, 112, 140, 159, 170, 185, 194, 196, 204, 205, 461, 467], "enabl": [6, 7, 15, 38, 42, 45, 47, 62, 79, 89, 98, 109, 112, 139, 140, 170, 184, 474], "dimens": [6, 7, 8, 9, 15, 16, 24, 26, 27, 28, 29, 32, 33, 34, 37, 38, 39, 40, 41, 42, 45, 47, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 69, 72, 75, 76, 77, 79, 82, 83, 85, 88, 89, 90, 91, 92, 95, 98, 103, 105, 109, 111, 112, 113, 115, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 140, 141, 142, 143, 152, 159, 160, 161, 164, 165, 166, 168, 170, 171, 176, 177, 178, 179, 180, 181, 182, 184, 185, 191, 196, 199, 463, 466, 475, 478, 481], "see": [6, 7, 16, 21, 34, 42, 43, 47, 54, 58, 62, 64, 76, 79, 83, 98, 101, 109, 112, 116, 165, 170, 184, 463, 478, 479, 481], "should": [6, 15, 16, 17, 20, 26, 31, 32, 33, 34, 42, 52, 57, 58, 64, 71, 73, 83, 85, 89, 90, 91, 97, 98, 101, 110, 111, 113, 135, 140, 142, 143, 151, 158, 161, 165, 170, 174, 181, 182, 188, 191, 192, 203, 204, 206, 461, 464, 465, 466, 476, 478, 479, 481], "share": [6, 42, 98, 170, 463, 481], "With": [6, 42, 98, 170, 478], "disabl": [6, 42, 98, 170, 481], "logic": [7, 47, 62, 63, 79, 80, 109, 184, 463], "t1": [7, 16, 17, 19, 20, 21, 27, 31, 33, 38, 43, 44, 47, 51, 54, 62, 63, 64, 65, 66, 73, 74, 76, 79, 80, 87, 91, 94, 99, 105, 109, 112, 113, 114, 115, 116, 118, 120, 135, 137, 139, 140, 152, 158, 174, 176, 184, 187, 188, 189, 190, 192, 193, 197, 200, 203, 204, 205, 206], "bool": [7, 14, 17, 20, 21, 24, 26, 27, 28, 29, 30, 31, 39, 43, 47, 50, 51, 52, 55, 56, 57, 62, 63, 64, 70, 71, 73, 74, 79, 80, 83, 103, 104, 105, 106, 107, 108, 109, 111, 118, 120, 134, 135, 136, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 158, 159, 164, 165, 166, 168, 176, 178, 179, 180, 181, 182, 183, 184, 205, 461, 462, 464, 465, 466, 467, 469, 473, 474, 475, 476, 478, 481], "boolean": [7, 14, 20, 27, 43, 47, 62, 63, 73, 74, 79, 80, 83, 104, 108, 109, 169, 179, 183, 184, 481], "2d": [7, 28, 32, 33, 34, 51, 52, 69, 77, 82, 86, 87, 104, 109, 111, 113, 114, 135, 160, 184, 478, 481], "z": [7, 18, 42, 43, 45, 47, 54, 62, 79, 89, 97, 98, 109, 112, 140, 170, 176, 183, 184, 185, 189, 193, 197, 200, 202, 205, 473, 478, 479, 481], "logical_and": 7, "test_and2d": 7, "3d": [7, 28, 86, 104, 109, 114, 184], "test_and3d": 7, "4d": [7, 86, 104, 109, 184], "6": [7, 15, 26, 27, 28, 31, 32, 33, 34, 37, 39, 44, 50, 54, 56, 57, 59, 61, 64, 68, 73, 76, 83, 87, 89, 91, 97, 101, 102, 104, 109, 112, 116, 121, 123, 124, 130, 131, 132, 135, 136, 140, 143, 149, 152, 155, 158, 159, 164, 165, 169, 174, 177, 179, 183, 184, 192, 204, 206, 207, 469, 477, 478, 481], "test_and4d": 7, "_and_broadcast": 7, "1d": [7, 28, 30, 31, 32, 34, 46, 109, 111, 113, 135, 152, 161, 162, 176, 184, 481], "test_and_bcast3v1d": 7, "test_and_bcast3v2d": 7, "test_and_bcast4v2d": 7, "test_and_bcast4v3d": 7, "test_and_bcast4v4d": 7, "descript": [7, 47, 62, 79, 109, 184, 463], "rule": [7, 20, 47, 50, 62, 79, 109, 138, 184, 478, 479], "indic": [8, 9, 14, 16, 19, 24, 26, 27, 32, 33, 34, 43, 45, 50, 52, 54, 55, 56, 57, 58, 65, 66, 69, 76, 77, 82, 89, 91, 101, 102, 103, 105, 108, 111, 113, 116, 134, 135, 140, 141, 142, 143, 152, 159, 160, 168, 174, 177, 179, 180, 181, 183, 185, 187, 193, 194, 197, 198, 200, 201, 463, 466, 478, 481], "along": [8, 9, 15, 26, 27, 32, 33, 34, 37, 39, 45, 54, 55, 56, 57, 69, 76, 82, 84, 85, 89, 91, 93, 99, 105, 111, 113, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 140, 141, 142, 159, 160, 165, 166, 176, 177, 180, 182, 190, 191, 195, 203, 204, 478, 481], "keepdim": [8, 9, 59, 61, 93, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 160, 166, 479, 481], "reduc": [8, 9, 45, 93, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 161, 203], "prune": [8, 9, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "select_last_index": [8, 9], "index": [8, 9, 27, 38, 51, 55, 56, 57, 64, 89, 91, 102, 105, 135, 136, 137, 140, 141, 142, 143, 145, 148, 149, 159, 161, 174, 177, 180, 181, 185, 187, 188, 189, 192, 196, 200, 201, 203, 464, 479], "last": [8, 9, 54, 76, 77, 84, 105, 111, 116, 140, 143, 148, 152, 166, 185, 191, 460, 481], "occurr": [8, 9, 45, 69, 180, 205], "select": [8, 9, 27, 34, 69, 89, 102, 159, 168, 183, 185], "appear": [8, 9, 45, 177, 201, 205], "onc": [8, 9, 45, 140, 201, 478, 479], "otherwis": [8, 9, 27, 32, 33, 34, 37, 69, 71, 101, 105, 108, 113, 135, 153, 161, 165, 166, 175, 178, 179, 180, 183, 197, 206, 464, 466, 474], "integ": [8, 9, 18, 20, 24, 33, 40, 44, 54, 55, 56, 57, 76, 87, 93, 94, 97, 101, 102, 105, 111, 113, 114, 115, 116, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 138, 141, 142, 143, 159, 161, 168, 174, 177, 178, 181, 187, 188, 189, 190, 191, 192, 193, 196, 197, 200, 202, 203, 204, 206, 463, 466, 478, 481], "arg": [8, 9, 165, 201, 469], "accept": [8, 9, 16, 24, 27, 28, 29, 40, 55, 56, 69, 82, 105, 111, 115, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 140, 141, 142, 145, 148, 149, 159, 160, 165, 166, 168, 169, 177, 180, 181, 466], "r": [8, 9, 24, 27, 28, 29, 40, 43, 52, 54, 55, 56, 57, 69, 76, 77, 82, 105, 111, 115, 116, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 152, 159, 160, 165, 168, 177, 180, 181, 203, 204, 205, 206, 479, 481], "keep": [8, 9, 64, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 166, 478, 479], "whether": [8, 9, 15, 32, 33, 34, 38, 43, 58, 73, 83, 85, 89, 97, 102, 113, 140, 169, 177, 179, 180, 187, 191, 193, 198, 461, 463, 464, 467, 476, 479], "multipl": [8, 9, 16, 32, 58, 69, 83, 90, 98, 137, 140, 142, 143, 159, 174, 200, 201, 203, 204, 206, 479], "_no_keepdim": [8, 9], "argmax_use_numpi": 8, "test_argmax_no_keepdims_exampl": 8, "39": [8, 9, 26, 32, 34, 39, 44, 64, 113, 205], "test_argmax_no_keepdims_random": 8, "_keepdim": [8, 9, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "test_argmax_keepdims_exampl": 8, "test_argmax_keepdims_random": 8, "_default_axes_keepdim": [8, 9, 123, 124, 126, 127, 128, 129, 130, 131, 132], "test_argmax_default_axis_exampl": 8, "test_argmax_default_axis_random": 8, "_negative_axis_keepdim": [8, 9], "test_argmax_negative_axis_keepdims_exampl": 8, "test_argmax_negative_axis_keepdims_random": 8, "_no_keepdims_select_last_index": [8, 9], "argmax_use_numpy_select_last_index": 8, "test_argmax_no_keepdims_example_select_last_index": 8, "test_argmax_no_keepdims_random_select_last_index": 8, "_keepdims_select_last_index": [8, 9], "test_argmax_keepdims_example_select_last_index": 8, "test_argmax_keepdims_random_select_last_index": 8, "_default_axes_keepdims_select_last_index": [8, 9], "test_argmax_default_axis_example_select_last_index": 8, "test_argmax_default_axis_random_select_last_index": 8, "_negative_axis_keepdims_select_last_index": [8, 9], "test_argmax_negative_axis_keepdims_example_select_last_index": 8, "test_argmax_negative_axis_keepdims_random_select_last_index": 8, "content": [9, 52, 121, 463, 466, 473, 481], "argmin_use_numpi": 9, "test_argmin_no_keepdims_exampl": 9, "test_argmin_no_keepdims_random": 9, "test_argmin_keepdims_exampl": 9, "test_argmin_keepdims_random": 9, "test_argmin_default_axis_exampl": 9, "test_argmin_default_axis_random": 9, "test_argmin_negative_axis_keepdims_exampl": 9, "test_argmin_negative_axis_keepdims_random": 9, "argmin_use_numpy_select_last_index": 9, "test_argmin_no_keepdims_example_select_last_index": 9, "test_argmin_no_keepdims_random_select_last_index": 9, "test_argmin_keepdims_example_select_last_index": 9, "test_argmin_keepdims_random_select_last_index": 9, "test_argmin_default_axis_example_select_last_index": 9, "test_argmin_default_axis_random_select_last_index": 9, "test_argmin_negative_axis_keepdims_example_select_last_index": 9, "test_argmin_negative_axis_keepdims_random_select_last_index": 9, "arcsin": [10, 11], "sine": [10, 156, 157], "test_asin_exampl": 10, "test_asin": 10, "arcsinh": 11, "88137358": 11, "test_asinh_exampl": 11, "test_asinh": 11, "arctang": [12, 13], "tangent": [12, 172, 173], "arctan": 12, "test_atan_exampl": 12, "test_atan": 12, "arctanh": 13, "54930615": 13, "test_atanh_exampl": 13, "test_atanh": 13, "least": [14, 26, 168, 479], "value_float": [14, 30], "value_graph": 14, "value_int": [14, 30], "int": [14, 20, 21, 43, 52, 58, 75, 77, 83, 86, 94, 110, 112, 121, 137, 140, 174, 179, 188, 192, 196, 202, 461, 463, 464, 465, 466, 467, 468, 469, 470, 475, 477, 481], "value_sparse_tensor": 14, "sparse_tensor": [14, 463], "value_str": [14, 30], "string": [14, 16, 20, 21, 24, 26, 27, 28, 29, 30, 39, 43, 45, 50, 51, 52, 54, 55, 56, 57, 58, 64, 70, 71, 76, 83, 103, 105, 106, 107, 108, 111, 116, 118, 120, 134, 135, 136, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 158, 159, 164, 165, 166, 168, 169, 174, 176, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 192, 193, 196, 197, 200, 202, 205, 463, 464, 465, 466, 471, 473, 476, 478, 481], "value_tensor": 14, "value_type_proto": 14, "type_proto": [14, 463, 466], "test_one_attribut": 14, "f": [14, 26, 46, 54, 76, 77, 78, 88, 94, 95, 110, 111, 112, 116, 142, 143, 191, 199, 200, 201, 463, 473, 478, 481], "test_attribute_has_": 14, "_fals": 14, "_true": 14, "tensor_valu": [14, 31, 463, 469], "make_tensor": [14, 30, 31, 83, 466, 481], "const_tensor": [14, 30, 83], "data_typ": [14, 30, 83, 463, 466, 481], "tensorproto": [14, 17, 19, 20, 21, 30, 31, 51, 65, 66, 70, 71, 83, 94, 107, 108, 117, 118, 119, 120, 140, 151, 465, 466, 468, 470, 473, 478, 481], "val": [14, 30, 83, 466], "parser": [14, 468, 481], "parse_graph": 14, "agraph": [14, 481], "make_sparse_tensor": [14, 466, 481], "7": [14, 24, 26, 28, 32, 33, 34, 37, 55, 56, 57, 59, 61, 64, 73, 87, 89, 91, 97, 105, 111, 113, 123, 124, 130, 131, 132, 135, 136, 138, 143, 149, 159, 164, 165, 174, 177, 179, 183, 204, 206, 207, 469, 477, 478, 481], "9": [14, 15, 24, 26, 28, 32, 33, 34, 37, 39, 44, 54, 55, 56, 59, 61, 64, 76, 87, 89, 102, 112, 113, 116, 121, 123, 124, 130, 131, 132, 135, 136, 138, 143, 149, 164, 165, 167, 171, 177, 179, 204, 207, 469, 478, 479, 481], "make_tensor_type_proto": [14, 20, 21, 70, 71, 83, 107, 108, 151, 466, 481], "consum": [15, 32, 33, 34, 40, 54, 59, 60, 61, 76, 83, 85, 89, 90, 113, 114, 115, 116, 137, 460, 479], "averag": [15, 59, 89, 101, 135, 201, 204], "pool": [15, 59, 60, 61, 85, 89, 90, 91, 137, 174], "across": [15, 16, 59, 60, 61, 75, 83, 85, 89, 90, 137, 140, 201], "accord": [15, 85, 89, 94, 99, 169, 178, 465, 481], "kernel": [15, 32, 33, 34, 59, 60, 61, 85, 89, 91, 113, 197, 198], "stride": [15, 26, 32, 33, 34, 85, 89, 91, 113, 159, 478], "length": [15, 19, 27, 32, 33, 34, 38, 54, 65, 66, 76, 85, 89, 113, 116, 135, 136, 139, 140, 150, 151, 159, 165, 166, 174, 176, 187, 188, 189, 191, 194, 199, 200, 201, 465], "consist": [15, 56, 83, 85, 89, 140, 179, 462, 463, 467, 481], "downsampl": [15, 85, 89, 135], "further": [15, 21, 85, 89, 169, 481], "process": [15, 37, 85, 89, 140, 151, 180, 191, 478, 481], "spatial": [15, 16, 26, 32, 33, 34, 39, 59, 60, 61, 64, 85, 89, 90, 91, 113, 137, 164], "output_spatial_shap": [15, 89], "input_spatial_shap": [15, 89], "pad_shap": [15, 89], "kernel_spatial_shap": [15, 89], "strides_spatial_shap": [15, 89], "ceil_mod": [15, 89], "auto_pad": [15, 32, 33, 34, 85, 89, 91, 113], "deprec": [15, 85, 89, 141, 182, 479], "you": [15, 50, 71, 83, 89, 203, 206, 478, 481], "them": [15, 50, 55, 89, 138, 159, 174, 204, 463, 468, 478, 479, 481], "current": [15, 64, 89, 140, 203, 206, 473, 478], "valid": [15, 32, 33, 34, 51, 85, 89, 113, 118, 120, 135, 169, 470, 479, 481], "same_upp": [15, 32, 33, 34, 85, 89, 113], "same_low": [15, 32, 33, 34, 85, 89, 113], "window": [15, 19, 24, 38, 65, 66, 89, 139, 479], "divid": [15, 32, 33, 34, 92, 101, 113, 161, 203, 204], "number": [15, 16, 17, 20, 26, 32, 33, 34, 45, 54, 57, 59, 60, 61, 64, 71, 72, 75, 76, 83, 85, 89, 90, 91, 94, 99, 102, 105, 111, 113, 116, 121, 134, 135, 137, 139, 140, 145, 148, 149, 150, 151, 158, 159, 161, 166, 174, 176, 177, 179, 181, 182, 194, 198, 201, 203, 204, 206, 466, 478, 479, 481], "exclud": [15, 37, 89, 179], "count_include_pad": 15, "zero": [15, 16, 20, 21, 24, 31, 32, 33, 34, 38, 40, 41, 43, 44, 51, 54, 58, 64, 72, 75, 76, 77, 87, 91, 94, 97, 99, 101, 103, 113, 114, 115, 116, 134, 140, 141, 142, 151, 161, 165, 174, 179, 189, 195, 196, 197, 198, 200, 201, 203, 204, 206, 463, 481], "must": [15, 16, 19, 20, 25, 28, 29, 30, 31, 32, 33, 34, 37, 40, 45, 50, 51, 52, 54, 57, 65, 66, 69, 71, 76, 77, 82, 83, 85, 87, 88, 89, 91, 92, 94, 95, 97, 105, 110, 113, 114, 115, 116, 117, 118, 119, 120, 135, 136, 139, 140, 143, 145, 146, 148, 149, 150, 151, 159, 160, 165, 166, 171, 174, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 463, 466, 470, 473, 478, 479, 481], "notset": [15, 32, 33, 34, 85, 89, 113], "explicit": [15, 32, 33, 34, 45, 85, 89, 113, 478], "so": [15, 18, 24, 32, 33, 34, 43, 73, 85, 89, 91, 110, 113, 135, 136, 159, 174, 192, 203, 204, 479], "output_shap": [15, 32, 33, 34, 57, 85, 89, 91, 113], "input_shap": [15, 32, 33, 34, 85, 89, 113], "between": [15, 16, 20, 25, 28, 32, 33, 34, 38, 40, 43, 45, 54, 57, 58, 71, 76, 77, 83, 85, 87, 88, 89, 91, 92, 95, 101, 102, 106, 108, 111, 113, 115, 116, 131, 135, 139, 140, 146, 148, 149, 151, 159, 161, 165, 166, 168, 171, 174, 179, 180, 188, 190, 203, 204, 205, 206, 478, 481], "almost": [15, 32, 33, 34, 85, 89, 113, 479, 481], "depend": [15, 16, 32, 33, 34, 43, 57, 77, 83, 85, 89, 97, 113, 135, 140, 143, 159, 169, 183, 188, 191, 192, 197, 200, 463, 478, 481], "even": [15, 17, 24, 32, 33, 34, 44, 85, 89, 113, 114, 115, 138, 192, 467, 478, 481], "odd": [15, 32, 33, 34, 85, 89, 113], "In": [15, 20, 27, 32, 33, 34, 37, 39, 40, 45, 69, 71, 82, 83, 85, 89, 91, 94, 97, 105, 113, 134, 135, 138, 142, 143, 160, 166, 174, 191, 193, 195, 203, 206, 461, 463, 478, 481], "case": [15, 16, 20, 27, 32, 33, 34, 40, 43, 44, 45, 56, 59, 60, 61, 69, 72, 75, 77, 82, 85, 89, 90, 91, 97, 101, 105, 107, 113, 134, 135, 138, 141, 142, 143, 152, 160, 161, 169, 193, 199, 203, 461, 463, 466, 467, 478, 479, 481], "extra": [15, 16, 32, 33, 34, 85, 89, 113, 140, 196, 464], "ad": [15, 26, 32, 33, 34, 54, 76, 85, 89, 91, 105, 111, 113, 116, 152, 153, 159, 200, 201, 464, 474, 478, 481], "begin": [15, 26, 32, 33, 34, 45, 85, 89, 91, 111, 113, 121, 463], "pixel": [15, 26, 32, 33, 34, 64, 85, 89, 91, 111, 113, 135, 137], "edg": [15, 94, 111, 464], "count": [15, 24, 27, 28, 34, 37, 40, 52, 55, 56, 69, 77, 82, 83, 105, 111, 115, 135, 140, 141, 142, 145, 148, 149, 152, 159, 160, 165, 166, 168, 174, 177, 180, 181, 196, 199, 203, 204, 206, 464], "kernel_shap": [15, 32, 33, 34, 85, 89, 91, 113], "requir": [15, 16, 18, 20, 26, 28, 29, 30, 39, 45, 58, 71, 75, 77, 83, 85, 89, 90, 91, 105, 111, 117, 119, 134, 140, 151, 159, 164, 174, 177, 181, 182, 193, 200, 203, 204, 205, 206, 466, 478, 479, 481], "repres": [15, 20, 24, 26, 32, 33, 34, 38, 45, 57, 64, 71, 85, 89, 91, 99, 102, 105, 113, 139, 140, 159, 187, 205, 463, 464, 467, 478, 481], "part": [15, 26, 32, 33, 34, 38, 85, 89, 91, 105, 113, 165, 166, 179, 203, 463, 478, 479, 481], "correspond": [15, 18, 19, 26, 32, 33, 34, 38, 45, 50, 54, 57, 64, 65, 66, 69, 71, 76, 82, 85, 89, 91, 94, 99, 102, 111, 113, 116, 134, 135, 137, 140, 141, 142, 143, 159, 160, 174, 177, 179, 180, 181, 189, 195, 202, 203, 204, 461, 463, 466, 478], "x1_begin": [15, 26, 32, 33, 34, 85, 89, 91, 111, 113], "x2_begin": [15, 26, 32, 33, 34, 85, 89, 91, 111, 113], "x1_end": [15, 26, 32, 33, 34, 85, 89, 91, 111, 113], "x2_end": [15, 26, 32, 33, 34, 85, 89, 91, 111, 113], "xi_begin": [15, 26, 32, 33, 34, 85, 89, 91, 111, 113], "xi_end": [15, 26, 32, 33, 34, 85, 89, 91, 111, 113], "cannot": [15, 32, 33, 34, 71, 83, 85, 89, 91, 108, 113, 151, 159, 174, 187, 189, 205, 478, 481], "simultan": [15, 32, 33, 34, 85, 89, 91, 113], "present": [15, 16, 26, 32, 33, 34, 43, 54, 58, 71, 76, 85, 89, 91, 113, 116, 159, 174, 180, 189, 196, 463, 464], "previou": [15, 16, 32, 33, 34, 54, 59, 60, 61, 72, 75, 76, 83, 85, 89, 90, 113, 116, 137, 206, 468, 478, 479, 481], "imag": [15, 16, 26, 32, 33, 34, 38, 59, 60, 61, 72, 75, 85, 89, 90, 91, 113, 135, 137, 139, 463, 478, 481], "n": [15, 16, 26, 32, 33, 34, 38, 39, 40, 57, 58, 59, 60, 61, 64, 69, 71, 72, 75, 82, 83, 85, 86, 87, 89, 90, 91, 101, 103, 113, 114, 115, 135, 137, 140, 145, 148, 149, 151, 159, 160, 161, 164, 174, 179, 180, 182, 188, 191, 193, 194, 195, 197, 198, 199, 200, 201, 463, 479, 481], "h": [15, 16, 32, 33, 34, 39, 54, 59, 60, 61, 64, 72, 75, 76, 85, 89, 90, 91, 113, 116, 137, 151, 164, 182, 203, 204, 205, 475, 479, 481], "w": [15, 16, 32, 33, 34, 38, 39, 54, 59, 60, 61, 64, 72, 75, 76, 77, 85, 89, 90, 91, 113, 116, 137, 139, 151, 161, 164, 182, 205, 475, 478, 481], "batch": [15, 16, 26, 32, 33, 34, 38, 39, 41, 54, 57, 59, 60, 61, 64, 69, 72, 75, 76, 82, 85, 89, 90, 91, 99, 102, 113, 116, 136, 137, 140, 160, 164, 179, 195, 464, 481], "channel": [15, 16, 26, 32, 33, 34, 39, 59, 60, 61, 64, 72, 75, 85, 89, 90, 91, 93, 110, 113, 137, 164], "height": [15, 16, 32, 33, 34, 39, 59, 60, 61, 64, 72, 75, 85, 89, 90, 91, 102, 113, 137, 164, 182], "width": [15, 16, 32, 33, 34, 39, 59, 60, 61, 64, 72, 75, 85, 89, 90, 91, 102, 113, 137, 164, 182, 191], "non": [15, 16, 17, 20, 24, 43, 58, 59, 60, 61, 72, 75, 85, 89, 91, 96, 103, 105, 106, 135, 140, 159, 168, 181, 205, 463, 465], "form": [15, 16, 41, 45, 57, 59, 60, 61, 72, 75, 85, 89, 91, 165, 166, 200, 205, 463, 481], "d1": [15, 16, 32, 33, 34, 59, 60, 61, 72, 75, 85, 87, 89, 91, 101, 113, 114, 161], "d2": [15, 16, 32, 33, 34, 59, 60, 61, 72, 75, 85, 87, 89, 91, 101, 113, 114, 161], "dn": [15, 16, 32, 33, 34, 52, 59, 60, 61, 72, 75, 85, 89, 91, 113, 463, 478], "denot": [15, 32, 33, 57, 75, 89, 91, 113, 135, 137, 140, 143, 161, 169, 174, 204, 205, 463], "effect": [15, 18, 32, 33, 75, 89, 91, 113, 135, 159, 174, 203, 463], "arriv": [15, 32, 33, 75, 89, 91, 113], "data_batch": [15, 32, 33, 75, 89, 91, 113], "data_channel": [15, 32, 33, 75, 89, 91, 113], "data_featur": [15, 32, 33, 75, 89, 91, 113], "vari": [15, 85, 89], "variou": [15, 85, 89], "_averagepool_2d_precomputed_pad": 15, "8": [15, 18, 20, 21, 24, 26, 28, 30, 32, 33, 34, 39, 40, 41, 44, 54, 56, 59, 61, 64, 73, 76, 83, 87, 91, 94, 97, 105, 113, 114, 115, 116, 121, 123, 124, 127, 129, 130, 131, 132, 135, 136, 138, 139, 143, 149, 159, 164, 165, 169, 174, 177, 179, 183, 189, 196, 204, 206, 207, 469, 477, 478, 481], "12": [15, 26, 28, 32, 33, 34, 37, 39, 54, 64, 87, 105, 113, 116, 123, 124, 128, 130, 131, 132, 134, 135, 136, 140, 143, 149, 164, 165, 170, 171, 174, 207, 468, 469, 478, 481], "13": [15, 26, 32, 34, 54, 64, 87, 89, 91, 113, 114, 116, 136, 207, 469, 477, 478, 481], "14": [15, 20, 26, 28, 32, 34, 39, 58, 64, 89, 131, 135, 136, 143, 164, 207, 469, 477, 478, 481], "15": [15, 24, 26, 28, 32, 33, 34, 37, 54, 64, 89, 91, 113, 116, 123, 135, 136, 143, 164, 207, 469, 478, 479, 481], "16": [15, 18, 26, 28, 32, 33, 34, 54, 89, 94, 116, 124, 135, 139, 164, 207, 469, 478, 479, 481], "17": [15, 26, 32, 33, 34, 54, 89, 116, 143, 164, 174, 207, 469], "18": [15, 32, 34, 39, 54, 89, 98, 113, 116, 128, 164, 207, 468, 478, 481], "19": [15, 26, 32, 34, 39, 89, 123, 164], "20": [15, 24, 26, 32, 34, 39, 89, 115, 126, 127, 128, 129, 131, 132, 143, 151, 159, 164, 481], "21": [15, 26, 32, 34, 39, 89, 113, 164, 481], "22": [15, 26, 32, 34, 39, 89, 131, 164], "23": [15, 26, 32, 34, 39, 89, 113, 123, 164, 481], "25": [15, 26, 32, 34, 58, 65, 89, 112, 113, 122, 124, 128, 135], "test_averagepool_2d_precomputed_pad": 15, "_averagepool_2d_precomputed_pads_count_include_pad": 15, "5200": 15, "6000": [15, 64], "8000": [15, 64], "0800": 15, "2400": [15, 481], "5600": 15, "4000": [15, 64], "0400": 15, "2000": [15, 64], "0000": [15, 64], "9600": 15, "9200": 15, "1200": 15, "8800": 15, "8400": 15, "test_averagepool_2d_precomputed_pads_count_include_pad": 15, "_averagepool_2d_precomputed_strid": 15, "test_averagepool_2d_precomputed_strid": 15, "_averagepool_2d_precomputed_same_upp": 15, "test_averagepool_2d_precomputed_same_upp": 15, "_averagepool_1d_default": 15, "32": [15, 18, 20, 26, 32, 33, 34, 39, 40, 48, 77, 87, 89, 112, 113, 114, 115, 143, 478], "31": [15, 26, 32, 34, 39, 89], "x_shape": [15, 89], "out_shap": [15, 89], "get_output_shap": [15, 89], "avg": [15, 137], "test_averagepool_1d_default": 15, "_averagepool_2d_default": 15, "test_averagepool_2d_default": 15, "_averagepool_3d_default": 15, "test_averagepool_3d_default": 15, "_averagepool_2d_same_upp": 15, "get_pad_shap": [15, 89], "pad_top": [15, 89], "pad_bottom": [15, 89], "pad_left": [15, 89], "pad_right": [15, 89], "mode": [15, 16, 39, 43, 45, 64, 83, 89, 111, 135, 137, 174, 182, 195, 201, 205, 206], "constant_valu": [15, 89, 111], "nan": [15, 20, 21, 73, 74, 89, 167, 191, 192, 200, 201], "test_averagepool_2d_same_upp": 15, "_averagepool_2d_same_low": 15, "test_averagepool_2d_same_low": 15, "_averagepool_2d_pad": 15, "28": [15, 26, 32, 33, 34, 39, 89, 174], "30": [15, 26, 32, 34, 39, 89, 97, 126, 127, 128, 129, 151], "test_averagepool_2d_pad": 15, "_averagepool_2d_pads_count_include_pad": 15, "test_averagepool_2d_pads_count_include_pad": 15, "_averagepool_2d_strid": 15, "test_averagepool_2d_strid": 15, "_averagepool_2d_ceil": 15, "test_averagepool_2d_ceil": 15, "carri": [16, 72, 83, 140], "describ": [16, 19, 65, 66, 69, 72, 77, 82, 83, 135, 137, 160, 206, 460, 461, 463, 468, 473, 478, 479, 480, 481], "paper": [16, 19, 65, 66, 72, 75, 137, 203], "arxiv": [16, 64, 72, 137], "org": [16, 19, 26, 27, 58, 64, 65, 66, 72, 86, 87, 101, 103, 114, 115, 135, 137, 159, 180, 183, 203, 478], "1502": 16, "03167": 16, "being": [16, 27, 43, 64, 83, 97, 101, 102, 135, 191, 204, 481], "There": [16, 20, 57, 83, 195, 200, 201, 202, 478, 479, 481], "five": [16, 479], "scale": [16, 40, 43, 44, 54, 72, 75, 76, 77, 90, 94, 113, 114, 115, 116, 117, 118, 135, 137, 144, 174, 182, 199, 206], "input_mean": 16, "input_var": 16, "note": [16, 20, 26, 32, 33, 34, 38, 43, 54, 76, 83, 85, 102, 113, 116, 135, 139, 140, 143, 152, 174, 203, 204, 205, 465, 476], "estim": [16, 197, 203, 481], "statist": [16, 479], "training_mod": [16, 43], "train": [16, 43, 77, 174, 460, 463, 469, 478, 481], "we": [16, 17, 20, 43, 69, 82, 83, 99, 117, 118, 119, 120, 160, 166, 174, 180, 196, 203, 205, 206, 466, 475, 481], "running_mean": 16, "running_var": 16, "invalid": [16, 474, 479], "updat": [16, 54, 140, 141, 142, 143, 203, 204, 206, 463, 475, 478], "current_mean": 16, "current_var": 16, "epsilon": [16, 72, 77, 203, 204], "all_except_channel_index": 16, "reducevar": 16, "notic": [16, 192], "refer": [16, 24, 27, 64, 77, 83, 86, 87, 103, 111, 114, 115, 135, 140, 159, 180, 183, 203, 460, 463, 481], "popul": [16, 51], "varianc": [16, 72, 77, 93, 199], "sqrd": 16, "x_i": [16, 478, 481], "x_avg": 16, "formula": [16, 23, 26, 40, 44, 93, 94, 96, 114, 115, 153, 195], "doe": [16, 34, 43, 50, 69, 82, 101, 107, 140, 143, 160, 161, 169, 180, 181, 461, 465, 473, 478, 479, 481], "avoid": [16, 72, 77, 137, 203, 204, 478, 481], "overflow": [16, 33, 87, 114], "depreci": 16, "implementor": 16, "suggest": 16, "befor": [16, 26, 27, 54, 58, 105, 159, 180, 464, 473, 481], "op": [16, 39, 51, 83, 91, 108, 131, 140, 142, 143, 164, 182, 481], "ir": [16, 43, 54, 58, 76, 116, 464, 466, 481], "about": [16, 43, 54, 57, 58, 76, 116, 473, 479, 481], "represent": [16, 18, 20, 43, 54, 58, 76, 105, 116, 174, 191], "empti": [16, 25, 31, 41, 43, 54, 58, 71, 76, 83, 106, 107, 108, 111, 116, 131, 134, 135, 139, 140, 145, 147, 148, 149, 150, 166, 169, 205, 463, 464, 466, 470, 478, 481], "mai": [16, 17, 20, 33, 43, 45, 54, 58, 71, 76, 87, 101, 114, 116, 135, 140, 161, 174, 191, 192, 200, 201, 203, 463, 478, 479, 481], "place": [16, 43, 54, 58, 76, 116, 196, 465], "actual": [16, 18, 43, 54, 58, 76, 77, 83, 116, 134], "miss": [16, 43, 54, 58, 76, 116, 191, 200, 478, 479, 481], "trail": [16, 43, 54, 58, 76, 116, 143], "those": [16, 43, 54, 58, 76, 105, 116, 135, 203, 204, 464, 478], "simpli": [16, 43, 54, 58, 76, 116, 474], "omit": [16, 43, 54, 58, 76, 83, 116, 137, 140, 152, 159, 200, 201, 205, 463], "divis": [16, 42, 72, 77, 166], "factor": [16, 90, 115, 135, 137, 203, 206], "g": [16, 20, 32, 41, 54, 76, 83, 94, 116, 137, 203, 204, 206, 461, 463, 476, 481], "would": [16, 18, 20, 26, 31, 37, 43, 131, 169, 174, 192, 203, 204, 206, 478, 481], "everi": [16, 45, 135, 140, 196, 463, 465, 466, 468, 473, 478, 479, 481], "over": [16, 45, 60, 75, 83, 85, 90, 102, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 139, 140, 478, 481], "becom": [16, 64, 174, 206, 481], "singl": [16, 28, 29, 102, 140, 143, 168, 177, 179, 181, 196, 203, 464, 478, 481], "bia": [16, 32, 34, 54, 72, 75, 76, 77, 113, 116, 140, 153, 463, 478, 481], "t2": [16, 17, 19, 20, 21, 31, 33, 37, 38, 43, 44, 51, 64, 65, 66, 73, 74, 87, 91, 94, 99, 105, 113, 114, 115, 118, 120, 135, 137, 139, 140, 187, 188, 189, 192, 193, 197, 200, 203, 204, 205, 206], "u": [16, 45, 57, 77], "allow": [16, 20, 50, 77, 78, 110, 137, 140, 142, 143, 183, 205, 478, 481], "var": [16, 77], "saved_mean": 16, "saved_var": 16, "save": [16, 77, 174, 465, 475, 476, 478, 481], "dure": [16, 43, 77, 89], "speed": [16, 77], "up": [16, 38, 52, 77, 83, 121, 135, 140, 141, 174, 189, 192, 463, 479], "per": [16, 33, 40, 44, 72, 87, 94, 102, 113, 114, 115, 191, 193, 194, 197, 198, 203, 479], "activ": [16, 54, 76, 96, 116, 478], "featur": [16, 32, 33, 34, 113, 137, 191, 196, 199, 200, 201, 478, 479, 481], "mini": 16, "1e": [16, 20, 72, 77, 93, 203, 204], "5f": [16, 72], "is_test": [16, 43], "9f": 16, "dimension": [16, 26, 57, 69, 72, 82, 86, 87, 114, 140, 143, 160, 161, 168, 181], "nchw": [16, 72], "draw": 17, "distribut": [17, 99, 117, 118, 119, 120], "contain": [17, 26, 30, 32, 33, 34, 41, 43, 45, 57, 69, 82, 91, 94, 101, 105, 106, 108, 111, 113, 121, 136, 146, 149, 150, 151, 152, 160, 166, 174, 177, 179, 180, 181, 197, 198, 205, 206, 461, 463, 465, 466, 473, 478, 479, 481], "probabl": [17, 99, 101, 161, 197], "p": [17, 60, 76, 84, 85, 161, 481], "determinist": 17, "differ": [17, 20, 50, 71, 77, 83, 103, 110, 135, 136, 205, 206, 463, 478, 479, 481], "seed": [17, 43, 99, 101, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 132], "gener": [17, 19, 20, 21, 26, 27, 31, 34, 43, 51, 58, 64, 65, 66, 83, 86, 87, 91, 94, 99, 102, 103, 111, 114, 117, 118, 119, 120, 121, 135, 140, 174, 180, 183, 194, 203, 205, 478, 479, 481], "auto": [17, 34, 43, 91, 99, 117, 118, 119, 120, 205], "onli": [17, 26, 32, 33, 34, 37, 38, 44, 51, 64, 71, 84, 85, 87, 94, 105, 111, 114, 135, 139, 140, 153, 166, 169, 174, 187, 188, 189, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 463, 465, 473, 478, 479, 481], "_bernoulli_without_dtyp": 17, "bernoulli_reference_implement": 17, "test_bernoulli": 17, "_bernoulli_with_dtyp": 17, "float64": [17, 37, 51, 97, 469, 479, 481], "test_bernoulli_doubl": 17, "_bernoulli_with_se": 17, "test_bernoulli_se": 17, "bitwis": 18, "shift": [18, 77, 137], "direct": [18, 37, 54, 76, 116, 140, 203, 204, 206, 463], "move": [18, 39, 164, 203, 204, 480], "toward": 18, "decreas": 18, "bit": [18, 20, 33, 40, 44, 77, 87, 89, 113, 114, 115, 127, 129, 192, 203, 204, 206, 478], "increas": [18, 26, 201, 203, 463, 478], "anoth": [18, 26, 71, 140, 191, 192, 205, 478, 479, 481], "amount": [18, 34], "becaus": [18, 20, 26, 38, 69, 82, 91, 139, 140, 160, 203, 204, 481], "necessarili": [18, 174], "_right_unit8": 18, "test_bitshift_right_uint8": 18, "_right_unit16": 18, "test_bitshift_right_uint16": 18, "_right_unit32": 18, "test_bitshift_right_uint32": 18, "_right_unit64": 18, "test_bitshift_right_uint64": 18, "_left_unit8": 18, "test_bitshift_left_uint8": 18, "_left_unit16": 18, "test_bitshift_left_uint16": 18, "_left_unit32": 18, "test_bitshift_left_uint32": 18, "_left_unit64": 18, "test_bitshift_left_uint64": 18, "blackman": 19, "ieeexplor": [19, 65, 66, 135], "ieee": [19, 65, 66, 135], "1455106": [19, 65, 66], "output_datatyp": [19, 65, 66, 94], "strictli": [19, 20, 65, 66, 94], "datatyp": [19, 20, 31, 51, 65, 66, 94, 117, 118, 119, 120, 153, 470], "enum": [19, 20, 51, 65, 66, 94, 117, 118, 119, 120, 169, 201], "whose": [19, 25, 65, 66, 94, 136, 161, 174], "period": [19, 65, 66], "symmetr": [19, 65, 66], "hann": [19, 65, 66], "int64_t": [19, 38, 65, 66, 139], "a0": [19, 65, 66, 139], "42": [19, 26, 34, 113, 481], "a1": [19, 65, 66, 139], "a2": 19, "08": [19, 130], "1415": [19, 65, 66, 139], "arang": [19, 38, 41, 50, 55, 65, 66, 94, 97, 112, 123, 124, 139, 153, 178, 180], "test_blackmanwindow": 19, "test_blackmanwindow_symmetr": 19, "convert": [20, 21, 43, 44, 134, 137, 187, 188, 189, 192, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 463, 465, 470, 477, 478, 480, 481], "field": [20, 51, 64, 117, 118, 119, 120, 200, 201, 463, 465, 466, 467, 474, 481], "messag": [20, 51, 117, 118, 119, 120, 463, 467, 468, 473], "plain": 20, "1000": [20, 64, 115, 159], "scientif": 20, "1e8": 20, "100": [20, 26, 38, 51, 102, 115, 132], "some": [20, 34, 50, 54, 57, 76, 116, 135, 142, 143, 191, 203, 204, 205, 463, 477, 478, 479, 480, 481], "liter": 20, "reserv": 20, "special": [20, 101, 203, 478, 479], "inf": [20, 21, 25, 46, 73, 78, 110, 133, 144, 175], "posit": [20, 56, 73, 105, 140, 141, 142, 143, 145, 148, 149, 151, 159, 166, 177, 179, 187, 481], "infin": [20, 73], "respect": [20, 25, 77, 102, 141, 174, 203, 204, 205], "exactli": [20, 30, 45, 105, 137, 476, 481], "insensit": 20, "wai": [20, 478, 479, 481], "map": [20, 32, 33, 34, 57, 73, 94, 113, 137, 140, 174, 180, 186, 187, 188, 189, 192, 202, 206, 463, 466, 468, 470, 478, 479, 481], "infinit": [20, 478], "similarli": [20, 26, 140, 200], "314": [20, 481], "15926": 20, "hello": 20, "world": 20, "undefin": [20, 24, 107, 111, 135, 140, 159, 177, 200, 201, 478, 481], "behavior": [20, 24, 29, 37, 97, 103, 107, 111, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 140, 159, 203, 204, 206], "arithmet": [20, 203, 204], "718": 20, "convers": [20, 466, 477, 479], "alwai": [20, 206], "user": [20, 43, 83, 135, 151, 159, 205, 461, 463, 467, 473, 478, 479], "awar": 20, "loss": [20, 101, 161, 205], "caus": [20, 34, 64, 91, 97], "64": [20, 26, 34, 39, 113, 143, 203, 204, 206], "1415926459": 20, "141592": 20, "36": [20, 26, 34, 39, 174], "truncat": [20, 174], "store": [20, 174, 204, 463, 465, 466, 473, 478, 481], "target": [20, 101, 135, 141, 142, 161, 194, 198, 201, 205, 463, 477], "among": [20, 479, 481], "oor": 20, "fix": [20, 45, 478, 479], "els": [20, 21, 34, 51, 52, 54, 58, 69, 71, 76, 77, 82, 94, 108, 116, 131, 149, 160, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 478, 481], "uint": 20, "discard": [20, 27], "higher": [20, 34, 179], "reinterpret": 20, "complement": 20, "200": [20, 40, 481], "56": [20, 26, 34, 39, 87, 113, 481], "complex": [20, 21, 38, 51, 139, 470, 478, 479, 481], "test_cas": [20, 21, 28, 134, 149], "from_typ": [20, 21], "to_typ": [20, 21], "np_fp32": [20, 21], "47892547": [20, 21], "48033667": [20, 21], "49968487": [20, 21], "81910545": [20, 21], "47031248": [20, 21], "816468": [20, 21], "21087195": [20, 21], "7229038": [20, 21], "little_endisan": [20, 21], "sy": [20, 21], "byteord": [20, 21], "littl": [20, 21], "np_uint16_view": [20, 21], "view": [20, 21, 203, 205, 206, 478], "np_bfp16": [20, 21], "assert": [20, 21, 57], "bfloat": [20, 21, 183], "np_fp32_zero": [20, 21], "np_fp32_from_bfloat": [20, 21], "elif": [20, 21], "random_sampl": [20, 21, 52, 134, 164, 178], "tensor_type_to_np_typ": [20, 21, 481], "getattr": [20, 21, 478, 481], "give": [20, 21, 91, 478, 479, 481], "object": [20, 21, 169, 463, 465, 466, 468, 470, 473, 481], "script": [20, 21, 64, 478], "ss": [20, 21], "encod": [20, 21, 101, 140, 195, 196, 463, 464, 478], "utf": [20, 21, 30, 169, 174], "su": [20, 21], "decod": [20, 21, 201], "append": [20, 21, 140, 481], "test_cast_": 20, "_to_": [20, 21], "target_typ": 21, "like": [21, 27, 69, 82, 86, 87, 97, 114, 140, 160, 183, 463, 473, 478, 479, 481], "test_castlike_": 21, "test_ceil_exampl": 22, "test_ceil": 22, "continu": [23, 108, 190, 478], "differenti": [23, 205], "exponenti": [23, 49, 144, 160, 204], "linear": [23, 40, 54, 83, 91, 94, 96, 115, 133, 135, 144, 175, 182, 193, 194, 197, 198, 205, 478, 479, 480], "unit": [23, 77, 96, 144, 199, 479], "alpha": [23, 46, 54, 58, 67, 68, 75, 76, 78, 116, 144, 175, 204, 206, 478], "control": [23, 34, 174, 476, 481], "input_data": [23, 24, 93, 96], "8439683": [23, 93], "5665144": [23, 93], "05836735": [23, 93], "02916367": [23, 93], "12964272": [23, 93], "5060197": [23, 93], "79538304": [23, 93], "9411346": [23, 93], "9546573": [23, 93], "17730942": [23, 93], "46192095": [23, 93], "26480448": [23, 93], "6746842": [23, 93], "01665257": [23, 93], "62473077": [23, 93], "9240844": [23, 93], "9722341": [23, 93], "11965699": [23, 93], "41356155": [23, 93], "9129373": [23, 93], "59330076": [23, 93], "81929934": [23, 93], "7862604": [23, 93], "11799799": [23, 93], "69248444": [23, 93], "54119414": [23, 93], "07513223": [23, 93], "positive_input": 23, "maximum": [23, 25, 44, 69, 83, 88, 89, 102, 127, 140, 142, 143, 174], "negative_input": 23, "minimum": [23, 25, 44, 95, 129, 142, 143, 174, 466], "expected_output": [23, 57, 93, 96, 165], "test_celu": 23, "center": [24, 64, 94], "crop": 24, "ax": [24, 77, 83, 93, 111, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 152, 159, 168, 178, 181, 185, 478, 479, 481], "bigger": [24, 481], "extract": [24, 151, 159, 174, 467, 476, 479, 481], "back": [24, 26, 27, 28, 37, 40, 52, 55, 56, 69, 77, 82, 91, 105, 111, 115, 135, 140, 141, 142, 145, 148, 149, 152, 159, 160, 165, 166, 168, 177, 180, 181, 463, 464], "repeat": [24, 45, 76, 111, 135, 159, 176, 461, 463], "tind": [24, 55, 56, 101, 111, 141, 142, 159, 161], "d": [24, 26, 33, 37, 40, 41, 50, 54, 56, 57, 64, 69, 76, 77, 82, 87, 89, 90, 91, 111, 113, 114, 115, 116, 121, 135, 137, 141, 142, 159, 160, 161, 166, 173, 174, 177, 179, 180, 182, 187, 189, 190, 205, 475, 481], "output_data": 24, "complex128": [24, 26, 27, 28, 29, 30, 39, 50, 52, 55, 56, 57, 64, 70, 71, 83, 103, 105, 106, 107, 108, 111, 118, 120, 134, 135, 136, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 158, 159, 164, 165, 166, 168, 176, 178, 179, 180, 181, 182, 183, 205, 469, 478, 481], "complex64": [24, 26, 27, 28, 29, 30, 38, 39, 50, 52, 55, 56, 57, 64, 70, 71, 83, 103, 105, 106, 107, 108, 111, 118, 120, 134, 135, 136, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 158, 159, 164, 165, 166, 168, 176, 178, 179, 180, 181, 182, 183, 205, 466, 469, 478, 481], "_center_crop_pad_crop": 24, "diff": [24, 77], "uneven": 24, "test_center_crop_pad_crop": 24, "_center_crop_pad_pad": 24, "test_center_crop_pad_pad": 24, "_center_crop_pad_crop_and_pad": 24, "third": [24, 91, 180, 183], "stai": 24, "test_center_crop_pad_crop_and_pad": 24, "_center_crop_pad_crop_axes_hwc": 24, "test_center_crop_pad_crop_axes_hwc": 24, "_center_crop_pad_crop_axes_chw": 24, "test_center_crop_pad_crop_axes_chw": 24, "within": [25, 45, 55, 56, 57, 141, 142, 181, 191, 201, 478], "interv": [25, 102, 479], "thei": [25, 64, 94, 113, 114, 140, 152, 159, 180, 191, 197, 201, 203, 204, 463, 478, 479, 481], "numeric_limit": 25, "lowest": [25, 94], "under": [25, 473, 478], "replac": [25, 143, 191, 196, 481], "abov": [25, 54, 69, 76, 77, 82, 83, 101, 116, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 143, 160, 174, 179, 479], "min_val": 25, "max_val": 25, "test_clip_exampl": 25, "test_clip": 25, "test_clip_inbound": 25, "test_clip_outbound": 25, "test_clip_splitbound": 25, "_clip_default": 25, "test_clip_default_min": 25, "no_min": 25, "suppli": [25, 83, 102, 139, 140], "test_clip_default_max": 25, "no_max": 25, "test_clip_default_inbound": 25, "_clip_default_int8": 25, "iinfo": 25, "test_clip_default_int8_min": 25, "test_clip_default_int8_max": 25, "test_clip_default_int8_inbound": 25, "rearrang": [26, 39, 164], "column": [26, 39, 89, 114, 202, 481], "block": [26, 39, 164, 463, 478], "multidimension": [26, 478], "behav": [26, 27, 86, 87, 97, 103, 114, 183, 478], "pytorch": [26, 64, 101, 102, 135, 479], "fold": [26, 140], "stabl": [26, 101, 159], "torch": [26, 56, 64, 101, 141, 142, 479], "nn": [26, 64, 101], "html": [26, 27, 64, 86, 87, 101, 103, 114, 159, 180, 183], "multi": [26, 83], "dangel": 26, "unfoldnd": 26, "although": 26, "image_shap": 26, "look": [26, 189, 192, 478, 479, 481], "redund": 26, "could": [26, 33, 87, 113, 134, 151, 478, 479, 481], "convolut": [26, 32, 33, 34, 75, 113], "advanc": 26, "scenario": [26, 166, 478], "explain": [26, 479, 480], "aten": 26, "src": 26, "nativ": 26, "cpp": 26, "l10": 26, "dilat": [26, 32, 33, 34, 89, 113], "ari": 26, "product": [26, 33, 57, 58, 86, 87, 114, 130, 478, 479, 480], "block_shap": 26, "l": [26, 161, 205, 479], "enumer": 26, "lexicograph": 26, "order": [26, 38, 39, 54, 76, 83, 84, 89, 103, 111, 116, 143, 151, 177, 180, 181, 187, 190, 197, 198, 205, 463, 479], "h_img": 26, "w_img": 26, "dim_i1": 26, "dim_i2": 26, "dim_in": 26, "h_block": 26, "w_block": 26, "dim_b1": 26, "dim_b2": 26, "dim_bn": 26, "11": [26, 33, 43, 54, 64, 87, 116, 136, 164, 207, 469, 478, 479, 481], "test_col2im": 26, "_col2im_strid": 26, "test_col2im_strid": 26, "_col2im_pad": 26, "26": [26, 32, 34, 114], "41": [26, 34, 39, 113], "46": [26, 34, 39, 65], "51": [26, 32, 34, 114], "61": 26, "66": [26, 34, 39, 114, 481], "71": 26, "27": [26, 32, 34, 39, 112], "37": [26, 34, 39], "47": [26, 34, 39], "52": [26, 34, 113], "57": [26, 34, 39, 101, 128, 481], "62": 26, "67": [26, 34, 39, 113, 481], "72": [26, 32, 34, 143], "33": [26, 32, 34, 481], "38": [26, 34, 39, 87], "43": [26, 34, 113], "48": [26, 34, 39, 130], "53": [26, 34], "58": [26, 34, 39, 113], "63": [26, 32, 34, 39], "68": [26, 34, 39], "73": [26, 481], "29": [26, 32, 34, 39, 114, 481], "44": [26, 34, 87, 115, 481], "49": [26, 34, 39], "54": [26, 32, 34, 39], "59": [26, 34, 39, 40, 113], "69": [26, 113], "74": [26, 40, 132], "35": [26, 34, 58, 128, 130], "40": [26, 34, 39, 113, 126, 127, 128, 129, 151], "45": [26, 34, 39], "50": [26, 34, 39, 87, 115], "55": [26, 34, 39, 126, 127, 128, 129], "60": [26, 34, 112, 113, 114, 126, 127, 128, 129, 143], "65": [26, 39, 481], "70": [26, 481], "75": [26, 43, 75, 102, 135], "111": [26, 32, 34, 481], "114": [26, 34, 113, 114], "117": [26, 32, 34], "84": [26, 32, 40, 115, 143], "98": [26, 34, 87], "156": [26, 34], "159": [26, 34], "162": [26, 32, 34, 113, 115], "128": [26, 34, 40, 87, 113, 115, 139, 143], "201": [26, 481], "204": [26, 481], "207": [26, 32, 34, 481], "144": [26, 32, 34, 481], "test_col2im_pad": 26, "_col2im_dil": 26, "test_col2im_dil": 26, "_col2im_5d": 26, "76": [26, 34, 115], "81": [26, 32, 34, 113], "86": 26, "91": 26, "96": [26, 143], "101": [26, 102, 113], "106": [26, 34], "116": 26, "77": [26, 113, 481], "82": 26, "87": [26, 34, 40, 113, 481], "92": [26, 113], "97": 26, "102": [26, 34, 40, 113], "107": [26, 113], "112": [26, 32, 481], "78": [26, 34, 123, 131, 481], "83": [26, 87, 113], "88": [26, 34, 481], "93": [26, 32, 34, 113], "103": 26, "108": [26, 32, 34, 481], "113": [26, 34, 87, 114, 481], "118": [26, 114], "79": 26, "89": [26, 40, 113], "94": [26, 174, 204, 206], "99": [26, 32, 34, 40, 130], "104": [26, 34], "109": 26, "119": 26, "80": [26, 113], "85": [26, 34, 204, 206], "90": [26, 34, 481], "95": [26, 102, 113, 204, 206], "105": [26, 34, 143], "110": 26, "115": [26, 114], "120": [26, 34, 130, 481], "test_col2im_5d": 26, "condit": [27, 57, 71, 83, 103, 183, 478, 481], "evalu": [27, 45, 194, 478], "scipi": [27, 86, 87, 103, 114, 159, 180, 183, 479], "Its": [27, 56, 101, 135, 141, 142, 143, 174, 188, 197, 206], "exceed": 27, "_compress_0": 27, "print": [27, 50, 55, 56, 101, 105, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 141, 142, 177, 180, 463, 468, 473, 478, 481], "test_compress_0": 27, "_compress_1": 27, "test_compress_1": 27, "_compress_default_axi": 27, "test_compress_default_axi": 27, "_compress_negative_axi": 27, "test_compress_negative_axi": 27, "alon": [27, 191], "concaten": [28, 29, 54, 55, 76, 83, 116, 140, 143, 190, 203, 205, 206, 464, 478], "except": [28, 29, 83, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 151, 462, 469, 477, 481], "2147483647": [28, 45, 71, 83, 88, 92, 95, 140, 146, 151, 165, 171, 190, 203, 204, 205, 206], "variad": [28, 45, 71, 83, 88, 92, 95, 140, 146, 151, 165, 171, 190, 203, 204, 205, 206], "concat_result": [28, 29], "dict": [28, 461, 466, 467, 469, 470, 475, 481], "values_": [28, 192], "item": [28, 108, 134, 149, 174, 189, 478, 481], "asarrai": [28, 180], "in_arg": 28, "k": [28, 51, 55, 56, 58, 69, 82, 83, 87, 101, 105, 114, 135, 140, 143, 151, 160, 161, 177, 179, 481], "test_concat_": 28, "_axis_": 28, "_axis_negative_": 28, "new_axi": 29, "similar": [29, 50, 56, 97, 103, 111, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 140, 141, 142, 159, 178, 478, 479], "stack": [29, 38, 139], "insert": [29, 105, 111, 149, 181, 189, 205, 464, 478, 481], "new": [29, 134, 140, 149, 203, 204, 206, 468, 478, 479, 481], "do": [29, 37, 45, 58, 64, 83, 89, 91, 97, 115, 161, 177, 193, 200, 201, 205, 478, 479, 481], "input_sequ": [29, 145, 148, 149, 150, 151], "seq": [29, 70, 71, 83, 106, 107, 108, 145, 146, 147, 148, 149, 150, 151, 166, 202], "sparse_valu": 30, "value_": [30, 192], "spars": [30, 174, 187, 463, 464, 473, 481], "sole": 30, "test_const": 30, "taken": [31, 134], "_float_on": 31, "test_constantofshape_float_on": 31, "_int32_zero": 31, "test_constantofshape_int_zero": 31, "_int32_shape_zero": 31, "test_constantofshape_int_shape_zero": 31, "filter": [32, 33, 34, 89, 102, 113, 135, 463, 467], "group": [32, 33, 34, 113, 481], "layer": [32, 33, 34, 40, 44, 54, 69, 76, 77, 82, 83, 113, 115, 116, 160, 463, 478, 479], "weight": [32, 33, 34, 54, 76, 94, 101, 113, 116, 135, 140, 161, 174, 193, 194, 200, 201], "m": [32, 33, 34, 38, 41, 58, 83, 87, 94, 113, 114, 139, 140, 151, 179, 194, 463, 478, 481], "kh": [32, 33, 34, 113], "kw": [32, 33, 34, 113], "k1": [32, 33, 34, 113], "k2": [32, 33, 34, 113], "kn": [32, 33, 34, 113], "filter_out_channel": [32, 33, 113], "filter_in_channel": [32, 33, 113], "filter_spati": [32, 33, 113], "other": [32, 33, 37, 45, 59, 60, 61, 69, 73, 105, 113, 136, 140, 151, 179, 186, 191, 195, 203, 204, 205, 206, 473, 480, 481], "word": [32, 33, 113, 169, 174, 191, 195], "multipli": [32, 54, 58, 86, 87, 94, 114, 199, 479, 481], "node_with_pad": 32, "y_with_pad": 32, "153": [32, 44, 113], "123": [32, 34, 83, 113], "test_basic_conv_with_pad": 32, "without": [32, 33, 69, 82, 160, 200, 201, 478, 479, 481], "node_without_pad": 32, "y_without_pad": 32, "test_basic_conv_without_pad": 32, "_conv_with_strid": 32, "198": [32, 34], "141": [32, 34, 113], "177": 32, "124": [32, 113], "test_conv_with_strides_pad": 32, "234": [32, 34, 113, 481], "252": [32, 115, 481], "test_conv_with_strides_no_pad": 32, "nxcxhxw": 32, "node_with_asymmetric_pad": 32, "y_with_asymmetric_pad": 32, "189": [32, 34], "171": [32, 34], "183": 32, "test_conv_with_strides_and_asymmetric_pad": 32, "_conv_with_autopad_sam": 32, "test_conv_with_autopad_sam": 32, "never": [33, 87, 114, 478, 481], "accumul": [33, 83, 87, 114, 140, 203, 204, 206], "ofpixel": [33, 113], "defaultsto": [33, 113], "x_zero_point": [33, 40, 113], "quantiz": [33, 40, 44, 87, 113, 114, 115, 137], "w_zero_point": [33, 113], "t3": [33, 87, 94, 105, 113, 114, 140, 203, 204, 206], "_without_pad": 33, "convinteger_nod": 33, "test_convinteger_without_pad": 33, "_with_pad": 33, "convinteger_node_with_pad": 33, "test_convinteger_with_pad": 33, "via": [34, 54, 76, 116, 143, 205], "equat": [34, 43, 45, 54, 56, 76, 77, 116, 135, 143], "input_s": [34, 54, 76, 116], "output_pad": 34, "start_i": 34, "end_i": 34, "explicitli": [34, 43, 69, 82, 85, 91, 111, 134, 135, 160], "total_pad": 34, "coordin": [34, 90, 93, 102, 135, 137, 174, 203, 463], "vector": [34, 38, 48, 54, 64, 69, 76, 82, 87, 111, 114, 116, 160, 161, 174, 189, 193, 194, 197, 198], "directli": [34, 137, 140, 463, 464, 468, 474], "affect": 34, "remov": [34, 102, 111, 137, 148, 168, 169, 199, 465, 481], "contribut": [34, 101, 135, 161], "particip": 34, "adj": 34, "adjust": [34, 44, 135, 159], "framework": [34, 85, 463, 478, 479], "ignor": [34, 40, 43, 83, 91, 101, 115, 161, 166, 174, 465], "test_convtranspos": 34, "_convtranspose_1d": 34, "test_convtranspose_1d": 34, "_convtranspose_3d": 34, "174": [34, 113], "186": [34, 113], "288": 34, "306": [34, 481], "324": [34, 481], "222": 34, "246": [34, 114], "378": 34, "396": 34, "414": 34, "282": 34, "184": 34, "294": 34, "208": [34, 114], "168": [34, 113, 114, 143], "135": 34, "276": [34, 481], "423": 34, "441": 34, "459": 34, "312": [34, 481], "225": [34, 481], "702": 34, "729": [34, 112], "756": 34, "513": 34, "261": [34, 481], "270": [34, 115, 481], "549": 34, "837": 34, "864": 34, "891": 34, "603": 34, "195": [34, 113], "621": 34, "639": 34, "432": 34, "219": 34, "213": [34, 113, 481], "333": [34, 481], "342": [34, 135, 481], "231": [34, 481], "122": [34, 481], "192": 34, "134": [34, 113], "130": [34, 115], "264": [34, 481], "402": 34, "426": 34, "146": 34, "210": [34, 481], "648": 34, "666": 34, "684": 34, "462": 34, "240": [34, 113, 481], "486": 34, "738": 34, "774": 34, "522": 34, "170": 34, "344": 34, "534": 34, "546": 34, "368": 34, "182": [34, 481], "194": 34, "126": [34, 113, 143], "129": [34, 113, 115], "172": [34, 113], "267": 34, "273": 34, "291": 34, "147": [34, 143, 481], "150": 34, "303": [34, 481], "468": 34, "477": 34, "321": 34, "212": [34, 113, 481], "327": [34, 481], "224": [34, 481], "test_convtranspose_3d": 34, "_convtranspose_attribut": 34, "test_convtranspose_output_shap": 34, "test_convtranspose_pad": 34, "test_convtranspose_kernel_shap": 34, "_convtranspose_pad": 34, "_convtranspose_dil": 34, "test_convtranspose_dil": 34, "_convtranspose_autopad_sam": 34, "test_convtranspose_autopad_sam": 34, "test_cos_exampl": 35, "test_co": 35, "54308069": 36, "test_cosh_exampl": 36, "test_cosh": 36, "cumul": 37, "inclus": [37, 57, 181], "copi": [37, 39, 43, 51, 70, 118, 120, 134, 136, 141, 142, 143, 145, 159, 164, 176, 190, 464, 479], "through": [37, 83, 137, 159, 174, 460, 478, 481], "exclus": [37, 52, 121, 152, 159], "summat": [37, 45], "opposit": 37, "revers": [37, 39, 54, 76, 116, 136, 140, 178, 205, 463, 478], "input_x": [37, 180], "top": [37, 94, 177, 200, 463, 481], "term": [37, 45, 94, 174], "j": [37, 56, 94, 105, 140, 141, 142, 478, 481], "th": [37, 77, 137, 140, 151, 174, 192, 204, 205], "_cumsum_1d": 37, "test_cumsum_1d": 37, "_cumsum_1d_exclus": 37, "test_cumsum_1d_exclus": 37, "_cumsum_1d_revers": 37, "test_cumsum_1d_revers": 37, "_cumsum_1d_reverse_exclus": 37, "test_cumsum_1d_reverse_exclus": 37, "_cumsum_2d_axis_0": 37, "test_cumsum_2d_axis_0": 37, "_cumsum_2d_axis_1": 37, "test_cumsum_2d_axis_1": 37, "_cumsum_2d_negative_axi": 37, "test_cumsum_2d_negative_axi": 37, "discret": 38, "fourier": [38, 139], "transform": [38, 39, 54, 64, 102, 135, 139, 174, 193, 194, 197, 198, 200, 201, 478, 479], "onesid": [38, 94, 139], "n_fft": [38, 139], "real": [38, 139], "satisfi": [38, 139], "conjug": [38, 139], "symmetri": [38, 139], "possibl": [38, 50, 71, 99, 139, 166, 205, 478, 479, 481], "fast": [38, 139], "rfft": [38, 139], "invok": [38, 139, 206], "batch_idx": 38, "signal_dim1": 38, "signal_dim2": 38, "signal_dimn": 38, "diment": [38, 190], "signal": [38, 94, 139], "final": [38, 77, 83, 134, 140, 159, 161, 200, 201, 206, 463, 479, 480, 481], "imaginari": [38, 139], "dft_length": [38, 94], "signal_dim": 38, "fft": [38, 139], "test_dft": 38, "test_dft_axi": 38, "ifft": 38, "test_dft_invers": 38, "permut": [39, 178, 481], "depth": [39, 105, 164], "specif": [39, 45, 141, 142, 143, 151, 164, 169, 174, 203, 204, 205, 206, 460, 463, 478, 479, 481], "dcr": 39, "row": [39, 87, 89, 91, 103, 114, 174, 195, 478, 481], "tmp": [39, 164], "blocksiz": [39, 164], "crd": 39, "re": [39, 71, 94, 467, 478, 481], "arrang": 39, "_default_mode_exampl": 39, "test_depthtospace_exampl": 39, "_crd_mode_exampl": 39, "test_depthtospace_crd_mode_exampl": 39, "dequant": 40, "full": [40, 115, 478], "x_scale": [40, 113], "suppos": 40, "de": 40, "255": [40, 44, 113, 114, 115, 481], "256": [40, 481], "250": [40, 481], "254": [40, 114, 115, 481], "test_dequantizelinear": 40, "_axi": [40, 115], "245": [40, 115, 481], "142": 40, "121": [40, 113], "196": [40, 113, 115], "test_dequantizelinear_axi": 40, "determin": [41, 56, 83, 121, 151, 174, 179, 192, 196, 205, 466], "squar": [41, 124, 132, 167, 203, 204, 206], "matrix": [41, 51, 52, 54, 58, 69, 76, 82, 84, 86, 87, 94, 114, 116, 160, 174, 179, 478, 479, 481], "matric": [41, 179, 478, 481], "inner": [41, 52, 83, 140], "most": [41, 55, 56, 64, 69, 82, 134, 141, 142, 143, 160, 478, 479, 481], "submatric": 41, "_2d": [41, 165], "linalg": 41, "test_det_2d": 41, "_nd": 41, "test_det_nd": 41, "test_div_exampl": 42, "test_div": 42, "test_div_uint8": 42, "_div_broadcast": 42, "test_div_bcast": 42, "ratio": [43, 135], "mask": [43, 137], "wa": [43, 83, 196, 203, 463, 478, 479, 481], "simpl": [43, 116, 140, 192, 461, 478, 479, 480], "typic": [43, 91, 140, 191], "henc": [43, 143], "unless": [43, 478, 479, 481], "mimic": 43, "noth": 43, "drop": [43, 169], "request": 43, "_default": [43, 54, 75, 76, 116, 175, 178], "test_dropout_default": 43, "_default_ratio": 43, "test_dropout_default_ratio": 43, "_default_mask": 43, "return_mask": 43, "test_dropout_default_mask": 43, "_default_mask_ratio": 43, "test_dropout_default_mask_ratio": 43, "_training_default": 43, "bool_": 43, "test_training_dropout_default": 43, "_training_default_ratio_mask": 43, "test_training_dropout_default_mask": 43, "_train": 43, "test_training_dropout": 43, "_training_ratio_mask": 43, "test_training_dropout_mask": 43, "_training_default_zero_ratio": 43, "test_training_dropout_zero_ratio": 43, "_training_default_zero_ratio_mask": 43, "test_training_dropout_zero_ratio_mask": 43, "old": [43, 479], "_default_old": 43, "test_dropout_default_old": 43, "make_opsetid": [43, 70, 71, 83, 140, 141, 182, 203, 204, 206, 466, 481], "_random_old": 43, "test_dropout_random_old": 43, "our": [43, 206], "phase": 43, "fill": [43, 57, 105, 111, 481], "fuse": [44, 481], "fp32": 44, "8bit": 44, "zeropoint": 44, "y_scale": [44, 113, 114, 115], "qmax": 44, "qmin": 44, "intermediate_zero_point": 44, "y_zero_point": [44, 113, 114, 115], "satur": [44, 114, 115], "itermediate_zero_point": 44, "127": [44, 113, 114, 115], "now": [44, 479, 481], "nearest": [44, 64, 114, 115, 135, 138, 182, 481], "ti": [44, 114, 115], "unsign": 44, "0196078438": 44, "x_min": 44, "x_max": 44, "y_zeropoint": 44, "test_dynamicquantizelinear": 44, "0156862754": 44, "test_dynamicquantizelinear_max_adjust": 44, "345": [44, 481], "test_dynamicquantizelinear_min_adjust": 44, "term1": 45, "term2": 45, "occur": [45, 180], "algebra": 45, "einstein": 45, "convent": 45, "comma": [45, 478], "separ": [45, 478], "lower": [45, 51, 94, 119, 120, 169, 177, 179], "letter": [45, 481], "charact": [45, 481], "classic": [45, 481], "implicitli": [45, 83], "alphabet": 45, "sort": [45, 177, 180, 478, 481], "ellipsi": 45, "implicit": [45, 478], "space": [45, 481], "0020": 45, "express": [45, 200, 201, 478, 481], "_einsum_transpos": 45, "eqn": 45, "ij": [45, 481], "ji": 45, "einsum_reference_implement": 45, "test_einsum_transpos": 45, "_einsum_sum": 45, "test_einsum_sum": 45, "_einsum_batch_diagon": 45, "ii": 45, "test_einsum_batch_diagon": 45, "_einsum_inner_prod": 45, "test_einsum_inner_prod": 45, "_einsum_batch_matmul": 45, "bij": 45, "bjk": 45, "bik": 45, "test_einsum_batch_matmul": 45, "coeffici": [46, 78, 135, 144, 193, 194, 197, 198, 203, 204, 206, 478, 479, 481], "2642411": 46, "test_elu_exampl": 46, "test_elu": 46, "_elu_default": 46, "default_alpha": [46, 67, 78, 144, 175], "test_elu_default": 46, "test_equ": 47, "_equal_broadcast": 47, "test_equal_bcast": 47, "integr": [47, 99, 145, 148, 149, 150, 166], "error": [48, 55, 56, 57, 69, 82, 83, 107, 135, 140, 141, 142, 145, 148, 149, 160, 168, 181, 474, 481], "math": [48, 75], "test_erf": 48, "36787945": 49, "71828175": 49, "test_exp_exampl": 49, "test_exp": 49, "align": [50, 137], "broadcast_to": 50, "major": [50, 89, 91, 103, 468, 479], "ndim": [50, 59, 61, 159, 176, 181], "want": [50, 64], "_dim_chang": 50, "new_shap": [50, 52], "prod": [50, 52, 123, 124, 130], "test_expand_dim_chang": 50, "_dim_unchang": 50, "test_expand_dim_unchang": 50, "diagon": [51, 83, 102, 179], "everywher": 51, "upper": [51, 119, 120, 121, 169, 179], "notspecifi": 51, "inform": [51, 91, 94, 118, 120, 159, 204, 463, 465, 473, 474, 478, 479, 481], "_without_dtyp": 51, "ey": 51, "test_eyelike_without_dtyp": 51, "_with_dtyp": 51, "test_eyelike_with_dtyp": 51, "_populate_off_main_diagon": 51, "off_diagonal_offset": 51, "test_eyelike_populate_off_main_diagon": 51, "d_0": 52, "d_1": [52, 101], "d_n": 52, "d_": 52, "d_axi": 52, "outer": [52, 55, 56, 140, 141, 142], "remain": [52, 134, 140, 143, 463, 464, 478, 481], "test_flatten_axi": 52, "_flatten_with_default_axi": 52, "test_flatten_default_axi": 52, "_flatten_negative_axi": 52, "test_flatten_negative_axi": 52, "test_floor_exampl": 53, "test_floor": 53, "usual": [54, 76, 116, 203, 205, 478, 479, 481], "custom": [54, 76, 116, 463, 478, 479, 481], "cudnn": [54, 76, 83, 116], "notat": [54, 76, 116, 140], "gate": [54, 76, 116], "reset": [54, 463], "hidden": [54, 76, 116, 140], "time": [54, 76, 83, 99, 116, 136, 139, 140, 174, 478, 479, 481], "step": [54, 76, 83, 116, 121, 139, 159, 463, 478, 479, 481], "zrh": 54, "recurr": [54, 76, 83, 116, 140], "wb": [54, 76, 473, 481], "rb": [54, 76, 473, 481], "backward": [54, 76, 116, 137, 140, 159, 479], "wbb": [54, 76], "rbb": [54, 76], "state": [54, 76, 83, 116, 140, 463], "num_direct": [54, 76, 116], "bidirect": [54, 76, 116, 140], "2x": [54, 76, 116], "affin": [54, 76, 116], "beta": [54, 58, 67, 68, 75, 76, 116, 204, 206, 478], "scaledtanh": [54, 76, 116], "zt": 54, "xt": [54, 76, 91, 116], "wz": 54, "ht": [54, 76, 116, 140], "rz": 54, "wbz": 54, "rbz": 54, "rt": 54, "wr": [54, 116], "rr": [54, 116], "wbr": 54, "rbr": 54, "wh": 54, "rh": 54, "rbh": 54, "wbh": 54, "linear_before_reset": 54, "activation_alpha": [54, 76, 116], "01": [54, 76, 78, 116, 206], "activation_beta": [54, 76, 116], "cell": [54, 76, 116, 140], "threshold": [54, 76, 102, 116, 175, 186, 200, 201, 465, 481], "bound": [54, 55, 56, 57, 64, 76, 83, 94, 102, 116, 141, 142, 145, 148, 149], "No": [54, 76, 116, 152, 169, 182], "forward": [54, 76, 116, 140, 159, 205], "hidden_s": [54, 76, 116], "neuron": [54, 76, 116], "layout": [54, 76, 116], "initial_h": [54, 76, 116], "y_h": [54, 76, 116, 140], "seq_length": [54, 76, 116], "batch_siz": [54, 69, 76, 82, 99, 116, 136, 139, 140, 160, 161], "pack": [54, 76, 116, 187], "potenti": [54, 76, 116], "sequence_len": [54, 76, 116, 136, 140], "initi": [54, 76, 83, 116, 140, 159, 203, 204, 461, 463, 464, 466, 473, 479, 480], "intermedi": [54, 76, 116, 140, 169, 180, 205, 478, 479, 481], "seq_len": [54, 76, 116], "weight_scal": [54, 76, 116], "number_of_g": [54, 76], "gru_help": 54, "test_gru_default": 54, "_initial_bia": [54, 76, 116], "custom_bia": [54, 76, 116], "w_b": [54, 76, 116], "r_b": [54, 76, 116], "test_gru_with_initial_bia": 54, "_seq_length": [54, 116], "test_gru_seq_length": 54, "_batchwis": [54, 76, 116], "test_gru_batchwis": 54, "output_sequ": [54, 76, 116, 146, 148, 149, 166], "q": [55, 57, 143, 479], "let": [55, 57, 77, 135, 143, 174, 192, 203, 204, 205, 206, 478, 481], "i_": 55, "Then": [55, 159, 479], "j_": 55, "_gather_0": 55, "test_gather_0": 55, "_gather_1": 55, "test_gather_1": 55, "_gather_2d_indic": 55, "test_gather_2d_indic": 55, "_gather_negative_indic": 55, "test_gather_negative_indic": 55, "identifi": [56, 140, 141, 142, 205, 463, 466, 478], "instanc": [56, 72, 141, 142, 463, 466, 475], "_gather_elements_0": 56, "gather_el": 56, "test_gather_elements_0": 56, "_gather_elements_1": 56, "test_gather_elements_1": 56, "_gather_elements_negative_indic": 56, "test_gather_elements_negative_indic": 56, "batch_dim": 57, "indices_shap": [57, 143], "best": 57, "thought": 57, "tupl": [57, 59, 61, 123, 124, 126, 127, 128, 129, 130, 131, 132, 143, 200, 201, 461, 464, 466, 469, 481], "lead": [57, 206], "salient": 57, "honor": [57, 134], "met": [57, 478], "data_shap": 57, "obtain": [57, 102, 140, 141, 142, 461, 478], "think": 57, "indices_slic": 57, "locat": [57, 64, 105, 135, 137, 143, 465, 467], "_int32": 57, "gather_nd_impl": 57, "array_equ": 57, "test_gathernd_example_int32": 57, "_float32": 57, "test_gathernd_example_float32": 57, "_int32_batchdim_1": 57, "test_gathernd_example_int32_batch_dim1": 57, "en": [58, 114, 115], "wikipedia": [58, 114, 115], "wiki": [58, 114, 115], "basic_linear_algebra_subprogram": 58, "level_3": 58, "transa": [58, 478], "transb": [58, 478], "unidirect": [58, 110], "_default_zero_bia": 58, "ranf": [58, 125], "gemm_reference_implement": 58, "test_gemm_default_zero_bia": 58, "_default_no_bia": 58, "test_gemm_default_no_bia": 58, "_default_scalar_bia": 58, "test_gemm_default_scalar_bia": 58, "_default_single_elem_vector_bia": 58, "test_gemm_default_single_elem_vector_bia": 58, "_default_vector_bia": 58, "test_gemm_default_vector_bia": 58, "_default_matrix_bia": 58, "test_gemm_default_matrix_bia": 58, "_transposea": 58, "test_gemm_transposea": 58, "_transposeb": 58, "test_gemm_transposeb": 58, "_alpha": 58, "test_gemm_alpha": 58, "_beta": 58, "test_gemm_beta": 58, "_all_attribut": 58, "test_gemm_all_attribut": 58, "inplac": [58, 464, 478, 479, 481], "equival": [59, 60, 61, 83, 131, 140, 152, 169, 177, 463, 481], "while": [59, 60, 61, 83, 135, 137, 159, 190, 192, 202, 206, 478, 481], "test_globalaveragepool": 59, "_globalaveragepool_precomput": 59, "test_globalaveragepool_precomput": 59, "lp": [60, 84, 85], "norm": [60, 85, 123, 124, 195, 203, 204, 206, 478, 481], "test_globalmaxpool": 61, "_globalmaxpool_precomput": 61, "test_globalmaxpool_precomput": 61, "test_great": 62, "_greater_broadcast": 62, "test_greater_bcast": 62, "greater_equ": 63, "flow": [64, 476, 481], "grid": [64, 137], "h_out": 64, "w_out": 64, "interpol": [64, 135, 137, 182], "often": [64, 69, 82, 160, 478, 481], "sampler": 64, "1506": 64, "02025": 64, "grid_sampl": 64, "align_corn": [64, 135], "extrema": 64, "consid": [64, 89, 91, 174, 192, 205, 479, 481], "corner": [64, 102], "instead": [64, 83, 103, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 200, 201, 463], "resolut": 64, "agnost": [64, 102], "three": [64, 91, 111, 135, 141, 142, 143, 180, 183, 195, 463, 479, 481], "bilinear": [64, 135, 137, 182], "bicub": [64, 135], "padding_mod": 64, "outsid": [64, 101, 105, 135, 161, 478], "border": 64, "reflect": [64, 102, 111], "margin": 64, "far": 64, "awai": 64, "until": 64, "offset": [64, 199, 465], "therefor": [64, 83, 189, 203, 205, 473, 478, 481], "handl": [64, 203, 206, 461], "_gridsampl": 64, "1500": 64, "5500": 64, "9500": 64, "3500": 64, "7500": 64, "5000": 64, "3000": [64, 481], "9000": 64, "7000": [64, 137], "test_gridsampl": 64, "_gridsample_paddingmod": 64, "y_zero": 64, "test_gridsample_zeros_pad": 64, "y_border": 64, "test_gridsample_border_pad": 64, "y_reflect": 64, "test_gridsample_reflection_pad": 64, "_gridsample_mode_aligncorn": 64, "y_bilinear": 64, "2500": 64, "test_gridsample_bilinear": 64, "y_align_corn": 64, "test_gridsample_aligncorners_tru": 64, "y_nearest": 64, "test_gridsample_nearest": 64, "y_bicub": 64, "1406": 64, "3828": 64, "7556": 64, "9688": 64, "1445": 64, "3906": 64, "test_gridsample_bicub": 64, "someon": 64, "who": 64, "comment": 64, "ci": 64, "packag": [64, 460, 478, 479, 481], "ham": 65, "test_hammingwindow": 65, "test_hammingwindow_symmetr": 65, "test_hannwindow": 66, "test_hannwindow_symmetr": 66, "test_hardsigmoid_exampl": 67, "test_hardsigmoid": 67, "_hardsigmoid_default": 67, "default_beta": 67, "test_hardsigmoid_default": 67, "test_hardswish": 68, "test_hardmax_exampl": 69, "maxim": [69, 91], "hot": [69, 105], "test_hardmax_one_hot": 69, "_hardmax_axi": 69, "test_hardmax_axis_0": 69, "test_hardmax_axis_1": 69, "test_hardmax_axis_2": 69, "test_hardmax_negative_axi": 69, "test_hardmax_default_axi": 69, "rather": [69, 82, 160], "coerc": [69, 82, 160], "arbitrari": [69, 82, 152, 158, 160], "a_0": [69, 82, 160], "a_1": [69, 82, 160, 177], "a_": [69, 82, 160, 177], "a_k": [69, 82, 160], "situat": [69, 82, 160, 191], "correctli": [69, 82, 160], "throw": [69, 82, 160, 474], "0th": [69, 82, 160], "nxd": [69, 82, 160], "origin": [69, 77, 82, 91, 94, 102, 135, 136, 137, 152, 160, 174, 177, 180, 181, 463, 474, 476, 479], "coercion": [69, 82, 160], "input_feature_dimens": [69, 82, 160], "test_ident": 70, "_sequenc": 70, "test_identity_sequ": 70, "_identity_opt": 70, "ten_in_tp": [70, 71, 83], "seq_in_tp": [70, 71, 83], "make_sequence_type_proto": [70, 71, 83, 107, 151, 466, 481], "opt_in_tp": [70, 83], "make_optional_type_proto": [70, 71, 83, 107, 108, 466, 481], "identity_nod": [70, 83], "opt_in": [70, 83], "opt_out": 70, "test_identity_opt": 70, "else_branch": [71, 83, 478, 481], "wish": [71, 83], "live": [71, 83], "enclos": [71, 83, 106, 146], "scope": [71, 83, 479], "then_branch": [71, 83, 478, 481], "cond": [71, 83, 481], "branch": [71, 200, 201, 467, 481], "static": [71, 83, 463], "s1": 71, "s2": 71, "variabl": [71, 77, 83, 93, 140, 203, 204, 205, 206, 463, 481], "compat": [71, 137, 478, 479], "union": [71, 102, 462, 463, 466, 472, 473, 474], "file": [71, 461, 463, 465, 467, 473, 478, 479, 481], "neither": 71, "dim_valu": [71, 463, 481], "nor": 71, "dim_param": [71, 463, 475, 481], "contrast": [71, 97, 174], "_if": 71, "then_out": [71, 481], "make_tensor_value_info": [71, 83, 140, 151, 466, 481], "else_out": [71, 481], "then_const_nod": [71, 481], "numpy_help": [71, 468, 481], "from_arrai": [71, 470, 481], "else_const_nod": [71, 481], "then_bodi": [71, 83, 481], "else_bodi": [71, 83, 481], "if_nod": [71, 83, 481], "test_if": 71, "_if_seq": 71, "make_tensor_sequence_value_info": [71, 83, 466, 481], "then_seq_nod": 71, "else_seq_nod": 71, "test_if_seq": 71, "_if_opt": 71, "then_out_tensor_tp": 71, "then_out_seq_tp": 71, "then_out_opt_tp": 71, "make_value_info": [71, 83, 466, 481], "optional_empti": 71, "else_out_tensor_tp": 71, "else_out_seq_tp": 71, "else_out_opt_tp": 71, "else_opt": 71, "compute_if_output": 71, "opt_empty_in": 71, "else_seq": 71, "else_optional_seq_nod": 71, "test_if_opt": 71, "1607": 72, "08022": 72, "detect_neg": 73, "induc": 73, "detect_posit": 73, "_infin": 73, "ninf": 73, "test_isinf": 73, "_positive_infinity_onli": 73, "isposinf": 73, "test_isinf_posit": 73, "_negative_infinity_onli": 73, "isneginf": 73, "test_isinf_neg": 73, "test_isnan": 74, "local": [75, 91, 169, 464], "respons": 75, "propos": [75, 137, 203], "alexnet": 75, "nip": 75, "cc": [75, 479], "4824": 75, "imagenet": 75, "classif": [75, 193, 197, 200, 201], "pdf": [75, 203], "region": [75, 90, 137], "dk": [75, 101, 161], "square_sum": 75, "expon": [75, 112, 126], "0002": 75, "nsize": 75, "ndindex": [75, 143], "test_lrn": 75, "0001": 75, "test_lrn_default": 75, "o": [76, 106, 107, 108, 205, 469, 481], "forget": 76, "iofc": 76, "iof": 76, "peephol": 76, "pb": [76, 473, 481], "wi": [76, 116, 140], "ri": [76, 116, 140], "pi": 76, "ct": 76, "wbi": [76, 116, 140], "rbi": [76, 116, 140], "ft": 76, "wf": 76, "rf": [76, 481], "pf": 76, "wbf": 76, "rbf": [76, 197, 198], "wc": 76, "rc": 76, "wbc": 76, "rbc": 76, "ot": 76, "wo": 76, "ro": 76, "po": 76, "wbo": 76, "rbo": 76, "input_forget": 76, "coupl": 76, "initial_c": 76, "y_c": 76, "hidde_s": 76, "lstm_helper": 76, "test_lstm_default": 76, "test_lstm_with_initial_bia": 76, "_peephol": 76, "number_of_peephol": 76, "init_h": 76, "init_c": 76, "test_lstm_with_peephol": 76, "test_lstm_batchwis": 76, "overal": 77, "stage": [77, 463], "normalized_ax": 77, "dd": 77, "varep": 77, "stddev": 77, "invstddev": 77, "stand": [77, 135], "deviat": [77, 117, 118], "stash_typ": 77, "happen": [77, 478, 481], "outcom": [77, 99, 186], "normalizedsc": 77, "syntax": [77, 461, 478, 479], "normalized_shap": 77, "calculate_normalized_shap": 77, "inv_std_dev": 77, "_layer_norm": 77, "test_layer_normalization_4d_axis_negative_": 77, "test_layer_normalization_4d_axi": 77, "_default_axi": 77, "test_layer_normalization_default_axi": 77, "test_layer_normalization_2d_axis_negative_": 77, "test_layer_normalization_2d_axi": 77, "3d_epsilon": 77, "test_layer_normalization_3d_axis_negative_": 77, "_epsilon": 77, "test_layer_normalization_3d_axi": 77, "leakag": 78, "test_leakyrelu_exampl": 78, "test_leakyrelu": 78, "_leakyrelu_default": 78, "test_leakyrelu_default": 78, "test_less": 79, "_less_broadcast": 79, "test_less_bcast": 79, "less_equ": 80, "natur": 81, "30258512": 81, "test_log_exampl": 81, "test_log": 81, "4076061": 82, "407606": 82, "test_logsoftmax_example_1": 82, "_logsoftmax_axi": 82, "10000": [82, 96, 160], "10001": [82, 160], "10002": [82, 160], "10003": [82, 160], "4401896": 82, "44018966": 82, "test_logsoftmax_large_numb": 82, "test_logsoftmax_axis_0": 82, "test_logsoftmax_axis_1": 82, "test_logsoftmax_axis_2": 82, "test_logsoftmax_negative_axi": 82, "test_logsoftmax_default_axi": 82, "construct": [83, 106, 140, 146, 147, 174, 176, 180, 466], "termin": 83, "trip": 83, "iter": [83, 136, 140, 143, 203, 204, 206, 478, 481], "bodi": [83, 140, 151, 481], "yield": [83, 183], "tabl": [83, 460, 463], "summar": 83, "max_trip_count": 83, "condition_var": 83, "analog": 83, "trip_count": 83, "amp": 83, "predict": [83, 91, 161, 198, 478, 479, 481], "net": 83, "keepgo": 83, "keepgoing_out": 83, "b_out": 83, "user_defined_v": 83, "keepgoing_in": 83, "incom": 83, "b_in": 83, "my_loc": 83, "outgo": 83, "const": 83, "imagin": [83, 203, 206], "bind": 83, "formal": 83, "read": [83, 473, 478, 479, 481], "fine": 83, "access": [83, 481], "sever": [83, 91, 206, 478], "thing": [83, 481], "snippet": 83, "referenc": [83, 463, 478], "subsequ": [83, 206], "pair": [83, 102, 113, 463, 464, 466], "eg": 83, "These": [83, 200, 478, 479], "scan_output": [83, 140], "mechan": [83, 478], "semant": [83, 463, 481], "wavefront": 83, "execut": [83, 140, 151, 461, 463, 478, 479, 481], "devblog": 83, "nvidia": 83, "frontend": 83, "emit": 83, "seri": 83, "success": [83, 139], "possibli": 83, "go": [83, 481], "residu": 83, "connect": [83, 464, 476], "subgraph": [83, 140, 151, 466, 476, 480], "figur": [83, 94, 203], "iteration_num": 83, "skip": [83, 174, 205, 481], "v_initi": 83, "v_final_and_scan_output": 83, "_loop_11": 83, "x1": [83, 90, 102, 137, 140, 151, 203, 204, 206, 481], "xn": [83, 140], "x2": [83, 90, 102, 137, 140, 203, 204, 206, 481], "y_in": 83, "y_out": 83, "scan_out": [83, 140, 481], "cond_in": 83, "cond_out": 83, "iter_count": 83, "x_const_nod": 83, "const_tensor_x": 83, "one_const_nod": 83, "const_tensor_on": 83, "i_add_nod": 83, "start_unsqueeze_nod": 83, "slice_start": 83, "end_unsqueeze_nod": 83, "slice_end": 83, "slice_nod": 83, "slice_out": 83, "y_add_nod": 83, "scan_identity_nod": 83, "loop_bodi": 83, "res_i": 83, "res_scan": 83, "test_loop11": 83, "_loop_13": 83, "seq_in": 83, "seq_out": 83, "zero_const_nod": 83, "const_tensor_zero": 83, "axes_nod": 83, "const_tensor_ax": 83, "add_nod": [83, 140], "insert_nod": 83, "seq_empti": 83, "seq_r": 83, "test_loop13_seq": 83, "_loop_16_non": 83, "x0": [83, 151], "opt_seq_in": 83, "optional_has_elem_nod": 83, "optional_has_elem": 83, "optional_is_non": 83, "optional_get_elem": 83, "constant_in": 83, "seq_const_in": 83, "init_seq_in": 83, "then_seq_out": 83, "else_seq_out": 83, "opt_seq": 83, "compute_loop_output": 83, "test_loop16_seq_non": 83, "write": [83, 141, 465, 473, 478, 479, 481], "declar": [83, 463, 481], "intend": [85, 91, 140, 463], "author": [85, 478], "encourag": 85, "test_matmul_2d": 86, "test_matmul_3d": 86, "test_matmul_4d": 86, "a_zero_point": [87, 114], "wherea": [87, 114], "zp_1": 87, "zp_2": 87, "zp_m": 87, "b_zero_point": [87, 114], "col": 87, "zp_n": 87, "test_matmulinteg": 87, "data_0": [88, 92, 95, 171], "data_1": [88, 92, 95, 171], "data_2": [88, 92, 95, 171], "test_max_exampl": 88, "test_max_one_input": 88, "test_max_two_input": 88, "_max_all_numeric_typ": 88, "op_dtyp": [88, 95], "all_numeric_dtyp": [88, 95], "test_max_": 88, "storage_ord": 89, "storag": [89, 91], "_maxpool_2d_uint8": 89, "test_maxpool_2d_uint8": 89, "_maxpool_2d_precomputed_pad": 89, "test_maxpool_2d_precomputed_pad": 89, "_maxpool_with_argmax_2d_precomputed_pad": 89, "test_maxpool_with_argmax_2d_precomputed_pad": 89, "_maxpool_2d_precomputed_strid": 89, "test_maxpool_2d_precomputed_strid": 89, "_maxpool_with_argmax_2d_precomputed_strid": 89, "test_maxpool_with_argmax_2d_precomputed_strid": 89, "_maxpool_2d_precomputed_same_upp": 89, "test_maxpool_2d_precomputed_same_upp": 89, "_maxpool_1d_default": 89, "test_maxpool_1d_default": 89, "_maxpool_2d_default": 89, "test_maxpool_2d_default": 89, "_maxpool_3d_default": 89, "test_maxpool_3d_default": 89, "_maxpool_2d_same_upp": 89, "test_maxpool_2d_same_upp": 89, "_maxpool_2d_same_low": 89, "test_maxpool_2d_same_low": 89, "_maxpool_2d_pad": 89, "test_maxpool_2d_pad": 89, "_maxpool_2d_strid": 89, "test_maxpool_2d_strid": 89, "_maxpool_2d_ceil": 89, "test_maxpool_2d_ceil": 89, "_maxpool_2d_dil": 89, "test_maxpool_2d_dil": 89, "roi": [90, 135, 137], "interest": [90, 137, 481], "num_roi": [90, 137], "pooled_shap": 90, "spatial_scal": [90, 137], "translat": [90, 102, 137], "batch_id": 90, "y1": [90, 102, 137, 151, 481], "y2": [90, 102, 137, 479, 481], "essenti": [91, 174], "partial": [91, 143, 205], "unpool": 91, "corrspond": 91, "ambigu": 91, "output_s": [91, 135], "meant": 91, "disambigu": [91, 463], "known": [91, 135, 473, 478, 481], "exact": [91, 478], "try": [91, 481], "invert": 91, "_without_output_shap": 91, "xi": 91, "test_maxunpool_export_without_output_shap": 91, "_with_output_shap": 91, "test_maxunpool_export_with_output_shap": 91, "test_mean_exampl": 92, "test_mean_one_input": 92, "test_mean_two_input": 92, "br": [93, 135, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202], "ex": 93, "cacul": [93, 161], "associ": [93, 135, 174, 200, 201, 463, 467, 479], "data_mean": 93, "data_mean_squar": 93, "power": [93, 94, 112, 204], "data_squar": 93, "data_squared_mean": 93, "std": 93, "test_mvn": 93, "linearli": 94, "frequenc": [94, 174], "spectra": 94, "num_mel_bin": 94, "lower_edge_hertz": 94, "upper_edge_hertz": 94, "mel": 94, "hertz": 94, "2595": 94, "log10": 94, "700": 94, "triangl": 94, "filterbank": 94, "peak": 94, "spectrogram": 94, "frame": [94, 139], "num_spectrogram_bin": 94, "spectrum": 94, "magnitud": [94, 479], "band": 94, "understood": 94, "nonredund": 94, "bin": [94, 137], "sample_r": 94, "dictat": 94, "how": [94, 135, 140, 201, 460, 468, 473, 478, 480, 481], "triangular": [94, 179], "desir": [94, 187, 206], "highest": 94, "8192": 94, "frequency_bin": 94, "low_frequency_mel": 94, "high_frequency_mel": 94, "mel_step": 94, "flag": [94, 140, 198], "writeabl": 94, "lower_frequency_valu": 94, "center_frequency_point": 94, "higher_frequency_point": 94, "low_to_cent": 94, "center_to_high": 94, "000000": 94, "test_melweightmatrix": 94, "test_min_exampl": 95, "test_min_one_input": 95, "test_min_two_input": 95, "_min_all_numeric_typ": 95, "test_min_": 95, "self": 96, "regular": [96, 203, 204, 206], "monoton": [96, 463], "ln": [96, 162], "linspac": 96, "log1p": 96, "test_mish": 96, "modulu": 97, "remaind": 97, "divisor": [97, 195], "fmod": 97, "howev": [97, 159, 463, 478, 479], "dividend": 97, "forc": [97, 467], "platform": [97, 169, 479], "treatment": 97, "_mod_mixed_sign_float64": 97, "test_mod_mixed_sign_float64": 97, "_mod_mixed_sign_float32": 97, "10000038": 97, "39999962": 97, "test_mod_mixed_sign_float32": 97, "_mod_mixed_sign_float16": 97, "10156": 97, "3984": 97, "test_mod_mixed_sign_float16": 97, "_mod_mixed_sign_int64": 97, "test_mod_mixed_sign_int64": 97, "_mod_mixed_sign_int32": 97, "test_mod_mixed_sign_int32": 97, "_mod_mixed_sign_int16": 97, "test_mod_mixed_sign_int16": 97, "_mod_mixed_sign_int8": 97, "test_mod_mixed_sign_int8": 97, "_mod_uint8": 97, "test_mod_uint8": 97, "_mod_uint16": 97, "test_mod_uint16": 97, "_mod_uint32": 97, "test_mod_uint32": 97, "_mod_uint64": 97, "test_mod_uint64": 97, "_mod_int64_fmod": 97, "test_mod_int64_fmod": 97, "_mod_broadcast": 97, "test_mod_broadcast": 97, "test_mul_exampl": 98, "test_mul": 98, "test_mul_uint8": 98, "_mul_broadcast": 98, "test_mul_bcast": 98, "sample_s": 99, "class_siz": [99, 161], "unnorm": 99, "flip": 100, "test_neg_exampl": 100, "test_neg": 100, "likelihood": 101, "d_2": 101, "d_k": 101, "class": [101, 102, 105, 161, 193, 197, 198, 200, 201, 461, 463, 465, 467, 468, 476, 478, 481], "label": [101, 161, 192, 193, 197, 200, 479], "ignore_index": [101, 161], "classifi": [101, 193, 197, 200, 479], "reduct": [101, 142, 143, 161, 478], "nllloss": 101, "weight_tot": 101, "shall": [101, 161], "rescal": [101, 161, 199], "treat": [101, 143, 159, 161, 190, 193, 465], "_input_shape_is_nc": 101, "negative_log_likelihood_loss": 101, "compute_negative_log_likelihood_loss": 101, "test_nllloss_nc": 101, "_input_shape_is_ncd1d2": 101, "dim1": 101, "dim2": 101, "test_nllloss_ncd1d2": 101, "_input_shape_is_ncd1d2_reduction_mean": 101, "test_nllloss_ncd1d2_reduction_mean": 101, "_input_shape_is_ncd1d2_reduction_sum": 101, "test_nllloss_ncd1d2_reduction_sum": 101, "_input_shape_is_ncd1d2_with_weight": 101, "test_nllloss_ncd1d2_with_weight": 101, "_input_shape_is_ncd1d2_with_weight_reduction_mean": 101, "test_nllloss_ncd1d2_with_weight_reduction_mean": 101, "_input_shape_is_ncd1d2_with_weight_reduction_sum": 101, "test_nllloss_ncd1d2_with_weight_reduction_sum": 101, "_input_shape_is_ncd1d2_with_weight_reduction_sum_ii": 101, "test_nllloss_ncd1d2_with_weight_reduction_sum_ii": 101, "_input_shape_is_ncd1d2_no_weight_reduction_mean_ii": 101, "test_nllloss_ncd1d2_no_weight_reduction_mean_ii": 101, "_input_shape_is_ncd1": 101, "test_nllloss_ncd1": 101, "_input_shape_is_ncd1_weight": 101, "test_nllloss_ncd1_weight": 101, "_input_shape_is_ncd1_ii": 101, "test_nllloss_ncd1_ii": 101, "_input_shape_is_ncd1_weight_ii": 101, "test_nllloss_ncd1_weight_ii": 101, "_input_shape_is_ncd1d2d3d4d5_mean_weight": 101, "dim3": 101, "dim4": 101, "dim5": 101, "test_nllloss_ncd1d2d3d4d5_mean_weight": 101, "_input_shape_is_ncd1d2d3d4d5_none_no_weight": 101, "test_nllloss_ncd1d2d3d4d5_none_no_weight": 101, "_input_shape_is_ncd1_mean_weight_negative_ii": 101, "test_nllloss_ncd1_mean_weight_negative_ii": 101, "_input_shape_is_ncd1d2d3_none_no_weight_negative_ii": 101, "test_nllloss_ncd1d2d3_none_no_weight_negative_ii": 101, "_input_shape_is_ncd1d2d3_sum_weight_high_ii": 101, "test_nllloss_ncd1d2d3_sum_weight_high_ii": 101, "box": 102, "intersect": 102, "iou": 102, "overlap": [102, 464], "previous": [102, 204, 481], "score": [102, 161, 193, 197, 198, 200, 201], "score_threshold": 102, "center_point_box": 102, "algorithm": [102, 203, 204, 205, 206, 463, 466], "system": [102, 135, 137, 465], "invari": 102, "orthogon": 102, "thu": [102, 143, 152, 463], "selected_indic": 102, "collect": [102, 174, 190, 193, 463], "ly": 102, "mostli": 102, "tf": [102, 135, 174], "x_center": 102, "y_center": 102, "num_batch": 102, "spatial_dimens": 102, "num_class": 102, "max_output_boxes_per_class": 102, "iou_threshold": 102, "decid": [102, 169], "too": [102, 203, 206, 479], "much": [102, 478, 479, 481], "num_selected_indic": 102, "batch_index": 102, "class_index": 102, "box_index": 102, "_nonmaxsuppression_suppress_by_i": 102, "test_nonmaxsuppression_suppress_by_i": 102, "_nonmaxsuppression_suppress_by_iou_and_scor": 102, "test_nonmaxsuppression_suppress_by_iou_and_scor": 102, "_nonmaxsuppression_flipped_coordin": 102, "test_nonmaxsuppression_flipped_coordin": 102, "_nonmaxsuppression_limit_output_s": 102, "test_nonmaxsuppression_limit_output_s": 102, "_nonmaxsuppression_single_box": 102, "test_nonmaxsuppression_single_box": 102, "_nonmaxsuppression_identical_box": 102, "test_nonmaxsuppression_identical_box": 102, "_nonmaxsuppression_center_point_box_format": 102, "test_nonmaxsuppression_center_point_box_format": 102, "_nonmaxsuppression_two_class": 102, "test_nonmaxsuppression_two_class": 102, "_nonmaxsuppression_two_batch": 102, "test_nonmaxsuppression_two_batch": 102, "test_nonzero_exampl": 103, "negat": 104, "logical_not": 104, "test_not_2d": 104, "test_not_3d": 104, "test_not_4d": 104, "on_valu": 105, "off_valu": 105, "innermost": 105, "_without_axi": 105, "one_hot": 105, "test_onehot_without_axi": 105, "_with_axi": 105, "axisvalu": 105, "test_onehot_with_axi": 105, "_with_negative_indic": 105, "test_onehot_negative_indic": 105, "_with_negative_axi": 105, "test_onehot_with_negative_axi": 105, "certain": 106, "_get_element_tensor": 107, "tensor_type_proto": [107, 108], "elem_typ": [107, 108, 463, 466, 481], "optional_type_proto": [107, 108], "optional_input": [107, 108], "optional_get_element_reference_implement": 107, "test_optional_get_element_optional_tensor": 107, "test_optional_get_element_tensor": 107, "_get_element_sequ": 107, "seq_type_proto": 107, "test_optional_get_element_optional_sequ": 107, "test_optional_get_element_sequ": 107, "optional_has_element_reference_implement": 108, "test_nam": [108, 134, 149], "test_optional_has_element_": 108, "tensor_input": 108, "_empti": 108, "input_name_opt": 108, "empty_no_input_nam": 108, "empty_no_input": 108, "test_name_surfix": 108, "input_nam": [108, 476, 479], "_optional_input": 108, "_tensor_input": 108, "logical_or": 109, "test_or2d": 109, "test_or3d": 109, "test_or4d": 109, "_or_broadcast": 109, "test_or_bcast3v1d": 109, "test_or_bcast3v2d": 109, "test_or_bcast4v2d": 109, "test_or_bcast4v3d": 109, "test_or_bcast4v4d": 109, "slope": 110, "test_prelu_exampl": 110, "_prelu_broadcast": 110, "test_prelu_broadcast": 110, "sharedacross": 110, "mirror": [111, 203], "num_ax": 111, "chosen": [111, 198, 479], "input_rank": 111, "_constant_pad": 111, "pad_impl": 111, "test_constant_pad": 111, "_reflection_and_edge_pad": 111, "test_": 111, "_pad": 111, "_constant_pad_ax": 111, "test_constant_pad_ax": 111, "test_pow_exampl": 112, "test_pow": 112, "_pow_broadcast": 112, "test_pow_bcast_scalar": 112, "216": [112, 113, 481], "test_pow_bcast_arrai": 112, "_type": 112, "test_pow_types_float32_int64": 112, "test_pow_types_int64_float32": 112, "test_pow_types_float32_int32": 112, "test_pow_types_int32_float32": 112, "test_pow_types_float32_uint64": 112, "test_pow_types_float32_uint32": 112, "test_pow_types_int64_int64": 112, "test_pow_types_int32_int32": 112, "compon": [112, 139], "relat": 113, "w_scale": 113, "t4": [113, 140], "zero_point": 113, "203": [113, 481], "237": [113, 481], "242": [113, 481], "221": [113, 481], "166": 113, "232": [113, 115, 481], "178": 113, "188": 113, "230": 113, "154": [113, 481], "148": 113, "247": [113, 114, 481], "00369204697": 113, "132": [113, 481], "00172794575": 113, "00162681262": 113, "197": 113, "160": 113, "191": 113, "199": 113, "243": [113, 481], "131": 113, "175": 113, "214": [113, 114, 481], "215": 113, "163": 113, "test_qlinearconv": 113, "v_1": 114, "v_2": 114, "v_m": 114, "v_k": 114, "a_scal": 114, "b_scale": 114, "236": [114, 481], "238": 114, "0066": 114, "152": 114, "244": [114, 132, 481], "00705": 114, "0107": 114, "151": 114, "test_qlinearmatmul_2d": 114, "test_qlinearmatmul_3d": 114, "low": [115, 119, 120, 176], "get": [115, 135, 467, 478, 479, 481], "test_quantizelinear": 115, "485": 115, "960": 115, "375": [115, 135, 481], "470": 115, "test_quantizelinear_axi": 115, "wbbi": 116, "rbbi": 116, "rnn_helper": 116, "test_simple_rnn_default": 116, "test_simple_rnn_with_initial_bia": 116, "test_rnn_seq_length": 116, "test_simple_rnn_batchwis": 116, "drawn": [117, 118, 119, 120], "boundari": [119, 120, 174], "increment": [121, 201, 468, 478], "delta": 121, "number_of_el": 121, "pseudocod": 121, "shown": [121, 205, 479], "test_reciprocal_exampl": 122, "test_reciproc": 122, "l1": [123, 195], "_do_not_keepdim": [123, 124, 126, 127, 128, 129, 130, 131, 132], "test_reduce_l1_do_not_keepdims_exampl": 123, "test_reduce_l1_do_not_keepdims_random": 123, "test_reduce_l1_keep_dims_exampl": 123, "test_reduce_l1_keep_dims_random": 123, "test_reduce_l1_default_axes_keepdims_exampl": 123, "test_reduce_l1_default_axes_keepdims_random": 123, "_negative_axes_keepdim": [123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "test_reduce_l1_negative_axes_keep_dims_exampl": 123, "test_reduce_l1_negative_axes_keep_dims_random": 123, "l2": [124, 195, 203, 204, 206], "23606798": 124, "81024968": 124, "63014581": 124, "45362405": 124, "2788206": 124, "test_reduce_l2_do_not_keepdims_exampl": 124, "test_reduce_l2_do_not_keepdims_random": 124, "test_reduce_l2_keep_dims_exampl": 124, "test_reduce_l2_keep_dims_random": 124, "49509757": 124, "test_reduce_l2_default_axes_keepdims_exampl": 124, "test_reduce_l2_default_axes_keepdims_random": 124, "test_reduce_l2_negative_axes_keep_dims_exampl": 124, "test_reduce_l2_negative_axes_keep_dims_random": 124, "_nokeepdim": 125, "test_reduce_log_sum_desc_ax": 125, "test_reduce_log_sum_asc_ax": 125, "test_reduce_log_sum_default": 125, "test_reduce_log_sum_negative_ax": 125, "31326175": 126, "00004578": 126, "00671387": 126, "test_reduce_log_sum_exp_do_not_keepdims_exampl": 126, "test_reduce_log_sum_exp_do_not_keepdims_random": 126, "test_reduce_log_sum_exp_keepdims_exampl": 126, "test_reduce_log_sum_exp_keepdims_random": 126, "test_reduce_log_sum_exp_default_axes_keepdims_exampl": 126, "test_reduce_log_sum_exp_default_axes_keepdims_random": 126, "test_reduce_log_sum_exp_negative_axes_keepdims_exampl": 126, "test_reduce_log_sum_exp_negative_axes_keepdims_random": 126, "test_reduce_max_do_not_keepdims_exampl": 127, "test_reduce_max_do_not_keepdims_random": 127, "test_reduce_max_keepdims_exampl": 127, "test_reduce_max_keepdims_random": 127, "test_reduce_max_default_axes_keepdim_exampl": 127, "test_reduce_max_default_axes_keepdims_random": 127, "test_reduce_max_negative_axes_keepdims_exampl": 127, "test_reduce_max_negative_axes_keepdims_random": 127, "test_reduce_mean_do_not_keepdims_exampl": 128, "test_reduce_mean_do_not_keepdims_random": 128, "test_reduce_mean_keepdims_exampl": 128, "test_reduce_mean_keepdims_random": 128, "test_reduce_mean_default_axes_keepdims_exampl": 128, "test_reduce_mean_default_axes_keepdims_random": 128, "test_reduce_mean_negative_axes_keepdims_exampl": 128, "test_reduce_mean_negative_axes_keepdims_random": 128, "test_reduce_min_do_not_keepdims_exampl": 129, "test_reduce_min_do_not_keepdims_random": 129, "test_reduce_min_keepdims_exampl": 129, "test_reduce_min_keepdims_random": 129, "test_reduce_min_default_axes_keepdims_exampl": 129, "test_reduce_min_default_axes_keepdims_random": 129, "test_reduce_min_negative_axes_keepdims_exampl": 129, "test_reduce_min_negative_axes_keepdims_random": 129, "test_reduce_prod_do_not_keepdims_exampl": 130, "test_reduce_prod_do_not_keepdims_random": 130, "test_reduce_prod_keepdims_exampl": 130, "test_reduce_prod_keepdims_random": 130, "790016e": 130, "test_reduce_prod_default_axes_keepdims_exampl": 130, "test_reduce_prod_default_axes_keepdims_random": 130, "test_reduce_prod_negative_axes_keepdims_exampl": 130, "test_reduce_prod_negative_axes_keepdims_random": 130, "noop_with_empty_ax": 131, "behaviour": 131, "act": 131, "tolist": [131, 479], "test_reduce_sum_do_not_keepdims_exampl": 131, "test_reduce_sum_do_not_keepdims_random": 131, "test_reduce_sum_keepdims_exampl": 131, "test_reduce_sum_keepdims_random": 131, "test_reduce_sum_default_axes_keepdims_exampl": 131, "test_reduce_sum_default_axes_keepdims_random": 131, "test_reduce_sum_negative_axes_keepdims_exampl": 131, "test_reduce_sum_negative_axes_keepdims_random": 131, "_empty_axes_input_noop": 131, "test_reduce_sum_empty_axes_input_noop_exampl": 131, "202": 132, "test_reduce_sum_square_do_not_keepdims_exampl": 132, "test_reduce_sum_square_do_not_keepdims_random": 132, "test_reduce_sum_square_keepdims_exampl": 132, "test_reduce_sum_square_keepdims_random": 132, "650": 132, "test_reduce_sum_square_default_axes_keepdims_exampl": 132, "test_reduce_sum_square_default_axes_keepdims_random": 132, "test_reduce_sum_square_negative_axes_keepdims_exampl": 132, "test_reduce_sum_square_negative_axes_keepdims_random": 132, "rectifi": [133, 175], "test_relu": 133, "At": [134, 203, 204, 481], "unchang": [134, 169, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 481], "allowzero": [134, 481], "dynam": [134, 481], "_reshap": 134, "original_shap": 134, "reordered_all_dim": 134, "reordered_last_dim": 134, "reduced_dim": 134, "extended_dim": 134, "one_dim": 134, "negative_dim": 134, "negative_extended_dim": 134, "zero_dim": 134, "zero_and_negative_dim": 134, "reshape_reference_implement": 134, "test_reshape_": 134, "_allowzero": 134, "allowzero_reord": 134, "neighborhood": 135, "output_dimens": [135, 182], "input_dimens": [135, 182], "roi_end": 135, "roi_start": 135, "antialia": 135, "cubic": 135, "antialias": 135, "downscal": 135, "achiev": 135, "stretch": 135, "resampl": 135, "interpret": 135, "coordinate_transformation_mod": [135, 137], "individu": 135, "x_resiz": 135, "x_origin": 135, "length_origin": 135, "length_res": 135, "roi_x": 135, "start_x": 135, "end_x": 135, "half_pixel": [135, 137], "pytorch_half_pixel": 135, "asymmetr": 135, "tf_crop_and_res": 135, "cubic_coeff_a": 135, "choic": 135, "tensorflow": [135, 479], "1163711": 135, "exclude_outsid": 135, "renorm": 135, "extrapolation_valu": 135, "0f": [135, 137], "keep_aspect_ratio_polici": 135, "regard": 135, "aspect": 135, "applic": [135, 206, 478], "disregard": 135, "out_siz": 135, "not_larg": 135, "extent": [135, 464], "larger": [135, 159, 174], "in_siz": 135, "round_int": 135, "not_smal": 135, "halfwai": 135, "nearest_mod": 135, "four": [135, 478, 481], "round_prefer_floor": 135, "half": [135, 138], "down": 135, "round_prefer_ceil": 135, "start1": 135, "startn": 135, "end1": 135, "endn": 135, "_resize_upsample_scales_nearest": 135, "interpolate_nd": 135, "lambda": 135, "nearest_coeff": 135, "scale_factor": 135, "test_resize_upsample_scales_nearest": 135, "_resize_downsample_scales_nearest": 135, "test_resize_downsample_scales_nearest": 135, "_resize_upsample_sizes_nearest": 135, "test_resize_upsample_sizes_nearest": 135, "_resize_downsample_sizes_nearest": 135, "test_resize_downsample_sizes_nearest": 135, "_resize_upsample_scales_linear": 135, "linear_coeff": 135, "test_resize_upsample_scales_linear": 135, "_resize_upsample_scales_linear_align_corn": 135, "33333333": 135, "66666667": 135, "test_resize_upsample_scales_linear_align_corn": 135, "_resize_downsample_scales_linear": 135, "6666665": 135, "3333331": 135, "test_resize_downsample_scales_linear": 135, "_resize_downsample_scales_linear_align_corn": 135, "142857": 135, "test_resize_downsample_scales_linear_align_corn": 135, "_resize_upsample_scales_cub": 135, "47265625": 135, "76953125": 135, "24609375": 135, "875": 135, "28125": 135, "91015625": 135, "38671875": 135, "68359375": 135, "66015625": 135, "95703125": 135, "43359375": 135, "0625": 135, "46875": 135, "09765625": 135, "57421875": 135, "87109375": 135, "56640625": 135, "86328125": 135, "33984375": 135, "96875": 135, "00390625": 135, "48046875": 135, "77734375": 135, "08203125": 135, "37890625": 135, "85546875": 135, "484375": 135, "890625": 135, "51953125": 135, "99609375": 135, "29296875": 135, "70703125": 135, "109375": 135, "515625": 135, "14453125": 135, "62109375": 135, "91796875": 135, "22265625": 135, "625": 135, "03125": 135, "13671875": 135, "12890625": 135, "42578125": 135, "90234375": 135, "53125": 135, "9375": 135, "04296875": 135, "31640625": 135, "61328125": 135, "08984375": 135, "71875": 135, "125": 135, "75390625": 135, "23046875": 135, "52734375": 135, "cubic_coeff": 135, "test_resize_upsample_scales_cub": 135, "_resize_upsample_scales_cubic_align_corn": 135, "34110787": 135, "80029155": 135, "32944606": 135, "67055394": 135, "19970845": 135, "65889213": 135, "36443149": 135, "70553936": 135, "16472303": 135, "69387755": 135, "03498542": 135, "56413994": 135, "02332362": 135, "20116618": 135, "54227405": 135, "00145773": 135, "53061224": 135, "87172012": 135, "40087464": 135, "86005831": 135, "31778426": 135, "1180758": 135, "64723032": 135, "98833819": 135, "51749271": 135, "97667638": 135, "68221574": 135, "48250729": 135, "01166181": 135, "35276968": 135, "8819242": 135, "79883382": 135, "13994169": 135, "59912536": 135, "12827988": 135, "46938776": 135, "99854227": 135, "45772595": 135, "63556851": 135, "43586006": 135, "96501458": 135, "30612245": 135, "83527697": 135, "29446064": 135, "test_resize_upsample_scales_cubic_align_corn": 135, "_resize_downsample_scales_cub": 135, "47119141": 135, "78125": 135, "08251953": 135, "71142578": 135, "02148438": 135, "32275391": 135, "91650391": 135, "2265625": 135, "52783203": 135, "test_resize_downsample_scales_cub": 135, "_resize_downsample_scales_cubic_align_corn": 135, "39519159": 135, "79038317": 135, "58076634": 135, "97595793": 135, "37114951": 135, "16153268": 135, "55672427": 135, "95191585": 135, "test_resize_downsample_scales_cubic_align_corn": 135, "_resize_upsample_sizes_cub": 135, "45507922": 135, "64057922": 135, "97157922": 135, "42257922": 135, "90732922": 135, "22332922": 135, "70807922": 135, "15907922": 135, "49007922": 135, "67557922": 135, "39437963": 135, "57987963": 135, "91087963": 135, "36187963": 135, "84662963": 135, "16262963": 135, "64737963": 135, "09837963": 135, "42937963": 135, "61487963": 135, "95130693": 135, "13680693": 135, "46780693": 135, "91880693": 135, "40355693": 135, "71955693": 135, "20430693": 135, "65530693": 135, "98630693": 135, "17180693": 135, "20525069": 135, "39075069": 135, "72175069": 135, "17275069": 135, "65750069": 135, "97350069": 135, "45825069": 135, "90925069": 135, "24025069": 135, "42575069": 135, "88975": 135, "07525": 135, "40625": 135, "85725": 135, "658": 135, "14275": 135, "59375": 135, "92475": 135, "11025": 135, "57424931": 135, "75974931": 135, "09074931": 135, "54174931": 135, "02649931": 135, "34249931": 135, "82724931": 135, "27824931": 135, "60924931": 135, "79474931": 135, "82819307": 135, "01369307": 135, "34469307": 135, "79569307": 135, "28044307": 135, "59644307": 135, "08119307": 135, "53219307": 135, "86319307": 135, "04869307": 135, "38512037": 135, "57062037": 135, "90162037": 135, "35262037": 135, "83737037": 135, "15337037": 135, "63812037": 135, "08912037": 135, "42012037": 135, "60562037": 135, "32442078": 135, "50992078": 135, "84092078": 135, "29192078": 135, "77667078": 135, "09267078": 135, "57742078": 135, "02842078": 135, "35942078": 135, "54492078": 135, "test_resize_upsample_sizes_cub": 135, "_resize_downsample_sizes_cub": 135, "63078704": 135, "00462963": 135, "37847222": 135, "12615741": 135, "87384259": 135, "62152778": 135, "99537037": 135, "36921296": 135, "test_resize_downsample_sizes_cub": 135, "v1": [135, 204, 206], "half_pixel_cent": 135, "_resize_upsample_scales_cubic_a_n0p5_exclude_outsid": 135, "55882353": 135, "81494204": 135, "35698249": 135, "89705882": 135, "39705882": 135, "93713516": 135, "47917561": 135, "73529412": 135, "58329755": 135, "83941606": 135, "38145651": 135, "92153285": 135, "42153285": 135, "96160918": 135, "50364964": 135, "75976814": 135, "75145936": 135, "00757787": 135, "54961832": 135, "08969466": 135, "58969466": 135, "12977099": 135, "67181144": 135, "92792995": 135, "91176471": 135, "16788321": 135, "70992366": 135, "29007634": 135, "83211679": 135, "08823529": 135, "07207005": 135, "32818856": 135, "87022901": 135, "41030534": 135, "91030534": 135, "45038168": 135, "99242213": 135, "24854064": 135, "24023186": 135, "49635036": 135, "03839082": 135, "57846715": 135, "07846715": 135, "61854349": 135, "16058394": 135, "41670245": 135, "26470588": 135, "52082439": 135, "06286484": 135, "60294118": 135, "10294118": 135, "64301751": 135, "18505796": 135, "44117647": 135, "test_resize_upsample_scales_cubic_a_n0p5_exclude_outsid": 135, "_resize_downsample_scales_cubic_a_n0p5_exclude_outsid": 135, "36812675": 135, "6695014": 135, "0133367": 135, "57362535": 135, "2188353": 135, "94896657": 135, "25034122": 135, "59417652": 135, "test_resize_downsample_scales_cubic_a_n0p5_exclude_outsid": 135, "_resize_upsample_scales_cubic_asymmetr": 135, "09375": 135, "21875": 135, "test_resize_upsample_scales_cubic_asymmetr": 135, "_resize_tf_crop_and_res": 135, "inaccur": 135, "6000004": 135, "400001": 135, "test_resize_tf_crop_and_res": 135, "_resize_tf_crop_and_resize_extrapolation_valu": 135, "_resize_downsample_sizes_linear_pytorch_half_pixel": 135, "6666666": 135, "333333": 135, "test_resize_downsample_sizes_linear_pytorch_half_pixel": 135, "_resize_upsample_sizes_nearest_floor_align_corn": 135, "test_resize_upsample_sizes_nearest_floor_align_corn": 135, "_resize_upsample_sizes_nearest_round_prefer_ceil_asymmetr": 135, "test_resize_upsample_sizes_nearest_round_prefer_ceil_asymmetr": 135, "_resize_upsample_sizes_nearest_ceil_half_pixel": 135, "test_resize_upsample_sizes_nearest_ceil_half_pixel": 135, "_resize_downsample_scales_linear_antialia": 135, "linear_coeffs_antialia": 135, "test_resize_downsample_scales_linear_antialia": 135, "_resize_downsample_sizes_linear_antialia": 135, "3636363": 135, "590909": 135, "818182": 135, "2727275": 135, "727273": 135, "181818": 135, "409091": 135, "636364": 135, "test_resize_downsample_sizes_linear_antialia": 135, "_resize_downsample_scales_cubic_antialia": 135, "5180721": 135, "2858863": 135, "589329": 135, "357142": 135, "cubic_coeffs_antialia": 135, "test_resize_downsample_scales_cubic_antialia": 135, "_resize_downsample_sizes_cubic_antialia": 135, "7750092": 135, "1200073": 135, "4650054": 135, "1550016": 135, "844998": 135, "534994": 135, "8799925": 135, "224991": 135, "test_resize_downsample_sizes_cubic_antialia": 135, "_resize_upsample_scales_nearest_axes_2_3": 135, "test_resize_upsample_scales_nearest_axes_2_3": 135, "_resize_upsample_scales_nearest_axes_3_2": 135, "test_resize_upsample_scales_nearest_axes_3_2": 135, "_resize_upsample_sizes_nearest_axes_2_3": 135, "test_resize_upsample_sizes_nearest_axes_2_3": 135, "_resize_upsample_sizes_nearest_axes_3_2": 135, "test_resize_upsample_sizes_nearest_axes_3_2": 135, "_resize_tf_crop_and_resize_axes_2_3": 135, "test_resize_tf_crop_and_resize_axes_2_3": 135, "_resize_tf_crop_and_resize_axes_3_2": 135, "test_resize_tf_crop_and_resize_axes_3_2": 135, "_resize_upsample_sizes_nearest_not_larg": 135, "7x7": 135, "test_resize_upsample_sizes_nearest_not_larg": 135, "_resize_upsample_sizes_nearest_not_smal": 135, "8x8": 135, "_resize_downsample_sizes_nearest_not_larg": 135, "1x2": 135, "test_resize_downsample_sizes_nearest_not_larg": 135, "_resize_downsample_sizes_nearest_not_smal": 135, "2x3": 135, "test_resize_downsample_sizes_nearest_not_smal": 135, "tf_half_pixel_for_nn": 135, "trilinear": [135, 182], "etc": [135, 182, 467], "beyond": 136, "time_axi": 136, "batch_axi": 136, "_reversesequence_tim": 136, "test_reversesequence_tim": 136, "_reversesequence_batch": 136, "test_reversesequence_batch": 136, "cnn": 137, "1703": 137, "06870": 137, "output_height": [137, 182], "output_width": [137, 182], "misalign": 137, "output_half_pixel": 137, "recommend": [137, 159, 463], "method": [137, 206, 463, 473, 481], "sampling_ratio": 137, "adapt": [137, 203, 477], "roi_width": 137, "likewis": 137, "rel": [137, 467], "batch_indic": 137, "_roialign_aligned_fals": 137, "get_roi_align_input_valu": 137, "4664": 137, "4466": 137, "3405": 137, "5688": 137, "6068": 137, "3714": 137, "4296": 137, "3835": 137, "5562": 137, "3510": 137, "2768": 137, "4883": 137, "5222": 137, "5528": 137, "4171": 137, "4713": 137, "4844": 137, "6904": 137, "4920": 137, "8774": 137, "6239": 137, "7125": 137, "6289": 137, "3355": 137, "3495": 137, "3022": 137, "4305": 137, "4696": 137, "3978": 137, "5423": 137, "3656": 137, "7050": 137, "5165": 137, "3172": 137, "7015": 137, "2912": 137, "5059": 137, "6476": 137, "6235": 137, "8299": 137, "5916": 137, "7389": 137, "7048": 137, "8372": 137, "8893": 137, "6227": 137, "6153": 137, "7097": 137, "6154": 137, "4585": 137, "2384": 137, "3379": 137, "3717": 137, "6100": 137, "7601": 137, "3767": 137, "3785": 137, "7147": 137, "9243": 137, "9727": 137, "5749": 137, "5826": 137, "5709": 137, "7619": 137, "8770": 137, "5355": 137, "2566": 137, "2141": 137, "2796": 137, "3600": 137, "4365": 137, "3504": 137, "2887": 137, "3661": 137, "2349": 137, "test_roialign_aligned_fals": 137, "_roialign_aligned_tru": 137, "5178": 137, "3434": 137, "3229": 137, "4474": 137, "6344": 137, "4031": 137, "5366": 137, "4428": 137, "4861": 137, "4023": 137, "2512": 137, "4002": 137, "5155": 137, "6954": 137, "3465": 137, "3350": 137, "4601": 137, "5881": 137, "3439": 137, "6849": 137, "4932": 137, "7141": 137, "8217": 137, "4719": 137, "4039": 137, "3070": 137, "2187": 137, "3337": 137, "4880": 137, "4870": 137, "1871": 137, "4914": 137, "5561": 137, "4192": 137, "3686": 137, "1433": 137, "4608": 137, "5971": 137, "5310": 137, "4982": 137, "2788": 137, "4386": 137, "6022": 137, "7524": 137, "5774": 137, "7024": 137, "7251": 137, "7338": 137, "8163": 137, "2393": 137, "4075": 137, "2525": 137, "4743": 137, "3671": 137, "2702": 137, "4105": 137, "6419": 137, "8308": 137, "5556": 137, "4543": 137, "5564": 137, "7502": 137, "9300": 137, "6626": 137, "5617": 137, "4813": 137, "4954": 137, "6663": 137, "6636": 137, "3721": 137, "2056": 137, "1928": 137, "2478": 137, "test_roialign_aligned_tru": 137, "find": [138, 180, 470], "test_round": 138, "short": [139, 479, 481], "signal_length": 139, "frame_step": 139, "slid": 139, "window_shap": 139, "frame_length": 139, "dft_unique_bin": 139, "onesided_length": 139, "no_window": 139, "nstft": 139, "stop": [139, 169, 474], "complex_out": 139, "test_stft": 139, "test_stft_with_window": 139, "scan_input": 140, "combin": [140, 141, 142, 174, 463, 464, 478], "idea": 140, "program": [140, 478], "state_vari": 140, "context": [140, 481], "involv": 140, "scan_output_el": 140, "restrict": 140, "impos": 140, "effici": [140, 478, 479, 481], "memori": [140, 473, 478, 481], "alloc": [140, 478], "scan_input_direct": 140, "twice": [140, 479], "scan_output_direct": 140, "prepend": 140, "scan_input_ax": 140, "scan_output_ax": 140, "togeth": [140, 475], "num_scan_input": [140, 481], "axis_1": 140, "axis_m": 140, "init_1": 140, "init_n": 140, "scan_1": 140, "scan_m": 140, "pseudo": [140, 203, 204, 206, 478], "scan_i": 140, "axis_i": 140, "scan_j": 140, "axis_j": 140, "sequence_length": 140, "st_1": 140, "st_n": 140, "scan_out_1": 140, "scan_out_k": 140, "si_1": 140, "si_m": 140, "so_1": 140, "so_k": 140, "show": [140, 460, 468, 473, 478, 479, 480, 481], "h_0": 140, "scanloop": 140, "nest": 140, "h_tminus1": 140, "x_t": 140, "t5": 140, "scan_input_elt": 140, "scan_output_elt": 140, "initial_state_and_scan_input": 140, "final_state_and_scan_output": 140, "_scan_8": 140, "sum_in": 140, "next": [140, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 468, 473, 479, 481], "sum_out": 140, "id_nod": 140, "scan_bodi": 140, "no_sequence_len": 140, "test_scan_sum": 140, "_scan_9": 140, "test_scan9_sum": 140, "max_sequence_length": 140, "bst_1": 140, "bst_n": 140, "meaning": 140, "b_scan_out_1": 140, "b_scan_out_k": 140, "itself": [141, 142, 463, 478, 481], "_scatter_without_axi": 141, "test_scatter_without_axi": 141, "_scatter_with_axi": 141, "test_scatter_with_axi": 141, "counter": 141, "duplic": [142, 143, 181], "idx1": [142, 143], "idx2": [142, 143], "_scatter_elements_without_axi": 142, "scatter_el": 142, "test_scatter_elements_without_axi": 142, "_scatter_elements_with_axi": 142, "test_scatter_elements_with_axi": 142, "_scatter_elements_with_negative_indic": 142, "test_scatter_elements_with_negative_indic": 142, "_scatter_elements_with_duplicate_indic": 142, "test_scatter_elements_with_duplicate_indic": 142, "_scatter_elements_with_reduction_max": 142, "test_scatter_elements_with_reduction_max": 142, "_scatter_elements_with_reduction_min": 142, "test_scatter_elements_with_reduction_min": 142, "That": [143, 177, 203, 204, 206, 463, 478, 479, 481], "update_indic": 143, "idx": 143, "particular": [143, 461, 463], "ensur": [143, 479], "_scatternd": 143, "scatter_nd_impl": 143, "test_scatternd": 143, "_scatternd_add": 143, "test_scatternd_add": 143, "_scatternd_multipli": 143, "test_scatternd_multipli": 143, "_scatternd_max": 143, "test_scatternd_max": 143, "_scatternd_min": 143, "test_scatternd_min": 143, "gamma": [144, 197, 198], "67326319217681884765625": 144, "approxim": 144, "6732632423543772848170429916717": 144, "05070102214813232421875": 144, "0507009873554804934193349852946": 144, "79272318": 144, "test_selu_exampl": 144, "test_selu": 144, "_selu_default": 144, "default_gamma": 144, "test_selu_default": 144, "6732": 144, "0507": 144, "eras": 148, "at_back": 149, "at_front": 149, "test_input": 149, "sequence_insert_reference_implement": 149, "test_sequence_insert_": 149, "independ": [151, 195, 204, 205, 463, 478], "parallel": [151, 174, 192, 479], "additional_input": 151, "out_sequ": 151, "_sequence_map_identity_1_sequ": 151, "in0": [151, 464], "out0": [151, 464], "seq_map_bodi": 151, "test_sequence_map_identity_1_sequ": 151, "_sequence_map_identity_2_sequ": 151, "in1": [151, 464], "out1": [151, 464], "y0": 151, "test_sequence_map_identity_2_sequ": 151, "_sequence_map_identity_1_sequence_1_tensor": 151, "test_sequence_map_identity_1_sequence_1_tensor": 151, "_sequence_map_add_2_sequ": 151, "test_sequence_map_add_2_sequ": 151, "_sequence_map_add_1_sequence_1_tensor": 151, "test_sequence_map_add_1_sequence_1_tensor": 151, "_sequence_map_extract_shap": 151, "in_seq": 151, "test_sequence_map_extract_shap": 151, "upto": 152, "clamp": [152, 159], "test_shap": 152, "_exampl": [152, 164], "preserv": 152, "_start_1": 152, "_end_1": 152, "_start_negative_1": 152, "_end_negative_1": 152, "_start_1_end_negative_1": 152, "_start_1_end_2": 152, "_clip_start": 152, "_clip_end": 152, "lambd": 153, "formul": 153, "_hard_shrink": 153, "test_shrink_hard": 153, "_soft_shrink": 153, "test_shrink_soft": 153, "26894143": 154, "7310586": 154, "test_sigmoid_exampl": 154, "test_sigmoid": 154, "test_sign": 155, "test_sin_exampl": 156, "test_sin": 156, "17520118": 157, "test_sinh_exampl": 157, "test_sinh": 157, "total": [158, 187, 194, 196, 201], "though": 158, "test_size_exampl": 158, "test_siz": 158, "basic": [159, 169], "highlight": [159, 481], "made": [159, 463, 478], "negatv": 159, "accommod": 159, "unknown": [159, 463], "int_max": 159, "int_min": 159, "_slice": 159, "test_slic": 159, "_slice_neg": 159, "test_slice_neg": 159, "_slice_start_out_of_bound": 159, "test_slice_start_out_of_bound": 159, "_slice_end_out_of_bound": 159, "test_slice_end_out_of_bound": 159, "_slice_default_ax": 159, "test_slice_default_ax": 159, "_slice_default_step": 159, "test_slice_default_step": 159, "_slice_neg_step": 159, "test_slice_neg_step": 159, "_slice_negative_ax": 159, "test_slice_negative_ax": 159, "09003058": 160, "24472848": 160, "66524094": 160, "test_softmax_exampl": 160, "_softmax_axi": 160, "032058604": 160, "08714432": 160, "23688284": 160, "6439143": 160, "test_softmax_large_numb": 160, "test_softmax_axis_0": 160, "test_softmax_axis_1": 160, "test_softmax_axis_2": 160, "test_softmax_negative_axi": 160, "test_softmax_default_axi": 160, "measur": [161, 479], "cross": 161, "entropi": 161, "l_1": 161, "l_2": 161, "l_n": 161, "j_1": 161, "j_2": 161, "j_k": 161, "l_i": 161, "ground": 161, "truth": 161, "manual": 161, "assign": [161, 203, 205, 206], "log_prob": 161, "prob": 161, "31326166": 162, "69314718": 162, "31326163": 162, "test_softplus_exampl": 162, "test_softplu": 162, "test_softsign_exampl": 163, "test_softsign": 163, "test_spacetodepth": 164, "test_spacetodepth_exampl": 164, "_1d": 165, "output_1": 165, "output_2": 165, "output_3": 165, "test_split_equal_parts_1d": 165, "test_split_variable_parts_1d": 165, "test_split_equal_parts_2d": 165, "test_split_variable_parts_2d": 165, "_default_valu": 165, "test_split_equal_parts_default_axi": 165, "test_split_variable_parts_default_axi": 165, "_zero_size_split": 165, "emtpi": 165, "test_split_zero_size_split": 165, "chunk": 166, "root": [167, 203, 204, 467], "test_sqrt_exampl": 167, "test_sqrt": 167, "rais": [168, 462, 477, 481], "_squeez": 168, "test_squeez": 168, "_squeeze_negative_ax": 168, "test_squeeze_negative_ax": 168, "clean": 169, "examin": 169, "stopword": 169, "lowercas": 169, "uppercas": 169, "just": [169, 203, 466, 478, 481], "case_change_act": 169, "is_case_sensit": 169, "identif": 169, "sensit": [169, 467], "environ": [169, 478, 479], "en_u": 169, "_nostopwords_nochangecas": 169, "mondai": 169, "tuesdai": 169, "noop": 169, "test_strnormalizer_nostopwords_nochangecas": 169, "_monday_casesensintive_nochangecas": 169, "wednesdai": 169, "thursdai": 169, "test_strnormalizer_export_monday_casesensintive_nochangecas": 169, "_monday_casesensintive_low": 169, "test_strnormalizer_export_monday_casesensintive_low": 169, "_monday_casesensintive_upp": 169, "test_strnormalizer_export_monday_casesensintive_upp": 169, "_monday_empty_output": 169, "test_strnormalizer_export_monday_empty_output": 169, "_monday_insensintive_upper_twodim": 169, "cecedil": 169, "accent": 169, "german": 169, "umlaut": 169, "fail": [169, 196, 462, 481], "eszett": 169, "test_strnormalizer_export_monday_insensintive_upper_twodim": 169, "subtract": 170, "test_sub_exampl": 170, "test_sub": 170, "test_sub_uint8": 170, "_sub_broadcast": 170, "test_sub_bcast": 170, "test_sum_exampl": 171, "test_sum_one_input": 171, "test_sum_two_input": 171, "test_tan_exampl": 172, "test_tan": 172, "76159418": 173, "test_tanh_exampl": 173, "test_tanh": 173, "gram": 174, "ngram_index": 174, "consecut": [174, 463], "discontinu": 174, "token": 174, "pool_int64": 174, "ngram_count": 174, "pool_str": 174, "idf": 174, "tfidf": 174, "max_gram_length": 174, "max_skip_count": 174, "min_gram_length": 174, "skip_count": 174, "criteria": [174, 466], "csr": 174, "csc": 174, "due": [174, 481], "popular": [174, 200, 201, 478], "attributeproto": [174, 466, 481], "pool_": 174, "ngram": 174, "ether": 174, "_tf_only_bigrams_skip0": 174, "unigram": 174, "bigram": 174, "tfidfvectorizerhelp": 174, "make_node_noweight": 174, "test_tfidfvectorizer_tf_only_bigrams_skip0": 174, "_tf_batch_onlybigrams_skip0": 174, "test_tfidfvectorizer_tf_batch_onlybigrams_skip0": 174, "_tf_onlybigrams_levelempti": 174, "test_tfidfvectorizer_tf_onlybigrams_levelempti": 174, "_tf_onlybigrams_skip5": 174, "test_tfidfvectorizer_tf_onlybigrams_skip5": 174, "_tf_batch_onlybigrams_skip5": 174, "test_tfidfvectorizer_tf_batch_onlybigrams_skip5": 174, "_tf_uniandbigrams_skip5": 174, "test_tfidfvectorizer_tf_uniandbigrams_skip5": 174, "_tf_batch_uniandbigrams_skip5": 174, "test_tfidfvectorizer_tf_batch_uniandbigrams_skip5": 174, "test_thresholdedrelu_exampl": 175, "test_thresholdedrelu": 175, "test_thresholdedrelu_default": 175, "output_dim": [176, 475], "input_dim": [176, 475], "_tile": 176, "test_til": 176, "_tile_precomput": 176, "test_tile_precomput": 176, "retriev": [177, 461, 468, 479], "largest": [177, 467, 481], "smallest": 177, "a_2": 177, "a_n": 177, "tiebreak": 177, "_top_k": 177, "values_ref": 177, "indices_ref": 177, "topk_sorted_implement": 177, "test_top_k": 177, "_top_k_smallest": 177, "test_top_k_smallest": 177, "_top_k_negative_axi": 177, "test_top_k_negative_axi": 177, "perm": [178, 481], "test_transpose_default": 178, "_all_permut": 178, "itertool": 178, "test_transpose_all_permutations_": 178, "retain": [179, 180], "_triu": 179, "triu_reference_implement": 179, "test_triu": 179, "_triu_neg": 179, "test_triu_neg": 179, "_triu_out_neg_out": 179, "test_triu_out_neg_out": 179, "_triu_po": 179, "test_triu_po": 179, "_triu_out_po": 179, "test_triu_out_po": 179, "_triu_squar": 179, "test_triu_squar": 179, "_triu_square_neg": 179, "test_triu_square_neg": 179, "_triu_one_row": 179, "test_triu_one_row": 179, "_triu_zero": 179, "test_triu_zero": 179, "_tril": 179, "tril_reference_implement": 179, "test_tril": 179, "_tril_neg": 179, "test_tril_neg": 179, "_tril_out_neg": 179, "test_tril_out_neg": 179, "_tril_po": 179, "test_tril_po": 179, "_tril_out_po": 179, "test_tril_out_po": 179, "_tril_squar": 179, "test_tril_squar": 179, "_tril_square_neg": 179, "test_tril_square_neg": 179, "_tril_one_row": 179, "test_tril_one_row_neg": 179, "_tril_zero": 179, "test_tril_zero": 179, "subtensor": 180, "inverse_indic": 180, "fourth": 180, "ascend": [180, 187], "attribute_sort": 180, "attribute_axi": 180, "output_i": 180, "output_indic": 180, "output_inverse_indic": 180, "output_count": 180, "better": [180, 204, 478, 481], "understand": 180, "maintain": [180, 182, 190], "_sorted_without_axi": 180, "node_sort": 180, "specify_int64": 180, "test_unique_sorted_without_axi": 180, "_not_sorted_without_axi": 180, "node_not_sort": 180, "issu": [180, 479], "8621": 180, "recov": 180, "unsort": 180, "prepar": [180, 461], "argsorted_indic": 180, "argsort": 180, "inverse_indices_map": 180, "si": [180, 478], "test_unique_not_sorted_without_axi": 180, "_sorted_with_axi": 180, "test_unique_sorted_with_axi": 180, "_sorted_with_axis_3d": 180, "test_unique_sorted_with_axis_3d": 180, "_sorted_with_negative_axi": 180, "test_unique_sorted_with_negative_axi": 180, "output_rank": 181, "plu": 181, "matter": 181, "come": [181, 481], "_unsqueeze_one_axi": 181, "expand_dim": 181, "test_unsqueeze_axis_": 181, "_unsqueeze_two_ax": 181, "test_unsqueeze_two_ax": 181, "_unsqueeze_three_ax": 181, "test_unsqueeze_three_ax": 181, "_unsqueeze_unsorted_ax": 181, "test_unsqueeze_unsorted_ax": 181, "_unsqueeze_negative_ax": 181, "test_unsqueeze_negative_ax": 181, "seen": [181, 481], "_nearest": 182, "test_upsample_nearest": 182, "experiment": 182, "input_width": 182, "width_scal": 182, "input_height": 182, "height_scal": 182, "test_where_exampl": 183, "_long": 183, "test_where_long_exampl": 183, "logical_xor": 184, "test_xor2d": 184, "test_xor3d": 184, "test_xor4d": 184, "_xor_broadcast": 184, "test_xor_bcast3v1d": 184, "test_xor_bcast3v2d": 184, "test_xor_bcast4v2d": 184, "test_xor_bcast4v3d": 184, "test_xor_bcast4v4d": 184, "comparison": [186, 192, 200, 201, 481], "against": [186, 205], "kei": [187, 189, 192, 202, 463, 465, 466, 478, 481], "dens": [187, 463, 478], "exce": 187, "max_map": 187, "cast_to": 187, "to_float": 187, "to_str": 187, "to_int64": 187, "map_form": 187, "vice": [188, 192], "versa": [188, 192], "cats_int64": [188, 196], "cats_str": [188, 196], "default_int64": [188, 192], "default_": [188, 192], "default_str": [188, 192], "dictionari": [189, 463, 478], "vocabulari": 189, "string_vocabulari": 189, "int64_vocabulari": 189, "hold": [189, 191, 465, 481], "inputdimens": 190, "leav": [191, 200, 201, 479], "canon": 191, "extrem": 191, "imputed_value_float": 191, "imputed_value_int64": 191, "fit": 191, "replaced_value_float": 191, "replaced_value_int64": 191, "imputed_valu": 191, "keys_": 192, "impli": 192, "keys_str": 192, "ami": 192, "salli": 192, "values_int64": 192, "dori": 192, "default_float": 192, "keys_float": 192, "keys_int64": 192, "values_float": 192, "values_str": 192, "fetch": 192, "classes_str": 192, "classlabels_int": [193, 197], "classlabel": 193, "classlabels_str": [193, 197, 200, 202], "intercept": [193, 194, 479], "multi_class": 193, "ovr": 193, "post_transform": [193, 194, 197, 198, 200, 201], "logist": [193, 194, 197, 198, 200, 201], "softmax_zero": [193, 194, 197, 198, 200, 201], "probit": [193, 194, 197, 198, 200, 201], "latter": 193, "regress": [194, 198, 201, 478, 480], "univari": 194, "infix": 195, "wide": [195, 205], "categori": [196, 481], "lookup": 196, "cats_": 196, "machin": [197, 198, 463, 478, 479, 481], "classlabels_": [197, 200, 202], "kernel_param": [197, 198], "coef0": [197, 198], "degre": [197, 198], "unus": [197, 198], "kernel_typ": [197, 198], "poli": [197, 198], "prob_a": 197, "prob_b": 197, "raw": [197, 465, 466, 470], "rho": [197, 198], "support_vector": [197, 198], "vectors_per_class": 197, "bactch": 197, "svm": [198, 478], "anomali": 198, "detect": [198, 481], "n_support": 198, "one_class": 198, "regardless": 199, "tree": [200, 201, 478], "ensembl": [200, 201], "nodes_x": 200, "prefix": [200, 201, 466], "class_": 200, "vote": [200, 201], "leaf": [200, 201], "class_weight": 200, "classlabels_int64": [200, 202], "class_id": 200, "_as_tensor": [200, 201], "base_valu": [200, 201], "unassign": [200, 201], "base_values_as_tensor": [200, 201], "class_nodeid": 200, "id": [200, 201, 461, 466], "class_treeid": 200, "class_weights_as_tensor": 200, "nodes_falsenodeid": [200, 201], "child": [200, 201], "nodes_featureid": [200, 201], "nodes_hitr": [200, 201], "nodes_hitrates_as_tensor": [200, 201], "nodes_missing_value_tracks_tru": [200, 201], "what": [200, 201, 463, 480, 481], "presenc": [200, 201], "defalt": [200, 201], "nodes_mod": [200, 201], "kind": [200, 201, 205, 461, 478, 481], "branch_leq": [200, 201], "branch_lt": [200, 201], "branch_gt": [200, 201], "branch_eq": [200, 201], "branch_neq": [200, 201], "nodes_nodeid": [200, 201], "restart": [200, 201], "nodes_treeid": [200, 201], "nodes_truenodeid": [200, 201], "nodes_valu": [200, 201], "nodes_values_as_tensor": [200, 201], "regressor": [201, 478, 481], "nodes_": 201, "target_": 201, "target_weight": 201, "aggregate_funct": 201, "aggreg": 201, "n_target": 201, "sequenti": [201, 203, 206], "target_id": 201, "target_nodeid": 201, "target_treeid": 201, "target_weights_as_tensor": 201, "stochast": [203, 204, 206], "conduct": [203, 204, 206], "As": [203, 206, 478, 479, 481], "rate": [203, 204, 206], "norm_coeffici": [203, 204, 206], "decai": [203, 206], "decay_factor": 203, "small": [203, 204, 479, 481], "x_new": [203, 204, 206], "h_new": [203, 204], "_2": [203, 204], "g_regular": [203, 204, 206], "h_adapt": 203, "x_1": [203, 204, 206], "x_2": [203, 204, 206], "jointli": [203, 206], "cours": [203, 206], "reus": [203, 205, 478], "entir": [203, 478], "jmlr": 203, "volume12": 203, "duchi11a": 203, "composit": 203, "descent": [203, 463], "_adagrad": 203, "001": [203, 204, 206, 481], "ai_onnx_preview_training_domain": [203, 204, 206], "apply_adagrad": 203, "test_adagrad": 203, "_adagrad_multipl": 203, "g1": [203, 204, 206, 464], "g2": [203, 204, 206, 464], "h1": [203, 204, 206], "h2": [203, 204, 206], "x1_new": [203, 204, 206], "x2_new": [203, 204, 206], "h1_new": [203, 204], "h2_new": [203, 204], "test_adagrad_multipl": 203, "histor": 204, "rest": 204, "moreov": 204, "v_new": [204, 206], "h_sqrt": 204, "r_adjust": 204, "post": 204, "x_final": 204, "norm_coefficient_post": 204, "999": 204, "aka": 204, "_adam": 204, "apply_adam": 204, "test_adam": 204, "_adam_multipl": 204, "v2": [204, 206], "v1_new": [204, 206], "v2_new": [204, 206], "test_adam_multipl": 204, "deriv": 205, "illustr": [205, 478], "trainabl": 205, "sake": [205, 206], "simplic": [205, 206], "dy": 205, "dw": 205, "dz": 205, "1st": 205, "2nd": 205, "3rd": 205, "reason": 205, "concept": [205, 460, 480], "dh": 205, "2o": 205, "dx": 205, "h_1": 205, "z_1": 205, "y_1": 205, "minim": [205, 481], "fed": 205, "symbol": [205, 463], "substitut": 205, "sg": 206, "nesterov": 206, "beta_adjust": 206, "_momentum": 206, "apply_momentum": 206, "test_momentum": 206, "_nesterov_momentum": 206, "apply_nesterov": 206, "test_nesterov_momentum": 206, "_momentum_multipl": 206, "test_momentum_multipl": 206, "compar": [210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 478, 481], "older": [210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "newer": [210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "markdown": [210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 478], "text": [210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 478], "green": [210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 481], "red": [210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "delet": [210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "anyth": [210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "introduc": [460, 479, 481], "tutori": 460, "exist": [460, 470, 473, 478, 481], "introduct": 460, "onnx_opset_vers": [460, 468, 469, 478], "structur": [460, 463, 478, 481], "preview": [460, 469], "classmethod": 461, "run_nod": 461, "cpu": 461, "outputs_info": 461, "param": 461, "__init__": 461, "py": [461, 478, 479, 481], "supports_devic": 461, "compil": [461, 478, 479], "suit": 461, "device_typ": 461, "device_id": 461, "cuda": 461, "loader": 461, "data_dir": 461, "home": 461, "xadupr": 461, "xagit": 461, "load": [461, 465, 475, 478, 481], "disk": [461, 481], "parent_modul": [], "properti": 467, "parent": [], "global": 478, "backendtest": [], "test_suit": [], "testsuit": [], "testrunn": [], "unittest": [], "texttestrunn": [], "host": [], "onnx_backend_test": [], "model_nam": [], "url": 478, "model_dir": [], "onnx_ml_pb2": 481, "modelproto": [462, 464, 465, 466, 467, 471, 472, 473, 474, 475, 476, 477, 481], "data_set": [], "rtol": [], "atol": [], "__test__": [], "byte": [462, 466, 473, 474, 481], "full_check": 462, "protobuf": [463, 466, 468, 473, 480, 481], "modul": [463, 481], "instanti": 463, "render": 463, "json": 463, "ny": 463, "singular": 463, "enforc": 463, "descriptor": [463, 478], "googl": [463, 466], "pyext": 463, "_messag": 463, "messagedescriptor": 463, "doc_str": [463, 464, 466, 478, 481], "ref_attr_nam": [463, 481], "tp": [463, 475], "compris": 463, "parameter": 463, "acycl": 463, "quantization_annot": 463, "sparse_initi": [463, 466], "value_info": [463, 466, 474, 481], "throughout": 463, "key_typ": [463, 466], "string_kei": 463, "librari": [463, 478, 480, 481], "level": 463, "bundl": 463, "metadata": [463, 467, 480], "ir_vers": [463, 481], "metadata_prop": [463, 478, 481], "model_vers": [463, 464, 478, 481], "producer_vers": [463, 464, 478, 481], "training_info": [463, 478, 481], "mathemat": [463, 478], "dag": 463, "commonli": 463, "pipelin": [463, 479, 481], "convolv": 463, "rare": [463, 478, 479, 481], "immut": 463, "signatur": [463, 473, 478, 479], "operatorset": 463, "statu": 463, "belong": 463, "entiti": [461, 463], "membership": 463, "wire": 463, "header": [463, 479], "ir_build_metadata": 463, "ir_version_prereleas": 463, "magic": 463, "map_valu": [463, 469], "optional_valu": [463, 469], "sequence_valu": [463, 469], "sparse_tensor_valu": [463, 469], "homogen": 463, "valueinfo": 463, "complet": 463, "nnz": 463, "serv": [463, 481], "fulli": 463, "shapeproto": 463, "themselv": 463, "segment": 463, "data_loc": 463, "double_data": [463, 469], "external_data": [463, 465], "float_data": [463, 469, 481], "int32_data": [463, 469], "int64_data": [463, 469], "raw_data": [463, 466, 481], "string_data": [463, 469], "uint64_data": [463, 469], "improv": [463, 478, 481], "initialization_bind": [463, 466], "update_bind": 463, "immedi": 463, "value_typ": 463, "opaqu": 463, "sparsetensor": [463, 466], "map_typ": 463, "opaque_typ": 463, "optional_typ": 463, "sequence_typ": 463, "sparse_tensor_typ": 463, "tensor_typ": [463, 481], "graphproto": [464, 466, 471, 472, 475, 481], "io_map": 464, "prefix1": 464, "prefix2": 464, "undescor": 464, "delimit": 464, "docstr": [464, 475], "m1": 464, "m2": 464, "add_prefix_graph": 464, "rename_nod": 464, "rename_edg": 464, "rename_input": 464, "rename_output": 464, "rename_initi": 464, "rename_value_info": 464, "info": [464, 467], "util": [464, 468], "merg": [464, 478, 481], "mutat": 464, "add_prefix": 464, "rename_funct": 464, "_prefix": 464, "nane": 464, "expand_out_dim": 464, "dim_idx": 464, "expand_out_dim_graph": 464, "extern": [465, 470, 473], "embed": 465, "save_model": 465, "all_tensors_to_one_fil": 465, "size_threshold": 465, "1024": 465, "convert_attribut": 465, "prece": 465, "base_dir": [465, 470], "directori": [465, 473], "ideal": 465, "field_kei": 465, "modifi": [465, 478, 479, 481], "base_path": 465, "serial": [465, 466, 468, 477, 480], "path": [465, 467, 470, 474, 476, 479], "folder": [465, 479], "checksum": 465, "basepath": 465, "filepath": 465, "strip": 465, "get_attribute_valu": 466, "attr": 466, "printable_attribut": 466, "printable_dim": 466, "printable_graph": 466, "displai": [466, 481], "printable_nod": 466, "printable_tensor_proto": 466, "printable_typ": 466, "typeproto": [466, 481], "printable_value_info": 466, "valueinfoproto": [466, 481], "find_min_ir_version_for": 466, "opsetidlist": 466, "operatorsetidproto": [466, 481], "split_complex_to_pair": 466, "ca": 466, "make_attribut": [466, 481], "make_empty_tensor_value_info": [466, 481], "make_funct": [466, 481], "fname": 466, "functionproto": [466, 471, 472, 481], "sparsetensorproto": [466, 478, 481], "make_map": [466, 481], "sequenceproto": [466, 470, 478, 481], "mapproto": [466, 470, 478, 481], "make_model": [466, 481], "make_opt": [466, 481], "intern": [466, 481], "enum_type_wrapp": 466, "enumtypewrapp": 466, "0x7f96c8b58460": 466, "optionalproto": [466, 470, 481], "inner_type_proto": 466, "make_sequ": [466, 481], "0x7f96c8b583a0": 466, "make_sparse_tensor_type_proto": [466, 481], "shape_denot": 466, "make_sparse_tensor_value_info": [466, 481], "proto": [466, 468, 472, 481], "elem_shape_denot": 466, "make_training_info": [466, 481], "algorithm_bind": 466, "traininginfoproto": [466, 478, 481], "raw_model_info": 467, "sha": 467, "tag": 467, "model_path": [467, 474], "zoo": 467, "repo": 467, "io": [467, 473], "port": 467, "model_sha": 467, "sha256": 467, "digest": 467, "search": [467, 479], "manifest": 467, "force_reload": 467, "silent": [467, 481], "download": 467, "automat": [467, 478, 479], "alreadi": [467, 474, 478], "cach": 467, "suppress": 467, "warn": 467, "trust": 467, "releas": [468, 479], "__version__": [468, 478], "faster": [468, 478, 481], "verifi": 468, "checker": [468, 476, 480], "compos": [468, 479], "external_data_help": 468, "hub": 468, "printer": 468, "shape_infer": [468, 481], "version_convert": [468, 479], "pprint": [469, 481], "get_all_schemas_with_histori": 469, "onnx_cpp2py_export": [469, 481], "opschema": 469, "get_function_op": 469, "overload": 469, "max_inclusive_vers": 469, "submodul": [469, 479], "schemaerror": 469, "get_all_schema": 469, "has_schema": 469, "schema_version_map": 469, "to_arrai": [470, 481], "help": [470, 478], "to_list": 470, "from_list": 470, "lst": 470, "to_dict": 470, "from_dict": 470, "to_opt": 470, "opt": 470, "from_opt": 470, "convert_endian": 470, "endia": 470, "combine_pairs_to_complex": 470, "fa": 470, "function_text": 471, "pars": [471, 473, 478, 480], "graph_text": 471, "model_text": 471, "buffer": [473, 478], "onnx_model": [473, 481], "autom": [473, 479], "restor": [473, 481], "load_external_data": 473, "load_external_data_for_model": 473, "futur": 473, "load_model_from_str": 473, "know": [473, 478], "he": 473, "parsefromstr": [473, 481], "tp2": 473, "shortcut": 473, "load_tensor_from_str": [473, 481], "check_typ": 474, "strict_mod": 474, "data_prop": 474, "conflict": 474, "bug": 474, "unspecifi": [474, 479], "stricter": 474, "propag": 474, "output_path": [474, 476], "2gb": 474, "getpydotgraph": 475, "rankdir": 475, "lr": [475, 481], "node_produc": 475, "callabl": 475, "embed_docstr": 475, "dot": 475, "getopnodeproduc": 475, "pydot_graph": 475, "model_onnx": 475, "write_dot": 475, "update_model_dim": 475, "input_1": 475, "input_2": 475, "put": 475, "updated_model": 475, "input_path": 476, "output_nam": [476, 479], "check_model": [476, 481], "_boundari": 476, "model_": 476, "_cut": 476, "through_": 476, "_main": 476, "graph_": 476, "target_vers": 477, "runtimeerror": 477, "unsupport": 477, "languag": [478, 479, 481], "langag": 478, "onnx_linear_regressor": 478, "veri": [478, 479, 481], "developp": 478, "why": [478, 479], "aim": 478, "easier": [478, 479, 481], "deploi": [478, 479, 481], "interpretor": 478, "task": 478, "written": 478, "axc": 478, "turn": [478, 481], "visual": [478, 481], "frozen": 478, "deploy": 478, "replic": 478, "docker": 478, "suitabl": 478, "java": 478, "javascript": 478, "webassembli": 478, "arm": 478, "But": [478, 481], "refresh": 478, "track": 478, "offer": [478, 479, 481], "human": 478, "readabl": 478, "namespac": 478, "distinct": [478, 481], "model_author": 478, "person": 478, "organ": 478, "model_licens": 478, "licens": 478, "cover": 478, "few": 478, "dedic": [478, 479], "hardli": 478, "treeensmbl": 478, "preprocess": 478, "competit": 478, "null": 478, "design": [478, 479], "np_type_to_tensor_typ": 478, "reg": 478, "9a": 478, "z_": 478, "att": [478, 481], "dir": [478, 481], "strongli": [478, 479, 481], "imposs": [478, 481], "minor": [478, 479], "bring": 478, "attach": 478, "insid": [478, 481], "recent": [478, 479], "slow": 478, "exeut": 478, "pairwis": [478, 481], "distanc": [478, 481], "x_j": 478, "still": [478, 481], "slower": 478, "anymor": 478, "long": [478, 479, 481], "cdist": 478, "prove": 478, "significantli": 478, "enough": 478, "effort": 478, "advantag": 478, "shorter": 478, "leverag": 478, "reli": [478, 479, 481], "manag": 478, "obvious": 478, "offici": 478, "netron": 478, "screenshot": 478, "onnx2pi": 478, "zetan": 478, "latenc": 479, "easi": [479, 481], "piec": [479, 481], "sklearn": 479, "scikit": 479, "rewrit": 479, "whatev": 479, "close": 479, "onnxmltool": 479, "lightgbm": 479, "xgboost": 479, "pyspark": 479, "libsvm": 479, "challeng": [479, 480], "rythm": 479, "everytim": 479, "year": 479, "goe": 479, "difficult": 479, "somehow": 479, "primit": 479, "subpart": 479, "stori": 479, "predictor": 479, "latest": [479, 481], "newest": 479, "instal": [479, 481], "target_opset": [479, 481], "upgrad": 479, "verbos": 479, "whole": [479, 481], "pictur": 479, "hide": 479, "creation": [479, 481], "deal": 479, "coef": 479, "get_unique_variable_nam": 479, "model_coef": 479, "classifier_attr": 479, "number_of_class": 479, "add_initi": 479, "proto_dtyp": 479, "ravel": 479, "model_intercept": 479, "full_nam": 479, "get_unique_operator_nam": 479, "argmax_output_nam": 479, "raw_score_nam": 479, "compact": 479, "kmean": 479, "onnxreducesumsquar": 479, "op_vers": 479, "opv": 479, "gemm_out": 479, "onnxmatmul": 479, "onnxadd": 479, "c2": 479, "ll": 479, "onnxargmin": 479, "onnxsqrt": 479, "signific": 479, "impact": 479, "switch": 479, "insight": 479, "topic": 479, "weird": 479, "1e17": 479, "decis": 479, "forest": 479, "fall": 479, "fastest": 479, "woe": 479, "repositori": 479, "fork": 479, "clone": 479, "conda": 479, "might": 479, "date": 479, "azur": 479, "instruct": 479, "anaconda": 479, "ye": 479, "quiet": 479, "py3": 479, "forg": 479, "libprotobuf": 479, "git": 479, "init": [479, 481], "recurs": 479, "onnx_build_test": 479, "onnx_ml": 479, "cmake_arg": 479, "donnx_use_protobuf_shared_lib": 479, "ON": 479, "donnx_use_lite_proto": 479, "donnx_werror": 479, "setup": 479, "bdist_wheel": 479, "linux": 479, "build_ext": 479, "gen_proto": 479, "cmd_tool": 479, "stat_coverag": 479, "gen_doc": 479, "subfold": 479, "pattern": 479, "operator_set": 479, "regist": 479, "schema": [479, 481], "again": [479, 481], "pr": 479, "changelog": 479, "testcoverag": 479, "face": 480, "trick": 480, "experi": 480, "xa": 481, "decompos": 481, "said": 481, "set_model_prop": 481, "node1": 481, "node2": 481, "metata": 481, "tell": 481, "inspect": 481, "shape2tupl": 481, "nice": 481, "obj": 481, "deseri": 481, "address": 481, "linear_regress": 481, "gb": 481, "overcom": 481, "numpy_tensor": 481, "onnx_tensor": 481, "serialized_tensor": 481, "saved_tensor": 481, "endswith": 481, "operatorproto": 481, "operatorsetproto": 481, "stringstringentryproto": 481, "tensorshapeproto": 481, "simplifi": 481, "were": 481, "conveni": 481, "around": 481, "000": 481, "031": 481, "277": 481, "315": 481, "intial": 481, "kept": 481, "initiliaz": 481, "tranpos": 481, "node_transpos": 481, "ta": 481, "startswith": 481, "make_attribute_ref": 481, "distinguish": 481, "someth": 481, "prop": 481, "key1": 481, "value1": 481, "key2": 481, "value2": 481, "training_tool_test": 481, "rsum": 481, "then_cst": 481, "cst1": 481, "wrap": 481, "else_cst": 481, "cst2": 481, "freez": 481, "onnx_if_sign": 481, "seem": 481, "quit": 481, "prealloc": 481, "neighbor": 481, "problem": 481, "dist": 481, "m_": 481, "w_j": 481, "next_in": 481, "next_out": 481, "cdistd_17_ident": 481, "cdistdf_17_c0": 481, "cdistdf_17_sub": 481, "cdistdf_17_reduced0": 481, "cdistdf_17_reducesumsquar": 481, "cdistdf_17_ident": 481, "onnxident": 481, "list_valu": 481, "29599822460675": 481, "86516699239603": 481, "70495899914215": 481, "260": 481, "08772982740413": 481, "65272105889147": 481, "23295157108991": 481, "45232560871727": 481, "83789715805776": 481, "92727431421793": 481, "48710175784703": 481, "27761768038069": 481, "87785569894749": 481, "71487894705504": 481, "301": 481, "0518319089629": 481, "64235742280055": 481, "78493504731911": 481, "41218591022718": 481, "26561056133608": 481, "04032954135549": 481, "229": 481, "5428380626701": 481, "549262642481615": 481, "140": 481, "95737409864623": 481, "8145187836131": 481, "61397011283958": 481, "185488100413366": 481, "864151796743855": 481, "09054590340892": 481, "187": 481, "72501631246712": 481, "779503579806025": 481, "642642730674076": 481, "58517761667535": 481, "56025104939847": 481, "92423223842056": 481, "9166231927213": 481, "73512816431007": 481, "150864499514297": 481, "37105466673813": 481, "5755688281476": 481, "68676290979731": 481, "36748960443065": 481, "knny_arrayfeatureextractorcst": 481, "1394007205963135": 481, "6848101019859314": 481, "234825849533081": 481, "4023416340351105": 481, "17742614448070526": 481, "46278226375579834": 481, "4017809331417084": 481, "630198359489441": 481, "5096521973609924": 481, "7774903774261475": 481, "4380742907524109": 481, "2527953386306763": 481, "0485529899597168": 481, "950775384902954": 481, "420017957687378": 481, "7062702178955078": 481, "8675580024719238": 481, "15135720372200012": 481, "9772778749465942": 481, "9500884413719177": 481, "5529897212982178": 481, "7421650290489197": 481, "653618574142456": 481, "8644362092018127": 481, "5327792167663574": 481, "37816253304481506": 481, "4693588018417358": 481, "154947429895401": 481, "6724604368209839": 481, "7262825965881348": 481, "35955315828323364": 481, "8131462931632996": 481, "8707971572875977": 481, "056165341287851334": 481, "5788496732711792": 481, "3115525245666504": 481, "2302906513214111": 481, "302302747964859": 481, "202379822731018": 481, "38732680678367615": 481, "269754648208618": 481, "18718385696411133": 481, "4543657302856445": 481, "04575851559638977": 481, "9072983860969543": 481, "12898291647434235": 481, "05194539576768875": 481, "7290905714035034": 481, "4940791130065918": 481, "8540957570075989": 481, "2051582634449005": 481, "3130677044391632": 481, "764052391052246": 481, "2408931255340576": 481, "40015721321105957": 481, "978738009929657": 481, "06651721894741058": 481, "3627411723136902": 481, "30247190594673157": 481, "6343221068382263": 481, "5108051300048828": 481, "4283318817615509": 481, "18063223361969": 481, "02818222902715206": 481, "6138978004455566": 481, "38690251111984253": 481, "21274028718471527": 481, "8954665660858154": 481, "7610377073287964": 481, "3336743414402008": 481, "12167501449584961": 481, "44386324286460876": 481, "10321885347366333": 481, "4542734622955322": 481, "4105985164642334": 481, "14404356479644775": 481, "8877857327461243": 481, "15634897351264954": 481, "980796456336975": 481, "34791216254234314": 481, "sc_scancst": 481, "to_topkcst": 481, "knny_reshapecst": 481, "uu032uu": 481, "uu033uu": 481, "sc_scan": 481, "tr_transposed0": 481, "tr_transpos": 481, "sq_y0": 481, "sq_sqrt": 481, "to_values0": 481, "to_indices1": 481, "to_topk": 481, "knny_output0": 481, "knny_flatten": 481, "knny_z0": 481, "knny_arrayfeatureextractor": 481, "knny_reshaped0": 481, "knny_reshap": 481, "knny_transposed0": 481, "knny_transpos": 481, "ca_output0": 481, "ca_cast": 481, "re_reducemean": 481, "knn": 481, "skl2onnx": 481, "pylint": 481, "e1101": 481, "dom": 481, "op_set": 481, "knnr": 481, "306k7": 481, "333z": 481, "300": 481, "304": 481, "006": 481, "217": 481, "026b": 481, "300z9dwgap": 481, "027": 481, "343tc": 481, "330": 481, "350": 481, "022": 481, "216sy": 481, "356n": 481, "237h": 481, "263": 481, "320": 481, "332f": 481, "235": 481, "336": 481, "370lv": 481, "226ob": 481, "362": 481, "021v": 481, "mv": 481, "322": 481, "223": 481, "355": 481, "036": 481, "262m": 481, "320r": 481, "ne": 481, "211q": 481, "021n5": 481, "211": 481, "215i": 481, "300h": 481, "232p": 481, "377": 481, "020": 481, "317k": 481, "302": 481, "202p": 481, "261l": 481, "317": 481, "236a": 481, "fd": 481, "023": 481, "364u": 481, "327lik": 481, "247v": 481, "300j": 481, "366": 481, "227l": 481, "262": 481, "206": 481, "234nl": 481, "013": 481, "313e": 481, "343hu3wg": 481, "3370": 481, "367": 481, "305": 481, "306ce": 481, "336a": 481, "347": 481, "2445": 481, "300f": 481, "374": 481, "347jf": 481, "325": 481, "2557": 481, "331": 481, "354": 481, "3547": 481, "307o": 481, "372t": 481, "005": 481, "000w": 481, "014or": 481, "025": 481, "227": 481, "034": 481, "310": 481, "227q": 481, "300l_": 481, "326dp": 481, "333kk": 481, "363": 481, "267o": 481, "016": 481, "271": 481, "2575": 481, "361": 481, "266": 481, "276w": 481, "221x": 481, "002": 481, "tg": 481, "fk": 481, "340": 481, "3746": 481, "371": 481, "265": 481, "020g": 481, "332": 481, "014": 481, "357": 481, "032": 481, "3778": 481, "376": 481, "261k": 481, "0342": 481, "205": 481, "274": 481, "334": 481, "277z": 481, "220": 481, "241": 481, "024": 481, "307": 481, "263o": 481, "251c": 481, "021": 481, "272": 481, "277hm": 481, "265dh": 481, "004": 481, "304t": 481, "246z": 481, "025r": 481, "276ij": 481, "341": 481, "313j": 481, "017": 481, "216z": 481, "335": 481, "357b": 481, "277qn": 481, "365": 481, "277k": 481, "346": 481, "2744": 481, "316": 481, "026": 481, "030": 481, "330y": 481, "276l": 481, "323b": 481, "013b": 481, "343": 481, "hd": 481, "323": 481, "275": 481, "3709": 481, "355ec": 481, "blue": 481, "mention": 481, "chapter": 481, "shorten": 481, "templat": 481, "new_domain": 481, "linearregress": 481, "cst": 481, "former_b": 481, "6700000166893005": 481, "lot": 481, "parse_model": 481, "whenev": 481, "inconsist": 481, "parseerror": 481, "nerror": 481, "nexpect": 481, "purpos": 481, "consumpt": 481, "beforehand": 481, "inferred_model": 481, "infer_shap": 481, "abl": 481, "easili": 481, "wrapper": 481, "pointer": 481, "receiv": 481, "longer": 481, "safer": 481, "clear": 481, "puzzl": 481, "create_model": 481, "0d": 481, "4208221": [], "4912338": [], "3905": [], "5035064": [], "962109": [], "64378464": [], "onnxruntimeerror": 481, "shapeinferenceerror": 481, "wrong": 481, "validationerror": 481, "5222199": [], "3887384": [], "off": 461, "run_model": 461, "quickli": 461, "repeatedli": 461, "runner": 461, "testcas": 461, "5337508": 481, "17260996": 481, "1929899": 481, "37586755": 481, "2197902": 481, "5953863": 481, "245232": 481, "9923605": 481}, "objects": {"onnx": [[463, 0, 1, "", "AttributeProto"], [463, 0, 1, "", "FunctionProto"], [463, 0, 1, "", "GraphProto"], [463, 0, 1, "", "MapProto"], [473, 0, 1, "id0", "ModelProto"], [463, 0, 1, "", "NodeProto"], [463, 0, 1, "", "OperatorProto"], [463, 0, 1, "", "OperatorSetIdProto"], [463, 0, 1, "", "OperatorSetProto"], [463, 0, 1, "", "OptionalProto"], [463, 0, 1, "", "SequenceProto"], [463, 0, 1, "", "SparseTensorProto"], [463, 0, 1, "", "StringStringEntryProto"], [463, 0, 1, "", "TensorProto"], [463, 0, 1, "", "TensorShapeProto"], [463, 0, 1, "", "TrainingInfoProto"], [463, 0, 1, "", "TypeProto"], [463, 0, 1, "", "ValueInfoProto"], [473, 3, 1, "", "load"], [473, 3, 1, "", "load_model_from_string"], [473, 3, 1, "", "load_tensor_from_string"]], "onnx.AttributeProto": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "doc_string"], [463, 1, 1, "", "f"], [463, 1, 1, "", "floats"], [463, 1, 1, "", "g"], [463, 1, 1, "", "graphs"], [463, 1, 1, "", "i"], [463, 1, 1, "", "ints"], [463, 1, 1, "", "name"], [463, 1, 1, "", "ref_attr_name"], [463, 1, 1, "", "s"], [463, 1, 1, "", "sparse_tensor"], [463, 1, 1, "", "sparse_tensors"], [463, 1, 1, "", "strings"], [463, 1, 1, "", "t"], [463, 1, 1, "", "tensors"], [463, 1, 1, "", "tp"], [463, 1, 1, "", "type"], [463, 1, 1, "", "type_protos"]], "onnx.FunctionProto": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "attribute"], [463, 1, 1, "", "doc_string"], [463, 1, 1, "", "domain"], [463, 1, 1, "", "input"], [463, 1, 1, "", "name"], [463, 1, 1, "", "node"], [463, 1, 1, "", "opset_import"], [463, 1, 1, "", "output"]], "onnx.GraphProto": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "doc_string"], [463, 1, 1, "", "initializer"], [463, 1, 1, "", "input"], [463, 1, 1, "", "name"], [463, 1, 1, "", "node"], [463, 1, 1, "", "output"], [463, 1, 1, "", "quantization_annotation"], [463, 1, 1, "", "sparse_initializer"], [463, 1, 1, "", "value_info"]], "onnx.MapProto": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "key_type"], [463, 1, 1, "", "keys"], [463, 1, 1, "", "name"], [463, 1, 1, "", "string_keys"], [463, 1, 1, "", "values"]], "onnx.ModelProto": [[463, 1, 1, "", "DESCRIPTOR"], [473, 2, 1, "", "ParseFromString"], [473, 2, 1, "", "SerializeToString"], [463, 1, 1, "", "doc_string"], [463, 1, 1, "", "domain"], [463, 1, 1, "", "functions"], [463, 1, 1, "", "graph"], [463, 1, 1, "", "ir_version"], [463, 1, 1, "", "metadata_props"], [463, 1, 1, "", "model_version"], [463, 1, 1, "", "opset_import"], [463, 1, 1, "", "producer_name"], [463, 1, 1, "", "producer_version"], [463, 1, 1, "", "training_info"]], "onnx.NodeProto": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "attribute"], [463, 1, 1, "", "doc_string"], [463, 1, 1, "", "domain"], [463, 1, 1, "", "input"], [463, 1, 1, "", "name"], [463, 1, 1, "", "op_type"], [463, 1, 1, "", "output"]], "onnx.OperatorProto": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "doc_string"], [463, 1, 1, "", "op_type"], [463, 1, 1, "", "since_version"], [463, 1, 1, "", "status"]], "onnx.OperatorSetIdProto": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "domain"], [463, 1, 1, "", "version"]], "onnx.OperatorSetProto": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "doc_string"], [463, 1, 1, "", "domain"], [463, 1, 1, "", "functions"], [463, 1, 1, "", "ir_build_metadata"], [463, 1, 1, "", "ir_version"], [463, 1, 1, "", "ir_version_prerelease"], [463, 1, 1, "", "magic"], [463, 1, 1, "", "operator"], [463, 1, 1, "", "opset_version"]], "onnx.OptionalProto": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "elem_type"], [463, 1, 1, "", "map_value"], [463, 1, 1, "", "name"], [463, 1, 1, "", "optional_value"], [463, 1, 1, "", "sequence_value"], [463, 1, 1, "", "sparse_tensor_value"], [463, 1, 1, "", "tensor_value"]], "onnx.SequenceProto": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "elem_type"], [463, 1, 1, "", "map_values"], [463, 1, 1, "", "name"], [463, 1, 1, "", "optional_values"], [463, 1, 1, "", "sequence_values"], [463, 1, 1, "", "sparse_tensor_values"], [463, 1, 1, "", "tensor_values"]], "onnx.SparseTensorProto": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "dims"], [463, 1, 1, "", "indices"], [463, 1, 1, "", "values"]], "onnx.StringStringEntryProto": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "key"], [463, 1, 1, "", "value"]], "onnx.TensorProto": [[463, 1, 1, "", "DESCRIPTOR"], [463, 0, 1, "", "Segment"], [463, 1, 1, "", "data_location"], [463, 1, 1, "", "data_type"], [463, 1, 1, "", "dims"], [463, 1, 1, "", "doc_string"], [463, 1, 1, "", "double_data"], [463, 1, 1, "", "external_data"], [463, 1, 1, "", "float_data"], [463, 1, 1, "", "int32_data"], [463, 1, 1, "", "int64_data"], [463, 1, 1, "", "name"], [463, 1, 1, "", "raw_data"], [463, 1, 1, "", "segment"], [463, 1, 1, "", "string_data"], [463, 1, 1, "", "uint64_data"]], "onnx.TensorProto.Segment": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "begin"], [463, 1, 1, "", "end"]], "onnx.TensorShapeProto": [[463, 1, 1, "", "DESCRIPTOR"], [463, 0, 1, "", "Dimension"], [463, 1, 1, "", "dim"]], "onnx.TensorShapeProto.Dimension": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "denotation"], [463, 1, 1, "", "dim_param"], [463, 1, 1, "", "dim_value"]], "onnx.TrainingInfoProto": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "algorithm"], [463, 1, 1, "", "initialization"], [463, 1, 1, "", "initialization_binding"], [463, 1, 1, "", "update_binding"]], "onnx.TypeProto": [[463, 1, 1, "", "DESCRIPTOR"], [463, 0, 1, "", "Map"], [463, 0, 1, "", "Opaque"], [463, 0, 1, "", "Optional"], [463, 0, 1, "", "Sequence"], [463, 0, 1, "", "SparseTensor"], [463, 0, 1, "", "Tensor"], [463, 1, 1, "", "denotation"], [463, 1, 1, "", "map_type"], [463, 1, 1, "", "opaque_type"], [463, 1, 1, "", "optional_type"], [463, 1, 1, "", "sequence_type"], [463, 1, 1, "", "sparse_tensor_type"], [463, 1, 1, "", "tensor_type"]], "onnx.TypeProto.Map": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "key_type"], [463, 1, 1, "", "value_type"]], "onnx.TypeProto.Opaque": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "domain"], [463, 1, 1, "", "name"]], "onnx.TypeProto.Optional": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "elem_type"]], "onnx.TypeProto.Sequence": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "elem_type"]], "onnx.TypeProto.SparseTensor": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "elem_type"], [463, 1, 1, "", "shape"]], "onnx.TypeProto.Tensor": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "elem_type"], [463, 1, 1, "", "shape"]], "onnx.ValueInfoProto": [[463, 1, 1, "", "DESCRIPTOR"], [463, 1, 1, "", "doc_string"], [463, 1, 1, "", "name"], [463, 1, 1, "", "type"]], "onnx.backend.base": [[461, 0, 1, "", "Backend"], [461, 0, 1, "", "BackendRep"], [461, 0, 1, "", "Device"], [461, 0, 1, "", "DeviceType"]], "onnx.backend.base.Backend": [[461, 2, 1, "", "run_node"], [461, 2, 1, "", "supports_device"]], "onnx.backend.test.loader": [[461, 3, 1, "", "load_model_tests"]], "onnx.checker": [[462, 3, 1, "", "check_model"]], "onnx.compose": [[464, 3, 1, "", "add_prefix"], [464, 3, 1, "", "add_prefix_graph"], [464, 3, 1, "", "expand_out_dim"], [464, 3, 1, "", "expand_out_dim_graph"], [464, 3, 1, "", "merge_graphs"], [464, 3, 1, "", "merge_models"]], "onnx.defs": [[469, 3, 1, "", "get_all_schemas_with_history"], [469, 3, 1, "", "get_function_ops"], [469, 3, 1, "", "get_schema"], [469, 3, 1, "", "onnx_opset_version"]], "onnx.external_data_helper": [[465, 0, 1, "", "ExternalDataInfo"], [465, 3, 1, "", "convert_model_from_external_data"], [465, 3, 1, "", "convert_model_to_external_data"], [465, 3, 1, "", "load_external_data_for_model"], [465, 3, 1, "", "load_external_data_for_tensor"], [465, 3, 1, "", "remove_external_data_field"], [465, 3, 1, "", "save_external_data"], [465, 3, 1, "", "set_external_data"], [465, 3, 1, "", "write_external_data_tensors"]], "onnx.helper": [[466, 3, 1, "", "find_min_ir_version_for"], [466, 3, 1, "id2", "get_attribute_value"], [466, 3, 1, "", "make_attribute"], [466, 3, 1, "", "make_empty_tensor_value_info"], [466, 3, 1, "", "make_function"], [466, 3, 1, "", "make_graph"], [466, 3, 1, "", "make_map"], [466, 3, 1, "", "make_model"], [466, 3, 1, "", "make_node"], [466, 3, 1, "", "make_operatorsetid"], [466, 3, 1, "", "make_opsetid"], [466, 3, 1, "", "make_optional"], [466, 3, 1, "", "make_optional_type_proto"], [466, 3, 1, "", "make_sequence"], [466, 3, 1, "", "make_sequence_type_proto"], [466, 3, 1, "", "make_sparse_tensor"], [466, 3, 1, "", "make_sparse_tensor_type_proto"], [466, 3, 1, "", "make_sparse_tensor_value_info"], [466, 3, 1, "", "make_tensor"], [466, 3, 1, "", "make_tensor_sequence_value_info"], [466, 3, 1, "id0", "make_tensor_type_proto"], [466, 3, 1, "", "make_tensor_value_info"], [466, 3, 1, "", "make_training_info"], [466, 3, 1, "", "make_value_info"], [466, 3, 1, "id4", "printable_attribute"], [466, 3, 1, "id5", "printable_dim"], [466, 3, 1, "id6", "printable_graph"], [466, 3, 1, "id7", "printable_node"], [466, 3, 1, "id8", "printable_tensor_proto"], [466, 3, 1, "id9", "printable_type"], [466, 3, 1, "id10", "printable_value_info"], [466, 3, 1, "", "split_complex_to_pairs"]], "onnx.hub": [[467, 0, 1, "", "ModelInfo"], [467, 3, 1, "", "get_model_info"], [467, 3, 1, "", "list_models"], [467, 3, 1, "", "load"]], "onnx.hub.ModelInfo": [[467, 1, 1, "", "metadata"], [467, 1, 1, "", "model"], [467, 1, 1, "", "model_path"], [467, 1, 1, "", "model_sha"], [467, 1, 1, "", "opset"], [467, 1, 1, "", "tags"]], "onnx.numpy_helper": [[470, 3, 1, "", "combine_pairs_to_complex"], [470, 3, 1, "", "convert_endian"], [470, 3, 1, "", "from_array"], [470, 3, 1, "", "from_dict"], [470, 3, 1, "", "from_list"], [470, 3, 1, "", "from_optional"], [470, 3, 1, "", "to_array"], [470, 3, 1, "", "to_dict"], [470, 3, 1, "", "to_list"], [470, 3, 1, "", "to_optional"]], "onnx.onnx_cpp2py_export": [[469, 4, 0, "-", "defs"]], "onnx.onnx_cpp2py_export.defs": [[469, 5, 1, "", "SchemaError"], [469, 3, 1, "", "get_all_schemas"], [469, 3, 1, "", "get_all_schemas_with_history"], [469, 3, 1, "", "get_schema"], [469, 3, 1, "", "has_schema"], [469, 3, 1, "", "schema_version_map"]], "onnx.parser": [[471, 3, 1, "", "parse_function"], [471, 3, 1, "", "parse_graph"], [471, 3, 1, "", "parse_model"]], "onnx.printer": [[472, 3, 1, "", "to_text"]], "onnx.shape_inference": [[474, 3, 1, "", "infer_shapes"], [474, 3, 1, "", "infer_shapes_path"]], "onnx.tools.net_drawer": [[475, 3, 1, "", "GetOpNodeProducer"], [475, 3, 1, "", "GetPydotGraph"]], "onnx.tools.update_model_dims": [[475, 3, 1, "", "update_inputs_outputs_dims"]], "onnx.utils": [[476, 0, 1, "", "Extractor"], [476, 3, 1, "", "extract_model"]], "onnx.version_converter": [[477, 3, 1, "", "convert_version"]]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:function", "4": "py:module", "5": "py:exception"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "module", "Python module"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"sampl": 0, "oper": [0, 2, 207, 208, 209, 469, 478, 479], "test": [0, 478, 481], "code": 0, "onnx": [1, 2, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 481], "ai": [2, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209], "ml": [2, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 208], "preview": [2, 203, 204, 205, 206, 209], "train": [2, 203, 204, 205, 206, 209], "tabl": [2, 207, 208, 209], "expect": 2, "ab": [3, 210, 211], "13": [3, 6, 8, 9, 20, 22, 25, 28, 30, 39, 40, 42, 43, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 62, 69, 70, 71, 74, 75, 79, 81, 82, 83, 86, 88, 92, 93, 95, 97, 98, 100, 101, 103, 111, 112, 115, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 142, 143, 152, 154, 155, 158, 159, 160, 161, 164, 165, 167, 168, 170, 171, 173, 176, 178, 181, 211, 212, 215, 218, 221, 233, 235, 237, 241, 245, 251, 253, 254, 257, 259, 264, 267, 269, 270, 271, 275, 279, 281, 282, 284, 293, 295, 297, 299, 300, 301, 304, 305, 314, 315, 318, 319, 320, 325, 331, 335, 338, 339, 343, 344, 347, 349, 350, 352, 361, 362, 365, 366, 369, 373, 374, 376, 378, 380, 383, 385, 388, 390, 392, 394, 396, 398, 399, 401, 403, 404, 409, 410, 412, 413, 417, 418, 420, 421, 422, 424, 426, 427, 429, 430, 434, 435, 437, 440, 443, 445, 447, 450, 453], "6": [3, 6, 16, 20, 22, 25, 42, 43, 46, 49, 53, 58, 67, 72, 78, 81, 88, 92, 95, 98, 100, 110, 122, 133, 144, 154, 167, 170, 171, 173, 176, 210, 211, 213, 214, 227, 228, 231, 232, 234, 235, 238, 239, 255, 256, 260, 261, 263, 268, 269, 274, 275, 285, 286, 294, 303, 309, 310, 317, 318, 332, 333, 336, 337, 340, 341, 345, 346, 348, 349, 357, 358, 372, 373, 397, 398, 416, 419, 420, 433, 434, 438, 439, 441, 442, 444, 445, 446, 447], "1": [3, 6, 7, 8, 9, 15, 16, 20, 22, 25, 28, 30, 32, 34, 39, 42, 43, 46, 47, 49, 52, 53, 54, 55, 58, 59, 60, 61, 62, 67, 69, 70, 71, 72, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 95, 98, 100, 104, 109, 110, 111, 112, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 144, 152, 154, 158, 159, 160, 162, 163, 164, 165, 167, 168, 170, 171, 173, 176, 177, 178, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 213, 216, 219, 222, 224, 227, 231, 234, 238, 242, 246, 248, 249, 252, 255, 260, 263, 265, 268, 272, 274, 276, 283, 285, 289, 291, 294, 296, 299, 302, 303, 305, 306, 308, 309, 312, 316, 317, 321, 322, 324, 328, 332, 336, 340, 345, 348, 356, 357, 363, 367, 370, 372, 375, 377, 379, 381, 384, 386, 389, 391, 393, 395, 397, 400, 416, 418, 419, 422, 425, 428, 429, 431, 433, 436, 438, 441, 444, 446, 449, 450, 451, 452, 454, 455, 459], "aco": 4, "7": [4, 6, 7, 10, 12, 15, 16, 35, 42, 43, 47, 54, 58, 62, 76, 79, 98, 99, 109, 110, 112, 116, 156, 170, 172, 182, 184, 214, 215, 216, 224, 225, 228, 229, 256, 257, 261, 262, 265, 266, 277, 278, 286, 287, 291, 292, 306, 307, 312, 313, 346, 347, 356, 358, 359, 367, 368, 370, 371, 439, 440, 455, 456, 459], "acosh": 5, "9": [5, 11, 13, 16, 20, 27, 30, 31, 36, 48, 51, 52, 58, 62, 74, 79, 86, 91, 93, 103, 105, 110, 140, 141, 153, 155, 157, 174, 182, 183, 229, 230, 232, 233, 240, 246, 247, 267, 272, 273, 287, 288, 292, 293, 304, 313, 314, 324, 325, 330, 335, 352, 353, 359, 360, 407, 408, 415, 421, 456, 457, 458], "add": [6, 212, 213, 214, 215], "14": [6, 16, 37, 42, 54, 68, 70, 76, 98, 116, 133, 134, 170, 179, 212, 226, 230, 250, 254, 278, 297, 298, 307, 344, 371, 396, 399, 437], "And": [7, 216], "argmax": [8, 217, 218, 219], "12": [8, 9, 23, 25, 30, 43, 45, 57, 63, 80, 88, 89, 95, 101, 112, 127, 129, 161, 217, 218, 220, 221, 236, 237, 244, 245, 258, 259, 280, 281, 290, 311, 327, 331, 334, 339, 342, 350, 365, 368, 382, 383, 387, 388, 426], "11": [8, 9, 15, 18, 25, 27, 28, 29, 30, 32, 34, 37, 39, 41, 44, 47, 52, 55, 56, 57, 58, 69, 71, 82, 83, 85, 89, 91, 102, 105, 111, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 159, 160, 165, 166, 168, 177, 180, 181, 217, 219, 220, 222, 223, 236, 239, 240, 241, 243, 244, 247, 248, 249, 250, 251, 252, 264, 266, 271, 273, 279, 280, 282, 283, 284, 288, 295, 296, 300, 302, 315, 316, 319, 321, 323, 326, 327, 330, 351, 353, 361, 364, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 402, 403, 406, 408, 409, 412, 415, 423, 424, 427, 428, 430, 432, 435, 436, 448, 453, 454], "argmin": [9, 220, 221, 222], "asin": 10, "asinh": 11, "atan": 12, "atanh": 13, "attributehasvalu": 14, "18": [14, 24, 26, 96, 107, 108, 111, 135, 142, 143, 354, 355, 362, 404, 411, 414], "averagepool": [15, 223, 224, 225], "10": [15, 33, 40, 43, 73, 87, 89, 97, 102, 113, 114, 115, 135, 136, 137, 159, 169, 175, 177, 182, 223, 225, 253, 258, 262, 326, 329, 343, 351, 369, 402, 405, 423, 425, 448, 449, 457], "batchnorm": [16, 226, 227, 228, 229, 230], "15": [16, 17, 21, 106, 107, 108, 112, 152, 226, 354, 355, 366, 417], "bernoulli": 17, "bitshift": 18, "blackmanwindow": 19, "17": [19, 38, 65, 66, 77, 94, 139, 151], "cast": [20, 231, 232, 233], "castlik": 21, "ceil": [22, 234, 235], "celu": 23, "centercroppad": 24, "clip": [25, 236, 237, 238, 239], "col2im": 26, "compress": [27, 240], "concat": [28, 241, 242, 243], "4": [28, 242, 243], "concatfromsequ": 29, "constant": [30, 244, 245, 246, 247], "constantofshap": 31, "conv": [32, 249], "convinteg": 33, "convtranspos": [34, 248], "co": 35, "cosh": 36, "cumsum": [37, 250], "dft": 38, "depthtospac": [39, 251, 252], "dequantizelinear": [40, 253], "det": 41, "div": [42, 254, 255, 256, 257], "dropout": [43, 258, 259, 260, 261, 262], "dynamicquantizelinear": 44, "einsum": 45, "elu": [46, 263], "equal": [47, 264, 265, 266], "erf": [48, 267], "exp": [49, 268, 269], "expand": [50, 270], "8": [50, 88, 89, 92, 95, 140, 171, 270, 328, 329, 333, 334, 337, 338, 341, 342, 407, 442, 443], "eyelik": 51, "flatten": [52, 271, 272, 273], "floor": [53, 274, 275], "gru": [54, 276, 277, 278], "3": [54, 200, 201, 276, 277, 451, 452], "gather": [55, 282, 283], "gatherel": [56, 279], "gathernd": [57, 280, 281], "gemm": [58, 284, 285, 286, 287, 288], "globalaveragepool": 59, "globallppool": [60, 289], "2": [60, 85, 111, 165, 192, 289, 308, 322, 323, 363, 364, 431, 432], "globalmaxpool": 61, "greater": [62, 291, 292, 293], "greaterorequ": [63, 290], "16": [63, 64, 70, 71, 78, 80, 83, 110, 137, 140, 142, 143, 183, 290, 298, 301, 310, 311, 320, 360, 405, 406, 410, 411, 413, 414, 458], "gridsampl": 64, "hammingwindow": 65, "hannwindow": 66, "hardsigmoid": [67, 294], "hardswish": 68, "hardmax": [69, 295, 296], "ident": [70, 297, 298, 299], "If": [71, 300, 301, 302, 478, 481], "instancenorm": [72, 303], "isinf": 73, "isnan": [74, 304], "lrn": [75, 305], "lstm": [76, 306, 307], "layernorm": 77, "leakyrelu": [78, 309, 310], "less": [79, 312, 313, 314], "lessorequ": [80, 311], "log": [81, 317, 318], "logsoftmax": [82, 315, 316], "loop": [83, 319, 320, 321, 478, 481], "lpnormal": 84, "lppool": [85, 322, 323], "matmul": [86, 324, 325], "matmulinteg": 87, "max": [88, 331, 332, 333, 334], "maxpool": [89, 326, 327, 328, 329], "maxroipool": 90, "maxunpool": [91, 330], "mean": [92, 336, 337, 338], "meanvariancenorm": [93, 335], "melweightmatrix": 94, "min": [95, 339, 340, 341, 342], "mish": 96, "mod": [97, 343], "mul": [98, 344, 345, 346, 347], "multinomi": 99, "neg": [100, 348, 349], "negativeloglikelihoodloss": [101, 350], "nonmaxsuppress": [102, 351], "nonzero": [103, 352], "Not": 104, "onehot": [105, 353], "option": [106, 470], "optionalgetel": [107, 354], "optionalhasel": [108, 355], "Or": [109, 356], "prelu": [110, 357, 358, 359, 360], "pad": [111, 361, 362, 363, 364], "pow": [112, 365, 366, 367, 368], "qlinearconv": 113, "qlinearmatmul": 114, "quantizelinear": [115, 369], "rnn": [116, 370, 371], "randomnorm": 117, "randomnormallik": 118, "randomuniform": 119, "randomuniformlik": 120, "rang": 121, "reciproc": [122, 372, 373], "reducel1": [123, 374, 375], "reducel2": [124, 376, 377], "reducelogsum": [125, 380, 381], "reducelogsumexp": [126, 378, 379], "reducemax": [127, 382, 383, 384], "reducemean": [128, 385, 386], "reducemin": [129, 387, 388, 389], "reduceprod": [130, 390, 391], "reducesum": [131, 394, 395], "reducesumsquar": [132, 392, 393], "relu": [133, 396, 397, 398], "reshap": [134, 399, 400, 401], "5": [134, 400, 401], "resiz": [135, 402, 403, 404], "reversesequ": 136, "roialign": [137, 405], "round": 138, "stft": 139, "scan": [140, 406, 407, 408, 478, 481], "scatter": [141, 415], "scatterel": [142, 409, 410, 411], "scatternd": [143, 412, 413, 414], "selu": [144, 416], "sequenceat": 145, "sequenceconstruct": 146, "sequenceempti": 147, "sequenceeras": 148, "sequenceinsert": 149, "sequencelength": 150, "sequencemap": 151, "shape": [152, 417, 418, 478, 481], "shrink": 153, "sigmoid": [154, 419, 420], "sign": [155, 421], "sin": 156, "sinh": 157, "size": [158, 422], "slice": [159, 423, 424, 425], "softmax": [160, 427, 428], "softmaxcrossentropyloss": [161, 426], "softplu": 162, "softsign": 163, "spacetodepth": [164, 429], "split": [165, 430, 431, 432], "splittosequ": 166, "sqrt": [167, 433, 434], "squeez": [168, 435, 436], "stringnorm": 169, "sub": [170, 437, 438, 439, 440], "sum": [171, 441, 442, 443], "tan": 172, "tanh": [173, 444, 445], "tfidfvector": 174, "thresholdedrelu": 175, "tile": [176, 446, 447], "topk": [177, 448, 449], "transpos": [178, 450], "trilu": 179, "uniqu": 180, "unsqueez": [181, 453, 454], "upsampl": [182, 455, 456, 457], "where": [183, 458], "xor": [184, 459], "arrayfeatureextractor": 185, "binar": 186, "castmap": 187, "categorymapp": 188, "dictvector": 189, "featurevector": 190, "imput": 191, "labelencod": [192, 308], "linearclassifi": 193, "linearregressor": 194, "normal": 195, "onehotencod": 196, "svmclassifi": 197, "svmregressor": 198, "scaler": 199, "treeensembleclassifi": [200, 451], "treeensembleregressor": [201, 452], "zipmap": 202, "adagrad": 203, "adam": 204, "gradient": 205, "momentum": 206, "domain": [207, 208, 209, 478], "v": [210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "python": [460, 481], "document": [460, 479], "backend": 461, "backendrep": 461, "collect_snippet": [], "devic": 461, "devicetyp": 461, "load_model_test": 461, "runner": [], "testcas": [], "checker": [462, 481], "check_model": 462, "proto": [463, 473], "attributeproto": 463, "functionproto": 463, "graphproto": 463, "mapproto": 463, "modelproto": 463, "nodeproto": 463, "operatorproto": 463, "operatorsetidproto": 463, "operatorsetproto": 463, "optionalproto": 463, "sequenceproto": 463, "sparsetensorproto": 463, "stringstringentryproto": 463, "tensorproto": 463, "tensorshapeproto": 463, "traininginfoproto": 463, "typeproto": 463, "valueinfoproto": 463, "compos": 464, "merge_graph": 464, "merge_model": 464, "prefix": 464, "dimens": 464, "external_data_help": 465, "convert_model_from_external_data": 465, "convert_model_to_external_data": 465, "externaldatainfo": 465, "load_external_data_for_model": 465, "load_external_data_for_tensor": 465, "remove_external_data_field": 465, "save_external_data": 465, "set_external_data": 465, "write_external_data_tensor": 465, "helper": 466, "getter": 466, "print": 466, "tool": [466, 470, 475, 478], "make": 466, "function": [466, 468, 469, 478, 479, 481], "hub": 467, "modelinfo": 467, "list_model": 467, "get_model_info": 467, "load": [467, 473], "api": [468, 479], "refer": 468, "data": [468, 481], "structur": 468, "map": 469, "type": [469, 478], "np_type_to_tensor_typ": 469, "op_set_id_version_map": 469, "optional_element_type_to_field": 469, "storage_element_type_to_field": 469, "storage_tensor_type_to_field": 469, "tensor_type_to_np_typ": 469, "tensor_type_to_storage_tensor_typ": 469, "opset": [469, 478, 479, 481], "version": [469, 478], "schema": 469, "intern": 469, "modul": 469, "numpy_help": 470, "arrai": 470, "sequenc": 470, "dictionari": 470, "parser": 471, "parse_funct": 471, "parse_graph": 471, "parse_model": 471, "printer": 472, "to_text": 472, "serial": [473, 478, 481], "save": 473, "model": [473, 481], "ani": 473, "class": [473, 479], "shape_infer": 474, "infer_shap": 474, "infer_shapes_path": 474, "net_draw": 475, "update_inputs_outputs_dim": 475, "util": 476, "extractor": 476, "extract_model": 476, "version_convert": 477, "convert_vers": 477, "concept": 478, "input": [478, 481], "output": 478, "node": 478, "initi": [478, 481], "attribut": [478, 481], "protobuf": 478, "metadata": [478, 481], "list": 478, "avail": 478, "support": 478, "element": 478, "spars": 478, "tensor": 478, "other": [478, 479], "what": [478, 479], "i": [478, 479], "an": [478, 479], "subgraph": [478, 481], "extens": 478, "infer": [478, 481], "convert": 479, "librari": 479, "A": [479, 481], "graph": 479, "method": 479, "add_nod": 479, "trick": 479, "learn": 479, "from": 479, "experi": 479, "discrep": 479, "isolationforest": 479, "discret": 479, "contribut": 479, "build": 479, "markdown": 479, "updat": 479, "exist": 479, "introduct": 480, "simpl": 481, "exampl": 481, "linear": 481, "regress": 481, "default": 481, "valu": 481, "pars": 481, "implement": 481, "detail": 481, "c": 481}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Sample operator test code": [[0, "sample-operator-test-code"]], "Abs": [[3, "abs"]], "Abs - 13": [[3, "abs-13"]], "Abs - 6": [[3, "abs-6"]], "Abs - 1": [[3, "abs-1"]], "Acos": [[4, "acos"]], "Acos - 7": [[4, "acos-7"]], "Acosh": [[5, "acosh"]], "Acosh - 9": [[5, "acosh-9"]], "Add": [[6, "add"]], "Add - 14": [[6, "add-14"]], "Add - 13": [[6, "add-13"]], "Add - 7": [[6, "add-7"]], "Add - 6": [[6, "add-6"]], "Add - 1": [[6, "add-1"]], "And": [[7, "and"]], "And - 7": [[7, "and-7"]], "And - 1": [[7, "and-1"]], "ArgMax": [[8, "argmax"]], "ArgMax - 13": [[8, "argmax-13"]], "ArgMax - 12": [[8, "argmax-12"]], "ArgMax - 11": [[8, "argmax-11"]], "ArgMax - 1": [[8, "argmax-1"]], "ArgMin": [[9, "argmin"]], "ArgMin - 13": [[9, "argmin-13"]], "ArgMin - 12": [[9, "argmin-12"]], "ArgMin - 11": [[9, "argmin-11"]], "ArgMin - 1": [[9, "argmin-1"]], "Asin": [[10, "asin"]], "Asin - 7": [[10, "asin-7"]], "Asinh": [[11, "asinh"]], "Asinh - 9": [[11, "asinh-9"]], "Atan": [[12, "atan"]], "Atan - 7": [[12, "atan-7"]], "Atanh": [[13, "atanh"]], "Atanh - 9": [[13, "atanh-9"]], "AttributeHasValue": [[14, "attributehasvalue"]], "AttributeHasValue - 18": [[14, "attributehasvalue-18"]], "AveragePool": [[15, "averagepool"]], "AveragePool - 11": [[15, "averagepool-11"]], "or": [[15, "or"], [15, "id2"], [89, "or"], [89, "id2"], [89, "id4"]], "AveragePool - 10": [[15, "averagepool-10"]], "AveragePool - 7": [[15, "averagepool-7"]], "AveragePool - 1": [[15, "averagepool-1"]], "BatchNormalization": [[16, "batchnormalization"]], "BatchNormalization - 15": [[16, "batchnormalization-15"]], "BatchNormalization - 14": [[16, "batchnormalization-14"]], "BatchNormalization - 9": [[16, "batchnormalization-9"]], "BatchNormalization - 7": [[16, "batchnormalization-7"]], "BatchNormalization - 6": [[16, "batchnormalization-6"]], "BatchNormalization - 1": [[16, "batchnormalization-1"]], "Bernoulli": [[17, "bernoulli"]], "Bernoulli - 15": [[17, "bernoulli-15"]], "BitShift": [[18, "bitshift"]], "BitShift - 11": [[18, "bitshift-11"]], "BlackmanWindow": [[19, "blackmanwindow"]], "BlackmanWindow - 17": [[19, "blackmanwindow-17"]], "Cast": [[20, "cast"]], "Cast - 13": [[20, "cast-13"]], "Cast - 9": [[20, "cast-9"]], "Cast - 6": [[20, "cast-6"]], "Cast - 1": [[20, "cast-1"]], "CastLike": [[21, "castlike"]], "CastLike - 15": [[21, "castlike-15"]], "Ceil": [[22, "ceil"]], "Ceil - 13": [[22, "ceil-13"]], "Ceil - 6": [[22, "ceil-6"]], "Ceil - 1": [[22, "ceil-1"]], "Celu": [[23, "celu"]], "Celu - 12": [[23, "celu-12"]], "CenterCropPad": [[24, "centercroppad"]], "CenterCropPad - 18": [[24, "centercroppad-18"]], "Clip": [[25, "clip"]], "Clip - 13": [[25, "clip-13"]], "Clip - 12": [[25, "clip-12"]], "Clip - 11": [[25, "clip-11"]], "Clip - 6": [[25, "clip-6"]], "Clip - 1": [[25, "clip-1"]], "Col2Im": [[26, "col2im"]], "Col2Im - 18": [[26, "col2im-18"]], "Compress": [[27, "compress"]], "Compress - 11": [[27, "compress-11"]], "Compress - 9": [[27, "compress-9"]], "Concat": [[28, "concat"]], "Concat - 13": [[28, "concat-13"]], "Concat - 11": [[28, "concat-11"]], "Concat - 4": [[28, "concat-4"]], "Concat - 1": [[28, "concat-1"]], "ConcatFromSequence": [[29, "concatfromsequence"]], "ConcatFromSequence - 11": [[29, "concatfromsequence-11"]], "Constant": [[30, "constant"]], "Constant - 13": [[30, "constant-13"]], "Constant - 12": [[30, "constant-12"]], "Constant - 11": [[30, "constant-11"]], "Constant - 9": [[30, "constant-9"]], "Constant - 1": [[30, "constant-1"]], "ConstantOfShape": [[31, "constantofshape"]], "ConstantOfShape - 9": [[31, "constantofshape-9"]], "Conv": [[32, "conv"]], "Conv - 11": [[32, "conv-11"]], "Conv - 1": [[32, "conv-1"]], "ConvInteger": [[33, "convinteger"]], "ConvInteger - 10": [[33, "convinteger-10"]], "ConvTranspose": [[34, "convtranspose"]], "ConvTranspose - 11": [[34, "convtranspose-11"]], "ConvTranspose - 1": [[34, "convtranspose-1"]], "Cos": [[35, "cos"]], "Cos - 7": [[35, "cos-7"]], "Cosh": [[36, "cosh"]], "Cosh - 9": [[36, "cosh-9"]], "CumSum": [[37, "cumsum"]], "CumSum - 14": [[37, "cumsum-14"]], "CumSum - 11": [[37, "cumsum-11"]], "DFT": [[38, "dft"]], "DFT - 17": [[38, "dft-17"]], "DepthToSpace": [[39, "depthtospace"]], "DepthToSpace - 13": [[39, "depthtospace-13"]], "DepthToSpace - 11": [[39, "depthtospace-11"]], "DepthToSpace - 1": [[39, "depthtospace-1"]], "DequantizeLinear": [[40, "dequantizelinear"]], "DequantizeLinear - 13": [[40, "dequantizelinear-13"]], "DequantizeLinear - 10": [[40, "dequantizelinear-10"]], "Det": [[41, "det"]], "Det - 11": [[41, "det-11"]], "Div": [[42, "div"]], "Div - 14": [[42, "div-14"]], "Div - 13": [[42, "div-13"]], "Div - 7": [[42, "div-7"]], "Div - 6": [[42, "div-6"]], "Div - 1": [[42, "div-1"]], "Dropout": [[43, "dropout"]], "Dropout - 13": [[43, "dropout-13"]], "Dropout - 12": [[43, "dropout-12"]], "Dropout - 10": [[43, "dropout-10"]], "Dropout - 7": [[43, "dropout-7"]], "Dropout - 6": [[43, "dropout-6"]], "Dropout - 1": [[43, "dropout-1"]], "DynamicQuantizeLinear": [[44, "dynamicquantizelinear"]], "DynamicQuantizeLinear - 11": [[44, "dynamicquantizelinear-11"]], "Einsum": [[45, "einsum"]], "Einsum - 12": [[45, "einsum-12"]], "Elu": [[46, "elu"]], "Elu - 6": [[46, "elu-6"]], "Elu - 1": [[46, "elu-1"]], "Equal": [[47, "equal"]], "Equal - 13": [[47, "equal-13"]], "Equal - 11": [[47, "equal-11"]], "Equal - 7": [[47, "equal-7"]], "Equal - 1": [[47, "equal-1"]], "Erf": [[48, "erf"]], "Erf - 13": [[48, "erf-13"]], "Erf - 9": [[48, "erf-9"]], "Exp": [[49, "exp"]], "Exp - 13": [[49, "exp-13"]], "Exp - 6": [[49, "exp-6"]], "Exp - 1": [[49, "exp-1"]], "Expand": [[50, "expand"]], "Expand - 13": [[50, "expand-13"]], "Expand - 8": [[50, "expand-8"]], "EyeLike": [[51, "eyelike"]], "EyeLike - 9": [[51, "eyelike-9"]], "Flatten": [[52, "flatten"]], "Flatten - 13": [[52, "flatten-13"]], "Flatten - 11": [[52, "flatten-11"]], "Flatten - 9": [[52, "flatten-9"]], "Flatten - 1": [[52, "flatten-1"]], "Floor": [[53, "floor"]], "Floor - 13": [[53, "floor-13"]], "Floor - 6": [[53, "floor-6"]], "Floor - 1": [[53, "floor-1"]], "GRU": [[54, "gru"]], "GRU - 14": [[54, "gru-14"]], "GRU - 7": [[54, "gru-7"]], "GRU - 3": [[54, "gru-3"]], "GRU - 1": [[54, "gru-1"]], "Gather": [[55, "gather"]], "Gather - 13": [[55, "gather-13"]], "Gather - 11": [[55, "gather-11"]], "Gather - 1": [[55, "gather-1"]], "GatherElements": [[56, "gatherelements"]], "GatherElements - 13": [[56, "gatherelements-13"]], "GatherElements - 11": [[56, "gatherelements-11"]], "GatherND": [[57, "gathernd"]], "GatherND - 13": [[57, "gathernd-13"]], "GatherND - 12": [[57, "gathernd-12"]], "GatherND - 11": [[57, "gathernd-11"]], "Gemm": [[58, "gemm"]], "Gemm - 13": [[58, "gemm-13"]], "Gemm - 11": [[58, "gemm-11"]], "Gemm - 9": [[58, "gemm-9"]], "Gemm - 7": [[58, "gemm-7"]], "Gemm - 6": [[58, "gemm-6"]], "Gemm - 1": [[58, "gemm-1"]], "GlobalAveragePool": [[59, "globalaveragepool"]], "GlobalAveragePool - 1": [[59, "globalaveragepool-1"]], "GlobalLpPool": [[60, "globallppool"]], "GlobalLpPool - 2": [[60, "globallppool-2"]], "GlobalLpPool - 1": [[60, "globallppool-1"]], "GlobalMaxPool": [[61, "globalmaxpool"]], "GlobalMaxPool - 1": [[61, "globalmaxpool-1"]], "Greater": [[62, "greater"]], "Greater - 13": [[62, "greater-13"]], "Greater - 9": [[62, "greater-9"]], "Greater - 7": [[62, "greater-7"]], "Greater - 1": [[62, "greater-1"]], "GreaterOrEqual": [[63, "greaterorequal"]], "GreaterOrEqual - 16": [[63, "greaterorequal-16"]], "GreaterOrEqual - 12": [[63, "greaterorequal-12"]], "GridSample": [[64, "gridsample"]], "GridSample - 16": [[64, "gridsample-16"]], "HammingWindow": [[65, "hammingwindow"]], "HammingWindow - 17": [[65, "hammingwindow-17"]], "HannWindow": [[66, "hannwindow"]], "HannWindow - 17": [[66, "hannwindow-17"]], "HardSigmoid": [[67, "hardsigmoid"]], "HardSigmoid - 6": [[67, "hardsigmoid-6"]], "HardSigmoid - 1": [[67, "hardsigmoid-1"]], "HardSwish": [[68, "hardswish"]], "HardSwish - 14": [[68, "hardswish-14"]], "Hardmax": [[69, "hardmax"]], "Hardmax - 13": [[69, "hardmax-13"]], "Hardmax - 11": [[69, "hardmax-11"]], "Hardmax - 1": [[69, "hardmax-1"]], "Identity": [[70, "l-onnx-doc-identity"]], "Identity - 16": [[70, "l-onnx-op-identity-16"]], "Identity - 14": [[70, "l-onnx-op-identity-14"]], "Identity - 13": [[70, "l-onnx-op-identity-13"]], "Identity - 1": [[70, "l-onnx-op-identity-1"]], "If": [[71, "if"], [478, "if"], [481, "if"]], "If - 16": [[71, "if-16"]], "If - 13": [[71, "if-13"]], "If - 11": [[71, "if-11"]], "If - 1": [[71, "if-1"]], "InstanceNormalization": [[72, "instancenormalization"]], "InstanceNormalization - 6": [[72, "instancenormalization-6"]], "InstanceNormalization - 1": [[72, "instancenormalization-1"]], "IsInf": [[73, "isinf"]], "IsInf - 10": [[73, "isinf-10"]], "IsNaN": [[74, "isnan"]], "IsNaN - 13": [[74, "isnan-13"]], "IsNaN - 9": [[74, "isnan-9"]], "LRN": [[75, "lrn"]], "LRN - 13": [[75, "lrn-13"]], "LRN - 1": [[75, "lrn-1"]], "LSTM": [[76, "lstm"]], "LSTM - 14": [[76, "lstm-14"]], "LSTM - 7": [[76, "lstm-7"]], "LSTM - 1": [[76, "lstm-1"]], "LayerNormalization": [[77, "layernormalization"]], "LayerNormalization - 17": [[77, "layernormalization-17"]], "LeakyRelu": [[78, "leakyrelu"]], "LeakyRelu - 16": [[78, "leakyrelu-16"]], "LeakyRelu - 6": [[78, "leakyrelu-6"]], "LeakyRelu - 1": [[78, "leakyrelu-1"]], "Less": [[79, "less"]], "Less - 13": [[79, "less-13"]], "Less - 9": [[79, "less-9"]], "Less - 7": [[79, "less-7"]], "Less - 1": [[79, "less-1"]], "LessOrEqual": [[80, "lessorequal"]], "LessOrEqual - 16": [[80, "lessorequal-16"]], "LessOrEqual - 12": [[80, "lessorequal-12"]], "Log": [[81, "log"]], "Log - 13": [[81, "log-13"]], "Log - 6": [[81, "log-6"]], "Log - 1": [[81, "log-1"]], "LogSoftmax": [[82, "logsoftmax"]], "LogSoftmax - 13": [[82, "logsoftmax-13"]], "LogSoftmax - 11": [[82, "logsoftmax-11"]], "LogSoftmax - 1": [[82, "logsoftmax-1"]], "Loop": [[83, "loop"], [478, "loop"]], "Loop - 16": [[83, "loop-16"]], "Loop - 13": [[83, "loop-13"]], "Loop - 11": [[83, "loop-11"]], "Loop - 1": [[83, "loop-1"]], "LpNormalization": [[84, "lpnormalization"]], "LpNormalization - 1": [[84, "lpnormalization-1"]], "LpPool": [[85, "lppool"]], "LpPool - 11": [[85, "lppool-11"]], "LpPool - 2": [[85, "lppool-2"]], "LpPool - 1": [[85, "lppool-1"]], "MatMul": [[86, "matmul"]], "MatMul - 13": [[86, "matmul-13"]], "MatMul - 9": [[86, "matmul-9"]], "MatMul - 1": [[86, "matmul-1"]], "MatMulInteger": [[87, "matmulinteger"]], "MatMulInteger - 10": [[87, "matmulinteger-10"]], "Max": [[88, "max"]], "Max - 13": [[88, "max-13"]], "Max - 12": [[88, "max-12"]], "Max - 8": [[88, "max-8"]], "Max - 6": [[88, "max-6"]], "Max - 1": [[88, "max-1"]], "MaxPool": [[89, "maxpool"]], "MaxPool - 12": [[89, "maxpool-12"]], "MaxPool - 11": [[89, "maxpool-11"]], "MaxPool - 10": [[89, "maxpool-10"]], "MaxPool - 8": [[89, "maxpool-8"]], "MaxPool - 1": [[89, "maxpool-1"]], "MaxRoiPool": [[90, "maxroipool"]], "MaxRoiPool - 1": [[90, "maxroipool-1"]], "MaxUnpool": [[91, "maxunpool"]], "MaxUnpool - 11": [[91, "maxunpool-11"]], "MaxUnpool - 9": [[91, "maxunpool-9"]], "Mean": [[92, "mean"]], "Mean - 13": [[92, "mean-13"]], "Mean - 8": [[92, "mean-8"]], "Mean - 6": [[92, "mean-6"]], "Mean - 1": [[92, "mean-1"]], "MeanVarianceNormalization": [[93, "meanvariancenormalization"]], "MeanVarianceNormalization - 13": [[93, "meanvariancenormalization-13"]], "MeanVarianceNormalization - 9": [[93, "meanvariancenormalization-9"]], "MelWeightMatrix": [[94, "melweightmatrix"]], "MelWeightMatrix - 17": [[94, "melweightmatrix-17"]], "Min": [[95, "min"]], "Min - 13": [[95, "min-13"]], "Min - 12": [[95, "min-12"]], "Min - 8": [[95, "min-8"]], "Min - 6": [[95, "min-6"]], "Min - 1": [[95, "min-1"]], "Mish": [[96, "mish"]], "Mish - 18": [[96, "mish-18"]], "Mod": [[97, "mod"]], "Mod - 13": [[97, "mod-13"]], "Mod - 10": [[97, "mod-10"]], "Mul": [[98, "mul"]], "Mul - 14": [[98, "mul-14"]], "Mul - 13": [[98, "mul-13"]], "Mul - 7": [[98, "mul-7"]], "Mul - 6": [[98, "mul-6"]], "Mul - 1": [[98, "mul-1"]], "Multinomial": [[99, "multinomial"]], "Multinomial - 7": [[99, "multinomial-7"]], "Neg": [[100, "neg"]], "Neg - 13": [[100, "neg-13"]], "Neg - 6": [[100, "neg-6"]], "Neg - 1": [[100, "neg-1"]], "NegativeLogLikelihoodLoss": [[101, "negativeloglikelihoodloss"]], "NegativeLogLikelihoodLoss - 13": [[101, "negativeloglikelihoodloss-13"]], "NegativeLogLikelihoodLoss - 12": [[101, "negativeloglikelihoodloss-12"]], "NonMaxSuppression": [[102, "nonmaxsuppression"]], "NonMaxSuppression - 11": [[102, "nonmaxsuppression-11"]], "NonMaxSuppression - 10": [[102, "nonmaxsuppression-10"]], "NonZero": [[103, "nonzero"]], "NonZero - 13": [[103, "nonzero-13"]], "NonZero - 9": [[103, "nonzero-9"]], "Not": [[104, "not"]], "Not - 1": [[104, "not-1"]], "OneHot": [[105, "onehot"]], "OneHot - 11": [[105, "onehot-11"]], "OneHot - 9": [[105, "onehot-9"]], "Optional": [[106, "optional"]], "Optional - 15": [[106, "optional-15"]], "OptionalGetElement": [[107, "optionalgetelement"]], "OptionalGetElement - 18": [[107, "optionalgetelement-18"]], "OptionalGetElement - 15": [[107, "optionalgetelement-15"]], "OptionalHasElement": [[108, "optionalhaselement"]], "OptionalHasElement - 18": [[108, "optionalhaselement-18"]], "OptionalHasElement - 15": [[108, "optionalhaselement-15"]], "Or": [[109, "or"]], "Or - 7": [[109, "or-7"]], "Or - 1": [[109, "or-1"]], "PRelu": [[110, "prelu"]], "PRelu - 16": [[110, "prelu-16"]], "PRelu - 9": [[110, "prelu-9"]], "PRelu - 7": [[110, "prelu-7"]], "PRelu - 6": [[110, "prelu-6"]], "PRelu - 1": [[110, "prelu-1"]], "Pad": [[111, "pad"]], "Pad - 18": [[111, "pad-18"]], "Pad - 13": [[111, "pad-13"]], "Pad - 11": [[111, "pad-11"]], "Pad - 2": [[111, "pad-2"]], "Pad - 1": [[111, "pad-1"]], "Pow": [[112, "pow"]], "Pow - 15": [[112, "pow-15"]], "Pow - 13": [[112, "pow-13"]], "Pow - 12": [[112, "pow-12"]], "Pow - 7": [[112, "pow-7"]], "Pow - 1": [[112, "pow-1"]], "QLinearConv": [[113, "qlinearconv"]], "QLinearConv - 10": [[113, "qlinearconv-10"]], "QLinearMatMul": [[114, "qlinearmatmul"]], "QLinearMatMul - 10": [[114, "qlinearmatmul-10"]], "QuantizeLinear": [[115, "quantizelinear"]], "QuantizeLinear - 13": [[115, "quantizelinear-13"]], "QuantizeLinear - 10": [[115, "quantizelinear-10"]], "RNN": [[116, "rnn"]], "RNN - 14": [[116, "rnn-14"]], "RNN - 7": [[116, "rnn-7"]], "RNN - 1": [[116, "rnn-1"]], "RandomNormal": [[117, "randomnormal"]], "RandomNormal - 1": [[117, "randomnormal-1"]], "RandomNormalLike": [[118, "randomnormallike"]], "RandomNormalLike - 1": [[118, "randomnormallike-1"]], "RandomUniform": [[119, "randomuniform"]], "RandomUniform - 1": [[119, "randomuniform-1"]], "RandomUniformLike": [[120, "randomuniformlike"]], "RandomUniformLike - 1": [[120, "randomuniformlike-1"]], "Range": [[121, "range"]], "Range - 11": [[121, "range-11"]], "Reciprocal": [[122, "reciprocal"]], "Reciprocal - 13": [[122, "reciprocal-13"]], "Reciprocal - 6": [[122, "reciprocal-6"]], "Reciprocal - 1": [[122, "reciprocal-1"]], "ReduceL1": [[123, "reducel1"]], "ReduceL1 - 13": [[123, "reducel1-13"]], "ReduceL1 - 11": [[123, "reducel1-11"]], "ReduceL1 - 1": [[123, "reducel1-1"]], "ReduceL2": [[124, "reducel2"]], "ReduceL2 - 13": [[124, "reducel2-13"]], "ReduceL2 - 11": [[124, "reducel2-11"]], "ReduceL2 - 1": [[124, "reducel2-1"]], "ReduceLogSum": [[125, "reducelogsum"]], "ReduceLogSum - 13": [[125, "reducelogsum-13"]], "ReduceLogSum - 11": [[125, "reducelogsum-11"]], "ReduceLogSum - 1": [[125, "reducelogsum-1"]], "ReduceLogSumExp": [[126, "reducelogsumexp"]], "ReduceLogSumExp - 13": [[126, "reducelogsumexp-13"]], "ReduceLogSumExp - 11": [[126, "reducelogsumexp-11"]], "ReduceLogSumExp - 1": [[126, "reducelogsumexp-1"]], "ReduceMax": [[127, "reducemax"]], "ReduceMax - 13": [[127, "reducemax-13"]], "ReduceMax - 12": [[127, "reducemax-12"]], "ReduceMax - 11": [[127, "reducemax-11"]], "ReduceMax - 1": [[127, "reducemax-1"]], "ReduceMean": [[128, "reducemean"]], "ReduceMean - 13": [[128, "reducemean-13"]], "ReduceMean - 11": [[128, "reducemean-11"]], "ReduceMean - 1": [[128, "reducemean-1"]], "ReduceMin": [[129, "reducemin"]], "ReduceMin - 13": [[129, "reducemin-13"]], "ReduceMin - 12": [[129, "reducemin-12"]], "ReduceMin - 11": [[129, "reducemin-11"]], "ReduceMin - 1": [[129, "reducemin-1"]], "ReduceProd": [[130, "reduceprod"]], "ReduceProd - 13": [[130, "reduceprod-13"]], "ReduceProd - 11": [[130, "reduceprod-11"]], "ReduceProd - 1": [[130, "reduceprod-1"]], "ReduceSum": [[131, "reducesum"]], "ReduceSum - 13": [[131, "reducesum-13"]], "ReduceSum - 11": [[131, "reducesum-11"]], "ReduceSum - 1": [[131, "reducesum-1"]], "ReduceSumSquare": [[132, "reducesumsquare"]], "ReduceSumSquare - 13": [[132, "reducesumsquare-13"]], "ReduceSumSquare - 11": [[132, "reducesumsquare-11"]], "ReduceSumSquare - 1": [[132, "reducesumsquare-1"]], "Relu": [[133, "relu"]], "Relu - 14": [[133, "relu-14"]], "Relu - 13": [[133, "relu-13"]], "Relu - 6": [[133, "relu-6"]], "Relu - 1": [[133, "relu-1"]], "Reshape": [[134, "reshape"]], "Reshape - 14": [[134, "reshape-14"]], "Reshape - 13": [[134, "reshape-13"]], "Reshape - 5": [[134, "reshape-5"]], "Reshape - 1": [[134, "reshape-1"]], "Resize": [[135, "resize"]], "Resize - 18": [[135, "resize-18"]], "Resize - 13": [[135, "resize-13"]], "Resize - 11": [[135, "resize-11"]], "Resize - 10": [[135, "resize-10"]], "ReverseSequence": [[136, "reversesequence"]], "ReverseSequence - 10": [[136, "reversesequence-10"]], "RoiAlign": [[137, "roialign"]], "RoiAlign - 16": [[137, "roialign-16"]], "RoiAlign - 10": [[137, "roialign-10"]], "Round": [[138, "round"]], "Round - 11": [[138, "round-11"]], "STFT": [[139, "stft"]], "STFT - 17": [[139, "stft-17"]], "Scan": [[140, "scan"], [478, "scan"], [481, "scan"]], "Scan - 16": [[140, "scan-16"]], "Scan - 11": [[140, "scan-11"]], "Scan - 9": [[140, "scan-9"]], "Scan - 8": [[140, "scan-8"]], "Scatter": [[141, "scatter"]], "Scatter - 11": [[141, "scatter-11"]], "Scatter - 9": [[141, "scatter-9"]], "ScatterElements": [[142, "scatterelements"]], "ScatterElements - 18": [[142, "scatterelements-18"]], "ScatterElements - 16": [[142, "scatterelements-16"]], "ScatterElements - 13": [[142, "scatterelements-13"]], "ScatterElements - 11": [[142, "scatterelements-11"]], "ScatterND": [[143, "scatternd"]], "ScatterND - 18": [[143, "scatternd-18"]], "ScatterND - 16": [[143, "scatternd-16"]], "ScatterND - 13": [[143, "scatternd-13"]], "ScatterND - 11": [[143, "scatternd-11"]], "Selu": [[144, "selu"]], "Selu - 6": [[144, "selu-6"]], "Selu - 1": [[144, "selu-1"]], "SequenceAt": [[145, "sequenceat"]], "SequenceAt - 11": [[145, "sequenceat-11"]], "SequenceConstruct": [[146, "sequenceconstruct"]], "SequenceConstruct - 11": [[146, "sequenceconstruct-11"]], "SequenceEmpty": [[147, "sequenceempty"]], "SequenceEmpty - 11": [[147, "sequenceempty-11"]], "SequenceErase": [[148, "sequenceerase"]], "SequenceErase - 11": [[148, "sequenceerase-11"]], "SequenceInsert": [[149, "sequenceinsert"]], "SequenceInsert - 11": [[149, "sequenceinsert-11"]], "SequenceLength": [[150, "sequencelength"]], "SequenceLength - 11": [[150, "sequencelength-11"]], "SequenceMap": [[151, "sequencemap"]], "SequenceMap - 17": [[151, "sequencemap-17"]], "Shape": [[152, "shape"]], "Shape - 15": [[152, "shape-15"]], "Shape - 13": [[152, "shape-13"]], "Shape - 1": [[152, "shape-1"]], "Shrink": [[153, "shrink"]], "Shrink - 9": [[153, "shrink-9"]], "Sigmoid": [[154, "sigmoid"]], "Sigmoid - 13": [[154, "sigmoid-13"]], "Sigmoid - 6": [[154, "sigmoid-6"]], "Sigmoid - 1": [[154, "sigmoid-1"]], "Sign": [[155, "sign"]], "Sign - 13": [[155, "sign-13"]], "Sign - 9": [[155, "sign-9"]], "Sin": [[156, "sin"]], "Sin - 7": [[156, "sin-7"]], "Sinh": [[157, "sinh"]], "Sinh - 9": [[157, "sinh-9"]], "Size": [[158, "size"]], "Size - 13": [[158, "size-13"]], "Size - 1": [[158, "size-1"]], "Slice": [[159, "slice"]], "Slice - 13": [[159, "slice-13"]], "Slice - 11": [[159, "slice-11"]], "Slice - 10": [[159, "slice-10"]], "Slice - 1": [[159, "slice-1"]], "Softmax": [[160, "softmax"]], "Softmax - 13": [[160, "softmax-13"]], "Softmax - 11": [[160, "softmax-11"]], "Softmax - 1": [[160, "softmax-1"]], "SoftmaxCrossEntropyLoss": [[161, "softmaxcrossentropyloss"]], "SoftmaxCrossEntropyLoss - 13": [[161, "softmaxcrossentropyloss-13"]], "SoftmaxCrossEntropyLoss - 12": [[161, "softmaxcrossentropyloss-12"]], "Softplus": [[162, "softplus"]], "Softplus - 1": [[162, "softplus-1"]], "Softsign": [[163, "softsign"]], "Softsign - 1": [[163, "softsign-1"]], "SpaceToDepth": [[164, "spacetodepth"]], "SpaceToDepth - 13": [[164, "spacetodepth-13"]], "SpaceToDepth - 1": [[164, "spacetodepth-1"]], "Split": [[165, "split"]], "Split - 13": [[165, "split-13"]], "Split - 11": [[165, "split-11"]], "Split - 2": [[165, "split-2"]], "Split - 1": [[165, "split-1"]], "SplitToSequence": [[166, "splittosequence"]], "SplitToSequence - 11": [[166, "splittosequence-11"]], "Sqrt": [[167, "sqrt"]], "Sqrt - 13": [[167, "sqrt-13"]], "Sqrt - 6": [[167, "sqrt-6"]], "Sqrt - 1": [[167, "sqrt-1"]], "Squeeze": [[168, "squeeze"]], "Squeeze - 13": [[168, "squeeze-13"]], "Squeeze - 11": [[168, "squeeze-11"]], "Squeeze - 1": [[168, "squeeze-1"]], "StringNormalizer": [[169, "stringnormalizer"]], "StringNormalizer - 10": [[169, "stringnormalizer-10"]], "Sub": [[170, "sub"]], "Sub - 14": [[170, "sub-14"]], "Sub - 13": [[170, "sub-13"]], "Sub - 7": [[170, "sub-7"]], "Sub - 6": [[170, "sub-6"]], "Sub - 1": [[170, "sub-1"]], "Sum": [[171, "sum"]], "Sum - 13": [[171, "sum-13"]], "Sum - 8": [[171, "sum-8"]], "Sum - 6": [[171, "sum-6"]], "Sum - 1": [[171, "sum-1"]], "Tan": [[172, "tan"]], "Tan - 7": [[172, "tan-7"]], "Tanh": [[173, "tanh"]], "Tanh - 13": [[173, "tanh-13"]], "Tanh - 6": [[173, "tanh-6"]], "Tanh - 1": [[173, "tanh-1"]], "TfIdfVectorizer": [[174, "tfidfvectorizer"]], "TfIdfVectorizer - 9": [[174, "tfidfvectorizer-9"]], "ThresholdedRelu": [[175, "thresholdedrelu"]], "ThresholdedRelu - 10": [[175, "thresholdedrelu-10"]], "Tile": [[176, "tile"]], "Tile - 13": [[176, "tile-13"]], "Tile - 6": [[176, "tile-6"]], "Tile - 1": [[176, "tile-1"]], "TopK": [[177, "topk"]], "TopK - 11": [[177, "topk-11"]], "TopK - 10": [[177, "topk-10"]], "TopK - 1": [[177, "topk-1"]], "Transpose": [[178, "transpose"]], "Transpose - 13": [[178, "transpose-13"]], "Transpose - 1": [[178, "transpose-1"]], "Trilu": [[179, "trilu"]], "Trilu - 14": [[179, "trilu-14"]], "Unique": [[180, "unique"]], "Unique - 11": [[180, "unique-11"]], "Unsqueeze": [[181, "unsqueeze"]], "Unsqueeze - 13": [[181, "unsqueeze-13"]], "Unsqueeze - 11": [[181, "unsqueeze-11"]], "Unsqueeze - 1": [[181, "unsqueeze-1"]], "Upsample": [[182, "upsample"]], "Upsample - 10": [[182, "upsample-10"]], "Upsample - 9": [[182, "upsample-9"]], "Upsample - 7": [[182, "upsample-7"]], "Upsample - 1": [[182, "upsample-1"]], "Where": [[183, "where"]], "Where - 16": [[183, "where-16"]], "Where - 9": [[183, "where-9"]], "Xor": [[184, "xor"]], "Xor - 7": [[184, "xor-7"]], "Xor - 1": [[184, "xor-1"]], "ai.onnx.ml - ArrayFeatureExtractor": [[185, "ai-onnx-ml-arrayfeatureextractor"]], "ArrayFeatureExtractor - 1 (ai.onnx.ml)": [[185, "arrayfeatureextractor-1-ai-onnx-ml"]], "ai.onnx.ml - Binarizer": [[186, "ai-onnx-ml-binarizer"]], "Binarizer - 1 (ai.onnx.ml)": [[186, "binarizer-1-ai-onnx-ml"]], "ai.onnx.ml - CastMap": [[187, "ai-onnx-ml-castmap"]], "CastMap - 1 (ai.onnx.ml)": [[187, "castmap-1-ai-onnx-ml"]], "ai.onnx.ml - CategoryMapper": [[188, "ai-onnx-ml-categorymapper"]], "CategoryMapper - 1 (ai.onnx.ml)": [[188, "categorymapper-1-ai-onnx-ml"]], "ai.onnx.ml - DictVectorizer": [[189, "ai-onnx-ml-dictvectorizer"]], "DictVectorizer - 1 (ai.onnx.ml)": [[189, "dictvectorizer-1-ai-onnx-ml"]], "ai.onnx.ml - FeatureVectorizer": [[190, "ai-onnx-ml-featurevectorizer"]], "FeatureVectorizer - 1 (ai.onnx.ml)": [[190, "featurevectorizer-1-ai-onnx-ml"]], "ai.onnx.ml - Imputer": [[191, "ai-onnx-ml-imputer"]], "Imputer - 1 (ai.onnx.ml)": [[191, "imputer-1-ai-onnx-ml"]], "ai.onnx.ml - LabelEncoder": [[192, "ai-onnx-ml-labelencoder"]], "LabelEncoder - 2 (ai.onnx.ml)": [[192, "labelencoder-2-ai-onnx-ml"]], "LabelEncoder - 1 (ai.onnx.ml)": [[192, "labelencoder-1-ai-onnx-ml"]], "ai.onnx.ml - LinearClassifier": [[193, "ai-onnx-ml-linearclassifier"]], "LinearClassifier - 1 (ai.onnx.ml)": [[193, "linearclassifier-1-ai-onnx-ml"]], "ai.onnx.ml - LinearRegressor": [[194, "ai-onnx-ml-linearregressor"]], "LinearRegressor - 1 (ai.onnx.ml)": [[194, "linearregressor-1-ai-onnx-ml"]], "ai.onnx.ml - Normalizer": [[195, "ai-onnx-ml-normalizer"]], "Normalizer - 1 (ai.onnx.ml)": [[195, "normalizer-1-ai-onnx-ml"]], "ai.onnx.ml - OneHotEncoder": [[196, "ai-onnx-ml-onehotencoder"]], "OneHotEncoder - 1 (ai.onnx.ml)": [[196, "onehotencoder-1-ai-onnx-ml"]], "ai.onnx.ml - SVMClassifier": [[197, "ai-onnx-ml-svmclassifier"]], "SVMClassifier - 1 (ai.onnx.ml)": [[197, "svmclassifier-1-ai-onnx-ml"]], "ai.onnx.ml - SVMRegressor": [[198, "ai-onnx-ml-svmregressor"]], "SVMRegressor - 1 (ai.onnx.ml)": [[198, "svmregressor-1-ai-onnx-ml"]], "ai.onnx.ml - Scaler": [[199, "ai-onnx-ml-scaler"]], "Scaler - 1 (ai.onnx.ml)": [[199, "scaler-1-ai-onnx-ml"]], "ai.onnx.ml - TreeEnsembleClassifier": [[200, "ai-onnx-ml-treeensembleclassifier"]], "TreeEnsembleClassifier - 3 (ai.onnx.ml)": [[200, "treeensembleclassifier-3-ai-onnx-ml"]], "TreeEnsembleClassifier - 1 (ai.onnx.ml)": [[200, "treeensembleclassifier-1-ai-onnx-ml"]], "ai.onnx.ml - TreeEnsembleRegressor": [[201, "ai-onnx-ml-treeensembleregressor"]], "TreeEnsembleRegressor - 3 (ai.onnx.ml)": [[201, "treeensembleregressor-3-ai-onnx-ml"]], "TreeEnsembleRegressor - 1 (ai.onnx.ml)": [[201, "treeensembleregressor-1-ai-onnx-ml"]], "ai.onnx.ml - ZipMap": [[202, "ai-onnx-ml-zipmap"]], "ZipMap - 1 (ai.onnx.ml)": [[202, "zipmap-1-ai-onnx-ml"]], "ai.onnx.preview.training - Adagrad": [[203, "ai-onnx-preview-training-adagrad"]], "Adagrad - 1 (ai.onnx.preview.training)": [[203, "adagrad-1-ai-onnx-preview-training"]], "ai.onnx.preview.training - Adam": [[204, "ai-onnx-preview-training-adam"]], "Adam - 1 (ai.onnx.preview.training)": [[204, "adam-1-ai-onnx-preview-training"]], "ai.onnx.preview.training - Gradient": [[205, "ai-onnx-preview-training-gradient"]], "Gradient - 1 (ai.onnx.preview.training)": [[205, "gradient-1-ai-onnx-preview-training"]], "ai.onnx.preview.training - Momentum": [[206, "ai-onnx-preview-training-momentum"]], "Momentum - 1 (ai.onnx.preview.training)": [[206, "momentum-1-ai-onnx-preview-training"]], "Abs - 1 vs 6": [[210, "abs-1-vs-6"]], "Abs - 6 vs 13": [[211, "abs-6-vs-13"]], "Add - 13 vs 14": [[212, "add-13-vs-14"]], "Add - 1 vs 6": [[213, "add-1-vs-6"]], "Add - 6 vs 7": [[214, "add-6-vs-7"]], "Add - 7 vs 13": [[215, "add-7-vs-13"]], "And - 1 vs 7": [[216, "and-1-vs-7"]], "ArgMax - 11 vs 12": [[217, "argmax-11-vs-12"]], "ArgMax - 12 vs 13": [[218, "argmax-12-vs-13"]], "ArgMax - 1 vs 11": [[219, "argmax-1-vs-11"]], "ArgMin - 11 vs 12": [[220, "argmin-11-vs-12"]], "ArgMin - 12 vs 13": [[221, "argmin-12-vs-13"]], "ArgMin - 1 vs 11": [[222, "argmin-1-vs-11"]], "AveragePool - 10 vs 11": [[223, "averagepool-10-vs-11"]], "AveragePool - 1 vs 7": [[224, "averagepool-1-vs-7"]], "AveragePool - 7 vs 10": [[225, "averagepool-7-vs-10"]], "BatchNormalization - 14 vs 15": [[226, "batchnormalization-14-vs-15"]], "BatchNormalization - 1 vs 6": [[227, "batchnormalization-1-vs-6"]], "BatchNormalization - 6 vs 7": [[228, "batchnormalization-6-vs-7"]], "BatchNormalization - 7 vs 9": [[229, "batchnormalization-7-vs-9"]], "BatchNormalization - 9 vs 14": [[230, "batchnormalization-9-vs-14"]], "Cast - 1 vs 6": [[231, "cast-1-vs-6"]], "Cast - 6 vs 9": [[232, "cast-6-vs-9"]], "Cast - 9 vs 13": [[233, "cast-9-vs-13"]], "Ceil - 1 vs 6": [[234, "ceil-1-vs-6"]], "Ceil - 6 vs 13": [[235, "ceil-6-vs-13"]], "Clip - 11 vs 12": [[236, "clip-11-vs-12"]], "Clip - 12 vs 13": [[237, "clip-12-vs-13"]], "Clip - 1 vs 6": [[238, "clip-1-vs-6"]], "Clip - 6 vs 11": [[239, "clip-6-vs-11"]], "Compress - 9 vs 11": [[240, "compress-9-vs-11"]], "Concat - 11 vs 13": [[241, "concat-11-vs-13"]], "Concat - 1 vs 4": [[242, "concat-1-vs-4"]], "Concat - 4 vs 11": [[243, "concat-4-vs-11"]], "Constant - 11 vs 12": [[244, "constant-11-vs-12"]], "Constant - 12 vs 13": [[245, "constant-12-vs-13"]], "Constant - 1 vs 9": [[246, "constant-1-vs-9"]], "Constant - 9 vs 11": [[247, "constant-9-vs-11"]], "ConvTranspose - 1 vs 11": [[248, "convtranspose-1-vs-11"]], "Conv - 1 vs 11": [[249, "conv-1-vs-11"]], "CumSum - 11 vs 14": [[250, "cumsum-11-vs-14"]], "DepthToSpace - 11 vs 13": [[251, "depthtospace-11-vs-13"]], "DepthToSpace - 1 vs 11": [[252, "depthtospace-1-vs-11"]], "DequantizeLinear - 10 vs 13": [[253, "dequantizelinear-10-vs-13"]], "Div - 13 vs 14": [[254, "div-13-vs-14"]], "Div - 1 vs 6": [[255, "div-1-vs-6"]], "Div - 6 vs 7": [[256, "div-6-vs-7"]], "Div - 7 vs 13": [[257, "div-7-vs-13"]], "Dropout - 10 vs 12": [[258, "dropout-10-vs-12"]], "Dropout - 12 vs 13": [[259, "dropout-12-vs-13"]], "Dropout - 1 vs 6": [[260, "dropout-1-vs-6"]], "Dropout - 6 vs 7": [[261, "dropout-6-vs-7"]], "Dropout - 7 vs 10": [[262, "dropout-7-vs-10"]], "Elu - 1 vs 6": [[263, "elu-1-vs-6"]], "Equal - 11 vs 13": [[264, "equal-11-vs-13"]], "Equal - 1 vs 7": [[265, "equal-1-vs-7"]], "Equal - 7 vs 11": [[266, "equal-7-vs-11"]], "Erf - 9 vs 13": [[267, "erf-9-vs-13"]], "Exp - 1 vs 6": [[268, "exp-1-vs-6"]], "Exp - 6 vs 13": [[269, "exp-6-vs-13"]], "Expand - 8 vs 13": [[270, "expand-8-vs-13"]], "Flatten - 11 vs 13": [[271, "flatten-11-vs-13"]], "Flatten - 1 vs 9": [[272, "flatten-1-vs-9"]], "Flatten - 9 vs 11": [[273, "flatten-9-vs-11"]], "Floor - 1 vs 6": [[274, "floor-1-vs-6"]], "Floor - 6 vs 13": [[275, "floor-6-vs-13"]], "GRU - 1 vs 3": [[276, "gru-1-vs-3"]], "GRU - 3 vs 7": [[277, "gru-3-vs-7"]], "GRU - 7 vs 14": [[278, "gru-7-vs-14"]], "GatherElements - 11 vs 13": [[279, "gatherelements-11-vs-13"]], "GatherND - 11 vs 12": [[280, "gathernd-11-vs-12"]], "GatherND - 12 vs 13": [[281, "gathernd-12-vs-13"]], "Gather - 11 vs 13": [[282, "gather-11-vs-13"]], "Gather - 1 vs 11": [[283, "gather-1-vs-11"]], "Gemm - 11 vs 13": [[284, "gemm-11-vs-13"]], "Gemm - 1 vs 6": [[285, "gemm-1-vs-6"]], "Gemm - 6 vs 7": [[286, "gemm-6-vs-7"]], "Gemm - 7 vs 9": [[287, "gemm-7-vs-9"]], "Gemm - 9 vs 11": [[288, "gemm-9-vs-11"]], "GlobalLpPool - 1 vs 2": [[289, "globallppool-1-vs-2"]], "GreaterOrEqual - 12 vs 16": [[290, "greaterorequal-12-vs-16"]], "Greater - 1 vs 7": [[291, "greater-1-vs-7"]], "Greater - 7 vs 9": [[292, "greater-7-vs-9"]], "Greater - 9 vs 13": [[293, "greater-9-vs-13"]], "HardSigmoid - 1 vs 6": [[294, "hardsigmoid-1-vs-6"]], "Hardmax - 11 vs 13": [[295, "hardmax-11-vs-13"]], "Hardmax - 1 vs 11": [[296, "hardmax-1-vs-11"]], "Identity - 13 vs 14": [[297, "identity-13-vs-14"]], "Identity - 14 vs 16": [[298, "identity-14-vs-16"]], "Identity - 1 vs 13": [[299, "identity-1-vs-13"]], "If - 11 vs 13": [[300, "if-11-vs-13"]], "If - 13 vs 16": [[301, "if-13-vs-16"]], "If - 1 vs 11": [[302, "if-1-vs-11"]], "InstanceNormalization - 1 vs 6": [[303, "instancenormalization-1-vs-6"]], "IsNaN - 9 vs 13": [[304, "isnan-9-vs-13"]], "LRN - 1 vs 13": [[305, "lrn-1-vs-13"]], "LSTM - 1 vs 7": [[306, "lstm-1-vs-7"]], "LSTM - 7 vs 14": [[307, "lstm-7-vs-14"]], "LabelEncoder - 1 vs 2": [[308, "labelencoder-1-vs-2"]], "LeakyRelu - 1 vs 6": [[309, "leakyrelu-1-vs-6"]], "LeakyRelu - 6 vs 16": [[310, "leakyrelu-6-vs-16"]], "LessOrEqual - 12 vs 16": [[311, "lessorequal-12-vs-16"]], "Less - 1 vs 7": [[312, "less-1-vs-7"]], "Less - 7 vs 9": [[313, "less-7-vs-9"]], "Less - 9 vs 13": [[314, "less-9-vs-13"]], "LogSoftmax - 11 vs 13": [[315, "logsoftmax-11-vs-13"]], "LogSoftmax - 1 vs 11": [[316, "logsoftmax-1-vs-11"]], "Log - 1 vs 6": [[317, "log-1-vs-6"]], "Log - 6 vs 13": [[318, "log-6-vs-13"]], "Loop - 11 vs 13": [[319, "loop-11-vs-13"]], "Loop - 13 vs 16": [[320, "loop-13-vs-16"]], "Loop - 1 vs 11": [[321, "loop-1-vs-11"]], "LpPool - 1 vs 2": [[322, "lppool-1-vs-2"]], "LpPool - 2 vs 11": [[323, "lppool-2-vs-11"]], "MatMul - 1 vs 9": [[324, "matmul-1-vs-9"]], "MatMul - 9 vs 13": [[325, "matmul-9-vs-13"]], "MaxPool - 10 vs 11": [[326, "maxpool-10-vs-11"]], "MaxPool - 11 vs 12": [[327, "maxpool-11-vs-12"]], "MaxPool - 1 vs 8": [[328, "maxpool-1-vs-8"]], "MaxPool - 8 vs 10": [[329, "maxpool-8-vs-10"]], "MaxUnpool - 9 vs 11": [[330, "maxunpool-9-vs-11"]], "Max - 12 vs 13": [[331, "max-12-vs-13"]], "Max - 1 vs 6": [[332, "max-1-vs-6"]], "Max - 6 vs 8": [[333, "max-6-vs-8"]], "Max - 8 vs 12": [[334, "max-8-vs-12"]], "MeanVarianceNormalization - 9 vs 13": [[335, "meanvariancenormalization-9-vs-13"]], "Mean - 1 vs 6": [[336, "mean-1-vs-6"]], "Mean - 6 vs 8": [[337, "mean-6-vs-8"]], "Mean - 8 vs 13": [[338, "mean-8-vs-13"]], "Min - 12 vs 13": [[339, "min-12-vs-13"]], "Min - 1 vs 6": [[340, "min-1-vs-6"]], "Min - 6 vs 8": [[341, "min-6-vs-8"]], "Min - 8 vs 12": [[342, "min-8-vs-12"]], "Mod - 10 vs 13": [[343, "mod-10-vs-13"]], "Mul - 13 vs 14": [[344, "mul-13-vs-14"]], "Mul - 1 vs 6": [[345, "mul-1-vs-6"]], "Mul - 6 vs 7": [[346, "mul-6-vs-7"]], "Mul - 7 vs 13": [[347, "mul-7-vs-13"]], "Neg - 1 vs 6": [[348, "neg-1-vs-6"]], "Neg - 6 vs 13": [[349, "neg-6-vs-13"]], "NegativeLogLikelihoodLoss - 12 vs 13": [[350, "negativeloglikelihoodloss-12-vs-13"]], "NonMaxSuppression - 10 vs 11": [[351, "nonmaxsuppression-10-vs-11"]], "NonZero - 9 vs 13": [[352, "nonzero-9-vs-13"]], "OneHot - 9 vs 11": [[353, "onehot-9-vs-11"]], "OptionalGetElement - 15 vs 18": [[354, "optionalgetelement-15-vs-18"]], "OptionalHasElement - 15 vs 18": [[355, "optionalhaselement-15-vs-18"]], "Or - 1 vs 7": [[356, "or-1-vs-7"]], "PRelu - 1 vs 6": [[357, "prelu-1-vs-6"]], "PRelu - 6 vs 7": [[358, "prelu-6-vs-7"]], "PRelu - 7 vs 9": [[359, "prelu-7-vs-9"]], "PRelu - 9 vs 16": [[360, "prelu-9-vs-16"]], "Pad - 11 vs 13": [[361, "pad-11-vs-13"]], "Pad - 13 vs 18": [[362, "pad-13-vs-18"]], "Pad - 1 vs 2": [[363, "pad-1-vs-2"]], "Pad - 2 vs 11": [[364, "pad-2-vs-11"]], "Pow - 12 vs 13": [[365, "pow-12-vs-13"]], "Pow - 13 vs 15": [[366, "pow-13-vs-15"]], "Pow - 1 vs 7": [[367, "pow-1-vs-7"]], "Pow - 7 vs 12": [[368, "pow-7-vs-12"]], "QuantizeLinear - 10 vs 13": [[369, "quantizelinear-10-vs-13"]], "RNN - 1 vs 7": [[370, "rnn-1-vs-7"]], "RNN - 7 vs 14": [[371, "rnn-7-vs-14"]], "Reciprocal - 1 vs 6": [[372, "reciprocal-1-vs-6"]], "Reciprocal - 6 vs 13": [[373, "reciprocal-6-vs-13"]], "ReduceL1 - 11 vs 13": [[374, "reducel1-11-vs-13"]], "ReduceL1 - 1 vs 11": [[375, "reducel1-1-vs-11"]], "ReduceL2 - 11 vs 13": [[376, "reducel2-11-vs-13"]], "ReduceL2 - 1 vs 11": [[377, "reducel2-1-vs-11"]], "ReduceLogSumExp - 11 vs 13": [[378, "reducelogsumexp-11-vs-13"]], "ReduceLogSumExp - 1 vs 11": [[379, "reducelogsumexp-1-vs-11"]], "ReduceLogSum - 11 vs 13": [[380, "reducelogsum-11-vs-13"]], "ReduceLogSum - 1 vs 11": [[381, "reducelogsum-1-vs-11"]], "ReduceMax - 11 vs 12": [[382, "reducemax-11-vs-12"]], "ReduceMax - 12 vs 13": [[383, "reducemax-12-vs-13"]], "ReduceMax - 1 vs 11": [[384, "reducemax-1-vs-11"]], "ReduceMean - 11 vs 13": [[385, "reducemean-11-vs-13"]], "ReduceMean - 1 vs 11": [[386, "reducemean-1-vs-11"]], "ReduceMin - 11 vs 12": [[387, "reducemin-11-vs-12"]], "ReduceMin - 12 vs 13": [[388, "reducemin-12-vs-13"]], "ReduceMin - 1 vs 11": [[389, "reducemin-1-vs-11"]], "ReduceProd - 11 vs 13": [[390, "reduceprod-11-vs-13"]], "ReduceProd - 1 vs 11": [[391, "reduceprod-1-vs-11"]], "ReduceSumSquare - 11 vs 13": [[392, "reducesumsquare-11-vs-13"]], "ReduceSumSquare - 1 vs 11": [[393, "reducesumsquare-1-vs-11"]], "ReduceSum - 11 vs 13": [[394, "reducesum-11-vs-13"]], "ReduceSum - 1 vs 11": [[395, "reducesum-1-vs-11"]], "Relu - 13 vs 14": [[396, "relu-13-vs-14"]], "Relu - 1 vs 6": [[397, "relu-1-vs-6"]], "Relu - 6 vs 13": [[398, "relu-6-vs-13"]], "Reshape - 13 vs 14": [[399, "reshape-13-vs-14"]], "Reshape - 1 vs 5": [[400, "reshape-1-vs-5"]], "Reshape - 5 vs 13": [[401, "reshape-5-vs-13"]], "Resize - 10 vs 11": [[402, "resize-10-vs-11"]], "Resize - 11 vs 13": [[403, "resize-11-vs-13"]], "Resize - 13 vs 18": [[404, "resize-13-vs-18"]], "RoiAlign - 10 vs 16": [[405, "roialign-10-vs-16"]], "Scan - 11 vs 16": [[406, "scan-11-vs-16"]], "Scan - 8 vs 9": [[407, "scan-8-vs-9"]], "Scan - 9 vs 11": [[408, "scan-9-vs-11"]], "ScatterElements - 11 vs 13": [[409, "scatterelements-11-vs-13"]], "ScatterElements - 13 vs 16": [[410, "scatterelements-13-vs-16"]], "ScatterElements - 16 vs 18": [[411, "scatterelements-16-vs-18"]], "ScatterND - 11 vs 13": [[412, "scatternd-11-vs-13"]], "ScatterND - 13 vs 16": [[413, "scatternd-13-vs-16"]], "ScatterND - 16 vs 18": [[414, "scatternd-16-vs-18"]], "Scatter - 9 vs 11": [[415, "scatter-9-vs-11"]], "Selu - 1 vs 6": [[416, "selu-1-vs-6"]], "Shape - 13 vs 15": [[417, "shape-13-vs-15"]], "Shape - 1 vs 13": [[418, "shape-1-vs-13"]], "Sigmoid - 1 vs 6": [[419, "sigmoid-1-vs-6"]], "Sigmoid - 6 vs 13": [[420, "sigmoid-6-vs-13"]], "Sign - 9 vs 13": [[421, "sign-9-vs-13"]], "Size - 1 vs 13": [[422, "size-1-vs-13"]], "Slice - 10 vs 11": [[423, "slice-10-vs-11"]], "Slice - 11 vs 13": [[424, "slice-11-vs-13"]], "Slice - 1 vs 10": [[425, "slice-1-vs-10"]], "SoftmaxCrossEntropyLoss - 12 vs 13": [[426, "softmaxcrossentropyloss-12-vs-13"]], "Softmax - 11 vs 13": [[427, "softmax-11-vs-13"]], "Softmax - 1 vs 11": [[428, "softmax-1-vs-11"]], "SpaceToDepth - 1 vs 13": [[429, "spacetodepth-1-vs-13"]], "Split - 11 vs 13": [[430, "split-11-vs-13"]], "Split - 1 vs 2": [[431, "split-1-vs-2"]], "Split - 2 vs 11": [[432, "split-2-vs-11"]], "Sqrt - 1 vs 6": [[433, "sqrt-1-vs-6"]], "Sqrt - 6 vs 13": [[434, "sqrt-6-vs-13"]], "Squeeze - 11 vs 13": [[435, "squeeze-11-vs-13"]], "Squeeze - 1 vs 11": [[436, "squeeze-1-vs-11"]], "Sub - 13 vs 14": [[437, "sub-13-vs-14"]], "Sub - 1 vs 6": [[438, "sub-1-vs-6"]], "Sub - 6 vs 7": [[439, "sub-6-vs-7"]], "Sub - 7 vs 13": [[440, "sub-7-vs-13"]], "Sum - 1 vs 6": [[441, "sum-1-vs-6"]], "Sum - 6 vs 8": [[442, "sum-6-vs-8"]], "Sum - 8 vs 13": [[443, "sum-8-vs-13"]], "Tanh - 1 vs 6": [[444, "tanh-1-vs-6"]], "Tanh - 6 vs 13": [[445, "tanh-6-vs-13"]], "Tile - 1 vs 6": [[446, "tile-1-vs-6"]], "Tile - 6 vs 13": [[447, "tile-6-vs-13"]], "TopK - 10 vs 11": [[448, "topk-10-vs-11"]], "TopK - 1 vs 10": [[449, "topk-1-vs-10"]], "Transpose - 1 vs 13": [[450, "transpose-1-vs-13"]], "TreeEnsembleClassifier - 1 vs 3": [[451, "treeensembleclassifier-1-vs-3"]], "TreeEnsembleRegressor - 1 vs 3": [[452, "treeensembleregressor-1-vs-3"]], "Unsqueeze - 11 vs 13": [[453, "unsqueeze-11-vs-13"]], "Unsqueeze - 1 vs 11": [[454, "unsqueeze-1-vs-11"]], "Upsample - 1 vs 7": [[455, "upsample-1-vs-7"]], "Upsample - 7 vs 9": [[456, "upsample-7-vs-9"]], "Upsample - 9 vs 10": [[457, "upsample-9-vs-10"]], "Where - 9 vs 16": [[458, "where-9-vs-16"]], "Xor - 1 vs 7": [[459, "xor-1-vs-7"]], "Python Documentation of ONNX": [[460, "python-documentation-of-onnx"]], "onnx.checker": [[462, "onnx-checker"]], "check_model": [[462, "check-model"]], "Protos": [[463, "protos"]], "AttributeProto": [[463, "attributeproto"]], "FunctionProto": [[463, "functionproto"]], "GraphProto": [[463, "graphproto"]], "MapProto": [[463, "mapproto"]], "ModelProto": [[463, "modelproto"]], "NodeProto": [[463, "nodeproto"]], "OperatorProto": [[463, "operatorproto"]], "OperatorSetIdProto": [[463, "operatorsetidproto"]], "OperatorSetProto": [[463, "operatorsetproto"]], "OptionalProto": [[463, "optionalproto"]], "SequenceProto": [[463, "sequenceproto"]], "SparseTensorProto": [[463, "sparsetensorproto"]], "StringStringEntryProto": [[463, "stringstringentryproto"]], "TensorProto": [[463, "tensorproto"]], "TensorShapeProto": [[463, "tensorshapeproto"]], "TrainingInfoProto": [[463, "traininginfoproto"]], "TypeProto": [[463, "typeproto"]], "ValueInfoProto": [[463, "valueinfoproto"]], "onnx.compose": [[464, "onnx-compose"]], "merge_graphs": [[464, "merge-graphs"]], "merge_models": [[464, "merge-models"]], "prefix": [[464, "prefix"]], "dimension": [[464, "dimension"]], "onnx.external_data_helper": [[465, "onnx-external-data-helper"]], "convert_model_from_external_data": [[465, "convert-model-from-external-data"]], "convert_model_to_external_data": [[465, "convert-model-to-external-data"]], "ExternalDataInfo": [[465, "externaldatainfo"]], "load_external_data_for_model": [[465, "load-external-data-for-model"]], "load_external_data_for_tensor": [[465, "load-external-data-for-tensor"]], "remove_external_data_field": [[465, "remove-external-data-field"]], "save_external_data": [[465, "save-external-data"]], "set_external_data": [[465, "set-external-data"]], "write_external_data_tensors": [[465, "write-external-data-tensors"]], "onnx.helper": [[466, "onnx-helper"]], "getter": [[466, "getter"], [466, "id1"]], "print": [[466, "print"], [466, "id3"]], "tools": [[466, "tools"], [470, "tools"]], "make function": [[466, "make-function"]], "onnx.hub": [[467, "onnx-hub"]], "ModelInfo": [[467, "modelinfo"]], "list_models": [[467, "list-models"]], "get_model_info": [[467, "get-model-info"]], "load": [[467, "load"]], "API Reference": [[468, "api-reference"]], "Data Structures": [[468, "data-structures"]], "Functions": [[468, "functions"], [478, "functions"], [481, "functions"]], "onnx.mapping": [[469, "onnx-mapping"]], "Type Mappings": [[469, "type-mappings"]], "NP_TYPE_TO_TENSOR_TYPE": [[469, "np-type-to-tensor-type"]], "OP_SET_ID_VERSION_MAP": [[469, "op-set-id-version-map"]], "OPTIONAL_ELEMENT_TYPE_TO_FIELD": [[469, "optional-element-type-to-field"]], "STORAGE_ELEMENT_TYPE_TO_FIELD": [[469, "storage-element-type-to-field"]], "STORAGE_TENSOR_TYPE_TO_FIELD": [[469, "storage-tensor-type-to-field"]], "TENSOR_TYPE_TO_NP_TYPE": [[469, "tensor-type-to-np-type"]], "TENSOR_TYPE_TO_STORAGE_TENSOR_TYPE": [[469, "tensor-type-to-storage-tensor-type"]], "Opset Version": [[469, "opset-version"]], "Operators and Functions Schemas": [[469, "operators-and-functions-schemas"]], "Internal module": [[469, "internal-module"]], "onnx.numpy_helper": [[470, "onnx-numpy-helper"]], "array": [[470, "array"]], "sequence": [[470, "sequence"]], "dictionary": [[470, "dictionary"]], "optional": [[470, "optional"]], "onnx.parser": [[471, "onnx-parser"]], "parse_function": [[471, "parse-function"]], "parse_graph": [[471, "parse-graph"]], "parse_model": [[471, "parse-model"]], "onnx.printer": [[472, "onnx-printer"]], "to_text": [[472, "to-text"]], "onnx.shape_inference": [[474, "onnx-shape-inference"]], "infer_shapes": [[474, "infer-shapes"]], "infer_shapes_path": [[474, "infer-shapes-path"]], "onnx.tools": [[475, "onnx-tools"]], "net_drawer": [[475, "net-drawer"]], "update_inputs_outputs_dims": [[475, "update-inputs-outputs-dims"]], "onnx.utils": [[476, "onnx-utils"]], "Extractor": [[476, "extractor"]], "extract_model": [[476, "extract-model"]], "onnx.version_converter": [[477, "onnx-version-converter"]], "convert_version": [[477, "convert-version"]], "Introduction to ONNX": [[480, "introduction-to-onnx"]], "onnx.backend": [[461, "onnx-backend"]], "Backend": [[461, "backend"]], "BackendRep": [[461, "backendrep"]], "Device": [[461, "device"]], "DeviceType": [[461, "devicetype"]], "load_model_tests": [[461, "load-model-tests"]], "Serialization": [[473, "serialization"], [481, "serialization"]], "Save a model and any Proto class": [[473, "save-a-model-and-any-proto-class"]], "Load a model": [[473, "load-a-model"]], "Load a Proto": [[473, "load-a-proto"]], "ONNX Concepts": [[478, "onnx-concepts"]], "Input, Output, Node, Initializer, Attributes": [[478, "input-output-node-initializer-attributes"]], "Serialization with protobuf": [[478, "serialization-with-protobuf"]], "Metadata": [[478, "metadata"]], "List of available operators and domains": [[478, "list-of-available-operators-and-domains"]], "Supported Types": [[478, "supported-types"]], "Element Type": [[478, "element-type"]], "Sparse Tensor": [[478, "sparse-tensor"]], "Other types": [[478, "other-types"]], "What is an opset version?": [[478, "what-is-an-opset-version"]], "Subgraphs, tests and loops": [[478, "subgraphs-tests-and-loops"]], "Extensibility": [[478, "extensibility"]], "Shape (and Type) Inference": [[478, "shape-and-type-inference"]], "Tools": [[478, "tools"]], "Converters": [[479, "converters"]], "What is a converting library?": [[479, "what-is-a-converting-library"]], "Opsets": [[479, "opsets"]], "Other API": [[479, "other-api"]], "A class Graph with a method add_node": [[479, "a-class-graph-with-a-method-add-node"]], "Operator as function": [[479, "operator-as-function"]], "Tricks learned from experience": [[479, "tricks-learned-from-experience"]], "Discrepancies": [[479, "discrepancies"]], "IsolationForest Trick": [[479, "isolationforest-trick"]], "Discretization": [[479, "discretization"]], "Contribute": [[479, "contribute"]], "Build": [[479, "build"]], "Build the markdown documentation": [[479, "build-the-markdown-documentation"]], "Update an existing operator": [[479, "update-an-existing-operator"]], "ONNX with Python": [[481, "onnx-with-python"]], "A simple example: a linear regression": [[481, "a-simple-example-a-linear-regression"]], "Model Serialization": [[481, "model-serialization"]], "Data Serialization": [[481, "data-serialization"]], "Initializer, default value": [[481, "initializer-default-value"]], "Attributes": [[481, "attributes"]], "Opset and metadata": [[481, "opset-and-metadata"]], "Subgraph: test and loops": [[481, "subgraph-test-and-loops"]], "A function with no attribute": [[481, "a-function-with-no-attribute"]], "A function with attributes": [[481, "a-function-with-attributes"]], "Parsing": [[481, "parsing"]], "Checker and Shape Inference": [[481, "checker-and-shape-inference"]], "Implementation details": [[481, "implementation-details"]], "Python and C++": [[481, "python-and-c"]], "Attributes and inputs": [[481, "attributes-and-inputs"]], "Shape or no shape": [[481, "shape-or-no-shape"]], "ONNX": [[1, "onnx"]], "ONNX Operators": [[2, "onnx-operators"]], "ai.onnx": [[2, "ai-onnx"]], "ai.onnx.ml": [[2, "ai-onnx-ml"]], "ai.onnx.preview.training": [[2, "ai-onnx-preview-training"]], "Tables": [[2, "tables"]], "expect": [[2, "expect"]], "operator table for domain ai.onnx": [[207, "operator-table-for-domain-ai-onnx"]], "operators for domain ai.onnx": [[207, "id1"]], "operator table for domain ai.onnx.ml": [[208, "operator-table-for-domain-ai-onnx-ml"]], "operators for domain ai.onnx.ml": [[208, "id1"]], "operator table for domain ai.onnx.preview.training": [[209, "operator-table-for-domain-ai-onnx-preview-training"]], "operators for domain ai.onnx.preview.training": [[209, "id1"]]}, "indexentries": {}})