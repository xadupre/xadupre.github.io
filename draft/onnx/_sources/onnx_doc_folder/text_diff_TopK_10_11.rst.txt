TopK - 10 vs 11
===============

.. raw:: html


    <div id="div_TopK_2"></div>
    <link rel="stylesheet" type="text/css" href="../_static/diff2html.min.css" />
    <script type="text/javascript" src="../_static/diff2html-ui.min.js"></script>
    <script>
    const diffString = `
    --- a/TopK10
    +++ b/TopK11
    @@ -1 +1 @@
    - Retrieve the top-K elements along a specified axis. Given an input tensor of
    + Retrieve the top-K largest or smallest elements along a specified axis. Given an input tensor of
    ?                   ++++++++++++++++++++
      shape [a_1, a_2, ..., a_n, r] and integer argument k, return two outputs:
        -Value tensor of shape [a_1, a_2, ..., a_{axis-1}, k, a_{axis+1}, ... a_n]
          which contains the values of the top k elements along the specified axis
        -Index tensor of shape [a_1, a_2, ..., a_{axis-1}, k, a_{axis+1}, ... a_n] which
         contains the indices of the top k elements (original indices from the input
         tensor).
  
    + If "largest" is 1 (the default value) then the k largest elements are returned.
    + If "sorted" is 1 (the default value) then the resulting k elements will be sorted.
    + If "sorted" is 0, order of returned 'Values' and 'Indices' are undefined.
    + 
    - Given two equivalent values, this operator uses the indices along the axis  as
    ?                                                                            -
    + Given two equivalent values, this operator uses the indices along the axis as
       a tiebreaker. That is, the element with the lower index will appear first.
  
      **Attributes**
  
      * **axis**:
    -   Dimension on which to do the sort.
    +   Dimension on which to do the sort. Negative value means counting
    +   dimensions from the back. Accepted range is [-r, r-1] where r =
    +   rank(input).
    + * **largest**:
    +   Whether to return the top-K largest or smallest elements.
    + * **sorted**:
    +   Whether to return the elements in sorted order.
  
      **Inputs**
  
      * **X** (heterogeneous) - **T**:
        Tensor of shape [a_1, a_2, ..., a_n, r]
      * **K** (heterogeneous) - **tensor(int64)**:
        A 1-D tensor containing a single positive value corresponding to the
        number of top elements to retrieve
  
      **Outputs**
  
      * **Values** (heterogeneous) - **T**:
        Tensor of shape [a_1, a_2, ..., a_{axis-1}, k, a_{axis+1}, ... a_n]
        containing top K values from the input tensor
      * **Indices** (heterogeneous) - **I**:
        Tensor of shape [a_1, a_2, ..., a_{axis-1}, k, a_{axis+1}, ... a_n]
        containing the corresponding input tensor indices for the top K
        values.
  
      **Type Constraints**
  
      * **T** in (
        tensor(double),
        tensor(float),
    -   tensor(float16)
    +   tensor(float16),
    ?                  +
    +   tensor(int16),
    +   tensor(int32),
    +   tensor(int64),
    +   tensor(int8),
    +   tensor(uint16),
    +   tensor(uint32),
    +   tensor(uint64),
    +   tensor(uint8)
        ):
    -   Constrain input and output types to float tensors.
    ?                                       ^^^^^
    +   Constrain input and output types to numeric tensors.
    ?                                       ^^^^^^^
      * **I** in (
        tensor(int64)
        ):
        Constrain index tensor to int64
    `;

    document.addEventListener('DOMContentLoaded', function () {
    var targetElement = document.getElementById('div_TopK_2');
    var configuration = {
        drawFileList: true,
        fileListToggle: false,
        fileListStartVisible: false,
        fileContentToggle: false,
        matching: 'lines',
        outputFormat: 'line-by-line',
        synchronisedScroll: true,
        highlight: true,
        renderNothingWhenEmpty: false,
    };
    var diff2htmlUi = new Diff2HtmlUI(targetElement, diffString, configuration);
    diff2htmlUi.draw();
    diff2htmlUi.highlightCode();
    });
    </script>