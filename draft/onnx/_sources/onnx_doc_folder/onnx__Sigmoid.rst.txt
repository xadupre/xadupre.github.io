
.. _l-onnx-doc-Sigmoid:

=======
Sigmoid
=======

.. contents::
    :local:


.. _l-onnx-op-sigmoid-13:

Sigmoid - 13
============

**Version**

* **name**: `Sigmoid (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Sigmoid>`_
* **domain**: **main**
* **since_version**: **13**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 13**.

**Summary**

Sigmoid takes one input data (Tensor<T>) and produces one output data
(Tensor<T>) where the sigmoid function, y = 1 / (1 + exp(-x)), is applied to the
tensor elementwise.

**Inputs**

* **X** (heterogeneous) - **T**:
  Input tensor

**Outputs**

* **Y** (heterogeneous) - **T**:
  Output tensor

**Type Constraints**

* **T** in (
  tensor(bfloat16),
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain input and output types to float tensors.

**Examples**

**default**

::

    import numpy as np
    import onnx

    node = onnx.helper.make_node(
        "Sigmoid",
        inputs=["x"],
        outputs=["y"],
    )

    x = np.array([-1, 0, 1]).astype(np.float32)
    y = 1.0 / (
        1.0 + np.exp(np.negative(x))
    )  # expected output [0.26894143, 0.5, 0.7310586]
    expect(node, inputs=[x], outputs=[y], name="test_sigmoid_example")

    x = np.random.randn(3, 4, 5).astype(np.float32)
    y = 1.0 / (1.0 + np.exp(np.negative(x)))
    expect(node, inputs=[x], outputs=[y], name="test_sigmoid")

.. toctree::

    text_diff_Sigmoid_6_13

.. _l-onnx-op-sigmoid-6:

Sigmoid - 6
===========

**Version**

* **name**: `Sigmoid (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Sigmoid>`_
* **domain**: **main**
* **since_version**: **6**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 6**.

**Summary**

Sigmoid takes one input data (Tensor<T>) and produces one output data
(Tensor<T>) where the sigmoid function, y = 1 / (1 + exp(-x)), is applied to the
tensor elementwise.

**Inputs**

* **X** (heterogeneous) - **T**:
  Input tensor

**Outputs**

* **Y** (heterogeneous) - **T**:
  Output tensor

**Type Constraints**

* **T** in (
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain input and output types to float tensors.

.. toctree::

    text_diff_Sigmoid_1_6

.. _l-onnx-op-sigmoid-1:

Sigmoid - 1
===========

**Version**

* **name**: `Sigmoid (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Sigmoid>`_
* **domain**: **main**
* **since_version**: **1**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: False

This version of the operator has been available
**since version 1**.

**Summary**

Sigmoid takes one input data (Tensor<T>) and produces one output data
(Tensor<T>) where the sigmoid function, y = 1 / (1 + exp(-x)), is applied to the
tensor elementwise.

**Attributes**

* **consumed_inputs**:
  legacy optimization attribute.

**Inputs**

* **X** (heterogeneous) - **T**:
  Input tensor

**Outputs**

* **Y** (heterogeneous) - **T**:
  Output tensor

**Type Constraints**

* **T** in (
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain input and output types to float tensors.
