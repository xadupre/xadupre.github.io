
.. _l-onnx-op-dropout-d7-12:

Dropout - 7 vs 12
=================

Next section compares an older to a newer version of the same operator 
after both definition are converted into markdown text.
Green means an addition to the newer version, red means a deletion.
Anything else is unchanged.

.. raw:: html


    <div id="div_Dropout_4"></div>
    <link rel="stylesheet" type="text/css" href="../_static/diff2html.min.css" />
    <script type="text/javascript" src="../_static/diff2html-ui.min.js"></script>
    <script>
    const diffString = `
    --- a/Dropout7
    +++ b/Dropout12
    @@ -1 +1 @@
    + Dropout takes one input data (Tensor<float>) and produces two Tensor outputs,
    + output (Tensor<float>) and mask (Tensor<bool>). Depending on whether it is in
    + test mode or not, the output Y will either be a random dropout, or a simple
    + copy of the input. Note that our implementation of Dropout does scaling in
    + the training phase, so during testing nothing needs to be done.
    - Dropout takes an input floating-point tensor, an optional input ratio (floating-point scalar) and an optional input training_mode (boolean scalar). It produces two tensor outputs,
    - output (floating-point tensor) and mask (optional Tensor<bool>). If training_mode is true then the output Y will be a random dropout;
    - Note that this Dropout scales the masked input data by the following equation, so to convert the trained model into inference mode,
    - the user can simply not pass training_mode input or set it to false.
    - ::
    - 
    -     output = scale * data * mask,
    - 
    - where
    - ::
    - 
    -     scale = 1. / (1. - ratio).
    - 
      This operator has **optional** inputs/outputs. See ONNX <https://github.com/onnx/onnx/blob/master/docs/IR.md>_ for more details about the representation of optional arguments. An empty string may be used in the place of an actual argument's name to indicate a missing argument. Trailing optional arguments (those not followed by an argument that is present) may also be simply omitted.
  
      **Attributes**
  
    + * **ratio**:
    +   The ratio of random dropout
    - * **seed**:
    -   (Optional) Seed to the random generator, if not specified we will
    -   auto generate one.
  
      **Inputs**
  
    - Between 1 and 3 inputs.
    - 
      * **data** (heterogeneous) - **T**:
        The input data as Tensor.
    - * **ratio** (optional, heterogeneous) - **T1**:
    -   The ratio of random dropout, with value in [0, 1). If this input was
    -   not set, or if it was set to 0, the output would be a simple copy of
    -   the input. If it's non-zero, output will be a random dropout of the
    -   scaled input, which is typically the case during training. It is an
    -   optional value, if not specified it will default to 0.5.
    - * **training_mode** (optional, heterogeneous) - **T2**:
    -   If set to true then it indicates dropout is being used for training.
    -   It is an optional value hence unless specified explicitly, it is
    -   false. If it is false, ratio is ignored and the operation mimics
    -   inference mode where nothing will be dropped from the input data and
    -   if mask is requested as output it will contain all ones.
  
      **Outputs**
  
      Between 1 and 2 outputs.
  
      * **output** (heterogeneous) - **T**:
        The output.
    - * **mask** (optional, heterogeneous) - **T2**:
    ?                                           -
    + * **mask** (optional, heterogeneous) - **T**:
        The output mask.
  
      **Type Constraints**
  
      * **T** in (
        tensor(double),
        tensor(float),
        tensor(float16)
        ):
    -   Constrain input and output types to float tensors.
    ?                                                     -
    +   Constrain input and output types to float tensors.- * **T1** in (
    -   tensor(double),
    -   tensor(float),
    -   tensor(float16)
    -   ):
    -   Constrain input 'ratio' types to float tensors.
    - * **T2** in (
    -   tensor(bool)
    -   ):
    -   Constrain output 'mask' types to boolean tensors.
    `;

    document.addEventListener('DOMContentLoaded', function () {
    var targetElement = document.getElementById('div_Dropout_4');
    var configuration = {
        drawFileList: true,
        fileListToggle: false,
        fileListStartVisible: false,
        fileContentToggle: false,
        matching: 'lines',
        outputFormat: 'line-by-line',
        synchronisedScroll: true,
        highlight: true,
        renderNothingWhenEmpty: false,
    };
    var diff2htmlUi = new Diff2HtmlUI(targetElement, diffString, configuration);
    diff2htmlUi.draw();
    diff2htmlUi.highlightCode();
    });
    </script>