
.. _l-onnx-doc-Loop:

====
Loop
====

.. contents::
    :local:


.. _l-onnx-op-loop-16:

Loop - 16
=========

**Version**

* **name**: `Loop (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Loop>`_
* **domain**: **main**
* **since_version**: **16**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 16**.

**Summary**

Generic Looping construct. This loop has multiple termination conditions:

1) Trip count. Iteration count specified at runtime. Set by
   specifying the input M. Optional. Set to empty string to omit.
   Note that a static trip count (specified at graph construction time) can be
   specified by passing in a constant node for input M.
2) Loop termination condition. This is an input to the op that determines
   whether to run the first iteration and also a loop-carried dependency for
   the body graph. The body graph must yield a value for the condition variable,
   whether this input is provided or not.

This table summarizes the operating modes of this operator with equivalent
C-style code:

    Operator inputs defined as (max_trip_count, condition_var).

    input ("", ""):
        for (int i=0; ; ++i) {
          cond = ... // Note this value is ignored, but is required in the body
        }

    input ("", cond) // Note this is analogous to a while loop
        bool cond = ...;
        for (int i=0; cond; ++i) {
          cond = ...;
        }

    input ("", 1) // Note this is analogous to a do-while loop
        bool cond = true
        for (int i=0; cond; ++i) {
          cond = ...;
        }

    input (trip_count, "") // Note this is analogous to a for loop
        int trip_count = ...
        for (int i=0; i < trip_count; ++i) {
          cond = ...; // ignored
        }

    input (trip_count, cond)
        int trip_count = ...;
        bool cond = ...;
        for (int i=0; i < trip_count && cond; ++i) {
          cond = ...;
        }

*Sample usage - cond as well as trip count*

    graph predict-net {
      %a = Constant[value = <Scalar Tensor [3]>]()
      %b = Constant[value = <Scalar Tensor [6]>]()
      %keepgoing = Constant[value = <Scalar Tensor [1]>]()
      %max_trip_count = Constant[value = <Scalar Tensor [10]>]()
      %keepgoing_out, %b_out, %user_defined_vals = Loop[body = <graph body-net>](%max_trip_count, %keepgoing, %b)
      return
    }

    graph body-net (
      %i[INT32, scalar]           // iteration number
      %keepgoing_in[BOOL, scalar] // incoming loop-termination-condition; not used
      %b_in[INT32, scalar]        // incoming value of loop-carried-dependency b
    ) {
      %my_local = Add(%a, %b_in)
      %b_out = Sub(%a, %b_in) // outgoing value of loop-carried-dependency b
      %keepgoing_out = Greater(%my_local, %b_out) // outgoing loop-termination-condition
      %user_defined_val = Add(%b_in, %b_in) // scan-output value to be accumulated
      return %keepgoing_out, %b_out, %user_defined_val
    }

*Sample equivalent C code*

    {
      /* User-defined code (enclosing scope) */
      int a = 3, b = 6;
      bool keepgoing = true; // Analogous to input cond
      /* End user-defined code */

      /* Implicitly-defined code */
      const int max_trip_count = 10; // Analogous to input M
      int user_defined_vals[]; // Imagine this is resizable
      /* End implicitly-defined code */
      /* initialize loop-carried variables and scan-output variables */
      bool keepgoing_out = keepgoing
      int b_out = b

      for (int i=0; i < max_trip_count && keepgoing_out; ++i) {
        /* Implicitly-defined code: bind actual parameter values
           to formal parameter variables of loop-body */
        bool keepgoing_in = keepgoing_out;
        bool b_in = b_out;

        /* User-defined code (loop body) */
        int my_local = a + b_in; // Reading value "a" from the enclosing scope is fine
        b_out = a - b_in;
        keepgoing_out = my_local > b_out;
        user_defined_val = b_in + b_in; // b_in and b_out are different variables
        /* End user-defined code */

        /* Implicitly defined-code */
        user_defined_vals[i] = user_defined_val // accumulate scan-output values
      }
      // int t = my_local; // Can't do this. my_local is not accessible here.

      // The values below are bound to the output variables of the loop and therefore accessible
      // b_out; user_defined_vals; keepgoing_out;
    }

There are several things of note in this code snippet:

1) Values from the enclosing scope (i.e. variable "a" here) are in scope and can
   be referenced in the inputs of the loop.
2) Any values computed in the loop body that needs to be used in a subsequent
   iteration or after the loop are modelled using a pair of variables in the loop-body,
   consisting of an input variable (eg., b_in) and an output variable (eg., b_out).
   These are referred to as loop-carried dependences. The loop operation node
   supplies the input value of the input variable for the first iteration, and
   returns the output value of the output variable produced by the final
   iteration.
3) Scan_output variables are used to implicitly concatenate values computed across
   all the iterations. In the above example, the value of user_defined_val computed
   over all iterations are concatenated and returned as the value of user_defined_vals
   after the loop.
4) Values created in the body cannot be accessed in the enclosing scope,
   except using the mechanism described above.

Note that the semantics of this op support "diagonal" or "wavefront" execution.
(See Step 3 here for an example:
https://devblogs.nvidia.com/optimizing-recurrent-neural-networks-cudnn-5/).
Frontends should emit multi-layer RNNs as a series of While operators (with
time being the inner looping dimension), with each successive layer consuming
the scan_outputs from the previous layer, possibly going through several
point-wise operators (e.g. dropout, residual connections, linear layer).

The input/output of subgraph (produced by loop node) matching is based on order instead of name. The implementation will figure out the names based on this order.

**Attributes**

* **body** (required):
  The graph run each iteration. It has 2+N inputs: (iteration_num,
  condition, loop carried dependencies...). It has 1+N+K outputs:
  (condition, loop carried dependencies..., scan_outputs...). Each
  scan_output is created by concatenating the value of the specified
  output value at the end of each iteration of the loop. It is an
  error if the dimensions or data type of these scan_outputs change
  across loop iterations.

**Inputs**

Between 2 and 2147483647 inputs.

* **M** (optional, heterogeneous) - **I**:
  A maximum trip-count for the loop specified at runtime. Optional.
  Pass empty string to skip.
* **cond** (optional, heterogeneous) - **B**:
  A boolean termination condition. Optional. Pass empty string to
  skip.
* **v_initial** (variadic) - **V**:
  The initial values of any loop-carried dependencies (values that
  change across loop iterations)

**Outputs**

Between 1 and 2147483647 outputs.

* **v_final_and_scan_outputs** (variadic) - **V**:
  Final N loop carried dependency values then K scan_outputs. Scan
  outputs must be Tensors.

**Type Constraints**

* **V** in (
  optional(seq(tensor(bfloat16))),
  optional(seq(tensor(bool))),
  optional(seq(tensor(complex128))),
  optional(seq(tensor(complex64))),
  optional(seq(tensor(double))),
  optional(seq(tensor(float))),
  optional(seq(tensor(float16))),
  optional(seq(tensor(int16))),
  optional(seq(tensor(int32))),
  optional(seq(tensor(int64))),
  optional(seq(tensor(int8))),
  optional(seq(tensor(string))),
  optional(seq(tensor(uint16))),
  optional(seq(tensor(uint32))),
  optional(seq(tensor(uint64))),
  optional(seq(tensor(uint8))),
  optional(tensor(bfloat16)),
  optional(tensor(bool)),
  optional(tensor(complex128)),
  optional(tensor(complex64)),
  optional(tensor(double)),
  optional(tensor(float)),
  optional(tensor(float16)),
  optional(tensor(int16)),
  optional(tensor(int32)),
  optional(tensor(int64)),
  optional(tensor(int8)),
  optional(tensor(string)),
  optional(tensor(uint16)),
  optional(tensor(uint32)),
  optional(tensor(uint64)),
  optional(tensor(uint8)),
  seq(tensor(bfloat16)),
  seq(tensor(bool)),
  seq(tensor(complex128)),
  seq(tensor(complex64)),
  seq(tensor(double)),
  seq(tensor(float)),
  seq(tensor(float16)),
  seq(tensor(int16)),
  seq(tensor(int32)),
  seq(tensor(int64)),
  seq(tensor(int8)),
  seq(tensor(string)),
  seq(tensor(uint16)),
  seq(tensor(uint32)),
  seq(tensor(uint64)),
  seq(tensor(uint8)),
  tensor(bfloat16),
  tensor(bool),
  tensor(complex128),
  tensor(complex64),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  All Tensor, Sequence(Tensor), Optional(Tensor), and
  Optional(Sequence(Tensor)) types
* **I** in (
  tensor(int64)
  ):
  tensor of int64, which should be a scalar.
* **B** in (
  tensor(bool)
  ):
  tensor of bool, which should be a scalar.

**Examples**

**_loop_11**

::

    # Given a tensor x of values [x1, ..., xN], and initial tensor y
    # sum up its elements using a scan
    # returning the final state (y+x1+x2+...+xN) as well the scan_output
    # [y+x1, y+x1+x2, ..., y+x1+x2+...+xN]

    y_in = onnx.helper.make_tensor_value_info("y_in", onnx.TensorProto.FLOAT, [1])
    y_out = onnx.helper.make_tensor_value_info("y_out", onnx.TensorProto.FLOAT, [1])
    scan_out = onnx.helper.make_tensor_value_info(
        "scan_out", onnx.TensorProto.FLOAT, [1]
    )
    cond_in = onnx.helper.make_tensor_value_info(
        "cond_in", onnx.TensorProto.BOOL, []
    )
    cond_out = onnx.helper.make_tensor_value_info(
        "cond_out", onnx.TensorProto.BOOL, []
    )
    iter_count = onnx.helper.make_tensor_value_info(
        "iter_count", onnx.TensorProto.INT64, []
    )

    x = np.array([1, 2, 3, 4, 5]).astype(np.float32)
    y = np.array([-2]).astype(np.float32)

    x_const_node = onnx.helper.make_node(
        "Constant",
        inputs=[],
        outputs=["x"],
        value=onnx.helper.make_tensor(
            name="const_tensor_x",
            data_type=onnx.TensorProto.FLOAT,
            dims=x.shape,
            vals=x.flatten().astype(float),
        ),
    )

    one_const_node = onnx.helper.make_node(
        "Constant",
        inputs=[],
        outputs=["one"],
        value=onnx.helper.make_tensor(
            name="const_tensor_one",
            data_type=onnx.TensorProto.INT64,
            dims=(),
            vals=[1],
        ),
    )

    i_add_node = onnx.helper.make_node(
        "Add", inputs=["iter_count", "one"], outputs=["end"]
    )

    start_unsqueeze_node = onnx.helper.make_node(
        "Unsqueeze", inputs=["iter_count"], outputs=["slice_start"], axes=[0]
    )

    end_unsqueeze_node = onnx.helper.make_node(
        "Unsqueeze", inputs=["end"], outputs=["slice_end"], axes=[0]
    )

    slice_node = onnx.helper.make_node(
        "Slice", inputs=["x", "slice_start", "slice_end"], outputs=["slice_out"]
    )

    y_add_node = onnx.helper.make_node(
        "Add", inputs=["y_in", "slice_out"], outputs=["y_out"]
    )

    identity_node = onnx.helper.make_node(
        "Identity", inputs=["cond_in"], outputs=["cond_out"]
    )

    scan_identity_node = onnx.helper.make_node(
        "Identity", inputs=["y_out"], outputs=["scan_out"]
    )

    loop_body = onnx.helper.make_graph(
        [
            identity_node,
            x_const_node,
            one_const_node,
            i_add_node,
            start_unsqueeze_node,
            end_unsqueeze_node,
            slice_node,
            y_add_node,
            scan_identity_node,
        ],
        "loop_body",
        [iter_count, cond_in, y_in],
        [cond_out, y_out, scan_out],
    )

    node = onnx.helper.make_node(
        "Loop",
        inputs=["trip_count", "cond", "y"],
        outputs=["res_y", "res_scan"],
        body=loop_body,
    )

    trip_count = np.array(5).astype(np.int64)
    res_y = np.array([13]).astype(np.float32)
    cond = np.array(1).astype(bool)
    res_scan = np.array([-1, 1, 4, 8, 13]).astype(np.float32).reshape((5, 1))
    expect(
        node,
        inputs=[trip_count, cond, y],
        outputs=[res_y, res_scan],
        name="test_loop11",
        opset_imports=[onnx.helper.make_opsetid("", 11)],
    )

**_loop_13**

::

    # Given a tensor x of values [x1, ..., xN],
    # Return a sequence of tensors of
    #   [[x1], [x1, x2], ..., [x1, ..., xN]]

    seq_in = onnx.helper.make_tensor_sequence_value_info(
        "seq_in", onnx.TensorProto.FLOAT, None
    )
    seq_out = onnx.helper.make_tensor_sequence_value_info(
        "seq_out", onnx.TensorProto.FLOAT, None
    )
    cond_in = onnx.helper.make_tensor_value_info(
        "cond_in", onnx.TensorProto.BOOL, []
    )
    cond_out = onnx.helper.make_tensor_value_info(
        "cond_out", onnx.TensorProto.BOOL, []
    )
    iter_count = onnx.helper.make_tensor_value_info(
        "iter_count", onnx.TensorProto.INT64, []
    )

    x = np.array([1, 2, 3, 4, 5]).astype(np.float32)

    x_const_node = onnx.helper.make_node(
        "Constant",
        inputs=[],
        outputs=["x"],
        value=onnx.helper.make_tensor(
            name="const_tensor_x",
            data_type=onnx.TensorProto.FLOAT,
            dims=x.shape,
            vals=x.flatten().astype(float),
        ),
    )

    one_const_node = onnx.helper.make_node(
        "Constant",
        inputs=[],
        outputs=["one"],
        value=onnx.helper.make_tensor(
            name="const_tensor_one",
            data_type=onnx.TensorProto.INT64,
            dims=(),
            vals=[1],
        ),
    )

    zero_const_node = onnx.helper.make_node(
        "Constant",
        inputs=[],
        outputs=["slice_start"],
        value=onnx.helper.make_tensor(
            name="const_tensor_zero",
            data_type=onnx.TensorProto.INT64,
            dims=(1,),
            vals=[0],
        ),
    )

    axes_node = onnx.helper.make_node(
        "Constant",
        inputs=[],
        outputs=["axes"],
        value=onnx.helper.make_tensor(
            name="const_tensor_axes",
            data_type=onnx.TensorProto.INT64,
            dims=(),
            vals=[0],
        ),
    )

    add_node = onnx.helper.make_node(
        "Add", inputs=["iter_count", "one"], outputs=["end"]
    )

    end_unsqueeze_node = onnx.helper.make_node(
        "Unsqueeze", inputs=["end", "axes"], outputs=["slice_end"]
    )

    slice_node = onnx.helper.make_node(
        "Slice", inputs=["x", "slice_start", "slice_end"], outputs=["slice_out"]
    )

    insert_node = onnx.helper.make_node(
        "SequenceInsert", inputs=["seq_in", "slice_out"], outputs=["seq_out"]
    )

    identity_node = onnx.helper.make_node(
        "Identity", inputs=["cond_in"], outputs=["cond_out"]
    )

    loop_body = onnx.helper.make_graph(
        [
            identity_node,
            x_const_node,
            one_const_node,
            zero_const_node,
            add_node,
            axes_node,
            end_unsqueeze_node,
            slice_node,
            insert_node,
        ],
        "loop_body",
        [iter_count, cond_in, seq_in],
        [cond_out, seq_out],
    )

    node = onnx.helper.make_node(
        "Loop",
        inputs=["trip_count", "cond", "seq_empty"],
        outputs=["seq_res"],
        body=loop_body,
    )

    trip_count = np.array(5).astype(np.int64)
    seq_empty: List[Any] = []
    seq_res = [x[: int(i)] for i in x]
    cond = np.array(1).astype(bool)
    expect(
        node,
        inputs=[trip_count, cond, seq_empty],
        outputs=[seq_res],
        name="test_loop13_seq",
        opset_imports=[onnx.helper.make_opsetid("", 13)],
        input_type_protos=[
            onnx.helper.make_tensor_type_proto(
                onnx.TensorProto.INT64, trip_count.shape
            ),
            onnx.helper.make_tensor_type_proto(onnx.TensorProto.BOOL, cond.shape),
            onnx.helper.make_sequence_type_proto(
                onnx.helper.make_tensor_type_proto(onnx.TensorProto.FLOAT, [])
            ),
        ],
    )

**_loop_16_none**

::

    # Given a tensor sequence of values [x1, ..., xN], and an initial optional sequence of tensors [x0],
    # Return a concatenated sequence of tensors of
    #   [x0, [x1], [x1, x2], ..., [x1, ..., xN]]

    ten_in_tp = onnx.helper.make_tensor_type_proto(onnx.TensorProto.FLOAT, [])
    seq_in_tp = onnx.helper.make_sequence_type_proto(ten_in_tp)
    opt_in_tp = onnx.helper.make_optional_type_proto(seq_in_tp)
    opt_in = onnx.helper.make_value_info("opt_seq_in", opt_in_tp)
    seq_out = onnx.helper.make_tensor_sequence_value_info(
        "seq_out", onnx.TensorProto.FLOAT, []
    )
    cond_in = onnx.helper.make_tensor_value_info(
        "cond_in", onnx.TensorProto.BOOL, []
    )
    cond_out = onnx.helper.make_tensor_value_info(
        "cond_out", onnx.TensorProto.BOOL, []
    )
    iter_count = onnx.helper.make_tensor_value_info(
        "iter_count", onnx.TensorProto.INT64, []
    )

    x0 = np.array(0).astype(np.float32)
    x = np.array([1, 2, 3, 4, 5]).astype(np.float32)

    optional_has_elem_node = onnx.helper.make_node(
        "OptionalHasElement", inputs=["opt_seq_in"], outputs=["optional_has_elem"]
    )

    optional_is_none = onnx.helper.make_node(
        "Not", inputs=["optional_has_elem"], outputs=["optional_is_none"]
    )

    optional_get_elem = onnx.helper.make_node(
        "OptionalGetElement", inputs=["opt_seq_in"], outputs=["seq_in"]
    )

    constant_in = onnx.helper.make_node(
        "Constant",
        inputs=[],
        outputs=["constant_in"],
        value=onnx.helper.make_tensor(
            name="const_tensor", data_type=onnx.TensorProto.FLOAT, dims=(), vals=[0]
        ),
    )

    seq_const_in = onnx.helper.make_node(
        "SequenceConstruct", inputs=["constant_in"], outputs=["init_seq_in"]
    )

    then_seq_out = onnx.helper.make_tensor_sequence_value_info(
        "init_seq_in", onnx.TensorProto.FLOAT, []
    )
    then_body = onnx.helper.make_graph(
        [constant_in, seq_const_in], "then_body", [], [then_seq_out]
    )

    else_seq_out = onnx.helper.make_tensor_sequence_value_info(
        "seq_in", onnx.TensorProto.FLOAT, []
    )
    else_body = onnx.helper.make_graph(
        [optional_get_elem], "else_body", [], [else_seq_out]
    )

    if_node = onnx.helper.make_node(
        "If",
        inputs=["optional_is_none"],
        outputs=["sequence"],
        then_branch=then_body,
        else_branch=else_body,
    )

    x_const_node = onnx.helper.make_node(
        "Constant",
        inputs=[],
        outputs=["x"],
        value=onnx.helper.make_tensor(
            name="const_tensor_x",
            data_type=onnx.TensorProto.FLOAT,
            dims=x.shape,
            vals=x.flatten().astype(float),
        ),
    )

    one_const_node = onnx.helper.make_node(
        "Constant",
        inputs=[],
        outputs=["one"],
        value=onnx.helper.make_tensor(
            name="const_tensor_one",
            data_type=onnx.TensorProto.INT64,
            dims=(),
            vals=[1],
        ),
    )

    zero_const_node = onnx.helper.make_node(
        "Constant",
        inputs=[],
        outputs=["slice_start"],
        value=onnx.helper.make_tensor(
            name="const_tensor_zero",
            data_type=onnx.TensorProto.INT64,
            dims=(1,),
            vals=[0],
        ),
    )

    axes_node = onnx.helper.make_node(
        "Constant",
        inputs=[],
        outputs=["axes"],
        value=onnx.helper.make_tensor(
            name="const_tensor_axes",
            data_type=onnx.TensorProto.INT64,
            dims=(),
            vals=[0],
        ),
    )

    add_node = onnx.helper.make_node(
        "Add", inputs=["iter_count", "one"], outputs=["end"]
    )

    end_unsqueeze_node = onnx.helper.make_node(
        "Unsqueeze", inputs=["end", "axes"], outputs=["slice_end"]
    )

    slice_node = onnx.helper.make_node(
        "Slice", inputs=["x", "slice_start", "slice_end"], outputs=["slice_out"]
    )

    insert_node = onnx.helper.make_node(
        "SequenceInsert", inputs=["sequence", "slice_out"], outputs=["seq_out"]
    )

    identity_node = onnx.helper.make_node(
        "Identity", inputs=["cond_in"], outputs=["cond_out"]
    )

    loop_body = onnx.helper.make_graph(
        [
            identity_node,
            optional_has_elem_node,
            optional_is_none,
            if_node,
            x_const_node,
            one_const_node,
            zero_const_node,
            add_node,
            axes_node,
            end_unsqueeze_node,
            slice_node,
            insert_node,
        ],
        "loop_body",
        [iter_count, cond_in, opt_in],
        [cond_out, seq_out],
    )

    node = onnx.helper.make_node(
        "Loop",
        inputs=["trip_count", "cond", "opt_seq"],
        outputs=["seq_res"],
        body=loop_body,
    )

    trip_count = np.array(5).astype(np.int64)
    cond = np.array(1).astype(bool)
    seq_res = compute_loop_outputs(x, [x0], trip_count)
    opt_seq_in: List[Any] = [x0]
    expect(
        node,
        inputs=[trip_count, cond, opt_seq_in],
        outputs=[seq_res],
        name="test_loop16_seq_none",
        opset_imports=[onnx.helper.make_opsetid("", 16)],
        input_type_protos=[
            onnx.helper.make_tensor_type_proto(
                onnx.TensorProto.INT64, trip_count.shape
            ),
            onnx.helper.make_tensor_type_proto(onnx.TensorProto.BOOL, cond.shape),
            opt_in_tp,
        ],
    )

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to108__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next"><a href="#difflib_chg_to108__0">f</a></td><td class="diff_header" id="from108_1">1</td><td nowrap="nowrap">Generic&nbsp;Looping&nbsp;construct.&nbsp;This&nbsp;loop&nbsp;has&nbsp;multiple&nbsp;termination&nbsp;conditions:</td><td class="diff_next"><a href="#difflib_chg_to108__0">f</a></td><td class="diff_header" id="to108_1">1</td><td nowrap="nowrap">Generic&nbsp;Looping&nbsp;construct.&nbsp;This&nbsp;loop&nbsp;has&nbsp;multiple&nbsp;termination&nbsp;conditions:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_2">2</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_2">2</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_3">3</td><td nowrap="nowrap">1)&nbsp;Trip&nbsp;count.&nbsp;Iteration&nbsp;count&nbsp;specified&nbsp;at&nbsp;runtime.&nbsp;Set&nbsp;by</td><td class="diff_next"></td><td class="diff_header" id="to108_3">3</td><td nowrap="nowrap">1)&nbsp;Trip&nbsp;count.&nbsp;Iteration&nbsp;count&nbsp;specified&nbsp;at&nbsp;runtime.&nbsp;Set&nbsp;by</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_4">4</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;specifying&nbsp;the&nbsp;input&nbsp;M.&nbsp;Optional.&nbsp;Set&nbsp;to&nbsp;empty&nbsp;string&nbsp;to&nbsp;omit.</td><td class="diff_next"></td><td class="diff_header" id="to108_4">4</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;specifying&nbsp;the&nbsp;input&nbsp;M.&nbsp;Optional.&nbsp;Set&nbsp;to&nbsp;empty&nbsp;string&nbsp;to&nbsp;omit.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_5">5</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;Note&nbsp;that&nbsp;a&nbsp;static&nbsp;trip&nbsp;count&nbsp;(specified&nbsp;at&nbsp;graph&nbsp;construction&nbsp;time)&nbsp;can&nbsp;be</td><td class="diff_next"></td><td class="diff_header" id="to108_5">5</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;Note&nbsp;that&nbsp;a&nbsp;static&nbsp;trip&nbsp;count&nbsp;(specified&nbsp;at&nbsp;graph&nbsp;construction&nbsp;time)&nbsp;can&nbsp;be</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_6">6</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;specified&nbsp;by&nbsp;passing&nbsp;in&nbsp;a&nbsp;constant&nbsp;node&nbsp;for&nbsp;input&nbsp;M.</td><td class="diff_next"></td><td class="diff_header" id="to108_6">6</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;specified&nbsp;by&nbsp;passing&nbsp;in&nbsp;a&nbsp;constant&nbsp;node&nbsp;for&nbsp;input&nbsp;M.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_7">7</td><td nowrap="nowrap">2)&nbsp;Loop&nbsp;termination&nbsp;condition.&nbsp;This&nbsp;is&nbsp;an&nbsp;input&nbsp;to&nbsp;the&nbsp;op&nbsp;that&nbsp;determines</td><td class="diff_next"></td><td class="diff_header" id="to108_7">7</td><td nowrap="nowrap">2)&nbsp;Loop&nbsp;termination&nbsp;condition.&nbsp;This&nbsp;is&nbsp;an&nbsp;input&nbsp;to&nbsp;the&nbsp;op&nbsp;that&nbsp;determines</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_8">8</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;whether&nbsp;to&nbsp;run&nbsp;the&nbsp;first&nbsp;iteration&nbsp;and&nbsp;also&nbsp;a&nbsp;loop-carried&nbsp;dependency&nbsp;for</td><td class="diff_next"></td><td class="diff_header" id="to108_8">8</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;whether&nbsp;to&nbsp;run&nbsp;the&nbsp;first&nbsp;iteration&nbsp;and&nbsp;also&nbsp;a&nbsp;loop-carried&nbsp;dependency&nbsp;for</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_9">9</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;the&nbsp;body&nbsp;graph.&nbsp;The&nbsp;body&nbsp;graph&nbsp;must&nbsp;yield&nbsp;a&nbsp;value&nbsp;for&nbsp;the&nbsp;condition&nbsp;variable,</td><td class="diff_next"></td><td class="diff_header" id="to108_9">9</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;the&nbsp;body&nbsp;graph.&nbsp;The&nbsp;body&nbsp;graph&nbsp;must&nbsp;yield&nbsp;a&nbsp;value&nbsp;for&nbsp;the&nbsp;condition&nbsp;variable,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_10">10</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;whether&nbsp;this&nbsp;input&nbsp;is&nbsp;provided&nbsp;or&nbsp;not.</td><td class="diff_next"></td><td class="diff_header" id="to108_10">10</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;whether&nbsp;this&nbsp;input&nbsp;is&nbsp;provided&nbsp;or&nbsp;not.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_11">11</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_11">11</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_12">12</td><td nowrap="nowrap">This&nbsp;table&nbsp;summarizes&nbsp;the&nbsp;operating&nbsp;modes&nbsp;of&nbsp;this&nbsp;operator&nbsp;with&nbsp;equivalent</td><td class="diff_next"></td><td class="diff_header" id="to108_12">12</td><td nowrap="nowrap">This&nbsp;table&nbsp;summarizes&nbsp;the&nbsp;operating&nbsp;modes&nbsp;of&nbsp;this&nbsp;operator&nbsp;with&nbsp;equivalent</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_13">13</td><td nowrap="nowrap">C-style&nbsp;code:</td><td class="diff_next"></td><td class="diff_header" id="to108_13">13</td><td nowrap="nowrap">C-style&nbsp;code:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_14">14</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_14">14</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_15">15</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;Operator&nbsp;inputs&nbsp;defined&nbsp;as&nbsp;(max_trip_count,&nbsp;condition_var).</td><td class="diff_next"></td><td class="diff_header" id="to108_15">15</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;Operator&nbsp;inputs&nbsp;defined&nbsp;as&nbsp;(max_trip_count,&nbsp;condition_var).</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_16">16</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_16">16</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_17">17</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;("",&nbsp;""):</td><td class="diff_next"></td><td class="diff_header" id="to108_17">17</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;("",&nbsp;""):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_18">18</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;;&nbsp;++i)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to108_18">18</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;;&nbsp;++i)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...&nbsp;//&nbsp;Note&nbsp;this&nbsp;value&nbsp;is&nbsp;ignored,&nbsp;but&nbsp;is&nbsp;required&nbsp;in&nbsp;the&nbsp;body</td><td class="diff_next"></td><td class="diff_header" id="to108_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...&nbsp;//&nbsp;Note&nbsp;this&nbsp;value&nbsp;is&nbsp;ignored,&nbsp;but&nbsp;is&nbsp;required&nbsp;in&nbsp;the&nbsp;body</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_20">20</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to108_20">20</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_21">21</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_21">21</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_22">22</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;("",&nbsp;cond)&nbsp;//&nbsp;Note&nbsp;this&nbsp;is&nbsp;analogous&nbsp;to&nbsp;a&nbsp;while&nbsp;loop</td><td class="diff_next"></td><td class="diff_header" id="to108_22">22</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;("",&nbsp;cond)&nbsp;//&nbsp;Note&nbsp;this&nbsp;is&nbsp;analogous&nbsp;to&nbsp;a&nbsp;while&nbsp;loop</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_23">23</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;cond&nbsp;=&nbsp;...;</td><td class="diff_next"></td><td class="diff_header" id="to108_23">23</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;cond&nbsp;=&nbsp;...;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;cond;&nbsp;++i)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to108_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;cond;&nbsp;++i)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;</td><td class="diff_next"></td><td class="diff_header" id="to108_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_26">26</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to108_26">26</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_27">27</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_27">27</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_28">28</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;("",&nbsp;1)&nbsp;//&nbsp;Note&nbsp;this&nbsp;is&nbsp;analogous&nbsp;to&nbsp;a&nbsp;do-while&nbsp;loop</td><td class="diff_next"></td><td class="diff_header" id="to108_28">28</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;("",&nbsp;1)&nbsp;//&nbsp;Note&nbsp;this&nbsp;is&nbsp;analogous&nbsp;to&nbsp;a&nbsp;do-while&nbsp;loop</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_29">29</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;cond&nbsp;=&nbsp;true</td><td class="diff_next"></td><td class="diff_header" id="to108_29">29</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;cond&nbsp;=&nbsp;true</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;cond;&nbsp;++i)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to108_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;cond;&nbsp;++i)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_31">31</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;</td><td class="diff_next"></td><td class="diff_header" id="to108_31">31</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_32">32</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to108_32">32</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_33">33</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_33">33</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_34">34</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;(trip_count,&nbsp;"")&nbsp;//&nbsp;Note&nbsp;this&nbsp;is&nbsp;analogous&nbsp;to&nbsp;a&nbsp;for&nbsp;loop</td><td class="diff_next"></td><td class="diff_header" id="to108_34">34</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;(trip_count,&nbsp;"")&nbsp;//&nbsp;Note&nbsp;this&nbsp;is&nbsp;analogous&nbsp;to&nbsp;a&nbsp;for&nbsp;loop</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;trip_count&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to108_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;trip_count&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;i&nbsp;&lt;&nbsp;trip_count;&nbsp;++i)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to108_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;i&nbsp;&lt;&nbsp;trip_count;&nbsp;++i)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;&nbsp;//&nbsp;ignored</td><td class="diff_next"></td><td class="diff_header" id="to108_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;&nbsp;//&nbsp;ignored</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to108_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_39">39</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_39">39</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;(trip_count,&nbsp;cond)</td><td class="diff_next"></td><td class="diff_header" id="to108_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;(trip_count,&nbsp;cond)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;trip_count&nbsp;=&nbsp;...;</td><td class="diff_next"></td><td class="diff_header" id="to108_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;trip_count&nbsp;=&nbsp;...;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_42">42</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;cond&nbsp;=&nbsp;...;</td><td class="diff_next"></td><td class="diff_header" id="to108_42">42</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;cond&nbsp;=&nbsp;...;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_43">43</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;i&nbsp;&lt;&nbsp;trip_count&nbsp;&amp;&amp;&nbsp;cond;&nbsp;++i)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to108_43">43</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;i&nbsp;&lt;&nbsp;trip_count&nbsp;&amp;&amp;&nbsp;cond;&nbsp;++i)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_44">44</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;</td><td class="diff_next"></td><td class="diff_header" id="to108_44">44</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_45">45</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to108_45">45</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_46">46</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_46">46</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_47">47</td><td nowrap="nowrap">*Sample&nbsp;usage&nbsp;-&nbsp;cond&nbsp;as&nbsp;well&nbsp;as&nbsp;trip&nbsp;count*</td><td class="diff_next"></td><td class="diff_header" id="to108_47">47</td><td nowrap="nowrap">*Sample&nbsp;usage&nbsp;-&nbsp;cond&nbsp;as&nbsp;well&nbsp;as&nbsp;trip&nbsp;count*</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_48">48</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_48">48</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_49">49</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;predict-net&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to108_49">49</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;predict-net&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%a&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[3]&gt;]()</td><td class="diff_next"></td><td class="diff_header" id="to108_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%a&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[3]&gt;]()</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%b&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[6]&gt;]()</td><td class="diff_next"></td><td class="diff_header" id="to108_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%b&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[6]&gt;]()</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[1]&gt;]()</td><td class="diff_next"></td><td class="diff_header" id="to108_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[1]&gt;]()</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%max_trip_count&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[10]&gt;]()</td><td class="diff_next"></td><td class="diff_header" id="to108_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%max_trip_count&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[10]&gt;]()</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing_out,&nbsp;%b_out,&nbsp;%user_defined_vals&nbsp;=&nbsp;Loop[body&nbsp;=&nbsp;&lt;graph&nbsp;body-net&gt;](%max_trip_count,&nbsp;%keepgoing,&nbsp;%b)</td><td class="diff_next"></td><td class="diff_header" id="to108_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing_out,&nbsp;%b_out,&nbsp;%user_defined_vals&nbsp;=&nbsp;Loop[body&nbsp;=&nbsp;&lt;graph&nbsp;body-net&gt;](%max_trip_count,&nbsp;%keepgoing,&nbsp;%b)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return</td><td class="diff_next"></td><td class="diff_header" id="to108_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to108_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_57">57</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_57">57</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;body-net&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to108_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;body-net&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_59">59</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%i[INT32,&nbsp;scalar]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;iteration&nbsp;number</td><td class="diff_next"></td><td class="diff_header" id="to108_59">59</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%i[INT32,&nbsp;scalar]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;iteration&nbsp;number</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_60">60</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing_in[BOOL,&nbsp;scalar]&nbsp;//&nbsp;incoming&nbsp;loop-termination-condition;&nbsp;not&nbsp;used</td><td class="diff_next"></td><td class="diff_header" id="to108_60">60</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing_in[BOOL,&nbsp;scalar]&nbsp;//&nbsp;incoming&nbsp;loop-termination-condition;&nbsp;not&nbsp;used</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_61">61</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%b_in[INT32,&nbsp;scalar]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;incoming&nbsp;value&nbsp;of&nbsp;loop-carried-dependency&nbsp;b</td><td class="diff_next"></td><td class="diff_header" id="to108_61">61</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%b_in[INT32,&nbsp;scalar]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;incoming&nbsp;value&nbsp;of&nbsp;loop-carried-dependency&nbsp;b</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_62">62</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to108_62">62</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_63">63</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%my_local&nbsp;=&nbsp;Add(%a,&nbsp;%b_in)</td><td class="diff_next"></td><td class="diff_header" id="to108_63">63</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%my_local&nbsp;=&nbsp;Add(%a,&nbsp;%b_in)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_64">64</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%b_out&nbsp;=&nbsp;Sub(%a,&nbsp;%b_in)&nbsp;//&nbsp;outgoing&nbsp;value&nbsp;of&nbsp;loop-carried-dependency&nbsp;b</td><td class="diff_next"></td><td class="diff_header" id="to108_64">64</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%b_out&nbsp;=&nbsp;Sub(%a,&nbsp;%b_in)&nbsp;//&nbsp;outgoing&nbsp;value&nbsp;of&nbsp;loop-carried-dependency&nbsp;b</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_65">65</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing_out&nbsp;=&nbsp;Greater(%my_local,&nbsp;%b_out)&nbsp;//&nbsp;outgoing&nbsp;loop-termination-condition</td><td class="diff_next"></td><td class="diff_header" id="to108_65">65</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing_out&nbsp;=&nbsp;Greater(%my_local,&nbsp;%b_out)&nbsp;//&nbsp;outgoing&nbsp;loop-termination-condition</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_66">66</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%user_defined_val&nbsp;=&nbsp;Add(%b_in,&nbsp;%b_in)&nbsp;//&nbsp;scan-output&nbsp;value&nbsp;to&nbsp;be&nbsp;accumulated</td><td class="diff_next"></td><td class="diff_header" id="to108_66">66</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%user_defined_val&nbsp;=&nbsp;Add(%b_in,&nbsp;%b_in)&nbsp;//&nbsp;scan-output&nbsp;value&nbsp;to&nbsp;be&nbsp;accumulated</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_67">67</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;%keepgoing_out,&nbsp;%b_out,&nbsp;%user_defined_val</td><td class="diff_next"></td><td class="diff_header" id="to108_67">67</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;%keepgoing_out,&nbsp;%b_out,&nbsp;%user_defined_val</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_68">68</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to108_68">68</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_69">69</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_69">69</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_70">70</td><td nowrap="nowrap">*Sample&nbsp;equivalent&nbsp;C&nbsp;code*</td><td class="diff_next"></td><td class="diff_header" id="to108_70">70</td><td nowrap="nowrap">*Sample&nbsp;equivalent&nbsp;C&nbsp;code*</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_71">71</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_71">71</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_72">72</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to108_72">72</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_73">73</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;User-defined&nbsp;code&nbsp;(enclosing&nbsp;scope)&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to108_73">73</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;User-defined&nbsp;code&nbsp;(enclosing&nbsp;scope)&nbsp;*/</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_74">74</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;a&nbsp;=&nbsp;3,&nbsp;b&nbsp;=&nbsp;6;</td><td class="diff_next"></td><td class="diff_header" id="to108_74">74</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;a&nbsp;=&nbsp;3,&nbsp;b&nbsp;=&nbsp;6;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_75">75</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;keepgoing&nbsp;=&nbsp;true;&nbsp;//&nbsp;Analogous&nbsp;to&nbsp;input&nbsp;cond</td><td class="diff_next"></td><td class="diff_header" id="to108_75">75</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;keepgoing&nbsp;=&nbsp;true;&nbsp;//&nbsp;Analogous&nbsp;to&nbsp;input&nbsp;cond</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_76">76</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;End&nbsp;user-defined&nbsp;code&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to108_76">76</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;End&nbsp;user-defined&nbsp;code&nbsp;*/</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_77">77</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_77">77</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_78">78</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Implicitly-defined&nbsp;code&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to108_78">78</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Implicitly-defined&nbsp;code&nbsp;*/</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_79">79</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;int&nbsp;max_trip_count&nbsp;=&nbsp;10;&nbsp;//&nbsp;Analogous&nbsp;to&nbsp;input&nbsp;M</td><td class="diff_next"></td><td class="diff_header" id="to108_79">79</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;int&nbsp;max_trip_count&nbsp;=&nbsp;10;&nbsp;//&nbsp;Analogous&nbsp;to&nbsp;input&nbsp;M</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_80">80</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;user_defined_vals[];&nbsp;//&nbsp;Imagine&nbsp;this&nbsp;is&nbsp;resizable</td><td class="diff_next"></td><td class="diff_header" id="to108_80">80</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;user_defined_vals[];&nbsp;//&nbsp;Imagine&nbsp;this&nbsp;is&nbsp;resizable</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_81">81</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;End&nbsp;implicitly-defined&nbsp;code&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to108_81">81</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;End&nbsp;implicitly-defined&nbsp;code&nbsp;*/</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_82">82</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;initialize&nbsp;loop-carried&nbsp;variables&nbsp;and&nbsp;scan-output&nbsp;variables&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to108_82">82</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;initialize&nbsp;loop-carried&nbsp;variables&nbsp;and&nbsp;scan-output&nbsp;variables&nbsp;*/</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_83">83</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;keepgoing_out&nbsp;=&nbsp;keepgoing</td><td class="diff_next"></td><td class="diff_header" id="to108_83">83</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;keepgoing_out&nbsp;=&nbsp;keepgoing</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_84">84</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;b_out&nbsp;=&nbsp;b</td><td class="diff_next"></td><td class="diff_header" id="to108_84">84</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;b_out&nbsp;=&nbsp;b</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_85">85</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_85">85</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_86">86</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;i&nbsp;&lt;&nbsp;max_trip_count&nbsp;&amp;&amp;&nbsp;keepgoing_out;&nbsp;++i)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to108_86">86</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;i&nbsp;&lt;&nbsp;max_trip_count&nbsp;&amp;&amp;&nbsp;keepgoing_out;&nbsp;++i)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_87">87</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Implicitly-defined&nbsp;code:&nbsp;bind&nbsp;actual&nbsp;parameter&nbsp;values</td><td class="diff_next"></td><td class="diff_header" id="to108_87">87</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Implicitly-defined&nbsp;code:&nbsp;bind&nbsp;actual&nbsp;parameter&nbsp;values</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_88">88</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;formal&nbsp;parameter&nbsp;variables&nbsp;of&nbsp;loop-body&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to108_88">88</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;formal&nbsp;parameter&nbsp;variables&nbsp;of&nbsp;loop-body&nbsp;*/</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_89">89</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;keepgoing_in&nbsp;=&nbsp;keepgoing_out;</td><td class="diff_next"></td><td class="diff_header" id="to108_89">89</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;keepgoing_in&nbsp;=&nbsp;keepgoing_out;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_90">90</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;b_in&nbsp;=&nbsp;b_out;</td><td class="diff_next"></td><td class="diff_header" id="to108_90">90</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;b_in&nbsp;=&nbsp;b_out;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_91">91</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_91">91</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_92">92</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;User-defined&nbsp;code&nbsp;(loop&nbsp;body)&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to108_92">92</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;User-defined&nbsp;code&nbsp;(loop&nbsp;body)&nbsp;*/</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_93">93</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;my_local&nbsp;=&nbsp;a&nbsp;+&nbsp;b_in;&nbsp;//&nbsp;Reading&nbsp;value&nbsp;"a"&nbsp;from&nbsp;the&nbsp;enclosing&nbsp;scope&nbsp;is&nbsp;fine</td><td class="diff_next"></td><td class="diff_header" id="to108_93">93</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;my_local&nbsp;=&nbsp;a&nbsp;+&nbsp;b_in;&nbsp;//&nbsp;Reading&nbsp;value&nbsp;"a"&nbsp;from&nbsp;the&nbsp;enclosing&nbsp;scope&nbsp;is&nbsp;fine</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_94">94</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b_out&nbsp;=&nbsp;a&nbsp;-&nbsp;b_in;</td><td class="diff_next"></td><td class="diff_header" id="to108_94">94</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b_out&nbsp;=&nbsp;a&nbsp;-&nbsp;b_in;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_95">95</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keepgoing_out&nbsp;=&nbsp;my_local&nbsp;&gt;&nbsp;b_out;</td><td class="diff_next"></td><td class="diff_header" id="to108_95">95</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keepgoing_out&nbsp;=&nbsp;my_local&nbsp;&gt;&nbsp;b_out;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_96">96</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user_defined_val&nbsp;=&nbsp;b_in&nbsp;+&nbsp;b_in;&nbsp;//&nbsp;b_in&nbsp;and&nbsp;b_out&nbsp;are&nbsp;different&nbsp;variables</td><td class="diff_next"></td><td class="diff_header" id="to108_96">96</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user_defined_val&nbsp;=&nbsp;b_in&nbsp;+&nbsp;b_in;&nbsp;//&nbsp;b_in&nbsp;and&nbsp;b_out&nbsp;are&nbsp;different&nbsp;variables</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_97">97</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;End&nbsp;user-defined&nbsp;code&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to108_97">97</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;End&nbsp;user-defined&nbsp;code&nbsp;*/</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_98">98</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_98">98</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_99">99</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Implicitly&nbsp;defined-code&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to108_99">99</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Implicitly&nbsp;defined-code&nbsp;*/</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_100">100</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user_defined_vals[i]&nbsp;=&nbsp;user_defined_val&nbsp;//&nbsp;accumulate&nbsp;scan-output&nbsp;values</td><td class="diff_next"></td><td class="diff_header" id="to108_100">100</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user_defined_vals[i]&nbsp;=&nbsp;user_defined_val&nbsp;//&nbsp;accumulate&nbsp;scan-output&nbsp;values</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_101">101</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to108_101">101</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_102">102</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;int&nbsp;t&nbsp;=&nbsp;my_local;&nbsp;//&nbsp;Can't&nbsp;do&nbsp;this.&nbsp;my_local&nbsp;is&nbsp;not&nbsp;accessible&nbsp;here.</td><td class="diff_next"></td><td class="diff_header" id="to108_102">102</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;int&nbsp;t&nbsp;=&nbsp;my_local;&nbsp;//&nbsp;Can't&nbsp;do&nbsp;this.&nbsp;my_local&nbsp;is&nbsp;not&nbsp;accessible&nbsp;here.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_103">103</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_103">103</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_104">104</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;The&nbsp;values&nbsp;below&nbsp;are&nbsp;bound&nbsp;to&nbsp;the&nbsp;output&nbsp;variables&nbsp;of&nbsp;the&nbsp;loop&nbsp;and&nbsp;therefore&nbsp;accessible</td><td class="diff_next"></td><td class="diff_header" id="to108_104">104</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;The&nbsp;values&nbsp;below&nbsp;are&nbsp;bound&nbsp;to&nbsp;the&nbsp;output&nbsp;variables&nbsp;of&nbsp;the&nbsp;loop&nbsp;and&nbsp;therefore&nbsp;accessible</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_105">105</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;b_out;&nbsp;user_defined_vals;&nbsp;keepgoing_out;</td><td class="diff_next"></td><td class="diff_header" id="to108_105">105</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;b_out;&nbsp;user_defined_vals;&nbsp;keepgoing_out;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_106">106</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to108_106">106</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_107">107</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_107">107</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_108">108</td><td nowrap="nowrap">There&nbsp;are&nbsp;several&nbsp;things&nbsp;of&nbsp;note&nbsp;in&nbsp;this&nbsp;code&nbsp;snippet:</td><td class="diff_next"></td><td class="diff_header" id="to108_108">108</td><td nowrap="nowrap">There&nbsp;are&nbsp;several&nbsp;things&nbsp;of&nbsp;note&nbsp;in&nbsp;this&nbsp;code&nbsp;snippet:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_109">109</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_109">109</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_110">110</td><td nowrap="nowrap">1)&nbsp;Values&nbsp;from&nbsp;the&nbsp;enclosing&nbsp;scope&nbsp;(i.e.&nbsp;variable&nbsp;"a"&nbsp;here)&nbsp;are&nbsp;in&nbsp;scope&nbsp;and&nbsp;can</td><td class="diff_next"></td><td class="diff_header" id="to108_110">110</td><td nowrap="nowrap">1)&nbsp;Values&nbsp;from&nbsp;the&nbsp;enclosing&nbsp;scope&nbsp;(i.e.&nbsp;variable&nbsp;"a"&nbsp;here)&nbsp;are&nbsp;in&nbsp;scope&nbsp;and&nbsp;can</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_111">111</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;be&nbsp;referenced&nbsp;in&nbsp;the&nbsp;inputs&nbsp;of&nbsp;the&nbsp;loop.</td><td class="diff_next"></td><td class="diff_header" id="to108_111">111</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;be&nbsp;referenced&nbsp;in&nbsp;the&nbsp;inputs&nbsp;of&nbsp;the&nbsp;loop.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_112">112</td><td nowrap="nowrap">2)&nbsp;Any&nbsp;values&nbsp;computed&nbsp;in&nbsp;the&nbsp;loop&nbsp;body&nbsp;that&nbsp;needs&nbsp;to&nbsp;be&nbsp;used&nbsp;in&nbsp;a&nbsp;subsequent</td><td class="diff_next"></td><td class="diff_header" id="to108_112">112</td><td nowrap="nowrap">2)&nbsp;Any&nbsp;values&nbsp;computed&nbsp;in&nbsp;the&nbsp;loop&nbsp;body&nbsp;that&nbsp;needs&nbsp;to&nbsp;be&nbsp;used&nbsp;in&nbsp;a&nbsp;subsequent</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_113">113</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;iteration&nbsp;or&nbsp;after&nbsp;the&nbsp;loop&nbsp;are&nbsp;modelled&nbsp;using&nbsp;a&nbsp;pair&nbsp;of&nbsp;variables&nbsp;in&nbsp;the&nbsp;loop-body,</td><td class="diff_next"></td><td class="diff_header" id="to108_113">113</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;iteration&nbsp;or&nbsp;after&nbsp;the&nbsp;loop&nbsp;are&nbsp;modelled&nbsp;using&nbsp;a&nbsp;pair&nbsp;of&nbsp;variables&nbsp;in&nbsp;the&nbsp;loop-body,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_114">114</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;consisting&nbsp;of&nbsp;an&nbsp;input&nbsp;variable&nbsp;(eg.,&nbsp;b_in)&nbsp;and&nbsp;an&nbsp;output&nbsp;variable&nbsp;(eg.,&nbsp;b_out).</td><td class="diff_next"></td><td class="diff_header" id="to108_114">114</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;consisting&nbsp;of&nbsp;an&nbsp;input&nbsp;variable&nbsp;(eg.,&nbsp;b_in)&nbsp;and&nbsp;an&nbsp;output&nbsp;variable&nbsp;(eg.,&nbsp;b_out).</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_115">115</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;These&nbsp;are&nbsp;referred&nbsp;to&nbsp;as&nbsp;loop-carried&nbsp;dependences.&nbsp;The&nbsp;loop&nbsp;operation&nbsp;node</td><td class="diff_next"></td><td class="diff_header" id="to108_115">115</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;These&nbsp;are&nbsp;referred&nbsp;to&nbsp;as&nbsp;loop-carried&nbsp;dependences.&nbsp;The&nbsp;loop&nbsp;operation&nbsp;node</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_116">116</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;supplies&nbsp;the&nbsp;input&nbsp;value&nbsp;of&nbsp;the&nbsp;input&nbsp;variable&nbsp;for&nbsp;the&nbsp;first&nbsp;iteration,&nbsp;and</td><td class="diff_next"></td><td class="diff_header" id="to108_116">116</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;supplies&nbsp;the&nbsp;input&nbsp;value&nbsp;of&nbsp;the&nbsp;input&nbsp;variable&nbsp;for&nbsp;the&nbsp;first&nbsp;iteration,&nbsp;and</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_117">117</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;returns&nbsp;the&nbsp;output&nbsp;value&nbsp;of&nbsp;the&nbsp;output&nbsp;variable&nbsp;produced&nbsp;by&nbsp;the&nbsp;final</td><td class="diff_next"></td><td class="diff_header" id="to108_117">117</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;returns&nbsp;the&nbsp;output&nbsp;value&nbsp;of&nbsp;the&nbsp;output&nbsp;variable&nbsp;produced&nbsp;by&nbsp;the&nbsp;final</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_118">118</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;iteration.</td><td class="diff_next"></td><td class="diff_header" id="to108_118">118</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;iteration.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_119">119</td><td nowrap="nowrap">3)&nbsp;Scan_output&nbsp;variables&nbsp;are&nbsp;used&nbsp;to&nbsp;implicitly&nbsp;concatenate&nbsp;values&nbsp;computed&nbsp;across</td><td class="diff_next"></td><td class="diff_header" id="to108_119">119</td><td nowrap="nowrap">3)&nbsp;Scan_output&nbsp;variables&nbsp;are&nbsp;used&nbsp;to&nbsp;implicitly&nbsp;concatenate&nbsp;values&nbsp;computed&nbsp;across</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_120">120</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;all&nbsp;the&nbsp;iterations.&nbsp;In&nbsp;the&nbsp;above&nbsp;example,&nbsp;the&nbsp;value&nbsp;of&nbsp;user_defined_val&nbsp;computed</td><td class="diff_next"></td><td class="diff_header" id="to108_120">120</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;all&nbsp;the&nbsp;iterations.&nbsp;In&nbsp;the&nbsp;above&nbsp;example,&nbsp;the&nbsp;value&nbsp;of&nbsp;user_defined_val&nbsp;computed</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_121">121</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;over&nbsp;all&nbsp;iterations&nbsp;are&nbsp;concatenated&nbsp;and&nbsp;returned&nbsp;as&nbsp;the&nbsp;value&nbsp;of&nbsp;user_defined_vals</td><td class="diff_next"></td><td class="diff_header" id="to108_121">121</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;over&nbsp;all&nbsp;iterations&nbsp;are&nbsp;concatenated&nbsp;and&nbsp;returned&nbsp;as&nbsp;the&nbsp;value&nbsp;of&nbsp;user_defined_vals</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_122">122</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;after&nbsp;the&nbsp;loop.</td><td class="diff_next"></td><td class="diff_header" id="to108_122">122</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;after&nbsp;the&nbsp;loop.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_123">123</td><td nowrap="nowrap">4)&nbsp;Values&nbsp;created&nbsp;in&nbsp;the&nbsp;body&nbsp;cannot&nbsp;be&nbsp;accessed&nbsp;in&nbsp;the&nbsp;enclosing&nbsp;scope,</td><td class="diff_next"></td><td class="diff_header" id="to108_123">123</td><td nowrap="nowrap">4)&nbsp;Values&nbsp;created&nbsp;in&nbsp;the&nbsp;body&nbsp;cannot&nbsp;be&nbsp;accessed&nbsp;in&nbsp;the&nbsp;enclosing&nbsp;scope,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_124">124</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;except&nbsp;using&nbsp;the&nbsp;mechanism&nbsp;described&nbsp;above.</td><td class="diff_next"></td><td class="diff_header" id="to108_124">124</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;except&nbsp;using&nbsp;the&nbsp;mechanism&nbsp;described&nbsp;above.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_125">125</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_125">125</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_126">126</td><td nowrap="nowrap">Note&nbsp;that&nbsp;the&nbsp;semantics&nbsp;of&nbsp;this&nbsp;op&nbsp;support&nbsp;"diagonal"&nbsp;or&nbsp;"wavefront"&nbsp;execution.</td><td class="diff_next"></td><td class="diff_header" id="to108_126">126</td><td nowrap="nowrap">Note&nbsp;that&nbsp;the&nbsp;semantics&nbsp;of&nbsp;this&nbsp;op&nbsp;support&nbsp;"diagonal"&nbsp;or&nbsp;"wavefront"&nbsp;execution.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_127">127</td><td nowrap="nowrap">(See&nbsp;Step&nbsp;3&nbsp;here&nbsp;for&nbsp;an&nbsp;example:</td><td class="diff_next"></td><td class="diff_header" id="to108_127">127</td><td nowrap="nowrap">(See&nbsp;Step&nbsp;3&nbsp;here&nbsp;for&nbsp;an&nbsp;example:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_128">128</td><td nowrap="nowrap">https://devblogs.nvidia.com/optimizing-recurrent-neural-networks-cudnn-5/).</td><td class="diff_next"></td><td class="diff_header" id="to108_128">128</td><td nowrap="nowrap">https://devblogs.nvidia.com/optimizing-recurrent-neural-networks-cudnn-5/).</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_129">129</td><td nowrap="nowrap">Frontends&nbsp;should&nbsp;emit&nbsp;multi-layer&nbsp;RNNs&nbsp;as&nbsp;a&nbsp;series&nbsp;of&nbsp;While&nbsp;operators&nbsp;(with</td><td class="diff_next"></td><td class="diff_header" id="to108_129">129</td><td nowrap="nowrap">Frontends&nbsp;should&nbsp;emit&nbsp;multi-layer&nbsp;RNNs&nbsp;as&nbsp;a&nbsp;series&nbsp;of&nbsp;While&nbsp;operators&nbsp;(with</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_130">130</td><td nowrap="nowrap">time&nbsp;being&nbsp;the&nbsp;inner&nbsp;looping&nbsp;dimension),&nbsp;with&nbsp;each&nbsp;successive&nbsp;layer&nbsp;consuming</td><td class="diff_next"></td><td class="diff_header" id="to108_130">130</td><td nowrap="nowrap">time&nbsp;being&nbsp;the&nbsp;inner&nbsp;looping&nbsp;dimension),&nbsp;with&nbsp;each&nbsp;successive&nbsp;layer&nbsp;consuming</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_131">131</td><td nowrap="nowrap">the&nbsp;scan_outputs&nbsp;from&nbsp;the&nbsp;previous&nbsp;layer,&nbsp;possibly&nbsp;going&nbsp;through&nbsp;several</td><td class="diff_next"></td><td class="diff_header" id="to108_131">131</td><td nowrap="nowrap">the&nbsp;scan_outputs&nbsp;from&nbsp;the&nbsp;previous&nbsp;layer,&nbsp;possibly&nbsp;going&nbsp;through&nbsp;several</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_132">132</td><td nowrap="nowrap">point-wise&nbsp;operators&nbsp;(e.g.&nbsp;dropout,&nbsp;residual&nbsp;connections,&nbsp;linear&nbsp;layer).</td><td class="diff_next"></td><td class="diff_header" id="to108_132">132</td><td nowrap="nowrap">point-wise&nbsp;operators&nbsp;(e.g.&nbsp;dropout,&nbsp;residual&nbsp;connections,&nbsp;linear&nbsp;layer).</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_133">133</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_133">133</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_134">134</td><td nowrap="nowrap">The&nbsp;input/output&nbsp;of&nbsp;subgraph&nbsp;(produced&nbsp;by&nbsp;loop&nbsp;node)&nbsp;matching&nbsp;is&nbsp;based&nbsp;on&nbsp;order&nbsp;instead&nbsp;of&nbsp;name.&nbsp;The&nbsp;implementation&nbsp;will&nbsp;figure&nbsp;out&nbsp;the&nbsp;names&nbsp;based&nbsp;on&nbsp;this&nbsp;order.</td><td class="diff_next"></td><td class="diff_header" id="to108_134">134</td><td nowrap="nowrap">The&nbsp;input/output&nbsp;of&nbsp;subgraph&nbsp;(produced&nbsp;by&nbsp;loop&nbsp;node)&nbsp;matching&nbsp;is&nbsp;based&nbsp;on&nbsp;order&nbsp;instead&nbsp;of&nbsp;name.&nbsp;The&nbsp;implementation&nbsp;will&nbsp;figure&nbsp;out&nbsp;the&nbsp;names&nbsp;based&nbsp;on&nbsp;this&nbsp;order.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_135">135</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_135">135</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_136">136</td><td nowrap="nowrap">**Attributes**</td><td class="diff_next"></td><td class="diff_header" id="to108_136">136</td><td nowrap="nowrap">**Attributes**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_137">137</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_137">137</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_138">138</td><td nowrap="nowrap">*&nbsp;**body**&nbsp;(required):</td><td class="diff_next"></td><td class="diff_header" id="to108_138">138</td><td nowrap="nowrap">*&nbsp;**body**&nbsp;(required):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_139">139</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;graph&nbsp;run&nbsp;each&nbsp;iteration.&nbsp;It&nbsp;has&nbsp;2+N&nbsp;inputs:&nbsp;(iteration_num,</td><td class="diff_next"></td><td class="diff_header" id="to108_139">139</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;graph&nbsp;run&nbsp;each&nbsp;iteration.&nbsp;It&nbsp;has&nbsp;2+N&nbsp;inputs:&nbsp;(iteration_num,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_140">140</td><td nowrap="nowrap">&nbsp;&nbsp;condition,&nbsp;loop&nbsp;carried&nbsp;dependencies...).&nbsp;It&nbsp;has&nbsp;1+N+K&nbsp;outputs:</td><td class="diff_next"></td><td class="diff_header" id="to108_140">140</td><td nowrap="nowrap">&nbsp;&nbsp;condition,&nbsp;loop&nbsp;carried&nbsp;dependencies...).&nbsp;It&nbsp;has&nbsp;1+N+K&nbsp;outputs:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_141">141</td><td nowrap="nowrap">&nbsp;&nbsp;(condition,&nbsp;loop&nbsp;carried&nbsp;dependencies...,&nbsp;scan_outputs...).&nbsp;Each</td><td class="diff_next"></td><td class="diff_header" id="to108_141">141</td><td nowrap="nowrap">&nbsp;&nbsp;(condition,&nbsp;loop&nbsp;carried&nbsp;dependencies...,&nbsp;scan_outputs...).&nbsp;Each</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_142">142</td><td nowrap="nowrap">&nbsp;&nbsp;scan_output&nbsp;is&nbsp;created&nbsp;by&nbsp;concatenating&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;specified</td><td class="diff_next"></td><td class="diff_header" id="to108_142">142</td><td nowrap="nowrap">&nbsp;&nbsp;scan_output&nbsp;is&nbsp;created&nbsp;by&nbsp;concatenating&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;specified</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_143">143</td><td nowrap="nowrap">&nbsp;&nbsp;output&nbsp;value&nbsp;at&nbsp;the&nbsp;end&nbsp;of&nbsp;each&nbsp;iteration&nbsp;of&nbsp;the&nbsp;loop.&nbsp;It&nbsp;is&nbsp;an</td><td class="diff_next"></td><td class="diff_header" id="to108_143">143</td><td nowrap="nowrap">&nbsp;&nbsp;output&nbsp;value&nbsp;at&nbsp;the&nbsp;end&nbsp;of&nbsp;each&nbsp;iteration&nbsp;of&nbsp;the&nbsp;loop.&nbsp;It&nbsp;is&nbsp;an</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_144">144</td><td nowrap="nowrap">&nbsp;&nbsp;error&nbsp;if&nbsp;the&nbsp;dimensions&nbsp;or&nbsp;data&nbsp;type&nbsp;of&nbsp;these&nbsp;scan_outputs&nbsp;change</td><td class="diff_next"></td><td class="diff_header" id="to108_144">144</td><td nowrap="nowrap">&nbsp;&nbsp;error&nbsp;if&nbsp;the&nbsp;dimensions&nbsp;or&nbsp;data&nbsp;type&nbsp;of&nbsp;these&nbsp;scan_outputs&nbsp;change</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_145">145</td><td nowrap="nowrap">&nbsp;&nbsp;across&nbsp;loop&nbsp;iterations.</td><td class="diff_next"></td><td class="diff_header" id="to108_145">145</td><td nowrap="nowrap">&nbsp;&nbsp;across&nbsp;loop&nbsp;iterations.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_146">146</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_146">146</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_147">147</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to108_147">147</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_148">148</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_148">148</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_149">149</td><td nowrap="nowrap">Between&nbsp;2&nbsp;and&nbsp;2147483647&nbsp;inputs.</td><td class="diff_next"></td><td class="diff_header" id="to108_149">149</td><td nowrap="nowrap">Between&nbsp;2&nbsp;and&nbsp;2147483647&nbsp;inputs.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_150">150</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_150">150</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_151">151</td><td nowrap="nowrap">*&nbsp;**M**&nbsp;(optional,&nbsp;heterogeneous)&nbsp;-&nbsp;**I**:</td><td class="diff_next"></td><td class="diff_header" id="to108_151">151</td><td nowrap="nowrap">*&nbsp;**M**&nbsp;(optional,&nbsp;heterogeneous)&nbsp;-&nbsp;**I**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_152">152</td><td nowrap="nowrap">&nbsp;&nbsp;A&nbsp;maximum&nbsp;trip-count&nbsp;for&nbsp;the&nbsp;loop&nbsp;specified&nbsp;at&nbsp;runtime.&nbsp;Optional.</td><td class="diff_next"></td><td class="diff_header" id="to108_152">152</td><td nowrap="nowrap">&nbsp;&nbsp;A&nbsp;maximum&nbsp;trip-count&nbsp;for&nbsp;the&nbsp;loop&nbsp;specified&nbsp;at&nbsp;runtime.&nbsp;Optional.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_153">153</td><td nowrap="nowrap">&nbsp;&nbsp;Pass&nbsp;empty&nbsp;string&nbsp;to&nbsp;skip.</td><td class="diff_next"></td><td class="diff_header" id="to108_153">153</td><td nowrap="nowrap">&nbsp;&nbsp;Pass&nbsp;empty&nbsp;string&nbsp;to&nbsp;skip.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_154">154</td><td nowrap="nowrap">*&nbsp;**cond**&nbsp;(optional,&nbsp;heterogeneous)&nbsp;-&nbsp;**B**:</td><td class="diff_next"></td><td class="diff_header" id="to108_154">154</td><td nowrap="nowrap">*&nbsp;**cond**&nbsp;(optional,&nbsp;heterogeneous)&nbsp;-&nbsp;**B**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_155">155</td><td nowrap="nowrap">&nbsp;&nbsp;A&nbsp;boolean&nbsp;termination&nbsp;condition.&nbsp;Optional.&nbsp;Pass&nbsp;empty&nbsp;string&nbsp;to</td><td class="diff_next"></td><td class="diff_header" id="to108_155">155</td><td nowrap="nowrap">&nbsp;&nbsp;A&nbsp;boolean&nbsp;termination&nbsp;condition.&nbsp;Optional.&nbsp;Pass&nbsp;empty&nbsp;string&nbsp;to</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_156">156</td><td nowrap="nowrap">&nbsp;&nbsp;skip.</td><td class="diff_next"></td><td class="diff_header" id="to108_156">156</td><td nowrap="nowrap">&nbsp;&nbsp;skip.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_157">157</td><td nowrap="nowrap">*&nbsp;**v_initial**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td><td class="diff_next"></td><td class="diff_header" id="to108_157">157</td><td nowrap="nowrap">*&nbsp;**v_initial**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_158">158</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;initial&nbsp;values&nbsp;of&nbsp;any&nbsp;loop-carried&nbsp;dependencies&nbsp;(values&nbsp;that</td><td class="diff_next"></td><td class="diff_header" id="to108_158">158</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;initial&nbsp;values&nbsp;of&nbsp;any&nbsp;loop-carried&nbsp;dependencies&nbsp;(values&nbsp;that</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_159">159</td><td nowrap="nowrap">&nbsp;&nbsp;change&nbsp;across&nbsp;loop&nbsp;iterations)</td><td class="diff_next"></td><td class="diff_header" id="to108_159">159</td><td nowrap="nowrap">&nbsp;&nbsp;change&nbsp;across&nbsp;loop&nbsp;iterations)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_160">160</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_160">160</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_161">161</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to108_161">161</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_162">162</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_162">162</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_163">163</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2147483647&nbsp;outputs.</td><td class="diff_next"></td><td class="diff_header" id="to108_163">163</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2147483647&nbsp;outputs.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_164">164</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_164">164</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_165">165</td><td nowrap="nowrap">*&nbsp;**v_final_and_scan_outputs**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td><td class="diff_next"></td><td class="diff_header" id="to108_165">165</td><td nowrap="nowrap">*&nbsp;**v_final_and_scan_outputs**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_166">166</td><td nowrap="nowrap">&nbsp;&nbsp;Final&nbsp;N&nbsp;loop&nbsp;carried&nbsp;dependency&nbsp;values&nbsp;then&nbsp;K&nbsp;scan_outputs.&nbsp;Scan</td><td class="diff_next"></td><td class="diff_header" id="to108_166">166</td><td nowrap="nowrap">&nbsp;&nbsp;Final&nbsp;N&nbsp;loop&nbsp;carried&nbsp;dependency&nbsp;values&nbsp;then&nbsp;K&nbsp;scan_outputs.&nbsp;Scan</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to108__0"></td><td class="diff_header" id="from108_167">167</td><td nowrap="nowrap">&nbsp;&nbsp;outputs&nbsp;must&nbsp;be&nbsp;Tensors.</td><td class="diff_next"></td><td class="diff_header" id="to108_167">167</td><td nowrap="nowrap">&nbsp;&nbsp;outputs&nbsp;must&nbsp;be&nbsp;Tensors.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_168">168</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_168">168</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_169">169</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to108_169">169</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_170">170</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_170">170</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_171">171</td><td nowrap="nowrap">*&nbsp;**V**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to108_171">171</td><td nowrap="nowrap">*&nbsp;**V**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to108__1">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to108__1">n</a></td><td class="diff_header" id="to108_172">172</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(seq(tensor(bfloat16))),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_173">173</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(seq(tensor(bool))),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_174">174</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(seq(tensor(complex128))),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_175">175</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(seq(tensor(complex64))),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_176">176</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(seq(tensor(double))),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_177">177</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(seq(tensor(float))),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_178">178</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(seq(tensor(float16))),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_179">179</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(seq(tensor(int16))),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_180">180</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(seq(tensor(int32))),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_181">181</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(seq(tensor(int64))),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_182">182</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(seq(tensor(int8))),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_183">183</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(seq(tensor(string))),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_184">184</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(seq(tensor(uint16))),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_185">185</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(seq(tensor(uint32))),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_186">186</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(seq(tensor(uint64))),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_187">187</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(seq(tensor(uint8))),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_188">188</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(tensor(bfloat16)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_189">189</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(tensor(bool)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_190">190</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(tensor(complex128)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_191">191</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(tensor(complex64)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_192">192</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(tensor(double)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_193">193</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(tensor(float)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_194">194</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(tensor(float16)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_195">195</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(tensor(int16)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_196">196</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(tensor(int32)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_197">197</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(tensor(int64)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_198">198</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(tensor(int8)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_199">199</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(tensor(string)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_200">200</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(tensor(uint16)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_201">201</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(tensor(uint32)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_202">202</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(tensor(uint64)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_203">203</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;optional(tensor(uint8)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_204">204</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;seq(tensor(bfloat16)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_172">172</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(bool)),</td><td class="diff_next"></td><td class="diff_header" id="to108_205">205</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(bool)),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_173">173</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(complex128)),</td><td class="diff_next"></td><td class="diff_header" id="to108_206">206</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(complex128)),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_174">174</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(complex64)),</td><td class="diff_next"></td><td class="diff_header" id="to108_207">207</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(complex64)),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_175">175</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(double)),</td><td class="diff_next"></td><td class="diff_header" id="to108_208">208</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(double)),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_176">176</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(float)),</td><td class="diff_next"></td><td class="diff_header" id="to108_209">209</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(float)),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_177">177</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(float16)),</td><td class="diff_next"></td><td class="diff_header" id="to108_210">210</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(float16)),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_178">178</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(int16)),</td><td class="diff_next"></td><td class="diff_header" id="to108_211">211</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(int16)),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_179">179</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(int32)),</td><td class="diff_next"></td><td class="diff_header" id="to108_212">212</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(int32)),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_180">180</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(int64)),</td><td class="diff_next"></td><td class="diff_header" id="to108_213">213</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(int64)),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_181">181</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(int8)),</td><td class="diff_next"></td><td class="diff_header" id="to108_214">214</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(int8)),</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to108__1"></td><td class="diff_header" id="from108_182">182</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(string)),</td><td class="diff_next"></td><td class="diff_header" id="to108_215">215</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(string)),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_183">183</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(uint16)),</td><td class="diff_next"></td><td class="diff_header" id="to108_216">216</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(uint16)),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_184">184</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(uint32)),</td><td class="diff_next"></td><td class="diff_header" id="to108_217">217</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(uint32)),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_185">185</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(uint64)),</td><td class="diff_next"></td><td class="diff_header" id="to108_218">218</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(uint64)),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_186">186</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(uint8)),</td><td class="diff_next"></td><td class="diff_header" id="to108_219">219</td><td nowrap="nowrap">&nbsp;&nbsp;seq(tensor(uint8)),</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to108__2">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to108__2">n</a></td><td class="diff_header" id="to108_220">220</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;tensor(bfloat16),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_187">187</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td><td class="diff_next"></td><td class="diff_header" id="to108_221">221</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_188">188</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex128),</td><td class="diff_next"></td><td class="diff_header" id="to108_222">222</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex128),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_189">189</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex64),</td><td class="diff_next"></td><td class="diff_header" id="to108_223">223</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_190">190</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to108_224">224</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_191">191</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to108_225">225</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_192">192</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td><td class="diff_next"></td><td class="diff_header" id="to108_226">226</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_193">193</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td><td class="diff_next"></td><td class="diff_header" id="to108_227">227</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_194">194</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td><td class="diff_next"></td><td class="diff_header" id="to108_228">228</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_195">195</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td><td class="diff_next"></td><td class="diff_header" id="to108_229">229</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_196">196</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td><td class="diff_next"></td><td class="diff_header" id="to108_230">230</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_197">197</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td><td class="diff_next"></td><td class="diff_header" id="to108_231">231</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to108__2"></td><td class="diff_header" id="from108_198">198</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td><td class="diff_next"></td><td class="diff_header" id="to108_232">232</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_199">199</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td><td class="diff_next"></td><td class="diff_header" id="to108_233">233</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_200">200</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td><td class="diff_next"></td><td class="diff_header" id="to108_234">234</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_201">201</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td><td class="diff_next"></td><td class="diff_header" id="to108_235">235</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_202">202</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to108_236">236</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to108__top">t</a></td><td class="diff_header" id="from108_203">203</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;All&nbsp;Tensor&nbsp;and&nbsp;Sequence&nbsp;types</span></td><td class="diff_next"><a href="#difflib_chg_to108__top">t</a></td><td class="diff_header" id="to108_237">237</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;All&nbsp;Tensor,&nbsp;Sequence(Tensor),&nbsp;Optional(Tensor),&nbsp;and</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to108_238">238</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;Optional(Sequence(Tensor))&nbsp;types</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_204">204</td><td nowrap="nowrap">*&nbsp;**I**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to108_239">239</td><td nowrap="nowrap">*&nbsp;**I**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_205">205</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64)</td><td class="diff_next"></td><td class="diff_header" id="to108_240">240</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_206">206</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to108_241">241</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_207">207</td><td nowrap="nowrap">&nbsp;&nbsp;tensor&nbsp;of&nbsp;int64,&nbsp;which&nbsp;should&nbsp;be&nbsp;a&nbsp;scalar.</td><td class="diff_next"></td><td class="diff_header" id="to108_242">242</td><td nowrap="nowrap">&nbsp;&nbsp;tensor&nbsp;of&nbsp;int64,&nbsp;which&nbsp;should&nbsp;be&nbsp;a&nbsp;scalar.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_208">208</td><td nowrap="nowrap">*&nbsp;**B**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to108_243">243</td><td nowrap="nowrap">*&nbsp;**B**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_209">209</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool)</td><td class="diff_next"></td><td class="diff_header" id="to108_244">244</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_210">210</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to108_245">245</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from108_211">211</td><td nowrap="nowrap">&nbsp;&nbsp;tensor&nbsp;of&nbsp;bool,&nbsp;which&nbsp;should&nbsp;be&nbsp;a&nbsp;scalar.</td><td class="diff_next"></td><td class="diff_header" id="to108_246">246</td><td nowrap="nowrap">&nbsp;&nbsp;tensor&nbsp;of&nbsp;bool,&nbsp;which&nbsp;should&nbsp;be&nbsp;a&nbsp;scalar.</td></tr>
            </tbody>
        </table>

.. _l-onnx-op-loop-13:

Loop - 13
=========

**Version**

* **name**: `Loop (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Loop>`_
* **domain**: **main**
* **since_version**: **13**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 13**.

**Summary**

Generic Looping construct. This loop has multiple termination conditions:

1) Trip count. Iteration count specified at runtime. Set by
   specifying the input M. Optional. Set to empty string to omit.
   Note that a static trip count (specified at graph construction time) can be
   specified by passing in a constant node for input M.
2) Loop termination condition. This is an input to the op that determines
   whether to run the first iteration and also a loop-carried dependency for
   the body graph. The body graph must yield a value for the condition variable,
   whether this input is provided or not.

This table summarizes the operating modes of this operator with equivalent
C-style code:

    Operator inputs defined as (max_trip_count, condition_var).

    input ("", ""):
        for (int i=0; ; ++i) {
          cond = ... // Note this value is ignored, but is required in the body
        }

    input ("", cond) // Note this is analogous to a while loop
        bool cond = ...;
        for (int i=0; cond; ++i) {
          cond = ...;
        }

    input ("", 1) // Note this is analogous to a do-while loop
        bool cond = true
        for (int i=0; cond; ++i) {
          cond = ...;
        }

    input (trip_count, "") // Note this is analogous to a for loop
        int trip_count = ...
        for (int i=0; i < trip_count; ++i) {
          cond = ...; // ignored
        }

    input (trip_count, cond)
        int trip_count = ...;
        bool cond = ...;
        for (int i=0; i < trip_count && cond; ++i) {
          cond = ...;
        }

*Sample usage - cond as well as trip count*

    graph predict-net {
      %a = Constant[value = <Scalar Tensor [3]>]()
      %b = Constant[value = <Scalar Tensor [6]>]()
      %keepgoing = Constant[value = <Scalar Tensor [1]>]()
      %max_trip_count = Constant[value = <Scalar Tensor [10]>]()
      %keepgoing_out, %b_out, %user_defined_vals = Loop[body = <graph body-net>](%max_trip_count, %keepgoing, %b)
      return
    }

    graph body-net (
      %i[INT32, scalar]           // iteration number
      %keepgoing_in[BOOL, scalar] // incoming loop-termination-condition; not used
      %b_in[INT32, scalar]        // incoming value of loop-carried-dependency b
    ) {
      %my_local = Add(%a, %b_in)
      %b_out = Sub(%a, %b_in) // outgoing value of loop-carried-dependency b
      %keepgoing_out = Greater(%my_local, %b_out) // outgoing loop-termination-condition
      %user_defined_val = Add(%b_in, %b_in) // scan-output value to be accumulated
      return %keepgoing_out, %b_out, %user_defined_val
    }

*Sample equivalent C code*

    {
      /* User-defined code (enclosing scope) */
      int a = 3, b = 6;
      bool keepgoing = true; // Analogous to input cond
      /* End user-defined code */

      /* Implicitly-defined code */
      const int max_trip_count = 10; // Analogous to input M
      int user_defined_vals[]; // Imagine this is resizable
      /* End implicitly-defined code */
      /* initialize loop-carried variables and scan-output variables */
      bool keepgoing_out = keepgoing
      int b_out = b

      for (int i=0; i < max_trip_count && keepgoing_out; ++i) {
        /* Implicitly-defined code: bind actual parameter values
           to formal parameter variables of loop-body */
        bool keepgoing_in = keepgoing_out;
        bool b_in = b_out;

        /* User-defined code (loop body) */
        int my_local = a + b_in; // Reading value "a" from the enclosing scope is fine
        b_out = a - b_in;
        keepgoing_out = my_local > b_out;
        user_defined_val = b_in + b_in; // b_in and b_out are different variables
        /* End user-defined code */

        /* Implicitly defined-code */
        user_defined_vals[i] = user_defined_val // accumulate scan-output values
      }
      // int t = my_local; // Can't do this. my_local is not accessible here.

      // The values below are bound to the output variables of the loop and therefore accessible
      // b_out; user_defined_vals; keepgoing_out;
    }

There are several things of note in this code snippet:

1) Values from the enclosing scope (i.e. variable "a" here) are in scope and can
   be referenced in the inputs of the loop.
2) Any values computed in the loop body that needs to be used in a subsequent
   iteration or after the loop are modelled using a pair of variables in the loop-body,
   consisting of an input variable (eg., b_in) and an output variable (eg., b_out).
   These are referred to as loop-carried dependences. The loop operation node
   supplies the input value of the input variable for the first iteration, and
   returns the output value of the output variable produced by the final
   iteration.
3) Scan_output variables are used to implicitly concatenate values computed across
   all the iterations. In the above example, the value of user_defined_val computed
   over all iterations are concatenated and returned as the value of user_defined_vals
   after the loop.
4) Values created in the body cannot be accessed in the enclosing scope,
   except using the mechanism described above.

Note that the semantics of this op support "diagonal" or "wavefront" execution.
(See Step 3 here for an example:
https://devblogs.nvidia.com/optimizing-recurrent-neural-networks-cudnn-5/).
Frontends should emit multi-layer RNNs as a series of While operators (with
time being the inner looping dimension), with each successive layer consuming
the scan_outputs from the previous layer, possibly going through several
point-wise operators (e.g. dropout, residual connections, linear layer).

The input/output of subgraph (produced by loop node) matching is based on order instead of name. The implementation will figure out the names based on this order.

**Attributes**

* **body** (required):
  The graph run each iteration. It has 2+N inputs: (iteration_num,
  condition, loop carried dependencies...). It has 1+N+K outputs:
  (condition, loop carried dependencies..., scan_outputs...). Each
  scan_output is created by concatenating the value of the specified
  output value at the end of each iteration of the loop. It is an
  error if the dimensions or data type of these scan_outputs change
  across loop iterations.

**Inputs**

Between 2 and 2147483647 inputs.

* **M** (optional, heterogeneous) - **I**:
  A maximum trip-count for the loop specified at runtime. Optional.
  Pass empty string to skip.
* **cond** (optional, heterogeneous) - **B**:
  A boolean termination condition. Optional. Pass empty string to
  skip.
* **v_initial** (variadic) - **V**:
  The initial values of any loop-carried dependencies (values that
  change across loop iterations)

**Outputs**

Between 1 and 2147483647 outputs.

* **v_final_and_scan_outputs** (variadic) - **V**:
  Final N loop carried dependency values then K scan_outputs. Scan
  outputs must be Tensors.

**Type Constraints**

* **V** in (
  seq(tensor(bool)),
  seq(tensor(complex128)),
  seq(tensor(complex64)),
  seq(tensor(double)),
  seq(tensor(float)),
  seq(tensor(float16)),
  seq(tensor(int16)),
  seq(tensor(int32)),
  seq(tensor(int64)),
  seq(tensor(int8)),
  seq(tensor(string)),
  seq(tensor(uint16)),
  seq(tensor(uint32)),
  seq(tensor(uint64)),
  seq(tensor(uint8)),
  tensor(bool),
  tensor(complex128),
  tensor(complex64),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  All Tensor and Sequence types
* **I** in (
  tensor(int64)
  ):
  tensor of int64, which should be a scalar.
* **B** in (
  tensor(bool)
  ):
  tensor of bool, which should be a scalar.

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to109__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next"><a href="#difflib_chg_to109__0">f</a></td><td class="diff_header" id="from109_1">1</td><td nowrap="nowrap">Generic&nbsp;Looping&nbsp;construct.&nbsp;This&nbsp;loop&nbsp;has&nbsp;multiple&nbsp;termination&nbsp;conditions:</td><td class="diff_next"><a href="#difflib_chg_to109__0">f</a></td><td class="diff_header" id="to109_1">1</td><td nowrap="nowrap">Generic&nbsp;Looping&nbsp;construct.&nbsp;This&nbsp;loop&nbsp;has&nbsp;multiple&nbsp;termination&nbsp;conditions:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_2">2</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_2">2</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_3">3</td><td nowrap="nowrap">1)&nbsp;Trip&nbsp;count.&nbsp;Iteration&nbsp;count&nbsp;specified&nbsp;at&nbsp;runtime.&nbsp;Set&nbsp;by</td><td class="diff_next"></td><td class="diff_header" id="to109_3">3</td><td nowrap="nowrap">1)&nbsp;Trip&nbsp;count.&nbsp;Iteration&nbsp;count&nbsp;specified&nbsp;at&nbsp;runtime.&nbsp;Set&nbsp;by</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_4">4</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;specifying&nbsp;the&nbsp;input&nbsp;M.&nbsp;Optional.&nbsp;Set&nbsp;to&nbsp;empty&nbsp;string&nbsp;to&nbsp;omit.</td><td class="diff_next"></td><td class="diff_header" id="to109_4">4</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;specifying&nbsp;the&nbsp;input&nbsp;M.&nbsp;Optional.&nbsp;Set&nbsp;to&nbsp;empty&nbsp;string&nbsp;to&nbsp;omit.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_5">5</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;Note&nbsp;that&nbsp;a&nbsp;static&nbsp;trip&nbsp;count&nbsp;(specified&nbsp;at&nbsp;graph&nbsp;construction&nbsp;time)&nbsp;can&nbsp;be</td><td class="diff_next"></td><td class="diff_header" id="to109_5">5</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;Note&nbsp;that&nbsp;a&nbsp;static&nbsp;trip&nbsp;count&nbsp;(specified&nbsp;at&nbsp;graph&nbsp;construction&nbsp;time)&nbsp;can&nbsp;be</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_6">6</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;specified&nbsp;by&nbsp;passing&nbsp;in&nbsp;a&nbsp;constant&nbsp;node&nbsp;for&nbsp;input&nbsp;M.</td><td class="diff_next"></td><td class="diff_header" id="to109_6">6</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;specified&nbsp;by&nbsp;passing&nbsp;in&nbsp;a&nbsp;constant&nbsp;node&nbsp;for&nbsp;input&nbsp;M.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_7">7</td><td nowrap="nowrap">2)&nbsp;Loop&nbsp;termination&nbsp;condition.&nbsp;This&nbsp;is&nbsp;an&nbsp;input&nbsp;to&nbsp;the&nbsp;op&nbsp;that&nbsp;determines</td><td class="diff_next"></td><td class="diff_header" id="to109_7">7</td><td nowrap="nowrap">2)&nbsp;Loop&nbsp;termination&nbsp;condition.&nbsp;This&nbsp;is&nbsp;an&nbsp;input&nbsp;to&nbsp;the&nbsp;op&nbsp;that&nbsp;determines</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_8">8</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;whether&nbsp;to&nbsp;run&nbsp;the&nbsp;first&nbsp;iteration&nbsp;and&nbsp;also&nbsp;a&nbsp;loop-carried&nbsp;dependency&nbsp;for</td><td class="diff_next"></td><td class="diff_header" id="to109_8">8</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;whether&nbsp;to&nbsp;run&nbsp;the&nbsp;first&nbsp;iteration&nbsp;and&nbsp;also&nbsp;a&nbsp;loop-carried&nbsp;dependency&nbsp;for</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_9">9</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;the&nbsp;body&nbsp;graph.&nbsp;The&nbsp;body&nbsp;graph&nbsp;must&nbsp;yield&nbsp;a&nbsp;value&nbsp;for&nbsp;the&nbsp;condition&nbsp;variable,</td><td class="diff_next"></td><td class="diff_header" id="to109_9">9</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;the&nbsp;body&nbsp;graph.&nbsp;The&nbsp;body&nbsp;graph&nbsp;must&nbsp;yield&nbsp;a&nbsp;value&nbsp;for&nbsp;the&nbsp;condition&nbsp;variable,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_10">10</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;whether&nbsp;this&nbsp;input&nbsp;is&nbsp;provided&nbsp;or&nbsp;not.</td><td class="diff_next"></td><td class="diff_header" id="to109_10">10</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;whether&nbsp;this&nbsp;input&nbsp;is&nbsp;provided&nbsp;or&nbsp;not.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_11">11</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_11">11</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_12">12</td><td nowrap="nowrap">This&nbsp;table&nbsp;summarizes&nbsp;the&nbsp;operating&nbsp;modes&nbsp;of&nbsp;this&nbsp;operator&nbsp;with&nbsp;equivalent</td><td class="diff_next"></td><td class="diff_header" id="to109_12">12</td><td nowrap="nowrap">This&nbsp;table&nbsp;summarizes&nbsp;the&nbsp;operating&nbsp;modes&nbsp;of&nbsp;this&nbsp;operator&nbsp;with&nbsp;equivalent</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_13">13</td><td nowrap="nowrap">C-style&nbsp;code:</td><td class="diff_next"></td><td class="diff_header" id="to109_13">13</td><td nowrap="nowrap">C-style&nbsp;code:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_14">14</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_14">14</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_15">15</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;Operator&nbsp;inputs&nbsp;defined&nbsp;as&nbsp;(max_trip_count,&nbsp;condition_var).</td><td class="diff_next"></td><td class="diff_header" id="to109_15">15</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;Operator&nbsp;inputs&nbsp;defined&nbsp;as&nbsp;(max_trip_count,&nbsp;condition_var).</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_16">16</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_16">16</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_17">17</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;("",&nbsp;""):</td><td class="diff_next"></td><td class="diff_header" id="to109_17">17</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;("",&nbsp;""):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_18">18</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;;&nbsp;++i)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to109_18">18</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;;&nbsp;++i)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...&nbsp;//&nbsp;Note&nbsp;this&nbsp;value&nbsp;is&nbsp;ignored,&nbsp;but&nbsp;is&nbsp;required&nbsp;in&nbsp;the&nbsp;body</td><td class="diff_next"></td><td class="diff_header" id="to109_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...&nbsp;//&nbsp;Note&nbsp;this&nbsp;value&nbsp;is&nbsp;ignored,&nbsp;but&nbsp;is&nbsp;required&nbsp;in&nbsp;the&nbsp;body</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_20">20</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to109_20">20</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_21">21</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_21">21</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_22">22</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;("",&nbsp;cond)&nbsp;//&nbsp;Note&nbsp;this&nbsp;is&nbsp;analogous&nbsp;to&nbsp;a&nbsp;while&nbsp;loop</td><td class="diff_next"></td><td class="diff_header" id="to109_22">22</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;("",&nbsp;cond)&nbsp;//&nbsp;Note&nbsp;this&nbsp;is&nbsp;analogous&nbsp;to&nbsp;a&nbsp;while&nbsp;loop</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_23">23</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;cond&nbsp;=&nbsp;...;</td><td class="diff_next"></td><td class="diff_header" id="to109_23">23</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;cond&nbsp;=&nbsp;...;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;cond;&nbsp;++i)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to109_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;cond;&nbsp;++i)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;</td><td class="diff_next"></td><td class="diff_header" id="to109_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_26">26</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to109_26">26</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_27">27</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_27">27</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_28">28</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;("",&nbsp;1)&nbsp;//&nbsp;Note&nbsp;this&nbsp;is&nbsp;analogous&nbsp;to&nbsp;a&nbsp;do-while&nbsp;loop</td><td class="diff_next"></td><td class="diff_header" id="to109_28">28</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;("",&nbsp;1)&nbsp;//&nbsp;Note&nbsp;this&nbsp;is&nbsp;analogous&nbsp;to&nbsp;a&nbsp;do-while&nbsp;loop</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_29">29</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;cond&nbsp;=&nbsp;true</td><td class="diff_next"></td><td class="diff_header" id="to109_29">29</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;cond&nbsp;=&nbsp;true</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;cond;&nbsp;++i)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to109_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;cond;&nbsp;++i)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_31">31</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;</td><td class="diff_next"></td><td class="diff_header" id="to109_31">31</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_32">32</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to109_32">32</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_33">33</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_33">33</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_34">34</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;(trip_count,&nbsp;"")&nbsp;//&nbsp;Note&nbsp;this&nbsp;is&nbsp;analogous&nbsp;to&nbsp;a&nbsp;for&nbsp;loop</td><td class="diff_next"></td><td class="diff_header" id="to109_34">34</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;(trip_count,&nbsp;"")&nbsp;//&nbsp;Note&nbsp;this&nbsp;is&nbsp;analogous&nbsp;to&nbsp;a&nbsp;for&nbsp;loop</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;trip_count&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to109_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;trip_count&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;i&nbsp;&lt;&nbsp;trip_count;&nbsp;++i)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to109_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;i&nbsp;&lt;&nbsp;trip_count;&nbsp;++i)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;&nbsp;//&nbsp;ignored</td><td class="diff_next"></td><td class="diff_header" id="to109_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;&nbsp;//&nbsp;ignored</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to109_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_39">39</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_39">39</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;(trip_count,&nbsp;cond)</td><td class="diff_next"></td><td class="diff_header" id="to109_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;(trip_count,&nbsp;cond)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;trip_count&nbsp;=&nbsp;...;</td><td class="diff_next"></td><td class="diff_header" id="to109_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;trip_count&nbsp;=&nbsp;...;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_42">42</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;cond&nbsp;=&nbsp;...;</td><td class="diff_next"></td><td class="diff_header" id="to109_42">42</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;cond&nbsp;=&nbsp;...;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_43">43</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;i&nbsp;&lt;&nbsp;trip_count&nbsp;&amp;&amp;&nbsp;cond;&nbsp;++i)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to109_43">43</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;i&nbsp;&lt;&nbsp;trip_count&nbsp;&amp;&amp;&nbsp;cond;&nbsp;++i)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_44">44</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;</td><td class="diff_next"></td><td class="diff_header" id="to109_44">44</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_45">45</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to109_45">45</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_46">46</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_46">46</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_47">47</td><td nowrap="nowrap">*Sample&nbsp;usage&nbsp;-&nbsp;cond&nbsp;as&nbsp;well&nbsp;as&nbsp;trip&nbsp;count*</td><td class="diff_next"></td><td class="diff_header" id="to109_47">47</td><td nowrap="nowrap">*Sample&nbsp;usage&nbsp;-&nbsp;cond&nbsp;as&nbsp;well&nbsp;as&nbsp;trip&nbsp;count*</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_48">48</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_48">48</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_49">49</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;predict-net&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to109_49">49</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;predict-net&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%a&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[3]&gt;]()</td><td class="diff_next"></td><td class="diff_header" id="to109_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%a&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[3]&gt;]()</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%b&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[6]&gt;]()</td><td class="diff_next"></td><td class="diff_header" id="to109_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%b&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[6]&gt;]()</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[1]&gt;]()</td><td class="diff_next"></td><td class="diff_header" id="to109_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[1]&gt;]()</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%max_trip_count&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[10]&gt;]()</td><td class="diff_next"></td><td class="diff_header" id="to109_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%max_trip_count&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[10]&gt;]()</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing_out,&nbsp;%b_out,&nbsp;%user_defined_vals&nbsp;=&nbsp;Loop[body&nbsp;=&nbsp;&lt;graph&nbsp;body-net&gt;](%max_trip_count,&nbsp;%keepgoing,&nbsp;%b)</td><td class="diff_next"></td><td class="diff_header" id="to109_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing_out,&nbsp;%b_out,&nbsp;%user_defined_vals&nbsp;=&nbsp;Loop[body&nbsp;=&nbsp;&lt;graph&nbsp;body-net&gt;](%max_trip_count,&nbsp;%keepgoing,&nbsp;%b)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return</td><td class="diff_next"></td><td class="diff_header" id="to109_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to109_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_57">57</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_57">57</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;body-net&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to109_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;body-net&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_59">59</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%i[INT32,&nbsp;scalar]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;iteration&nbsp;number</td><td class="diff_next"></td><td class="diff_header" id="to109_59">59</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%i[INT32,&nbsp;scalar]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;iteration&nbsp;number</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_60">60</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing_in[BOOL,&nbsp;scalar]&nbsp;//&nbsp;incoming&nbsp;loop-termination-condition;&nbsp;not&nbsp;used</td><td class="diff_next"></td><td class="diff_header" id="to109_60">60</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing_in[BOOL,&nbsp;scalar]&nbsp;//&nbsp;incoming&nbsp;loop-termination-condition;&nbsp;not&nbsp;used</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_61">61</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%b_in[INT32,&nbsp;scalar]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;incoming&nbsp;value&nbsp;of&nbsp;loop-carried-dependency&nbsp;b</td><td class="diff_next"></td><td class="diff_header" id="to109_61">61</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%b_in[INT32,&nbsp;scalar]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;incoming&nbsp;value&nbsp;of&nbsp;loop-carried-dependency&nbsp;b</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_62">62</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to109_62">62</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_63">63</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%my_local&nbsp;=&nbsp;Add(%a,&nbsp;%b_in)</td><td class="diff_next"></td><td class="diff_header" id="to109_63">63</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%my_local&nbsp;=&nbsp;Add(%a,&nbsp;%b_in)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_64">64</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%b_out&nbsp;=&nbsp;Sub(%a,&nbsp;%b_in)&nbsp;//&nbsp;outgoing&nbsp;value&nbsp;of&nbsp;loop-carried-dependency&nbsp;b</td><td class="diff_next"></td><td class="diff_header" id="to109_64">64</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%b_out&nbsp;=&nbsp;Sub(%a,&nbsp;%b_in)&nbsp;//&nbsp;outgoing&nbsp;value&nbsp;of&nbsp;loop-carried-dependency&nbsp;b</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_65">65</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing_out&nbsp;=&nbsp;Greater(%my_local,&nbsp;%b_out)&nbsp;//&nbsp;outgoing&nbsp;loop-termination-condition</td><td class="diff_next"></td><td class="diff_header" id="to109_65">65</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing_out&nbsp;=&nbsp;Greater(%my_local,&nbsp;%b_out)&nbsp;//&nbsp;outgoing&nbsp;loop-termination-condition</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_66">66</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%user_defined_val&nbsp;=&nbsp;Add(%b_in,&nbsp;%b_in)&nbsp;//&nbsp;scan-output&nbsp;value&nbsp;to&nbsp;be&nbsp;accumulated</td><td class="diff_next"></td><td class="diff_header" id="to109_66">66</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%user_defined_val&nbsp;=&nbsp;Add(%b_in,&nbsp;%b_in)&nbsp;//&nbsp;scan-output&nbsp;value&nbsp;to&nbsp;be&nbsp;accumulated</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_67">67</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;%keepgoing_out,&nbsp;%b_out,&nbsp;%user_defined_val</td><td class="diff_next"></td><td class="diff_header" id="to109_67">67</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;%keepgoing_out,&nbsp;%b_out,&nbsp;%user_defined_val</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_68">68</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to109_68">68</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_69">69</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_69">69</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_70">70</td><td nowrap="nowrap">*Sample&nbsp;equivalent&nbsp;C&nbsp;code*</td><td class="diff_next"></td><td class="diff_header" id="to109_70">70</td><td nowrap="nowrap">*Sample&nbsp;equivalent&nbsp;C&nbsp;code*</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_71">71</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_71">71</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_72">72</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to109_72">72</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_73">73</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;User-defined&nbsp;code&nbsp;(enclosing&nbsp;scope)&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to109_73">73</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;User-defined&nbsp;code&nbsp;(enclosing&nbsp;scope)&nbsp;*/</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_74">74</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;a&nbsp;=&nbsp;3,&nbsp;b&nbsp;=&nbsp;6;</td><td class="diff_next"></td><td class="diff_header" id="to109_74">74</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;a&nbsp;=&nbsp;3,&nbsp;b&nbsp;=&nbsp;6;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_75">75</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;keepgoing&nbsp;=&nbsp;true;&nbsp;//&nbsp;Analogous&nbsp;to&nbsp;input&nbsp;cond</td><td class="diff_next"></td><td class="diff_header" id="to109_75">75</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;keepgoing&nbsp;=&nbsp;true;&nbsp;//&nbsp;Analogous&nbsp;to&nbsp;input&nbsp;cond</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_76">76</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;End&nbsp;user-defined&nbsp;code&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to109_76">76</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;End&nbsp;user-defined&nbsp;code&nbsp;*/</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_77">77</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_77">77</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_78">78</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Implicitly-defined&nbsp;code&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to109_78">78</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Implicitly-defined&nbsp;code&nbsp;*/</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_79">79</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;int&nbsp;max_trip_count&nbsp;=&nbsp;10;&nbsp;//&nbsp;Analogous&nbsp;to&nbsp;input&nbsp;M</td><td class="diff_next"></td><td class="diff_header" id="to109_79">79</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;int&nbsp;max_trip_count&nbsp;=&nbsp;10;&nbsp;//&nbsp;Analogous&nbsp;to&nbsp;input&nbsp;M</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_80">80</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;user_defined_vals[];&nbsp;//&nbsp;Imagine&nbsp;this&nbsp;is&nbsp;resizable</td><td class="diff_next"></td><td class="diff_header" id="to109_80">80</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;user_defined_vals[];&nbsp;//&nbsp;Imagine&nbsp;this&nbsp;is&nbsp;resizable</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_81">81</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;End&nbsp;implicitly-defined&nbsp;code&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to109_81">81</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;End&nbsp;implicitly-defined&nbsp;code&nbsp;*/</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_82">82</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;initialize&nbsp;loop-carried&nbsp;variables&nbsp;and&nbsp;scan-output&nbsp;variables&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to109_82">82</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;initialize&nbsp;loop-carried&nbsp;variables&nbsp;and&nbsp;scan-output&nbsp;variables&nbsp;*/</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_83">83</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;keepgoing_out&nbsp;=&nbsp;keepgoing</td><td class="diff_next"></td><td class="diff_header" id="to109_83">83</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;keepgoing_out&nbsp;=&nbsp;keepgoing</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_84">84</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;b_out&nbsp;=&nbsp;b</td><td class="diff_next"></td><td class="diff_header" id="to109_84">84</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;b_out&nbsp;=&nbsp;b</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_85">85</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_85">85</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_86">86</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;i&nbsp;&lt;&nbsp;max_trip_count&nbsp;&amp;&amp;&nbsp;keepgoing_out;&nbsp;++i)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to109_86">86</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;i&nbsp;&lt;&nbsp;max_trip_count&nbsp;&amp;&amp;&nbsp;keepgoing_out;&nbsp;++i)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_87">87</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Implicitly-defined&nbsp;code:&nbsp;bind&nbsp;actual&nbsp;parameter&nbsp;values</td><td class="diff_next"></td><td class="diff_header" id="to109_87">87</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Implicitly-defined&nbsp;code:&nbsp;bind&nbsp;actual&nbsp;parameter&nbsp;values</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_88">88</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;formal&nbsp;parameter&nbsp;variables&nbsp;of&nbsp;loop-body&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to109_88">88</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;formal&nbsp;parameter&nbsp;variables&nbsp;of&nbsp;loop-body&nbsp;*/</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_89">89</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;keepgoing_in&nbsp;=&nbsp;keepgoing_out;</td><td class="diff_next"></td><td class="diff_header" id="to109_89">89</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;keepgoing_in&nbsp;=&nbsp;keepgoing_out;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_90">90</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;b_in&nbsp;=&nbsp;b_out;</td><td class="diff_next"></td><td class="diff_header" id="to109_90">90</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;b_in&nbsp;=&nbsp;b_out;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_91">91</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_91">91</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_92">92</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;User-defined&nbsp;code&nbsp;(loop&nbsp;body)&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to109_92">92</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;User-defined&nbsp;code&nbsp;(loop&nbsp;body)&nbsp;*/</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_93">93</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;my_local&nbsp;=&nbsp;a&nbsp;+&nbsp;b_in;&nbsp;//&nbsp;Reading&nbsp;value&nbsp;"a"&nbsp;from&nbsp;the&nbsp;enclosing&nbsp;scope&nbsp;is&nbsp;fine</td><td class="diff_next"></td><td class="diff_header" id="to109_93">93</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;my_local&nbsp;=&nbsp;a&nbsp;+&nbsp;b_in;&nbsp;//&nbsp;Reading&nbsp;value&nbsp;"a"&nbsp;from&nbsp;the&nbsp;enclosing&nbsp;scope&nbsp;is&nbsp;fine</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_94">94</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b_out&nbsp;=&nbsp;a&nbsp;-&nbsp;b_in;</td><td class="diff_next"></td><td class="diff_header" id="to109_94">94</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b_out&nbsp;=&nbsp;a&nbsp;-&nbsp;b_in;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_95">95</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keepgoing_out&nbsp;=&nbsp;my_local&nbsp;&gt;&nbsp;b_out;</td><td class="diff_next"></td><td class="diff_header" id="to109_95">95</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keepgoing_out&nbsp;=&nbsp;my_local&nbsp;&gt;&nbsp;b_out;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_96">96</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user_defined_val&nbsp;=&nbsp;b_in&nbsp;+&nbsp;b_in;&nbsp;//&nbsp;b_in&nbsp;and&nbsp;b_out&nbsp;are&nbsp;different&nbsp;variables</td><td class="diff_next"></td><td class="diff_header" id="to109_96">96</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user_defined_val&nbsp;=&nbsp;b_in&nbsp;+&nbsp;b_in;&nbsp;//&nbsp;b_in&nbsp;and&nbsp;b_out&nbsp;are&nbsp;different&nbsp;variables</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_97">97</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;End&nbsp;user-defined&nbsp;code&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to109_97">97</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;End&nbsp;user-defined&nbsp;code&nbsp;*/</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_98">98</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_98">98</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_99">99</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Implicitly&nbsp;defined-code&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to109_99">99</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Implicitly&nbsp;defined-code&nbsp;*/</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_100">100</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user_defined_vals[i]&nbsp;=&nbsp;user_defined_val&nbsp;//&nbsp;accumulate&nbsp;scan-output&nbsp;values</td><td class="diff_next"></td><td class="diff_header" id="to109_100">100</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user_defined_vals[i]&nbsp;=&nbsp;user_defined_val&nbsp;//&nbsp;accumulate&nbsp;scan-output&nbsp;values</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_101">101</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to109_101">101</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_102">102</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;int&nbsp;t&nbsp;=&nbsp;my_local;&nbsp;//&nbsp;Can't&nbsp;do&nbsp;this.&nbsp;my_local&nbsp;is&nbsp;not&nbsp;accessible&nbsp;here.</td><td class="diff_next"></td><td class="diff_header" id="to109_102">102</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;int&nbsp;t&nbsp;=&nbsp;my_local;&nbsp;//&nbsp;Can't&nbsp;do&nbsp;this.&nbsp;my_local&nbsp;is&nbsp;not&nbsp;accessible&nbsp;here.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_103">103</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_103">103</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_104">104</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;The&nbsp;values&nbsp;below&nbsp;are&nbsp;bound&nbsp;to&nbsp;the&nbsp;output&nbsp;variables&nbsp;of&nbsp;the&nbsp;loop&nbsp;and&nbsp;therefore&nbsp;accessible</td><td class="diff_next"></td><td class="diff_header" id="to109_104">104</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;The&nbsp;values&nbsp;below&nbsp;are&nbsp;bound&nbsp;to&nbsp;the&nbsp;output&nbsp;variables&nbsp;of&nbsp;the&nbsp;loop&nbsp;and&nbsp;therefore&nbsp;accessible</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_105">105</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;b_out;&nbsp;user_defined_vals;&nbsp;keepgoing_out;</td><td class="diff_next"></td><td class="diff_header" id="to109_105">105</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;b_out;&nbsp;user_defined_vals;&nbsp;keepgoing_out;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_106">106</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to109_106">106</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_107">107</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_107">107</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_108">108</td><td nowrap="nowrap">There&nbsp;are&nbsp;several&nbsp;things&nbsp;of&nbsp;note&nbsp;in&nbsp;this&nbsp;code&nbsp;snippet:</td><td class="diff_next"></td><td class="diff_header" id="to109_108">108</td><td nowrap="nowrap">There&nbsp;are&nbsp;several&nbsp;things&nbsp;of&nbsp;note&nbsp;in&nbsp;this&nbsp;code&nbsp;snippet:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_109">109</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_109">109</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_110">110</td><td nowrap="nowrap">1)&nbsp;Values&nbsp;from&nbsp;the&nbsp;enclosing&nbsp;scope&nbsp;(i.e.&nbsp;variable&nbsp;"a"&nbsp;here)&nbsp;are&nbsp;in&nbsp;scope&nbsp;and&nbsp;can</td><td class="diff_next"></td><td class="diff_header" id="to109_110">110</td><td nowrap="nowrap">1)&nbsp;Values&nbsp;from&nbsp;the&nbsp;enclosing&nbsp;scope&nbsp;(i.e.&nbsp;variable&nbsp;"a"&nbsp;here)&nbsp;are&nbsp;in&nbsp;scope&nbsp;and&nbsp;can</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_111">111</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;be&nbsp;referenced&nbsp;in&nbsp;the&nbsp;inputs&nbsp;of&nbsp;the&nbsp;loop.</td><td class="diff_next"></td><td class="diff_header" id="to109_111">111</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;be&nbsp;referenced&nbsp;in&nbsp;the&nbsp;inputs&nbsp;of&nbsp;the&nbsp;loop.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_112">112</td><td nowrap="nowrap">2)&nbsp;Any&nbsp;values&nbsp;computed&nbsp;in&nbsp;the&nbsp;loop&nbsp;body&nbsp;that&nbsp;needs&nbsp;to&nbsp;be&nbsp;used&nbsp;in&nbsp;a&nbsp;subsequent</td><td class="diff_next"></td><td class="diff_header" id="to109_112">112</td><td nowrap="nowrap">2)&nbsp;Any&nbsp;values&nbsp;computed&nbsp;in&nbsp;the&nbsp;loop&nbsp;body&nbsp;that&nbsp;needs&nbsp;to&nbsp;be&nbsp;used&nbsp;in&nbsp;a&nbsp;subsequent</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_113">113</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;iteration&nbsp;or&nbsp;after&nbsp;the&nbsp;loop&nbsp;are&nbsp;modelled&nbsp;using&nbsp;a&nbsp;pair&nbsp;of&nbsp;variables&nbsp;in&nbsp;the&nbsp;loop-body,</td><td class="diff_next"></td><td class="diff_header" id="to109_113">113</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;iteration&nbsp;or&nbsp;after&nbsp;the&nbsp;loop&nbsp;are&nbsp;modelled&nbsp;using&nbsp;a&nbsp;pair&nbsp;of&nbsp;variables&nbsp;in&nbsp;the&nbsp;loop-body,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_114">114</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;consisting&nbsp;of&nbsp;an&nbsp;input&nbsp;variable&nbsp;(eg.,&nbsp;b_in)&nbsp;and&nbsp;an&nbsp;output&nbsp;variable&nbsp;(eg.,&nbsp;b_out).</td><td class="diff_next"></td><td class="diff_header" id="to109_114">114</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;consisting&nbsp;of&nbsp;an&nbsp;input&nbsp;variable&nbsp;(eg.,&nbsp;b_in)&nbsp;and&nbsp;an&nbsp;output&nbsp;variable&nbsp;(eg.,&nbsp;b_out).</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_115">115</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;These&nbsp;are&nbsp;referred&nbsp;to&nbsp;as&nbsp;loop-carried&nbsp;dependences.&nbsp;The&nbsp;loop&nbsp;operation&nbsp;node</td><td class="diff_next"></td><td class="diff_header" id="to109_115">115</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;These&nbsp;are&nbsp;referred&nbsp;to&nbsp;as&nbsp;loop-carried&nbsp;dependences.&nbsp;The&nbsp;loop&nbsp;operation&nbsp;node</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_116">116</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;supplies&nbsp;the&nbsp;input&nbsp;value&nbsp;of&nbsp;the&nbsp;input&nbsp;variable&nbsp;for&nbsp;the&nbsp;first&nbsp;iteration,&nbsp;and</td><td class="diff_next"></td><td class="diff_header" id="to109_116">116</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;supplies&nbsp;the&nbsp;input&nbsp;value&nbsp;of&nbsp;the&nbsp;input&nbsp;variable&nbsp;for&nbsp;the&nbsp;first&nbsp;iteration,&nbsp;and</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_117">117</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;returns&nbsp;the&nbsp;output&nbsp;value&nbsp;of&nbsp;the&nbsp;output&nbsp;variable&nbsp;produced&nbsp;by&nbsp;the&nbsp;final</td><td class="diff_next"></td><td class="diff_header" id="to109_117">117</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;returns&nbsp;the&nbsp;output&nbsp;value&nbsp;of&nbsp;the&nbsp;output&nbsp;variable&nbsp;produced&nbsp;by&nbsp;the&nbsp;final</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_118">118</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;iteration.</td><td class="diff_next"></td><td class="diff_header" id="to109_118">118</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;iteration.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_119">119</td><td nowrap="nowrap">3)&nbsp;Scan_output&nbsp;variables&nbsp;are&nbsp;used&nbsp;to&nbsp;implicitly&nbsp;concatenate&nbsp;values&nbsp;computed&nbsp;across</td><td class="diff_next"></td><td class="diff_header" id="to109_119">119</td><td nowrap="nowrap">3)&nbsp;Scan_output&nbsp;variables&nbsp;are&nbsp;used&nbsp;to&nbsp;implicitly&nbsp;concatenate&nbsp;values&nbsp;computed&nbsp;across</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_120">120</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;all&nbsp;the&nbsp;iterations.&nbsp;In&nbsp;the&nbsp;above&nbsp;example,&nbsp;the&nbsp;value&nbsp;of&nbsp;user_defined_val&nbsp;computed</td><td class="diff_next"></td><td class="diff_header" id="to109_120">120</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;all&nbsp;the&nbsp;iterations.&nbsp;In&nbsp;the&nbsp;above&nbsp;example,&nbsp;the&nbsp;value&nbsp;of&nbsp;user_defined_val&nbsp;computed</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_121">121</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;over&nbsp;all&nbsp;iterations&nbsp;are&nbsp;concatenated&nbsp;and&nbsp;returned&nbsp;as&nbsp;the&nbsp;value&nbsp;of&nbsp;user_defined_vals</td><td class="diff_next"></td><td class="diff_header" id="to109_121">121</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;over&nbsp;all&nbsp;iterations&nbsp;are&nbsp;concatenated&nbsp;and&nbsp;returned&nbsp;as&nbsp;the&nbsp;value&nbsp;of&nbsp;user_defined_vals</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_122">122</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;after&nbsp;the&nbsp;loop.</td><td class="diff_next"></td><td class="diff_header" id="to109_122">122</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;after&nbsp;the&nbsp;loop.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_123">123</td><td nowrap="nowrap">4)&nbsp;Values&nbsp;created&nbsp;in&nbsp;the&nbsp;body&nbsp;cannot&nbsp;be&nbsp;accessed&nbsp;in&nbsp;the&nbsp;enclosing&nbsp;scope,</td><td class="diff_next"></td><td class="diff_header" id="to109_123">123</td><td nowrap="nowrap">4)&nbsp;Values&nbsp;created&nbsp;in&nbsp;the&nbsp;body&nbsp;cannot&nbsp;be&nbsp;accessed&nbsp;in&nbsp;the&nbsp;enclosing&nbsp;scope,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_124">124</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;except&nbsp;using&nbsp;the&nbsp;mechanism&nbsp;described&nbsp;above.</td><td class="diff_next"></td><td class="diff_header" id="to109_124">124</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;except&nbsp;using&nbsp;the&nbsp;mechanism&nbsp;described&nbsp;above.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_125">125</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_125">125</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_126">126</td><td nowrap="nowrap">Note&nbsp;that&nbsp;the&nbsp;semantics&nbsp;of&nbsp;this&nbsp;op&nbsp;support&nbsp;"diagonal"&nbsp;or&nbsp;"wavefront"&nbsp;execution.</td><td class="diff_next"></td><td class="diff_header" id="to109_126">126</td><td nowrap="nowrap">Note&nbsp;that&nbsp;the&nbsp;semantics&nbsp;of&nbsp;this&nbsp;op&nbsp;support&nbsp;"diagonal"&nbsp;or&nbsp;"wavefront"&nbsp;execution.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_127">127</td><td nowrap="nowrap">(See&nbsp;Step&nbsp;3&nbsp;here&nbsp;for&nbsp;an&nbsp;example:</td><td class="diff_next"></td><td class="diff_header" id="to109_127">127</td><td nowrap="nowrap">(See&nbsp;Step&nbsp;3&nbsp;here&nbsp;for&nbsp;an&nbsp;example:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_128">128</td><td nowrap="nowrap">https://devblogs.nvidia.com/optimizing-recurrent-neural-networks-cudnn-5/).</td><td class="diff_next"></td><td class="diff_header" id="to109_128">128</td><td nowrap="nowrap">https://devblogs.nvidia.com/optimizing-recurrent-neural-networks-cudnn-5/).</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to109__0"></td><td class="diff_header" id="from109_129">129</td><td nowrap="nowrap">Frontends&nbsp;should&nbsp;emit&nbsp;multi-layer&nbsp;RNNs&nbsp;as&nbsp;a&nbsp;series&nbsp;of&nbsp;While&nbsp;operators&nbsp;(with</td><td class="diff_next"></td><td class="diff_header" id="to109_129">129</td><td nowrap="nowrap">Frontends&nbsp;should&nbsp;emit&nbsp;multi-layer&nbsp;RNNs&nbsp;as&nbsp;a&nbsp;series&nbsp;of&nbsp;While&nbsp;operators&nbsp;(with</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_130">130</td><td nowrap="nowrap">time&nbsp;being&nbsp;the&nbsp;inner&nbsp;looping&nbsp;dimension),&nbsp;with&nbsp;each&nbsp;successive&nbsp;layer&nbsp;consuming</td><td class="diff_next"></td><td class="diff_header" id="to109_130">130</td><td nowrap="nowrap">time&nbsp;being&nbsp;the&nbsp;inner&nbsp;looping&nbsp;dimension),&nbsp;with&nbsp;each&nbsp;successive&nbsp;layer&nbsp;consuming</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_131">131</td><td nowrap="nowrap">the&nbsp;scan_outputs&nbsp;from&nbsp;the&nbsp;previous&nbsp;layer,&nbsp;possibly&nbsp;going&nbsp;through&nbsp;several</td><td class="diff_next"></td><td class="diff_header" id="to109_131">131</td><td nowrap="nowrap">the&nbsp;scan_outputs&nbsp;from&nbsp;the&nbsp;previous&nbsp;layer,&nbsp;possibly&nbsp;going&nbsp;through&nbsp;several</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_132">132</td><td nowrap="nowrap">point-wise&nbsp;operators&nbsp;(e.g.&nbsp;dropout,&nbsp;residual&nbsp;connections,&nbsp;linear&nbsp;layer).</td><td class="diff_next"></td><td class="diff_header" id="to109_132">132</td><td nowrap="nowrap">point-wise&nbsp;operators&nbsp;(e.g.&nbsp;dropout,&nbsp;residual&nbsp;connections,&nbsp;linear&nbsp;layer).</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_133">133</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_133">133</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to109__1">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to109__1">n</a></td><td class="diff_header" id="to109_134">134</td><td nowrap="nowrap"><span class="diff_add">The&nbsp;input/output&nbsp;of&nbsp;subgraph&nbsp;(produced&nbsp;by&nbsp;loop&nbsp;node)&nbsp;matching&nbsp;is&nbsp;based&nbsp;on&nbsp;order&nbsp;instead&nbsp;of&nbsp;name.&nbsp;The&nbsp;implementation&nbsp;will&nbsp;figure&nbsp;out&nbsp;the&nbsp;names&nbsp;based&nbsp;on&nbsp;this&nbsp;order.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_135">135</td><td nowrap="nowrap"><span class="diff_add">&nbsp;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_134">134</td><td nowrap="nowrap">**Attributes**</td><td class="diff_next"></td><td class="diff_header" id="to109_136">136</td><td nowrap="nowrap">**Attributes**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_135">135</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_137">137</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_136">136</td><td nowrap="nowrap">*&nbsp;**body**&nbsp;(required):</td><td class="diff_next"></td><td class="diff_header" id="to109_138">138</td><td nowrap="nowrap">*&nbsp;**body**&nbsp;(required):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_137">137</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;graph&nbsp;run&nbsp;each&nbsp;iteration.&nbsp;It&nbsp;has&nbsp;2+N&nbsp;inputs:&nbsp;(iteration_num,</td><td class="diff_next"></td><td class="diff_header" id="to109_139">139</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;graph&nbsp;run&nbsp;each&nbsp;iteration.&nbsp;It&nbsp;has&nbsp;2+N&nbsp;inputs:&nbsp;(iteration_num,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_138">138</td><td nowrap="nowrap">&nbsp;&nbsp;condition,&nbsp;loop&nbsp;carried&nbsp;dependencies...).&nbsp;It&nbsp;has&nbsp;1+N+K&nbsp;outputs:</td><td class="diff_next"></td><td class="diff_header" id="to109_140">140</td><td nowrap="nowrap">&nbsp;&nbsp;condition,&nbsp;loop&nbsp;carried&nbsp;dependencies...).&nbsp;It&nbsp;has&nbsp;1+N+K&nbsp;outputs:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_139">139</td><td nowrap="nowrap">&nbsp;&nbsp;(condition,&nbsp;loop&nbsp;carried&nbsp;dependencies...,&nbsp;scan_outputs...).&nbsp;Each</td><td class="diff_next"></td><td class="diff_header" id="to109_141">141</td><td nowrap="nowrap">&nbsp;&nbsp;(condition,&nbsp;loop&nbsp;carried&nbsp;dependencies...,&nbsp;scan_outputs...).&nbsp;Each</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_140">140</td><td nowrap="nowrap">&nbsp;&nbsp;scan_output&nbsp;is&nbsp;created&nbsp;by&nbsp;concatenating&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;specified</td><td class="diff_next"></td><td class="diff_header" id="to109_142">142</td><td nowrap="nowrap">&nbsp;&nbsp;scan_output&nbsp;is&nbsp;created&nbsp;by&nbsp;concatenating&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;specified</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_141">141</td><td nowrap="nowrap">&nbsp;&nbsp;output&nbsp;value&nbsp;at&nbsp;the&nbsp;end&nbsp;of&nbsp;each&nbsp;iteration&nbsp;of&nbsp;the&nbsp;loop.&nbsp;It&nbsp;is&nbsp;an</td><td class="diff_next"></td><td class="diff_header" id="to109_143">143</td><td nowrap="nowrap">&nbsp;&nbsp;output&nbsp;value&nbsp;at&nbsp;the&nbsp;end&nbsp;of&nbsp;each&nbsp;iteration&nbsp;of&nbsp;the&nbsp;loop.&nbsp;It&nbsp;is&nbsp;an</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_142">142</td><td nowrap="nowrap">&nbsp;&nbsp;error&nbsp;if&nbsp;the&nbsp;dimensions&nbsp;or&nbsp;data&nbsp;type&nbsp;of&nbsp;these&nbsp;scan_outputs&nbsp;change</td><td class="diff_next"></td><td class="diff_header" id="to109_144">144</td><td nowrap="nowrap">&nbsp;&nbsp;error&nbsp;if&nbsp;the&nbsp;dimensions&nbsp;or&nbsp;data&nbsp;type&nbsp;of&nbsp;these&nbsp;scan_outputs&nbsp;change</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_143">143</td><td nowrap="nowrap">&nbsp;&nbsp;across&nbsp;loop&nbsp;iterations.</td><td class="diff_next"></td><td class="diff_header" id="to109_145">145</td><td nowrap="nowrap">&nbsp;&nbsp;across&nbsp;loop&nbsp;iterations.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_144">144</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_146">146</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_145">145</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to109_147">147</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_146">146</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_148">148</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_147">147</td><td nowrap="nowrap">Between&nbsp;2&nbsp;and&nbsp;2147483647&nbsp;inputs.</td><td class="diff_next"></td><td class="diff_header" id="to109_149">149</td><td nowrap="nowrap">Between&nbsp;2&nbsp;and&nbsp;2147483647&nbsp;inputs.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_148">148</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_150">150</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_149">149</td><td nowrap="nowrap">*&nbsp;**M**&nbsp;(optional,&nbsp;heterogeneous)&nbsp;-&nbsp;**I**:</td><td class="diff_next"></td><td class="diff_header" id="to109_151">151</td><td nowrap="nowrap">*&nbsp;**M**&nbsp;(optional,&nbsp;heterogeneous)&nbsp;-&nbsp;**I**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_150">150</td><td nowrap="nowrap">&nbsp;&nbsp;A&nbsp;maximum&nbsp;trip-count&nbsp;for&nbsp;the&nbsp;loop&nbsp;specified&nbsp;at&nbsp;runtime.&nbsp;Optional.</td><td class="diff_next"></td><td class="diff_header" id="to109_152">152</td><td nowrap="nowrap">&nbsp;&nbsp;A&nbsp;maximum&nbsp;trip-count&nbsp;for&nbsp;the&nbsp;loop&nbsp;specified&nbsp;at&nbsp;runtime.&nbsp;Optional.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_151">151</td><td nowrap="nowrap">&nbsp;&nbsp;Pass&nbsp;empty&nbsp;string&nbsp;to&nbsp;skip.</td><td class="diff_next"></td><td class="diff_header" id="to109_153">153</td><td nowrap="nowrap">&nbsp;&nbsp;Pass&nbsp;empty&nbsp;string&nbsp;to&nbsp;skip.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_152">152</td><td nowrap="nowrap">*&nbsp;**cond**&nbsp;(optional,&nbsp;heterogeneous)&nbsp;-&nbsp;**B**:</td><td class="diff_next"></td><td class="diff_header" id="to109_154">154</td><td nowrap="nowrap">*&nbsp;**cond**&nbsp;(optional,&nbsp;heterogeneous)&nbsp;-&nbsp;**B**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_153">153</td><td nowrap="nowrap">&nbsp;&nbsp;A&nbsp;boolean&nbsp;termination&nbsp;condition.&nbsp;Optional.&nbsp;Pass&nbsp;empty&nbsp;string&nbsp;to</td><td class="diff_next"></td><td class="diff_header" id="to109_155">155</td><td nowrap="nowrap">&nbsp;&nbsp;A&nbsp;boolean&nbsp;termination&nbsp;condition.&nbsp;Optional.&nbsp;Pass&nbsp;empty&nbsp;string&nbsp;to</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_154">154</td><td nowrap="nowrap">&nbsp;&nbsp;skip.</td><td class="diff_next"></td><td class="diff_header" id="to109_156">156</td><td nowrap="nowrap">&nbsp;&nbsp;skip.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_155">155</td><td nowrap="nowrap">*&nbsp;**v_initial**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td><td class="diff_next"></td><td class="diff_header" id="to109_157">157</td><td nowrap="nowrap">*&nbsp;**v_initial**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_156">156</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;initial&nbsp;values&nbsp;of&nbsp;any&nbsp;loop-carried&nbsp;dependencies&nbsp;(values&nbsp;that</td><td class="diff_next"></td><td class="diff_header" id="to109_158">158</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;initial&nbsp;values&nbsp;of&nbsp;any&nbsp;loop-carried&nbsp;dependencies&nbsp;(values&nbsp;that</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_157">157</td><td nowrap="nowrap">&nbsp;&nbsp;change&nbsp;across&nbsp;loop&nbsp;iterations)</td><td class="diff_next"></td><td class="diff_header" id="to109_159">159</td><td nowrap="nowrap">&nbsp;&nbsp;change&nbsp;across&nbsp;loop&nbsp;iterations)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_158">158</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_160">160</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to109__1"></td><td class="diff_header" id="from109_159">159</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to109_161">161</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_160">160</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_162">162</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_161">161</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2147483647&nbsp;outputs.</td><td class="diff_next"></td><td class="diff_header" id="to109_163">163</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2147483647&nbsp;outputs.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_162">162</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_164">164</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_163">163</td><td nowrap="nowrap">*&nbsp;**v_final_and_scan_outputs**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td><td class="diff_next"></td><td class="diff_header" id="to109_165">165</td><td nowrap="nowrap">*&nbsp;**v_final_and_scan_outputs**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to109__2">n</a></td><td class="diff_header" id="from109_164">164</td><td nowrap="nowrap">&nbsp;&nbsp;Final&nbsp;N&nbsp;loop&nbsp;carried&nbsp;dependency&nbsp;values&nbsp;then&nbsp;K&nbsp;scan_outputs</td><td class="diff_next"><a href="#difflib_chg_to109__2">n</a></td><td class="diff_header" id="to109_166">166</td><td nowrap="nowrap">&nbsp;&nbsp;Final&nbsp;N&nbsp;loop&nbsp;carried&nbsp;dependency&nbsp;values&nbsp;then&nbsp;K&nbsp;scan_outputs<span class="diff_add">.&nbsp;Scan</span></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to109__2"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_167">167</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;outputs&nbsp;must&nbsp;be&nbsp;Tensors.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_165">165</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_168">168</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_166">166</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to109_169">169</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_167">167</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_170">170</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_168">168</td><td nowrap="nowrap">*&nbsp;**V**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to109_171">171</td><td nowrap="nowrap">*&nbsp;**V**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to109__3">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to109__3">n</a></td><td class="diff_header" id="to109_172">172</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;seq(tensor(bool)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_173">173</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;seq(tensor(complex128)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_174">174</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;seq(tensor(complex64)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_175">175</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;seq(tensor(double)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_176">176</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;seq(tensor(float)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_177">177</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;seq(tensor(float16)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_178">178</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;seq(tensor(int16)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_179">179</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;seq(tensor(int32)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_180">180</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;seq(tensor(int64)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_181">181</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;seq(tensor(int8)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_182">182</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;seq(tensor(string)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_183">183</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;seq(tensor(uint16)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_184">184</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;seq(tensor(uint32)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_185">185</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;seq(tensor(uint64)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to109_186">186</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;seq(tensor(uint8)),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_169">169</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td><td class="diff_next"></td><td class="diff_header" id="to109_187">187</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_170">170</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex128),</td><td class="diff_next"></td><td class="diff_header" id="to109_188">188</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex128),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_171">171</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex64),</td><td class="diff_next"></td><td class="diff_header" id="to109_189">189</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_172">172</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to109_190">190</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_173">173</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to109_191">191</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_174">174</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td><td class="diff_next"></td><td class="diff_header" id="to109_192">192</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_175">175</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td><td class="diff_next"></td><td class="diff_header" id="to109_193">193</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_176">176</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td><td class="diff_next"></td><td class="diff_header" id="to109_194">194</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_177">177</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td><td class="diff_next"></td><td class="diff_header" id="to109_195">195</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_178">178</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td><td class="diff_next"></td><td class="diff_header" id="to109_196">196</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_179">179</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td><td class="diff_next"></td><td class="diff_header" id="to109_197">197</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to109__3"></td><td class="diff_header" id="from109_180">180</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td><td class="diff_next"></td><td class="diff_header" id="to109_198">198</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_181">181</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td><td class="diff_next"></td><td class="diff_header" id="to109_199">199</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_182">182</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td><td class="diff_next"></td><td class="diff_header" id="to109_200">200</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_183">183</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td><td class="diff_next"></td><td class="diff_header" id="to109_201">201</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_184">184</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to109_202">202</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to109__top">t</a></td><td class="diff_header" id="from109_185">185</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;All&nbsp;Tensor&nbsp;types</span></td><td class="diff_next"><a href="#difflib_chg_to109__top">t</a></td><td class="diff_header" id="to109_203">203</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;All&nbsp;Tensor&nbsp;and&nbsp;Sequence&nbsp;types</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_186">186</td><td nowrap="nowrap">*&nbsp;**I**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to109_204">204</td><td nowrap="nowrap">*&nbsp;**I**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_187">187</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64)</td><td class="diff_next"></td><td class="diff_header" id="to109_205">205</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_188">188</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to109_206">206</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_189">189</td><td nowrap="nowrap">&nbsp;&nbsp;tensor&nbsp;of&nbsp;int64,&nbsp;which&nbsp;should&nbsp;be&nbsp;a&nbsp;scalar.</td><td class="diff_next"></td><td class="diff_header" id="to109_207">207</td><td nowrap="nowrap">&nbsp;&nbsp;tensor&nbsp;of&nbsp;int64,&nbsp;which&nbsp;should&nbsp;be&nbsp;a&nbsp;scalar.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_190">190</td><td nowrap="nowrap">*&nbsp;**B**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to109_208">208</td><td nowrap="nowrap">*&nbsp;**B**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_191">191</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool)</td><td class="diff_next"></td><td class="diff_header" id="to109_209">209</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_192">192</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to109_210">210</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from109_193">193</td><td nowrap="nowrap">&nbsp;&nbsp;tensor&nbsp;of&nbsp;bool,&nbsp;which&nbsp;should&nbsp;be&nbsp;a&nbsp;scalar.</td><td class="diff_next"></td><td class="diff_header" id="to109_211">211</td><td nowrap="nowrap">&nbsp;&nbsp;tensor&nbsp;of&nbsp;bool,&nbsp;which&nbsp;should&nbsp;be&nbsp;a&nbsp;scalar.</td></tr>
            </tbody>
        </table>

.. _l-onnx-op-loop-11:

Loop - 11
=========

**Version**

* **name**: `Loop (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Loop>`_
* **domain**: **main**
* **since_version**: **11**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 11**.

**Summary**

Generic Looping construct. This loop has multiple termination conditions:

1) Trip count. Iteration count specified at runtime. Set by
   specifying the input M. Optional. Set to empty string to omit.
   Note that a static trip count (specified at graph construction time) can be
   specified by passing in a constant node for input M.
2) Loop termination condition. This is an input to the op that determines
   whether to run the first iteration and also a loop-carried dependency for
   the body graph. The body graph must yield a value for the condition variable,
   whether this input is provided or not.

This table summarizes the operating modes of this operator with equivalent
C-style code:

    Operator inputs defined as (max_trip_count, condition_var).

    input ("", ""):
        for (int i=0; ; ++i) {
          cond = ... // Note this value is ignored, but is required in the body
        }

    input ("", cond) // Note this is analogous to a while loop
        bool cond = ...;
        for (int i=0; cond; ++i) {
          cond = ...;
        }

    input ("", 1) // Note this is analogous to a do-while loop
        bool cond = true
        for (int i=0; cond; ++i) {
          cond = ...;
        }

    input (trip_count, "") // Note this is analogous to a for loop
        int trip_count = ...
        for (int i=0; i < trip_count; ++i) {
          cond = ...; // ignored
        }

    input (trip_count, cond)
        int trip_count = ...;
        bool cond = ...;
        for (int i=0; i < trip_count && cond; ++i) {
          cond = ...;
        }

*Sample usage - cond as well as trip count*

    graph predict-net {
      %a = Constant[value = <Scalar Tensor [3]>]()
      %b = Constant[value = <Scalar Tensor [6]>]()
      %keepgoing = Constant[value = <Scalar Tensor [1]>]()
      %max_trip_count = Constant[value = <Scalar Tensor [10]>]()
      %keepgoing_out, %b_out, %user_defined_vals = Loop[body = <graph body-net>](%max_trip_count, %keepgoing, %b)
      return
    }

    graph body-net (
      %i[INT32, scalar]           // iteration number
      %keepgoing_in[BOOL, scalar] // incoming loop-termination-condition; not used
      %b_in[INT32, scalar]        // incoming value of loop-carried-dependency b
    ) {
      %my_local = Add(%a, %b_in)
      %b_out = Sub(%a, %b_in) // outgoing value of loop-carried-dependency b
      %keepgoing_out = Greater(%my_local, %b_out) // outgoing loop-termination-condition
      %user_defined_val = Add(%b_in, %b_in) // scan-output value to be accumulated
      return %keepgoing_out, %b_out, %user_defined_val
    }

*Sample equivalent C code*

    {
      /* User-defined code (enclosing scope) */
      int a = 3, b = 6;
      bool keepgoing = true; // Analogous to input cond
      /* End user-defined code */

      /* Implicitly-defined code */
      const int max_trip_count = 10; // Analogous to input M
      int user_defined_vals[]; // Imagine this is resizable
      /* End implicitly-defined code */
      /* initialize loop-carried variables and scan-output variables */
      bool keepgoing_out = keepgoing
      int b_out = b

      for (int i=0; i < max_trip_count && keepgoing_out; ++i) {
        /* Implicitly-defined code: bind actual parameter values
           to formal parameter variables of loop-body */
        bool keepgoing_in = keepgoing_out;
        bool b_in = b_out;

        /* User-defined code (loop body) */
        int my_local = a + b_in; // Reading value "a" from the enclosing scope is fine
        b_out = a - b_in;
        keepgoing_out = my_local > b_out;
        user_defined_val = b_in + b_in; // b_in and b_out are different variables
        /* End user-defined code */

        /* Implicitly defined-code */
        user_defined_vals[i] = user_defined_val // accumulate scan-output values
      }
      // int t = my_local; // Can't do this. my_local is not accessible here.

      // The values below are bound to the output variables of the loop and therefore accessible
      // b_out; user_defined_vals; keepgoing_out;
    }

There are several things of note in this code snippet:

1) Values from the enclosing scope (i.e. variable "a" here) are in scope and can
   be referenced in the inputs of the loop.
2) Any values computed in the loop body that needs to be used in a subsequent
   iteration or after the loop are modelled using a pair of variables in the loop-body,
   consisting of an input variable (eg., b_in) and an output variable (eg., b_out).
   These are referred to as loop-carried dependences. The loop operation node
   supplies the input value of the input variable for the first iteration, and
   returns the output value of the output variable produced by the final
   iteration.
3) Scan_output variables are used to implicitly concatenate values computed across
   all the iterations. In the above example, the value of user_defined_val computed
   over all iterations are concatenated and returned as the value of user_defined_vals
   after the loop.
4) Values created in the body cannot be accessed in the enclosing scope,
   except using the mechanism described above.

Note that the semantics of this op support "diagonal" or "wavefront" execution.
(See Step 3 here for an example:
https://devblogs.nvidia.com/optimizing-recurrent-neural-networks-cudnn-5/).
Frontends should emit multi-layer RNNs as a series of While operators (with
time being the inner looping dimension), with each successive layer consuming
the scan_outputs from the previous layer, possibly going through several
point-wise operators (e.g. dropout, residual connections, linear layer).

**Attributes**

* **body** (required):
  The graph run each iteration. It has 2+N inputs: (iteration_num,
  condition, loop carried dependencies...). It has 1+N+K outputs:
  (condition, loop carried dependencies..., scan_outputs...). Each
  scan_output is created by concatenating the value of the specified
  output value at the end of each iteration of the loop. It is an
  error if the dimensions or data type of these scan_outputs change
  across loop iterations.

**Inputs**

Between 2 and 2147483647 inputs.

* **M** (optional, heterogeneous) - **I**:
  A maximum trip-count for the loop specified at runtime. Optional.
  Pass empty string to skip.
* **cond** (optional, heterogeneous) - **B**:
  A boolean termination condition. Optional. Pass empty string to
  skip.
* **v_initial** (variadic) - **V**:
  The initial values of any loop-carried dependencies (values that
  change across loop iterations)

**Outputs**

Between 1 and 2147483647 outputs.

* **v_final_and_scan_outputs** (variadic) - **V**:
  Final N loop carried dependency values then K scan_outputs

**Type Constraints**

* **V** in (
  tensor(bool),
  tensor(complex128),
  tensor(complex64),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  All Tensor types
* **I** in (
  tensor(int64)
  ):
  tensor of int64, which should be a scalar.
* **B** in (
  tensor(bool)
  ):
  tensor of bool, which should be a scalar.

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to110__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next"><a href="#difflib_chg_to110__0">f</a></td><td class="diff_header" id="from110_1">1</td><td nowrap="nowrap">Generic&nbsp;Looping&nbsp;construct.&nbsp;This&nbsp;loop&nbsp;has&nbsp;multiple&nbsp;termination&nbsp;conditions:</td><td class="diff_next"><a href="#difflib_chg_to110__0">f</a></td><td class="diff_header" id="to110_1">1</td><td nowrap="nowrap">Generic&nbsp;Looping&nbsp;construct.&nbsp;This&nbsp;loop&nbsp;has&nbsp;multiple&nbsp;termination&nbsp;conditions:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_2">2</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_2">2</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_3">3</td><td nowrap="nowrap">1)&nbsp;Trip&nbsp;count.&nbsp;Iteration&nbsp;count&nbsp;specified&nbsp;at&nbsp;runtime.&nbsp;Set&nbsp;by</td><td class="diff_next"></td><td class="diff_header" id="to110_3">3</td><td nowrap="nowrap">1)&nbsp;Trip&nbsp;count.&nbsp;Iteration&nbsp;count&nbsp;specified&nbsp;at&nbsp;runtime.&nbsp;Set&nbsp;by</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_4">4</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;specifying&nbsp;the&nbsp;input&nbsp;M.&nbsp;Optional.&nbsp;Set&nbsp;to&nbsp;empty&nbsp;string&nbsp;to&nbsp;omit.</td><td class="diff_next"></td><td class="diff_header" id="to110_4">4</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;specifying&nbsp;the&nbsp;input&nbsp;M.&nbsp;Optional.&nbsp;Set&nbsp;to&nbsp;empty&nbsp;string&nbsp;to&nbsp;omit.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_5">5</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;Note&nbsp;that&nbsp;a&nbsp;static&nbsp;trip&nbsp;count&nbsp;(specified&nbsp;at&nbsp;graph&nbsp;construction&nbsp;time)&nbsp;can&nbsp;be</td><td class="diff_next"></td><td class="diff_header" id="to110_5">5</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;Note&nbsp;that&nbsp;a&nbsp;static&nbsp;trip&nbsp;count&nbsp;(specified&nbsp;at&nbsp;graph&nbsp;construction&nbsp;time)&nbsp;can&nbsp;be</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_6">6</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;specified&nbsp;by&nbsp;passing&nbsp;in&nbsp;a&nbsp;constant&nbsp;node&nbsp;for&nbsp;input&nbsp;M.</td><td class="diff_next"></td><td class="diff_header" id="to110_6">6</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;specified&nbsp;by&nbsp;passing&nbsp;in&nbsp;a&nbsp;constant&nbsp;node&nbsp;for&nbsp;input&nbsp;M.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_7">7</td><td nowrap="nowrap">2)&nbsp;Loop&nbsp;termination&nbsp;condition.&nbsp;This&nbsp;is&nbsp;an&nbsp;input&nbsp;to&nbsp;the&nbsp;op&nbsp;that&nbsp;determines</td><td class="diff_next"></td><td class="diff_header" id="to110_7">7</td><td nowrap="nowrap">2)&nbsp;Loop&nbsp;termination&nbsp;condition.&nbsp;This&nbsp;is&nbsp;an&nbsp;input&nbsp;to&nbsp;the&nbsp;op&nbsp;that&nbsp;determines</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_8">8</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;whether&nbsp;to&nbsp;run&nbsp;the&nbsp;first&nbsp;iteration&nbsp;and&nbsp;also&nbsp;a&nbsp;loop-carried&nbsp;dependency&nbsp;for</td><td class="diff_next"></td><td class="diff_header" id="to110_8">8</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;whether&nbsp;to&nbsp;run&nbsp;the&nbsp;first&nbsp;iteration&nbsp;and&nbsp;also&nbsp;a&nbsp;loop-carried&nbsp;dependency&nbsp;for</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_9">9</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;the&nbsp;body&nbsp;graph.&nbsp;The&nbsp;body&nbsp;graph&nbsp;must&nbsp;yield&nbsp;a&nbsp;value&nbsp;for&nbsp;the&nbsp;condition&nbsp;variable,</td><td class="diff_next"></td><td class="diff_header" id="to110_9">9</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;the&nbsp;body&nbsp;graph.&nbsp;The&nbsp;body&nbsp;graph&nbsp;must&nbsp;yield&nbsp;a&nbsp;value&nbsp;for&nbsp;the&nbsp;condition&nbsp;variable,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_10">10</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;whether&nbsp;this&nbsp;input&nbsp;is&nbsp;provided&nbsp;or&nbsp;not.</td><td class="diff_next"></td><td class="diff_header" id="to110_10">10</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;whether&nbsp;this&nbsp;input&nbsp;is&nbsp;provided&nbsp;or&nbsp;not.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_11">11</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_11">11</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_12">12</td><td nowrap="nowrap">This&nbsp;table&nbsp;summarizes&nbsp;the&nbsp;operating&nbsp;modes&nbsp;of&nbsp;this&nbsp;operator&nbsp;with&nbsp;equivalent</td><td class="diff_next"></td><td class="diff_header" id="to110_12">12</td><td nowrap="nowrap">This&nbsp;table&nbsp;summarizes&nbsp;the&nbsp;operating&nbsp;modes&nbsp;of&nbsp;this&nbsp;operator&nbsp;with&nbsp;equivalent</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_13">13</td><td nowrap="nowrap">C-style&nbsp;code:</td><td class="diff_next"></td><td class="diff_header" id="to110_13">13</td><td nowrap="nowrap">C-style&nbsp;code:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_14">14</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_14">14</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_15">15</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;Operator&nbsp;inputs&nbsp;defined&nbsp;as&nbsp;(max_trip_count,&nbsp;condition_var).</td><td class="diff_next"></td><td class="diff_header" id="to110_15">15</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;Operator&nbsp;inputs&nbsp;defined&nbsp;as&nbsp;(max_trip_count,&nbsp;condition_var).</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_16">16</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_16">16</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_17">17</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;("",&nbsp;""):</td><td class="diff_next"></td><td class="diff_header" id="to110_17">17</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;("",&nbsp;""):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_18">18</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;;&nbsp;++i)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to110_18">18</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;;&nbsp;++i)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...&nbsp;//&nbsp;Note&nbsp;this&nbsp;value&nbsp;is&nbsp;ignored,&nbsp;but&nbsp;is&nbsp;required&nbsp;in&nbsp;the&nbsp;body</td><td class="diff_next"></td><td class="diff_header" id="to110_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...&nbsp;//&nbsp;Note&nbsp;this&nbsp;value&nbsp;is&nbsp;ignored,&nbsp;but&nbsp;is&nbsp;required&nbsp;in&nbsp;the&nbsp;body</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_20">20</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to110_20">20</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_21">21</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_21">21</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_22">22</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;("",&nbsp;cond)&nbsp;//&nbsp;Note&nbsp;this&nbsp;is&nbsp;analogous&nbsp;to&nbsp;a&nbsp;while&nbsp;loop</td><td class="diff_next"></td><td class="diff_header" id="to110_22">22</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;("",&nbsp;cond)&nbsp;//&nbsp;Note&nbsp;this&nbsp;is&nbsp;analogous&nbsp;to&nbsp;a&nbsp;while&nbsp;loop</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_23">23</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;cond&nbsp;=&nbsp;...;</td><td class="diff_next"></td><td class="diff_header" id="to110_23">23</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;cond&nbsp;=&nbsp;...;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;cond;&nbsp;++i)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to110_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;cond;&nbsp;++i)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;</td><td class="diff_next"></td><td class="diff_header" id="to110_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_26">26</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to110_26">26</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_27">27</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_27">27</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_28">28</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;("",&nbsp;1)&nbsp;//&nbsp;Note&nbsp;this&nbsp;is&nbsp;analogous&nbsp;to&nbsp;a&nbsp;do-while&nbsp;loop</td><td class="diff_next"></td><td class="diff_header" id="to110_28">28</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;("",&nbsp;1)&nbsp;//&nbsp;Note&nbsp;this&nbsp;is&nbsp;analogous&nbsp;to&nbsp;a&nbsp;do-while&nbsp;loop</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_29">29</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;cond&nbsp;=&nbsp;true</td><td class="diff_next"></td><td class="diff_header" id="to110_29">29</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;cond&nbsp;=&nbsp;true</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;cond;&nbsp;++i)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to110_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;cond;&nbsp;++i)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_31">31</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;</td><td class="diff_next"></td><td class="diff_header" id="to110_31">31</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_32">32</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to110_32">32</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_33">33</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_33">33</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_34">34</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;(trip_count,&nbsp;"")&nbsp;//&nbsp;Note&nbsp;this&nbsp;is&nbsp;analogous&nbsp;to&nbsp;a&nbsp;for&nbsp;loop</td><td class="diff_next"></td><td class="diff_header" id="to110_34">34</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;(trip_count,&nbsp;"")&nbsp;//&nbsp;Note&nbsp;this&nbsp;is&nbsp;analogous&nbsp;to&nbsp;a&nbsp;for&nbsp;loop</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;trip_count&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to110_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;trip_count&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;i&nbsp;&lt;&nbsp;trip_count;&nbsp;++i)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to110_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;i&nbsp;&lt;&nbsp;trip_count;&nbsp;++i)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;&nbsp;//&nbsp;ignored</td><td class="diff_next"></td><td class="diff_header" id="to110_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;&nbsp;//&nbsp;ignored</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to110_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_39">39</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_39">39</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;(trip_count,&nbsp;cond)</td><td class="diff_next"></td><td class="diff_header" id="to110_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;(trip_count,&nbsp;cond)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;trip_count&nbsp;=&nbsp;...;</td><td class="diff_next"></td><td class="diff_header" id="to110_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;trip_count&nbsp;=&nbsp;...;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_42">42</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;cond&nbsp;=&nbsp;...;</td><td class="diff_next"></td><td class="diff_header" id="to110_42">42</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;cond&nbsp;=&nbsp;...;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_43">43</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;i&nbsp;&lt;&nbsp;trip_count&nbsp;&amp;&amp;&nbsp;cond;&nbsp;++i)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to110_43">43</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;i&nbsp;&lt;&nbsp;trip_count&nbsp;&amp;&amp;&nbsp;cond;&nbsp;++i)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_44">44</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;</td><td class="diff_next"></td><td class="diff_header" id="to110_44">44</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cond&nbsp;=&nbsp;...;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_45">45</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to110_45">45</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_46">46</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_46">46</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_47">47</td><td nowrap="nowrap">*Sample&nbsp;usage&nbsp;-&nbsp;cond&nbsp;as&nbsp;well&nbsp;as&nbsp;trip&nbsp;count*</td><td class="diff_next"></td><td class="diff_header" id="to110_47">47</td><td nowrap="nowrap">*Sample&nbsp;usage&nbsp;-&nbsp;cond&nbsp;as&nbsp;well&nbsp;as&nbsp;trip&nbsp;count*</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_48">48</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_48">48</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_49">49</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;predict-net&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to110_49">49</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;predict-net&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%a&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[3]&gt;]()</td><td class="diff_next"></td><td class="diff_header" id="to110_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%a&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[3]&gt;]()</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%b&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[6]&gt;]()</td><td class="diff_next"></td><td class="diff_header" id="to110_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%b&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[6]&gt;]()</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[1]&gt;]()</td><td class="diff_next"></td><td class="diff_header" id="to110_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[1]&gt;]()</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%max_trip_count&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[10]&gt;]()</td><td class="diff_next"></td><td class="diff_header" id="to110_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%max_trip_count&nbsp;=&nbsp;Constant[value&nbsp;=&nbsp;&lt;Scalar&nbsp;Tensor&nbsp;[10]&gt;]()</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to110__0"></td><td class="diff_header" id="from110_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing_out,&nbsp;%b_out,&nbsp;%user_defined_vals&nbsp;=&nbsp;Loop[body&nbsp;=&nbsp;&lt;graph&nbsp;body-net&gt;](%max_trip_count,&nbsp;%keepgoing,&nbsp;%b)</td><td class="diff_next"></td><td class="diff_header" id="to110_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing_out,&nbsp;%b_out,&nbsp;%user_defined_vals&nbsp;=&nbsp;Loop[body&nbsp;=&nbsp;&lt;graph&nbsp;body-net&gt;](%max_trip_count,&nbsp;%keepgoing,&nbsp;%b)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return</td><td class="diff_next"></td><td class="diff_header" id="to110_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to110_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_57">57</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_57">57</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to110__1"></td><td class="diff_header" id="from110_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;body-net&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to110_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;body-net&nbsp;(</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to110__1">n</a></td><td class="diff_header" id="from110_59">59</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%i[INT32,&nbsp;scalar]</span></td><td class="diff_next"><a href="#difflib_chg_to110__1">n</a></td><td class="diff_header" id="to110_59">59</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%i[INT32,&nbsp;scalar]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;iteration&nbsp;number</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_60">60</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing[BOOL,&nbsp;scalar]</span></td><td class="diff_next"></td><td class="diff_header" id="to110_60">60</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing_in[BOOL,&nbsp;scalar]&nbsp;//&nbsp;incoming&nbsp;loop-termination-condition;&nbsp;not&nbsp;used</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_61">61</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%b[INT32,&nbsp;scalar]</span></td><td class="diff_next"></td><td class="diff_header" id="to110_61">61</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%b_in[INT32,&nbsp;scalar]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;incoming&nbsp;value&nbsp;of&nbsp;loop-carried-dependency&nbsp;b</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_62">62</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to110_62">62</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;{</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to110__2">n</a></td><td class="diff_header" id="from110_63">63</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%my_local&nbsp;=&nbsp;Add(%a,&nbsp;%b)</td><td class="diff_next"><a href="#difflib_chg_to110__2">n</a></td><td class="diff_header" id="to110_63">63</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%my_local&nbsp;=&nbsp;Add(%a,&nbsp;%b<span class="diff_add">_in</span>)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_64">64</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%b_out&nbsp;=&nbsp;Sub(%a,&nbsp;%b)</span></td><td class="diff_next"></td><td class="diff_header" id="to110_64">64</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%b_out&nbsp;=&nbsp;Sub(%a,&nbsp;%b_in)&nbsp;//&nbsp;outgoing&nbsp;value&nbsp;of&nbsp;loop-carried-dependency&nbsp;b</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_65">65</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing_out&nbsp;=&nbsp;Greater(%my_local,&nbsp;%b_out)</span></td><td class="diff_next"></td><td class="diff_header" id="to110_65">65</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%keepgoing_out&nbsp;=&nbsp;Greater(%my_local,&nbsp;%b_out)&nbsp;//&nbsp;outgoing&nbsp;loop-termination-condition</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_66">66</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%user_defined_vals&nbsp;=&nbsp;Add(%b,&nbsp;%b)</span></td><td class="diff_next"></td><td class="diff_header" id="to110_66">66</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%user_defined_val&nbsp;=&nbsp;Add(%b_in,&nbsp;%b_in)&nbsp;//&nbsp;scan-output&nbsp;value&nbsp;to&nbsp;be&nbsp;accumulated</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_67">67</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;%keepgoing_out,&nbsp;%b_out,&nbsp;%user_defined_val<span class="diff_sub">s</span></td><td class="diff_next"></td><td class="diff_header" id="to110_67">67</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;%keepgoing_out,&nbsp;%b_out,&nbsp;%user_defined_val</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_68">68</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to110_68">68</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_69">69</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_69">69</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_70">70</td><td nowrap="nowrap">*Sample&nbsp;equivalent&nbsp;C&nbsp;code*</td><td class="diff_next"></td><td class="diff_header" id="to110_70">70</td><td nowrap="nowrap">*Sample&nbsp;equivalent&nbsp;C&nbsp;code*</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_71">71</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_71">71</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_72">72</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to110_72">72</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_73">73</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;User-defined&nbsp;code&nbsp;(enclosing&nbsp;scope)&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to110_73">73</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;User-defined&nbsp;code&nbsp;(enclosing&nbsp;scope)&nbsp;*/</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_74">74</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;a&nbsp;=&nbsp;3,&nbsp;b&nbsp;=&nbsp;6;</td><td class="diff_next"></td><td class="diff_header" id="to110_74">74</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;a&nbsp;=&nbsp;3,&nbsp;b&nbsp;=&nbsp;6;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_75">75</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;keepgoing&nbsp;=&nbsp;true;&nbsp;//&nbsp;Analogous&nbsp;to&nbsp;input&nbsp;cond</td><td class="diff_next"></td><td class="diff_header" id="to110_75">75</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;keepgoing&nbsp;=&nbsp;true;&nbsp;//&nbsp;Analogous&nbsp;to&nbsp;input&nbsp;cond</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_76">76</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;End&nbsp;user-defined&nbsp;code&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to110_76">76</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;End&nbsp;user-defined&nbsp;code&nbsp;*/</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to110__2"></td><td class="diff_header" id="from110_77">77</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_77">77</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_78">78</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Implicitly-defined&nbsp;code&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to110_78">78</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Implicitly-defined&nbsp;code&nbsp;*/</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_79">79</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;int&nbsp;max_trip_count&nbsp;=&nbsp;10;&nbsp;//&nbsp;Analogous&nbsp;to&nbsp;input&nbsp;M</td><td class="diff_next"></td><td class="diff_header" id="to110_79">79</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;int&nbsp;max_trip_count&nbsp;=&nbsp;10;&nbsp;//&nbsp;Analogous&nbsp;to&nbsp;input&nbsp;M</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_80">80</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;user_defined_vals[];&nbsp;//&nbsp;Imagine&nbsp;this&nbsp;is&nbsp;resizable</td><td class="diff_next"></td><td class="diff_header" id="to110_80">80</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;user_defined_vals[];&nbsp;//&nbsp;Imagine&nbsp;this&nbsp;is&nbsp;resizable</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_81">81</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;End&nbsp;implicitly-defined&nbsp;code&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to110_81">81</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;End&nbsp;implicitly-defined&nbsp;code&nbsp;*/</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to110__3">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to110__3">n</a></td><td class="diff_header" id="to110_82">82</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;initialize&nbsp;loop-carried&nbsp;variables&nbsp;and&nbsp;scan-output&nbsp;variables&nbsp;*/</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_83">83</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;keepgoing_out&nbsp;=&nbsp;keepgoing</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_84">84</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;b_out&nbsp;=&nbsp;b</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_85">85</td><td nowrap="nowrap"><span class="diff_add">&nbsp;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_82">82</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;i&nbsp;&lt;&nbsp;max_trip_count&nbsp;&amp;&amp;&nbsp;keepgoing;&nbsp;++i)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to110_86">86</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i=0;&nbsp;i&nbsp;&lt;&nbsp;max_trip_count&nbsp;&amp;&amp;&nbsp;keepgoing<span class="diff_add">_out</span>;&nbsp;++i)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_87">87</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Implicitly-defined&nbsp;code:&nbsp;bind&nbsp;actual&nbsp;parameter&nbsp;values</span></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to110__3"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_88">88</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;formal&nbsp;parameter&nbsp;variables&nbsp;of&nbsp;loop-body&nbsp;*/</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_89">89</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;keepgoing_in&nbsp;=&nbsp;keepgoing_out;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_90">90</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;b_in&nbsp;=&nbsp;b_out;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_91">91</td><td nowrap="nowrap"><span class="diff_add">&nbsp;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_83">83</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;User-defined&nbsp;code&nbsp;(loop&nbsp;body)&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to110_92">92</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;User-defined&nbsp;code&nbsp;(loop&nbsp;body)&nbsp;*/</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to110__4"><a href="#difflib_chg_to110__4">n</a></td><td class="diff_header" id="from110_84">84</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;my_local&nbsp;=&nbsp;a&nbsp;+&nbsp;b;&nbsp;//&nbsp;Reading&nbsp;value<span class="diff_chg">s&nbsp;in</span>&nbsp;the&nbsp;enclosing&nbsp;scope&nbsp;is&nbsp;fine</td><td class="diff_next"><a href="#difflib_chg_to110__4">n</a></td><td class="diff_header" id="to110_93">93</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;my_local&nbsp;=&nbsp;a&nbsp;+&nbsp;b<span class="diff_add">_in</span>;&nbsp;//&nbsp;Reading&nbsp;value<span class="diff_chg">&nbsp;"a"&nbsp;from</span>&nbsp;the&nbsp;enclosing&nbsp;scope&nbsp;is&nbsp;fine</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_85">85</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b&nbsp;=&nbsp;a&nbsp;-&nbsp;b;&nbsp;//&nbsp;writes&nbsp;fine&nbsp;if&nbsp;we&nbsp;specify&nbsp;b&nbsp;as&nbsp;a&nbsp;loop-carried&nbsp;dependency</span></td><td class="diff_next"></td><td class="diff_header" id="to110_94">94</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b_out&nbsp;=&nbsp;a&nbsp;-&nbsp;b_in;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_86">86</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keepgoing&nbsp;=&nbsp;my_local&nbsp;&gt;&nbsp;b;&nbsp;//&nbsp;keepgoing&nbsp;is&nbsp;a&nbsp;loop-carried&nbsp;dependency</span></td><td class="diff_next"></td><td class="diff_header" id="to110_95">95</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keepgoing_out&nbsp;=&nbsp;my_local&nbsp;&gt;&nbsp;b_out;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_87">87</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user_defined_vals[i]&nbsp;=&nbsp;b&nbsp;+&nbsp;b;</span></td><td class="diff_next"></td><td class="diff_header" id="to110_96">96</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user_defined_val&nbsp;=&nbsp;b_in&nbsp;+&nbsp;b_in;&nbsp;//&nbsp;b_in&nbsp;and&nbsp;b_out&nbsp;are&nbsp;different&nbsp;variables</span></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to110__5"></td><td class="diff_header" id="from110_88">88</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;End&nbsp;user-defined&nbsp;code&nbsp;*/</td><td class="diff_next"></td><td class="diff_header" id="to110_97">97</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;End&nbsp;user-defined&nbsp;code&nbsp;*/</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to110__5">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to110__5">n</a></td><td class="diff_header" id="to110_98">98</td><td nowrap="nowrap"><span class="diff_add">&nbsp;</span></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to110__6"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_99">99</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Implicitly&nbsp;defined-code&nbsp;*/</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_100">100</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user_defined_vals[i]&nbsp;=&nbsp;user_defined_val&nbsp;//&nbsp;accumulate&nbsp;scan-output&nbsp;values</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_89">89</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to110_101">101</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to110__6">n</a></td><td class="diff_header" id="from110_90">90</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;my_local&nbsp;=&nbsp;123;&nbsp;//&nbsp;Can't&nbsp;do&nbsp;this.&nbsp;my_local&nbsp;was&nbsp;defined&nbsp;in&nbsp;the&nbsp;body</span></td><td class="diff_next"><a href="#difflib_chg_to110__6">n</a></td><td class="diff_header" id="to110_102">102</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;int&nbsp;t&nbsp;=&nbsp;my_local;&nbsp;//&nbsp;Can't&nbsp;do&nbsp;this.&nbsp;my_local&nbsp;is&nbsp;not&nbsp;accessible&nbsp;here.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_91">91</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_103">103</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to110__7">n</a></td><td class="diff_header" id="from110_92">92</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;These&nbsp;below&nbsp;values&nbsp;are&nbsp;live-out&nbsp;from&nbsp;the&nbsp;loop&nbsp;and&nbsp;therefore&nbsp;accessible</span></td><td class="diff_next"><a href="#difflib_chg_to110__7">n</a></td><td class="diff_header" id="to110_104">104</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;The&nbsp;values&nbsp;below&nbsp;are&nbsp;bound&nbsp;to&nbsp;the&nbsp;output&nbsp;variables&nbsp;of&nbsp;the&nbsp;loop&nbsp;and&nbsp;therefore&nbsp;accessible</span></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to110__7"></td><td class="diff_header" id="from110_93">93</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b_out;&nbsp;user_defined_vals;&nbsp;keepgoing_out;</td><td class="diff_next"></td><td class="diff_header" id="to110_105">105</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="diff_add">&nbsp;//</span>&nbsp;b_out;&nbsp;user_defined_vals;&nbsp;keepgoing_out;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_94">94</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to110_106">106</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to110__8"></td><td class="diff_header" id="from110_95">95</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_107">107</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_96">96</td><td nowrap="nowrap">There&nbsp;are&nbsp;several&nbsp;things&nbsp;of&nbsp;note&nbsp;in&nbsp;this&nbsp;code&nbsp;snippet:</td><td class="diff_next"></td><td class="diff_header" id="to110_108">108</td><td nowrap="nowrap">There&nbsp;are&nbsp;several&nbsp;things&nbsp;of&nbsp;note&nbsp;in&nbsp;this&nbsp;code&nbsp;snippet:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_97">97</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_109">109</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to110__8">n</a></td><td class="diff_header" id="from110_98">98</td><td nowrap="nowrap">1)&nbsp;Values&nbsp;from&nbsp;the&nbsp;enclosing&nbsp;scope&nbsp;(i.e.&nbsp;variable&nbsp;a&nbsp;here)&nbsp;are&nbsp;in&nbsp;scope&nbsp;and&nbsp;can</td><td class="diff_next"><a href="#difflib_chg_to110__8">n</a></td><td class="diff_header" id="to110_110">110</td><td nowrap="nowrap">1)&nbsp;Values&nbsp;from&nbsp;the&nbsp;enclosing&nbsp;scope&nbsp;(i.e.&nbsp;variable&nbsp;<span class="diff_add">"</span>a<span class="diff_add">"</span>&nbsp;here)&nbsp;are&nbsp;in&nbsp;scope&nbsp;and&nbsp;can</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_99">99</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;be&nbsp;referenced&nbsp;in&nbsp;the&nbsp;inputs&nbsp;of&nbsp;the&nbsp;loop.</td><td class="diff_next"></td><td class="diff_header" id="to110_111">111</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;be&nbsp;referenced&nbsp;in&nbsp;the&nbsp;inputs&nbsp;of&nbsp;the&nbsp;loop.</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to110__9">n</a></td><td class="diff_header" id="from110_100">100</td><td nowrap="nowrap"><span class="diff_sub">2)&nbsp;Any&nbsp;variables&nbsp;which&nbsp;you&nbsp;wish&nbsp;to&nbsp;make&nbsp;available&nbsp;in&nbsp;the&nbsp;enclosing&nbsp;scope&nbsp;(i.e.</span></td><td class="diff_next"><a href="#difflib_chg_to110__9">n</a></td><td class="diff_header" id="to110_112">112</td><td nowrap="nowrap"><span class="diff_add">2)&nbsp;Any&nbsp;values&nbsp;computed&nbsp;in&nbsp;the&nbsp;loop&nbsp;body&nbsp;that&nbsp;needs&nbsp;to&nbsp;be&nbsp;used&nbsp;in&nbsp;a&nbsp;subsequent</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_101">101</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;the&nbsp;variables&nbsp;b&nbsp;and&nbsp;keepgoing)&nbsp;must&nbsp;be&nbsp;declared&nbsp;as&nbsp;either&nbsp;loop-carried</span></td><td class="diff_next"></td><td class="diff_header" id="to110_113">113</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;iteration&nbsp;or&nbsp;after&nbsp;the&nbsp;loop&nbsp;are&nbsp;modelled&nbsp;using&nbsp;a&nbsp;pair&nbsp;of&nbsp;variables&nbsp;in&nbsp;the&nbsp;loop-body,</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_102">102</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;dependencies&nbsp;(both&nbsp;at&nbsp;the&nbsp;op&nbsp;inputs&nbsp;and&nbsp;output&nbsp;and&nbsp;at&nbsp;the&nbsp;body&nbsp;net&nbsp;input&nbsp;and</span></td><td class="diff_next"></td><td class="diff_header" id="to110_114">114</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;consisting&nbsp;of&nbsp;an&nbsp;input&nbsp;variable&nbsp;(eg.,&nbsp;b_in)&nbsp;and&nbsp;an&nbsp;output&nbsp;variable&nbsp;(eg.,&nbsp;b_out).</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_103">103</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;output)&nbsp;or&nbsp;scan_outputs.</span></td><td class="diff_next"></td><td class="diff_header" id="to110_115">115</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;These&nbsp;are&nbsp;referred&nbsp;to&nbsp;as&nbsp;loop-carried&nbsp;dependences.&nbsp;The&nbsp;loop&nbsp;operation&nbsp;node</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_116">116</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;supplies&nbsp;the&nbsp;input&nbsp;value&nbsp;of&nbsp;the&nbsp;input&nbsp;variable&nbsp;for&nbsp;the&nbsp;first&nbsp;iteration,&nbsp;and</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_117">117</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;returns&nbsp;the&nbsp;output&nbsp;value&nbsp;of&nbsp;the&nbsp;output&nbsp;variable&nbsp;produced&nbsp;by&nbsp;the&nbsp;final</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_118">118</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;iteration.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_119">119</td><td nowrap="nowrap"><span class="diff_add">3)&nbsp;Scan_output&nbsp;variables&nbsp;are&nbsp;used&nbsp;to&nbsp;implicitly&nbsp;concatenate&nbsp;values&nbsp;computed&nbsp;across</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_120">120</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;all&nbsp;the&nbsp;iterations.&nbsp;In&nbsp;the&nbsp;above&nbsp;example,&nbsp;the&nbsp;value&nbsp;of&nbsp;user_defined_val&nbsp;computed</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_121">121</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;over&nbsp;all&nbsp;iterations&nbsp;are&nbsp;concatenated&nbsp;and&nbsp;returned&nbsp;as&nbsp;the&nbsp;value&nbsp;of&nbsp;user_defined_vals</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_122">122</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;after&nbsp;the&nbsp;loop.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_104">104</td><td nowrap="nowrap"><span class="diff_chg">3</span>)&nbsp;Values&nbsp;created&nbsp;in&nbsp;the&nbsp;body&nbsp;cannot&nbsp;be&nbsp;accessed&nbsp;in&nbsp;the&nbsp;enclosing&nbsp;scope<span class="diff_chg">.</span></td><td class="diff_next"></td><td class="diff_header" id="to110_123">123</td><td nowrap="nowrap"><span class="diff_chg">4</span>)&nbsp;Values&nbsp;created&nbsp;in&nbsp;the&nbsp;body&nbsp;cannot&nbsp;be&nbsp;accessed&nbsp;in&nbsp;the&nbsp;enclosing&nbsp;scope<span class="diff_chg">,</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_124">124</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;except&nbsp;using&nbsp;the&nbsp;mechanism&nbsp;described&nbsp;above.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_105">105</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_125">125</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_106">106</td><td nowrap="nowrap">Note&nbsp;that&nbsp;the&nbsp;semantics&nbsp;of&nbsp;this&nbsp;op&nbsp;support&nbsp;"diagonal"&nbsp;or&nbsp;"wavefront"&nbsp;execution.</td><td class="diff_next"></td><td class="diff_header" id="to110_126">126</td><td nowrap="nowrap">Note&nbsp;that&nbsp;the&nbsp;semantics&nbsp;of&nbsp;this&nbsp;op&nbsp;support&nbsp;"diagonal"&nbsp;or&nbsp;"wavefront"&nbsp;execution.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_107">107</td><td nowrap="nowrap">(See&nbsp;Step&nbsp;3&nbsp;here&nbsp;for&nbsp;an&nbsp;example:</td><td class="diff_next"></td><td class="diff_header" id="to110_127">127</td><td nowrap="nowrap">(See&nbsp;Step&nbsp;3&nbsp;here&nbsp;for&nbsp;an&nbsp;example:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_108">108</td><td nowrap="nowrap">https://devblogs.nvidia.com/optimizing-recurrent-neural-networks-cudnn-5/).</td><td class="diff_next"></td><td class="diff_header" id="to110_128">128</td><td nowrap="nowrap">https://devblogs.nvidia.com/optimizing-recurrent-neural-networks-cudnn-5/).</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_109">109</td><td nowrap="nowrap">Frontends&nbsp;should&nbsp;emit&nbsp;multi-layer&nbsp;RNNs&nbsp;as&nbsp;a&nbsp;series&nbsp;of&nbsp;While&nbsp;operators&nbsp;(with</td><td class="diff_next"></td><td class="diff_header" id="to110_129">129</td><td nowrap="nowrap">Frontends&nbsp;should&nbsp;emit&nbsp;multi-layer&nbsp;RNNs&nbsp;as&nbsp;a&nbsp;series&nbsp;of&nbsp;While&nbsp;operators&nbsp;(with</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_110">110</td><td nowrap="nowrap">time&nbsp;being&nbsp;the&nbsp;inner&nbsp;looping&nbsp;dimension),&nbsp;with&nbsp;each&nbsp;successive&nbsp;layer&nbsp;consuming</td><td class="diff_next"></td><td class="diff_header" id="to110_130">130</td><td nowrap="nowrap">time&nbsp;being&nbsp;the&nbsp;inner&nbsp;looping&nbsp;dimension),&nbsp;with&nbsp;each&nbsp;successive&nbsp;layer&nbsp;consuming</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_111">111</td><td nowrap="nowrap">the&nbsp;scan_outputs&nbsp;from&nbsp;the&nbsp;previous&nbsp;layer,&nbsp;possibly&nbsp;going&nbsp;through&nbsp;several</td><td class="diff_next"></td><td class="diff_header" id="to110_131">131</td><td nowrap="nowrap">the&nbsp;scan_outputs&nbsp;from&nbsp;the&nbsp;previous&nbsp;layer,&nbsp;possibly&nbsp;going&nbsp;through&nbsp;several</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_112">112</td><td nowrap="nowrap">point-wise&nbsp;operators&nbsp;(e.g.&nbsp;dropout,&nbsp;residual&nbsp;connections,&nbsp;linear&nbsp;layer).</td><td class="diff_next"></td><td class="diff_header" id="to110_132">132</td><td nowrap="nowrap">point-wise&nbsp;operators&nbsp;(e.g.&nbsp;dropout,&nbsp;residual&nbsp;connections,&nbsp;linear&nbsp;layer).</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_113">113</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_133">133</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_114">114</td><td nowrap="nowrap">**Attributes**</td><td class="diff_next"></td><td class="diff_header" id="to110_134">134</td><td nowrap="nowrap">**Attributes**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_115">115</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_135">135</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_116">116</td><td nowrap="nowrap">*&nbsp;**body**&nbsp;(required):</td><td class="diff_next"></td><td class="diff_header" id="to110_136">136</td><td nowrap="nowrap">*&nbsp;**body**&nbsp;(required):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_117">117</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;graph&nbsp;run&nbsp;each&nbsp;iteration.&nbsp;It&nbsp;has&nbsp;2+N&nbsp;inputs:&nbsp;(iteration_num,</td><td class="diff_next"></td><td class="diff_header" id="to110_137">137</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;graph&nbsp;run&nbsp;each&nbsp;iteration.&nbsp;It&nbsp;has&nbsp;2+N&nbsp;inputs:&nbsp;(iteration_num,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_118">118</td><td nowrap="nowrap">&nbsp;&nbsp;condition,&nbsp;loop&nbsp;carried&nbsp;dependencies...).&nbsp;It&nbsp;has&nbsp;1+N+K&nbsp;outputs:</td><td class="diff_next"></td><td class="diff_header" id="to110_138">138</td><td nowrap="nowrap">&nbsp;&nbsp;condition,&nbsp;loop&nbsp;carried&nbsp;dependencies...).&nbsp;It&nbsp;has&nbsp;1+N+K&nbsp;outputs:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_119">119</td><td nowrap="nowrap">&nbsp;&nbsp;(condition,&nbsp;loop&nbsp;carried&nbsp;dependencies...,&nbsp;scan_outputs...).&nbsp;Each</td><td class="diff_next"></td><td class="diff_header" id="to110_139">139</td><td nowrap="nowrap">&nbsp;&nbsp;(condition,&nbsp;loop&nbsp;carried&nbsp;dependencies...,&nbsp;scan_outputs...).&nbsp;Each</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_120">120</td><td nowrap="nowrap">&nbsp;&nbsp;scan_output&nbsp;is&nbsp;created&nbsp;by&nbsp;concatenating&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;specified</td><td class="diff_next"></td><td class="diff_header" id="to110_140">140</td><td nowrap="nowrap">&nbsp;&nbsp;scan_output&nbsp;is&nbsp;created&nbsp;by&nbsp;concatenating&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;specified</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_121">121</td><td nowrap="nowrap">&nbsp;&nbsp;output&nbsp;value&nbsp;at&nbsp;the&nbsp;end&nbsp;of&nbsp;each&nbsp;iteration&nbsp;of&nbsp;the&nbsp;loop.&nbsp;It&nbsp;is&nbsp;an</td><td class="diff_next"></td><td class="diff_header" id="to110_141">141</td><td nowrap="nowrap">&nbsp;&nbsp;output&nbsp;value&nbsp;at&nbsp;the&nbsp;end&nbsp;of&nbsp;each&nbsp;iteration&nbsp;of&nbsp;the&nbsp;loop.&nbsp;It&nbsp;is&nbsp;an</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to110__9"></td><td class="diff_header" id="from110_122">122</td><td nowrap="nowrap">&nbsp;&nbsp;error&nbsp;if&nbsp;the&nbsp;dimensions&nbsp;or&nbsp;data&nbsp;type&nbsp;of&nbsp;these&nbsp;scan_outputs&nbsp;change</td><td class="diff_next"></td><td class="diff_header" id="to110_142">142</td><td nowrap="nowrap">&nbsp;&nbsp;error&nbsp;if&nbsp;the&nbsp;dimensions&nbsp;or&nbsp;data&nbsp;type&nbsp;of&nbsp;these&nbsp;scan_outputs&nbsp;change</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_123">123</td><td nowrap="nowrap">&nbsp;&nbsp;across&nbsp;loop&nbsp;iterations.</td><td class="diff_next"></td><td class="diff_header" id="to110_143">143</td><td nowrap="nowrap">&nbsp;&nbsp;across&nbsp;loop&nbsp;iterations.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_124">124</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_144">144</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_125">125</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to110_145">145</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_126">126</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_146">146</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to110__top">t</a></td><td class="diff_header" id="from110_127">127</td><td nowrap="nowrap">Between&nbsp;<span class="diff_chg">3</span>&nbsp;and&nbsp;2147483647&nbsp;inputs.</td><td class="diff_next"><a href="#difflib_chg_to110__top">t</a></td><td class="diff_header" id="to110_147">147</td><td nowrap="nowrap">Between&nbsp;<span class="diff_chg">2</span>&nbsp;and&nbsp;2147483647&nbsp;inputs.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_128">128</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_148">148</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_129">129</td><td nowrap="nowrap">*&nbsp;**M**&nbsp;(optional,&nbsp;heterogeneous)&nbsp;-&nbsp;**I**:</td><td class="diff_next"></td><td class="diff_header" id="to110_149">149</td><td nowrap="nowrap">*&nbsp;**M**&nbsp;(optional,&nbsp;heterogeneous)&nbsp;-&nbsp;**I**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_130">130</td><td nowrap="nowrap">&nbsp;&nbsp;A&nbsp;maximum&nbsp;trip-count&nbsp;for&nbsp;the&nbsp;loop&nbsp;specified&nbsp;at&nbsp;runtime.&nbsp;Optional.</td><td class="diff_next"></td><td class="diff_header" id="to110_150">150</td><td nowrap="nowrap">&nbsp;&nbsp;A&nbsp;maximum&nbsp;trip-count&nbsp;for&nbsp;the&nbsp;loop&nbsp;specified&nbsp;at&nbsp;runtime.&nbsp;Optional.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_131">131</td><td nowrap="nowrap">&nbsp;&nbsp;Pass&nbsp;empty&nbsp;string&nbsp;to&nbsp;skip.</td><td class="diff_next"></td><td class="diff_header" id="to110_151">151</td><td nowrap="nowrap">&nbsp;&nbsp;Pass&nbsp;empty&nbsp;string&nbsp;to&nbsp;skip.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_132">132</td><td nowrap="nowrap">*&nbsp;**cond**&nbsp;(optional,&nbsp;heterogeneous)&nbsp;-&nbsp;**B**:</td><td class="diff_next"></td><td class="diff_header" id="to110_152">152</td><td nowrap="nowrap">*&nbsp;**cond**&nbsp;(optional,&nbsp;heterogeneous)&nbsp;-&nbsp;**B**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_133">133</td><td nowrap="nowrap">&nbsp;&nbsp;A&nbsp;boolean&nbsp;termination&nbsp;condition.&nbsp;Optional.&nbsp;Pass&nbsp;empty&nbsp;string&nbsp;to</td><td class="diff_next"></td><td class="diff_header" id="to110_153">153</td><td nowrap="nowrap">&nbsp;&nbsp;A&nbsp;boolean&nbsp;termination&nbsp;condition.&nbsp;Optional.&nbsp;Pass&nbsp;empty&nbsp;string&nbsp;to</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_134">134</td><td nowrap="nowrap">&nbsp;&nbsp;skip.</td><td class="diff_next"></td><td class="diff_header" id="to110_154">154</td><td nowrap="nowrap">&nbsp;&nbsp;skip.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_135">135</td><td nowrap="nowrap">*&nbsp;**v_initial**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td><td class="diff_next"></td><td class="diff_header" id="to110_155">155</td><td nowrap="nowrap">*&nbsp;**v_initial**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_136">136</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;initial&nbsp;values&nbsp;of&nbsp;any&nbsp;loop-carried&nbsp;dependencies&nbsp;(values&nbsp;that</td><td class="diff_next"></td><td class="diff_header" id="to110_156">156</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;initial&nbsp;values&nbsp;of&nbsp;any&nbsp;loop-carried&nbsp;dependencies&nbsp;(values&nbsp;that</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_137">137</td><td nowrap="nowrap">&nbsp;&nbsp;change&nbsp;across&nbsp;loop&nbsp;iterations)</td><td class="diff_next"></td><td class="diff_header" id="to110_157">157</td><td nowrap="nowrap">&nbsp;&nbsp;change&nbsp;across&nbsp;loop&nbsp;iterations)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_138">138</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_158">158</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_139">139</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to110_159">159</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_140">140</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_160">160</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_141">141</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2147483647&nbsp;outputs.</td><td class="diff_next"></td><td class="diff_header" id="to110_161">161</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2147483647&nbsp;outputs.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_142">142</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_162">162</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_143">143</td><td nowrap="nowrap">*&nbsp;**v_final_and_scan_outputs**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td><td class="diff_next"></td><td class="diff_header" id="to110_163">163</td><td nowrap="nowrap">*&nbsp;**v_final_and_scan_outputs**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_144">144</td><td nowrap="nowrap">&nbsp;&nbsp;Final&nbsp;N&nbsp;loop&nbsp;carried&nbsp;dependency&nbsp;values&nbsp;then&nbsp;K&nbsp;scan_outputs</td><td class="diff_next"></td><td class="diff_header" id="to110_164">164</td><td nowrap="nowrap">&nbsp;&nbsp;Final&nbsp;N&nbsp;loop&nbsp;carried&nbsp;dependency&nbsp;values&nbsp;then&nbsp;K&nbsp;scan_outputs</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_145">145</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_165">165</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_146">146</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to110_166">166</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_147">147</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to110_167">167</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_148">148</td><td nowrap="nowrap">*&nbsp;**V**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to110_168">168</td><td nowrap="nowrap">*&nbsp;**V**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_149">149</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td><td class="diff_next"></td><td class="diff_header" id="to110_169">169</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_150">150</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex128),</td><td class="diff_next"></td><td class="diff_header" id="to110_170">170</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex128),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_151">151</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex64),</td><td class="diff_next"></td><td class="diff_header" id="to110_171">171</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_152">152</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to110_172">172</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_153">153</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to110_173">173</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_154">154</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td><td class="diff_next"></td><td class="diff_header" id="to110_174">174</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_155">155</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td><td class="diff_next"></td><td class="diff_header" id="to110_175">175</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_156">156</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td><td class="diff_next"></td><td class="diff_header" id="to110_176">176</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_157">157</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td><td class="diff_next"></td><td class="diff_header" id="to110_177">177</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_158">158</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td><td class="diff_next"></td><td class="diff_header" id="to110_178">178</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_159">159</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td><td class="diff_next"></td><td class="diff_header" id="to110_179">179</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_160">160</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td><td class="diff_next"></td><td class="diff_header" id="to110_180">180</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_161">161</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td><td class="diff_next"></td><td class="diff_header" id="to110_181">181</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_162">162</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td><td class="diff_next"></td><td class="diff_header" id="to110_182">182</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_163">163</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td><td class="diff_next"></td><td class="diff_header" id="to110_183">183</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_164">164</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to110_184">184</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_165">165</td><td nowrap="nowrap">&nbsp;&nbsp;All&nbsp;Tensor&nbsp;types</td><td class="diff_next"></td><td class="diff_header" id="to110_185">185</td><td nowrap="nowrap">&nbsp;&nbsp;All&nbsp;Tensor&nbsp;types</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_166">166</td><td nowrap="nowrap">*&nbsp;**I**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to110_186">186</td><td nowrap="nowrap">*&nbsp;**I**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_167">167</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64)</td><td class="diff_next"></td><td class="diff_header" id="to110_187">187</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_168">168</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to110_188">188</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_169">169</td><td nowrap="nowrap">&nbsp;&nbsp;tensor&nbsp;of&nbsp;int64,&nbsp;which&nbsp;should&nbsp;be&nbsp;a&nbsp;scalar.</td><td class="diff_next"></td><td class="diff_header" id="to110_189">189</td><td nowrap="nowrap">&nbsp;&nbsp;tensor&nbsp;of&nbsp;int64,&nbsp;which&nbsp;should&nbsp;be&nbsp;a&nbsp;scalar.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_170">170</td><td nowrap="nowrap">*&nbsp;**B**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to110_190">190</td><td nowrap="nowrap">*&nbsp;**B**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_171">171</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool)</td><td class="diff_next"></td><td class="diff_header" id="to110_191">191</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_172">172</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to110_192">192</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from110_173">173</td><td nowrap="nowrap">&nbsp;&nbsp;tensor&nbsp;of&nbsp;bool,&nbsp;which&nbsp;should&nbsp;be&nbsp;a&nbsp;scalar.</td><td class="diff_next"></td><td class="diff_header" id="to110_193">193</td><td nowrap="nowrap">&nbsp;&nbsp;tensor&nbsp;of&nbsp;bool,&nbsp;which&nbsp;should&nbsp;be&nbsp;a&nbsp;scalar.</td></tr>
            </tbody>
        </table>

.. _l-onnx-op-loop-1:

Loop - 1
========

**Version**

* **name**: `Loop (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Loop>`_
* **domain**: **main**
* **since_version**: **1**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 1**.

**Summary**

Generic Looping construct. This loop has multiple termination conditions:

1) Trip count. Iteration count specified at runtime. Set by
   specifying the input M. Optional. Set to empty string to omit.
   Note that a static trip count (specified at graph construction time) can be
   specified by passing in a constant node for input M.
2) Loop termination condition. This is an input to the op that determines
   whether to run the first iteration and also a loop-carried dependency for
   the body graph. The body graph must yield a value for the condition variable,
   whether this input is provided or not.

This table summarizes the operating modes of this operator with equivalent
C-style code:

    Operator inputs defined as (max_trip_count, condition_var).

    input ("", ""):
        for (int i=0; ; ++i) {
          cond = ... // Note this value is ignored, but is required in the body
        }

    input ("", cond) // Note this is analogous to a while loop
        bool cond = ...;
        for (int i=0; cond; ++i) {
          cond = ...;
        }

    input ("", 1) // Note this is analogous to a do-while loop
        bool cond = true
        for (int i=0; cond; ++i) {
          cond = ...;
        }

    input (trip_count, "") // Note this is analogous to a for loop
        int trip_count = ...
        for (int i=0; i < trip_count; ++i) {
          cond = ...; // ignored
        }

    input (trip_count, cond)
        int trip_count = ...;
        bool cond = ...;
        for (int i=0; i < trip_count && cond; ++i) {
          cond = ...;
        }

*Sample usage - cond as well as trip count*

    graph predict-net {
      %a = Constant[value = <Scalar Tensor [3]>]()
      %b = Constant[value = <Scalar Tensor [6]>]()
      %keepgoing = Constant[value = <Scalar Tensor [1]>]()
      %max_trip_count = Constant[value = <Scalar Tensor [10]>]()
      %keepgoing_out, %b_out, %user_defined_vals = Loop[body = <graph body-net>](%max_trip_count, %keepgoing, %b)
      return
    }

    graph body-net (
      %i[INT32, scalar]
      %keepgoing[BOOL, scalar]
      %b[INT32, scalar]
    ) {
      %my_local = Add(%a, %b)
      %b_out = Sub(%a, %b)
      %keepgoing_out = Greater(%my_local, %b_out)
      %user_defined_vals = Add(%b, %b)
      return %keepgoing_out, %b_out, %user_defined_vals
    }

*Sample equivalent C code*

    {
      /* User-defined code (enclosing scope) */
      int a = 3, b = 6;
      bool keepgoing = true; // Analogous to input cond
      /* End user-defined code */

      /* Implicitly-defined code */
      const int max_trip_count = 10; // Analogous to input M
      int user_defined_vals[]; // Imagine this is resizable
      /* End implicitly-defined code */
      for (int i=0; i < max_trip_count && keepgoing; ++i) {
        /* User-defined code (loop body) */
        int my_local = a + b; // Reading values in the enclosing scope is fine
        b = a - b; // writes fine if we specify b as a loop-carried dependency
        keepgoing = my_local > b; // keepgoing is a loop-carried dependency
        user_defined_vals[i] = b + b;
        /* End user-defined code */
      }
      // my_local = 123; // Can't do this. my_local was defined in the body

      // These below values are live-out from the loop and therefore accessible
      b_out; user_defined_vals; keepgoing_out;
    }

There are several things of note in this code snippet:

1) Values from the enclosing scope (i.e. variable a here) are in scope and can
   be referenced in the inputs of the loop.
2) Any variables which you wish to make available in the enclosing scope (i.e.
   the variables b and keepgoing) must be declared as either loop-carried
   dependencies (both at the op inputs and output and at the body net input and
   output) or scan_outputs.
3) Values created in the body cannot be accessed in the enclosing scope.

Note that the semantics of this op support "diagonal" or "wavefront" execution.
(See Step 3 here for an example:
https://devblogs.nvidia.com/optimizing-recurrent-neural-networks-cudnn-5/).
Frontends should emit multi-layer RNNs as a series of While operators (with
time being the inner looping dimension), with each successive layer consuming
the scan_outputs from the previous layer, possibly going through several
point-wise operators (e.g. dropout, residual connections, linear layer).

**Attributes**

* **body** (required):
  The graph run each iteration. It has 2+N inputs: (iteration_num,
  condition, loop carried dependencies...). It has 1+N+K outputs:
  (condition, loop carried dependencies..., scan_outputs...). Each
  scan_output is created by concatenating the value of the specified
  output value at the end of each iteration of the loop. It is an
  error if the dimensions or data type of these scan_outputs change
  across loop iterations.

**Inputs**

Between 3 and 2147483647 inputs.

* **M** (optional, heterogeneous) - **I**:
  A maximum trip-count for the loop specified at runtime. Optional.
  Pass empty string to skip.
* **cond** (optional, heterogeneous) - **B**:
  A boolean termination condition. Optional. Pass empty string to
  skip.
* **v_initial** (variadic) - **V**:
  The initial values of any loop-carried dependencies (values that
  change across loop iterations)

**Outputs**

Between 1 and 2147483647 outputs.

* **v_final_and_scan_outputs** (variadic) - **V**:
  Final N loop carried dependency values then K scan_outputs

**Type Constraints**

* **V** in (
  tensor(bool),
  tensor(complex128),
  tensor(complex64),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  All Tensor types
* **I** in (
  tensor(int64)
  ):
  tensor of int64, which should be a scalar.
* **B** in (
  tensor(bool)
  ):
  tensor of bool, which should be a scalar.
