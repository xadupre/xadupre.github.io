
.. _l-onnx-doc-Compress:

========
Compress
========

.. contents::
    :local:


.. _l-onnx-op-compress-11:

Compress - 11
=============

**Version**

* **name**: `Compress (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Compress>`_
* **domain**: **main**
* **since_version**: **11**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 11**.

**Summary**

Selects slices from an input tensor along a given axis where condition evaluates to True for each axis index.
In case axis is not provided, input is flattened before elements are selected.
Compress behaves like numpy.compress: https://docs.scipy.org/doc/numpy/reference/generated/numpy.compress.html

**Attributes**

* **axis**:
  (Optional) Axis along which to take slices. If not specified, input
  is flattened before elements being selected. Negative value means
  counting dimensions from the back. Accepted range is [-r, r-1] where
  r = rank(input).

**Inputs**

* **input** (heterogeneous) - **T**:
  Tensor of rank r >= 1.
* **condition** (heterogeneous) - **T1**:
  Rank 1 tensor of booleans to indicate which slices or data elements
  to be selected. Its length can be less than the input length along
  the axis or the flattened input size if axis is not specified. In
  such cases data slices or elements exceeding the condition length
  are discarded.

**Outputs**

* **output** (heterogeneous) - **T**:
  Tensor of rank r if axis is specified. Otherwise output is a Tensor
  of rank 1.

**Type Constraints**

* **T** in (
  tensor(bool),
  tensor(complex128),
  tensor(complex64),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain input and output types to all tensor types.
* **T1** in (
  tensor(bool)
  ):
  Constrain to boolean tensors.

**Examples**

**_compress_0**

::

    node = onnx.helper.make_node(
        "Compress",
        inputs=["input", "condition"],
        outputs=["output"],
        axis=0,
    )
    input = np.array([[1, 2], [3, 4], [5, 6]]).astype(np.float32)
    condition = np.array([0, 1, 1])
    output = np.compress(condition, input, axis=0)
    # print(output)
    # [[ 3.  4.]
    # [ 5.  6.]]

    expect(
        node,
        inputs=[input, condition.astype(bool)],
        outputs=[output],
        name="test_compress_0",
    )

**_compress_1**

::

    node = onnx.helper.make_node(
        "Compress",
        inputs=["input", "condition"],
        outputs=["output"],
        axis=1,
    )
    input = np.array([[1, 2], [3, 4], [5, 6]]).astype(np.float32)
    condition = np.array([0, 1])
    output = np.compress(condition, input, axis=1)
    # print(output)
    # [[ 2.]
    # [ 4.]
    # [ 6.]]

    expect(
        node,
        inputs=[input, condition.astype(bool)],
        outputs=[output],
        name="test_compress_1",
    )

**_compress_default_axis**

::

    node = onnx.helper.make_node(
        "Compress",
        inputs=["input", "condition"],
        outputs=["output"],
    )
    input = np.array([[1, 2], [3, 4], [5, 6]]).astype(np.float32)
    condition = np.array([0, 1, 0, 0, 1])
    output = np.compress(condition, input)
    # print(output)
    # [ 2., 5.]

    expect(
        node,
        inputs=[input, condition.astype(bool)],
        outputs=[output],
        name="test_compress_default_axis",
    )

**_compress_negative_axis**

::

    node = onnx.helper.make_node(
        "Compress",
        inputs=["input", "condition"],
        outputs=["output"],
        axis=-1,
    )
    input = np.array([[1, 2], [3, 4], [5, 6]]).astype(np.float32)
    condition = np.array([0, 1])
    output = np.compress(condition, input, axis=-1)
    # print(output)
    # [[ 2.]
    # [ 4.]
    # [ 6.]]
    expect(
        node,
        inputs=[input, condition.astype(bool)],
        outputs=[output],
        name="test_compress_negative_axis",
    )

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to30__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next"><a href="#difflib_chg_to30__0">f</a></td><td class="diff_header" id="from30_1">1</td><td nowrap="nowrap">Selects&nbsp;slices&nbsp;from&nbsp;an&nbsp;input&nbsp;tensor&nbsp;along&nbsp;a&nbsp;given&nbsp;axis&nbsp;where&nbsp;condition&nbsp;evaluates&nbsp;to&nbsp;True&nbsp;for&nbsp;each&nbsp;axis&nbsp;index.</td><td class="diff_next"><a href="#difflib_chg_to30__0">f</a></td><td class="diff_header" id="to30_1">1</td><td nowrap="nowrap">Selects&nbsp;slices&nbsp;from&nbsp;an&nbsp;input&nbsp;tensor&nbsp;along&nbsp;a&nbsp;given&nbsp;axis&nbsp;where&nbsp;condition&nbsp;evaluates&nbsp;to&nbsp;True&nbsp;for&nbsp;each&nbsp;axis&nbsp;index.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_2">2</td><td nowrap="nowrap">In&nbsp;case&nbsp;axis&nbsp;is&nbsp;not&nbsp;provided,&nbsp;input&nbsp;is&nbsp;flattened&nbsp;before&nbsp;elements&nbsp;are&nbsp;selected.</td><td class="diff_next"></td><td class="diff_header" id="to30_2">2</td><td nowrap="nowrap">In&nbsp;case&nbsp;axis&nbsp;is&nbsp;not&nbsp;provided,&nbsp;input&nbsp;is&nbsp;flattened&nbsp;before&nbsp;elements&nbsp;are&nbsp;selected.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_3">3</td><td nowrap="nowrap">Compress&nbsp;behaves&nbsp;like&nbsp;numpy.compress:&nbsp;https://docs.scipy.org/doc/numpy/reference/generated/numpy.compress.html</td><td class="diff_next"></td><td class="diff_header" id="to30_3">3</td><td nowrap="nowrap">Compress&nbsp;behaves&nbsp;like&nbsp;numpy.compress:&nbsp;https://docs.scipy.org/doc/numpy/reference/generated/numpy.compress.html</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to30__0"></td><td class="diff_header" id="from30_4">4</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to30_4">4</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_5">5</td><td nowrap="nowrap">**Attributes**</td><td class="diff_next"></td><td class="diff_header" id="to30_5">5</td><td nowrap="nowrap">**Attributes**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_6">6</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to30_6">6</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_7">7</td><td nowrap="nowrap">*&nbsp;**axis**:</td><td class="diff_next"></td><td class="diff_header" id="to30_7">7</td><td nowrap="nowrap">*&nbsp;**axis**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_8">8</td><td nowrap="nowrap">&nbsp;&nbsp;(Optional)&nbsp;Axis&nbsp;along&nbsp;which&nbsp;to&nbsp;take&nbsp;slices.&nbsp;If&nbsp;not&nbsp;specified,&nbsp;input</td><td class="diff_next"></td><td class="diff_header" id="to30_8">8</td><td nowrap="nowrap">&nbsp;&nbsp;(Optional)&nbsp;Axis&nbsp;along&nbsp;which&nbsp;to&nbsp;take&nbsp;slices.&nbsp;If&nbsp;not&nbsp;specified,&nbsp;input</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to30__1">n</a></td><td class="diff_header" id="from30_9">9</td><td nowrap="nowrap">&nbsp;&nbsp;is&nbsp;flattened&nbsp;before&nbsp;elements&nbsp;being&nbsp;selected.</td><td class="diff_next"><a href="#difflib_chg_to30__1">n</a></td><td class="diff_header" id="to30_9">9</td><td nowrap="nowrap">&nbsp;&nbsp;is&nbsp;flattened&nbsp;before&nbsp;elements&nbsp;being&nbsp;selected.<span class="diff_add">&nbsp;Negative&nbsp;value&nbsp;means</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to30_10">10</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;counting&nbsp;dimensions&nbsp;from&nbsp;the&nbsp;back.&nbsp;Accepted&nbsp;range&nbsp;is&nbsp;[-r,&nbsp;r-1]&nbsp;where</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to30_11">11</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;r&nbsp;=&nbsp;rank(input).</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_10">10</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to30_12">12</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_11">11</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to30_13">13</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to30__1"></td><td class="diff_header" id="from30_12">12</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to30_14">14</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_13">13</td><td nowrap="nowrap">*&nbsp;**input**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to30_15">15</td><td nowrap="nowrap">*&nbsp;**input**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_14">14</td><td nowrap="nowrap">&nbsp;&nbsp;Tensor&nbsp;of&nbsp;rank&nbsp;r&nbsp;&gt;=&nbsp;1.</td><td class="diff_next"></td><td class="diff_header" id="to30_16">16</td><td nowrap="nowrap">&nbsp;&nbsp;Tensor&nbsp;of&nbsp;rank&nbsp;r&nbsp;&gt;=&nbsp;1.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_15">15</td><td nowrap="nowrap">*&nbsp;**condition**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T1**:</td><td class="diff_next"></td><td class="diff_header" id="to30_17">17</td><td nowrap="nowrap">*&nbsp;**condition**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T1**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_16">16</td><td nowrap="nowrap">&nbsp;&nbsp;Rank&nbsp;1&nbsp;tensor&nbsp;of&nbsp;booleans&nbsp;to&nbsp;indicate&nbsp;which&nbsp;slices&nbsp;or&nbsp;data&nbsp;elements</td><td class="diff_next"></td><td class="diff_header" id="to30_18">18</td><td nowrap="nowrap">&nbsp;&nbsp;Rank&nbsp;1&nbsp;tensor&nbsp;of&nbsp;booleans&nbsp;to&nbsp;indicate&nbsp;which&nbsp;slices&nbsp;or&nbsp;data&nbsp;elements</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to30__top">t</a></td><td class="diff_header" id="from30_17">17</td><td nowrap="nowrap">&nbsp;&nbsp;to&nbsp;be&nbsp;selected.&nbsp;Its&nbsp;length&nbsp;can&nbsp;be&nbsp;less&nbsp;than&nbsp;the&nbsp;input&nbsp;length&nbsp;alon<span class="diff_chg">e</span></td><td class="diff_next"><a href="#difflib_chg_to30__top">t</a></td><td class="diff_header" id="to30_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;to&nbsp;be&nbsp;selected.&nbsp;Its&nbsp;length&nbsp;can&nbsp;be&nbsp;less&nbsp;than&nbsp;the&nbsp;input&nbsp;length&nbsp;alon<span class="diff_chg">g</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_18">18</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;axis&nbsp;or&nbsp;the&nbsp;flattened&nbsp;input&nbsp;size&nbsp;if&nbsp;axis&nbsp;is&nbsp;not&nbsp;specified.&nbsp;In</td><td class="diff_next"></td><td class="diff_header" id="to30_20">20</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;axis&nbsp;or&nbsp;the&nbsp;flattened&nbsp;input&nbsp;size&nbsp;if&nbsp;axis&nbsp;is&nbsp;not&nbsp;specified.&nbsp;In</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;such&nbsp;cases&nbsp;data&nbsp;slices&nbsp;or&nbsp;elements&nbsp;exceeding&nbsp;the&nbsp;condition&nbsp;length</td><td class="diff_next"></td><td class="diff_header" id="to30_21">21</td><td nowrap="nowrap">&nbsp;&nbsp;such&nbsp;cases&nbsp;data&nbsp;slices&nbsp;or&nbsp;elements&nbsp;exceeding&nbsp;the&nbsp;condition&nbsp;length</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_20">20</td><td nowrap="nowrap">&nbsp;&nbsp;are&nbsp;discarded.</td><td class="diff_next"></td><td class="diff_header" id="to30_22">22</td><td nowrap="nowrap">&nbsp;&nbsp;are&nbsp;discarded.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_21">21</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to30_23">23</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_22">22</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to30_24">24</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_23">23</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to30_25">25</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_24">24</td><td nowrap="nowrap">*&nbsp;**output**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to30_26">26</td><td nowrap="nowrap">*&nbsp;**output**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;Tensor&nbsp;of&nbsp;rank&nbsp;r&nbsp;if&nbsp;axis&nbsp;is&nbsp;specified.&nbsp;Otherwise&nbsp;output&nbsp;is&nbsp;a&nbsp;Tensor</td><td class="diff_next"></td><td class="diff_header" id="to30_27">27</td><td nowrap="nowrap">&nbsp;&nbsp;Tensor&nbsp;of&nbsp;rank&nbsp;r&nbsp;if&nbsp;axis&nbsp;is&nbsp;specified.&nbsp;Otherwise&nbsp;output&nbsp;is&nbsp;a&nbsp;Tensor</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_26">26</td><td nowrap="nowrap">&nbsp;&nbsp;of&nbsp;rank&nbsp;1.</td><td class="diff_next"></td><td class="diff_header" id="to30_28">28</td><td nowrap="nowrap">&nbsp;&nbsp;of&nbsp;rank&nbsp;1.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_27">27</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to30_29">29</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_28">28</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to30_30">30</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_29">29</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to30_31">31</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_30">30</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to30_32">32</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_31">31</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td><td class="diff_next"></td><td class="diff_header" id="to30_33">33</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_32">32</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex128),</td><td class="diff_next"></td><td class="diff_header" id="to30_34">34</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex128),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_33">33</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex64),</td><td class="diff_next"></td><td class="diff_header" id="to30_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_34">34</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to30_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to30_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td><td class="diff_next"></td><td class="diff_header" id="to30_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td><td class="diff_next"></td><td class="diff_header" id="to30_39">39</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td><td class="diff_next"></td><td class="diff_header" id="to30_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_39">39</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td><td class="diff_next"></td><td class="diff_header" id="to30_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td><td class="diff_next"></td><td class="diff_header" id="to30_42">42</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td><td class="diff_next"></td><td class="diff_header" id="to30_43">43</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_42">42</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td><td class="diff_next"></td><td class="diff_header" id="to30_44">44</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_43">43</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td><td class="diff_next"></td><td class="diff_header" id="to30_45">45</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_44">44</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td><td class="diff_next"></td><td class="diff_header" id="to30_46">46</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_45">45</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td><td class="diff_next"></td><td class="diff_header" id="to30_47">47</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_46">46</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to30_48">48</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_47">47</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;and&nbsp;output&nbsp;types&nbsp;to&nbsp;all&nbsp;tensor&nbsp;types.</td><td class="diff_next"></td><td class="diff_header" id="to30_49">49</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;and&nbsp;output&nbsp;types&nbsp;to&nbsp;all&nbsp;tensor&nbsp;types.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_48">48</td><td nowrap="nowrap">*&nbsp;**T1**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to30_50">50</td><td nowrap="nowrap">*&nbsp;**T1**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_49">49</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool)</td><td class="diff_next"></td><td class="diff_header" id="to30_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to30_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from30_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;to&nbsp;boolean&nbsp;tensors.</td><td class="diff_next"></td><td class="diff_header" id="to30_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;to&nbsp;boolean&nbsp;tensors.</td></tr>
            </tbody>
        </table>

.. _l-onnx-op-compress-9:

Compress - 9
============

**Version**

* **name**: `Compress (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Compress>`_
* **domain**: **main**
* **since_version**: **9**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: False

This version of the operator has been available
**since version 9**.

**Summary**

Selects slices from an input tensor along a given axis where condition evaluates to True for each axis index.
In case axis is not provided, input is flattened before elements are selected.
Compress behaves like numpy.compress: https://docs.scipy.org/doc/numpy/reference/generated/numpy.compress.html

**Attributes**

* **axis**:
  (Optional) Axis along which to take slices. If not specified, input
  is flattened before elements being selected.

**Inputs**

* **input** (heterogeneous) - **T**:
  Tensor of rank r >= 1.
* **condition** (heterogeneous) - **T1**:
  Rank 1 tensor of booleans to indicate which slices or data elements
  to be selected. Its length can be less than the input length alone
  the axis or the flattened input size if axis is not specified. In
  such cases data slices or elements exceeding the condition length
  are discarded.

**Outputs**

* **output** (heterogeneous) - **T**:
  Tensor of rank r if axis is specified. Otherwise output is a Tensor
  of rank 1.

**Type Constraints**

* **T** in (
  tensor(bool),
  tensor(complex128),
  tensor(complex64),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain input and output types to all tensor types.
* **T1** in (
  tensor(bool)
  ):
  Constrain to boolean tensors.
