
.. _l-onnx-docai.onnx.ml-TreeEnsembleRegressor:

==================================
ai.onnx.ml - TreeEnsembleRegressor
==================================

.. contents::
    :local:


.. _l-onnx-opai-onnx-ml-treeensembleregressor-3:
TreeEnsembleRegressor - 3 (ai.onnx.ml)
======================================
**Version**
* **name**: `TreeEnsembleRegressor (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators-ml.md#ai.onnx.ml.TreeEnsembleRegressor>`_
* **domain**: **ai.onnx.ml**
* **since_version**: **3**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 3 of domain ai.onnx.ml**.

**Summary**

Tree Ensemble regressor.  Returns the regressed values for each input in N.

All args with nodes_ are fields of a tuple of tree nodes, and
it is assumed they are the same length, and an index i will decode the
tuple across these inputs.  Each node id can appear only once
for each tree id.

All fields prefixed with target_ are tuples of votes at the leaves.

A leaf may have multiple votes, where each vote is weighted by
the associated target_weights index.

All fields ending with <i>_as_tensor</i> can be used instead of the
same parameter without the suffix if the element type is double and not float.
All trees must have their node ids start at 0 and increment by 1.

Mode enum is BRANCH_LEQ, BRANCH_LT, BRANCH_GTE, BRANCH_GT, BRANCH_EQ, BRANCH_NEQ, LEAF

**Attributes**
* **aggregate_function**:
  Defines how to aggregate leaf values within a target. <br>One of
  'AVERAGE,' 'SUM,' 'MIN,' 'MAX.'
* **base_values**:
  Base values for classification, added to final class score; the size
  must be the same as the classes or can be left unassigned (assumed
  0)
* **base_values_as_tensor**:
  Base values for classification, added to final class score; the size
  must be the same as the classes or can be left unassigned (assumed
  0)
* **n_targets**:
  The total number of targets.
* **nodes_falsenodeids**:
  Child node if expression is false
* **nodes_featureids**:
  Feature id for each node.
* **nodes_hitrates**:
  Popularity of each node, used for performance and may be omitted.
* **nodes_hitrates_as_tensor**:
  Popularity of each node, used for performance and may be omitted.
* **nodes_missing_value_tracks_true**:
  For each node, define what to do in the presence of a NaN: use the
  'true' (if the attribute value is 1) or 'false' (if the attribute
  value is 0) branch based on the value in this array.<br>This
  attribute may be left undefined and the defalt value is false (0)
  for all nodes.
* **nodes_modes**:
  The node kind, that is, the comparison to make at the node. There is
  no comparison to make at a leaf node.<br>One of 'BRANCH_LEQ',
  'BRANCH_LT', 'BRANCH_GTE', 'BRANCH_GT', 'BRANCH_EQ', 'BRANCH_NEQ',
  'LEAF'
* **nodes_nodeids**:
  Node id for each node. Node ids must restart at zero for each tree
  and increase sequentially.
* **nodes_treeids**:
  Tree id for each node.
* **nodes_truenodeids**:
  Child node if expression is true
* **nodes_values**:
  Thresholds to do the splitting on for each node.
* **nodes_values_as_tensor**:
  Thresholds to do the splitting on for each node.
* **post_transform**:
  Indicates the transform to apply to the score. <br>One of 'NONE,'
  'SOFTMAX,' 'LOGISTIC,' 'SOFTMAX_ZERO,' or 'PROBIT'
* **target_ids**:
  The index of the target that each weight is for
* **target_nodeids**:
  The node id of each weight
* **target_treeids**:
  The id of the tree that each node is in.
* **target_weights**:
  The weight for each target
* **target_weights_as_tensor**:
  The weight for each target

**Inputs**

* **X** (heterogeneous) - **T**:
  Input of shape [N,F]

**Outputs**

* **Y** (heterogeneous) - **tensor(float)**:
  N classes

**Type Constraints**
* **T** in (
  tensor(double),
  tensor(float),
  tensor(int32),
  tensor(int64)
  ):
  The input type must be a tensor of a numeric type.

**Examples**

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to249__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next"><a href="#difflib_chg_to249__0">f</a></td><td class="diff_header" id="from249_1">1</td><td nowrap="nowrap">Tree&nbsp;Ensemble&nbsp;regressor.&nbsp;&nbsp;Returns&nbsp;the&nbsp;regressed&nbsp;values&nbsp;for&nbsp;each&nbsp;input&nbsp;in&nbsp;N.</td><td class="diff_next"><a href="#difflib_chg_to249__0">f</a></td><td class="diff_header" id="to249_1">1</td><td nowrap="nowrap">Tree&nbsp;Ensemble&nbsp;regressor.&nbsp;&nbsp;Returns&nbsp;the&nbsp;regressed&nbsp;values&nbsp;for&nbsp;each&nbsp;input&nbsp;in&nbsp;N.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_2">2</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to249_2">2</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_3">3</td><td nowrap="nowrap">All&nbsp;args&nbsp;with&nbsp;nodes_&nbsp;are&nbsp;fields&nbsp;of&nbsp;a&nbsp;tuple&nbsp;of&nbsp;tree&nbsp;nodes,&nbsp;and</td><td class="diff_next"></td><td class="diff_header" id="to249_3">3</td><td nowrap="nowrap">All&nbsp;args&nbsp;with&nbsp;nodes_&nbsp;are&nbsp;fields&nbsp;of&nbsp;a&nbsp;tuple&nbsp;of&nbsp;tree&nbsp;nodes,&nbsp;and</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_4">4</td><td nowrap="nowrap">it&nbsp;is&nbsp;assumed&nbsp;they&nbsp;are&nbsp;the&nbsp;same&nbsp;length,&nbsp;and&nbsp;an&nbsp;index&nbsp;i&nbsp;will&nbsp;decode&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to249_4">4</td><td nowrap="nowrap">it&nbsp;is&nbsp;assumed&nbsp;they&nbsp;are&nbsp;the&nbsp;same&nbsp;length,&nbsp;and&nbsp;an&nbsp;index&nbsp;i&nbsp;will&nbsp;decode&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_5">5</td><td nowrap="nowrap">tuple&nbsp;across&nbsp;these&nbsp;inputs.&nbsp;&nbsp;Each&nbsp;node&nbsp;id&nbsp;can&nbsp;appear&nbsp;only&nbsp;once</td><td class="diff_next"></td><td class="diff_header" id="to249_5">5</td><td nowrap="nowrap">tuple&nbsp;across&nbsp;these&nbsp;inputs.&nbsp;&nbsp;Each&nbsp;node&nbsp;id&nbsp;can&nbsp;appear&nbsp;only&nbsp;once</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_6">6</td><td nowrap="nowrap">for&nbsp;each&nbsp;tree&nbsp;id.</td><td class="diff_next"></td><td class="diff_header" id="to249_6">6</td><td nowrap="nowrap">for&nbsp;each&nbsp;tree&nbsp;id.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_7">7</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to249_7">7</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to249__0"></td><td class="diff_header" id="from249_8">8</td><td nowrap="nowrap">All&nbsp;fields&nbsp;prefixed&nbsp;with&nbsp;target_&nbsp;are&nbsp;tuples&nbsp;of&nbsp;votes&nbsp;at&nbsp;the&nbsp;leaves.</td><td class="diff_next"></td><td class="diff_header" id="to249_8">8</td><td nowrap="nowrap">All&nbsp;fields&nbsp;prefixed&nbsp;with&nbsp;target_&nbsp;are&nbsp;tuples&nbsp;of&nbsp;votes&nbsp;at&nbsp;the&nbsp;leaves.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_9">9</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to249_9">9</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_10">10</td><td nowrap="nowrap">A&nbsp;leaf&nbsp;may&nbsp;have&nbsp;multiple&nbsp;votes,&nbsp;where&nbsp;each&nbsp;vote&nbsp;is&nbsp;weighted&nbsp;by</td><td class="diff_next"></td><td class="diff_header" id="to249_10">10</td><td nowrap="nowrap">A&nbsp;leaf&nbsp;may&nbsp;have&nbsp;multiple&nbsp;votes,&nbsp;where&nbsp;each&nbsp;vote&nbsp;is&nbsp;weighted&nbsp;by</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_11">11</td><td nowrap="nowrap">the&nbsp;associated&nbsp;target_weights&nbsp;index.</td><td class="diff_next"></td><td class="diff_header" id="to249_11">11</td><td nowrap="nowrap">the&nbsp;associated&nbsp;target_weights&nbsp;index.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_12">12</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to249_12">12</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to249__1">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to249__1">n</a></td><td class="diff_header" id="to249_13">13</td><td nowrap="nowrap"><span class="diff_add">All&nbsp;fields&nbsp;ending&nbsp;with&nbsp;&lt;i&gt;_as_tensor&lt;/i&gt;&nbsp;can&nbsp;be&nbsp;used&nbsp;instead&nbsp;of&nbsp;the</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to249_14">14</td><td nowrap="nowrap"><span class="diff_add">same&nbsp;parameter&nbsp;without&nbsp;the&nbsp;suffix&nbsp;if&nbsp;the&nbsp;element&nbsp;type&nbsp;is&nbsp;double&nbsp;and&nbsp;not&nbsp;float.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_13">13</td><td nowrap="nowrap">All&nbsp;trees&nbsp;must&nbsp;have&nbsp;their&nbsp;node&nbsp;ids&nbsp;start&nbsp;at&nbsp;0&nbsp;and&nbsp;increment&nbsp;by&nbsp;1.</td><td class="diff_next"></td><td class="diff_header" id="to249_15">15</td><td nowrap="nowrap">All&nbsp;trees&nbsp;must&nbsp;have&nbsp;their&nbsp;node&nbsp;ids&nbsp;start&nbsp;at&nbsp;0&nbsp;and&nbsp;increment&nbsp;by&nbsp;1.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_14">14</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to249_16">16</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_15">15</td><td nowrap="nowrap">Mode&nbsp;enum&nbsp;is&nbsp;BRANCH_LEQ,&nbsp;BRANCH_LT,&nbsp;BRANCH_GTE,&nbsp;BRANCH_GT,&nbsp;BRANCH_EQ,&nbsp;BRANCH_NEQ,&nbsp;LEAF</td><td class="diff_next"></td><td class="diff_header" id="to249_17">17</td><td nowrap="nowrap">Mode&nbsp;enum&nbsp;is&nbsp;BRANCH_LEQ,&nbsp;BRANCH_LT,&nbsp;BRANCH_GTE,&nbsp;BRANCH_GT,&nbsp;BRANCH_EQ,&nbsp;BRANCH_NEQ,&nbsp;LEAF</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_16">16</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to249_18">18</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_17">17</td><td nowrap="nowrap">**Attributes**</td><td class="diff_next"></td><td class="diff_header" id="to249_19">19</td><td nowrap="nowrap">**Attributes**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_18">18</td><td nowrap="nowrap">*&nbsp;**aggregate_function**:</td><td class="diff_next"></td><td class="diff_header" id="to249_20">20</td><td nowrap="nowrap">*&nbsp;**aggregate_function**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;Defines&nbsp;how&nbsp;to&nbsp;aggregate&nbsp;leaf&nbsp;values&nbsp;within&nbsp;a&nbsp;target.&nbsp;&lt;br&gt;One&nbsp;of</td><td class="diff_next"></td><td class="diff_header" id="to249_21">21</td><td nowrap="nowrap">&nbsp;&nbsp;Defines&nbsp;how&nbsp;to&nbsp;aggregate&nbsp;leaf&nbsp;values&nbsp;within&nbsp;a&nbsp;target.&nbsp;&lt;br&gt;One&nbsp;of</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to249__1"></td><td class="diff_header" id="from249_20">20</td><td nowrap="nowrap">&nbsp;&nbsp;'AVERAGE,'&nbsp;'SUM,'&nbsp;'MIN,'&nbsp;'MAX.'</td><td class="diff_next"></td><td class="diff_header" id="to249_22">22</td><td nowrap="nowrap">&nbsp;&nbsp;'AVERAGE,'&nbsp;'SUM,'&nbsp;'MIN,'&nbsp;'MAX.'</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_21">21</td><td nowrap="nowrap">*&nbsp;**base_values**:</td><td class="diff_next"></td><td class="diff_header" id="to249_23">23</td><td nowrap="nowrap">*&nbsp;**base_values**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_22">22</td><td nowrap="nowrap">&nbsp;&nbsp;Base&nbsp;values&nbsp;for&nbsp;classification,&nbsp;added&nbsp;to&nbsp;final&nbsp;class&nbsp;score;&nbsp;the&nbsp;size</td><td class="diff_next"></td><td class="diff_header" id="to249_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;Base&nbsp;values&nbsp;for&nbsp;classification,&nbsp;added&nbsp;to&nbsp;final&nbsp;class&nbsp;score;&nbsp;the&nbsp;size</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_23">23</td><td nowrap="nowrap">&nbsp;&nbsp;must&nbsp;be&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;classes&nbsp;or&nbsp;can&nbsp;be&nbsp;left&nbsp;unassigned&nbsp;(assumed</td><td class="diff_next"></td><td class="diff_header" id="to249_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;must&nbsp;be&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;classes&nbsp;or&nbsp;can&nbsp;be&nbsp;left&nbsp;unassigned&nbsp;(assumed</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;0)</td><td class="diff_next"></td><td class="diff_header" id="to249_26">26</td><td nowrap="nowrap">&nbsp;&nbsp;0)</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to249__2">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to249__2">n</a></td><td class="diff_header" id="to249_27">27</td><td nowrap="nowrap"><span class="diff_add">*&nbsp;**base_values_as_tensor**:</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to249_28">28</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;Base&nbsp;values&nbsp;for&nbsp;classification,&nbsp;added&nbsp;to&nbsp;final&nbsp;class&nbsp;score;&nbsp;the&nbsp;size</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to249_29">29</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;must&nbsp;be&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;classes&nbsp;or&nbsp;can&nbsp;be&nbsp;left&nbsp;unassigned&nbsp;(assumed</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to249_30">30</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;0)</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_25">25</td><td nowrap="nowrap">*&nbsp;**n_targets**:</td><td class="diff_next"></td><td class="diff_header" id="to249_31">31</td><td nowrap="nowrap">*&nbsp;**n_targets**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_26">26</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;total&nbsp;number&nbsp;of&nbsp;targets.</td><td class="diff_next"></td><td class="diff_header" id="to249_32">32</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;total&nbsp;number&nbsp;of&nbsp;targets.</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to249__2"></td><td class="diff_header" id="from249_27">27</td><td nowrap="nowrap">*&nbsp;**nodes_falsenodeids**:</td><td class="diff_next"></td><td class="diff_header" id="to249_33">33</td><td nowrap="nowrap">*&nbsp;**nodes_falsenodeids**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_28">28</td><td nowrap="nowrap">&nbsp;&nbsp;Child&nbsp;node&nbsp;if&nbsp;expression&nbsp;is&nbsp;false</td><td class="diff_next"></td><td class="diff_header" id="to249_34">34</td><td nowrap="nowrap">&nbsp;&nbsp;Child&nbsp;node&nbsp;if&nbsp;expression&nbsp;is&nbsp;false</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_29">29</td><td nowrap="nowrap">*&nbsp;**nodes_featureids**:</td><td class="diff_next"></td><td class="diff_header" id="to249_35">35</td><td nowrap="nowrap">*&nbsp;**nodes_featureids**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;Feature&nbsp;id&nbsp;for&nbsp;each&nbsp;node.</td><td class="diff_next"></td><td class="diff_header" id="to249_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;Feature&nbsp;id&nbsp;for&nbsp;each&nbsp;node.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_31">31</td><td nowrap="nowrap">*&nbsp;**nodes_hitrates**:</td><td class="diff_next"></td><td class="diff_header" id="to249_37">37</td><td nowrap="nowrap">*&nbsp;**nodes_hitrates**:</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to249__3">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to249__3">n</a></td><td class="diff_header" id="to249_38">38</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;Popularity&nbsp;of&nbsp;each&nbsp;node,&nbsp;used&nbsp;for&nbsp;performance&nbsp;and&nbsp;may&nbsp;be&nbsp;omitted.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to249_39">39</td><td nowrap="nowrap"><span class="diff_add">*&nbsp;**nodes_hitrates_as_tensor**:</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_32">32</td><td nowrap="nowrap">&nbsp;&nbsp;Popularity&nbsp;of&nbsp;each&nbsp;node,&nbsp;used&nbsp;for&nbsp;performance&nbsp;and&nbsp;may&nbsp;be&nbsp;omitted.</td><td class="diff_next"></td><td class="diff_header" id="to249_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;Popularity&nbsp;of&nbsp;each&nbsp;node,&nbsp;used&nbsp;for&nbsp;performance&nbsp;and&nbsp;may&nbsp;be&nbsp;omitted.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_33">33</td><td nowrap="nowrap">*&nbsp;**nodes_missing_value_tracks_true**:</td><td class="diff_next"></td><td class="diff_header" id="to249_41">41</td><td nowrap="nowrap">*&nbsp;**nodes_missing_value_tracks_true**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_34">34</td><td nowrap="nowrap">&nbsp;&nbsp;For&nbsp;each&nbsp;node,&nbsp;define&nbsp;what&nbsp;to&nbsp;do&nbsp;in&nbsp;the&nbsp;presence&nbsp;of&nbsp;a&nbsp;NaN:&nbsp;use&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to249_42">42</td><td nowrap="nowrap">&nbsp;&nbsp;For&nbsp;each&nbsp;node,&nbsp;define&nbsp;what&nbsp;to&nbsp;do&nbsp;in&nbsp;the&nbsp;presence&nbsp;of&nbsp;a&nbsp;NaN:&nbsp;use&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;'true'&nbsp;(if&nbsp;the&nbsp;attribute&nbsp;value&nbsp;is&nbsp;1)&nbsp;or&nbsp;'false'&nbsp;(if&nbsp;the&nbsp;attribute</td><td class="diff_next"></td><td class="diff_header" id="to249_43">43</td><td nowrap="nowrap">&nbsp;&nbsp;'true'&nbsp;(if&nbsp;the&nbsp;attribute&nbsp;value&nbsp;is&nbsp;1)&nbsp;or&nbsp;'false'&nbsp;(if&nbsp;the&nbsp;attribute</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;value&nbsp;is&nbsp;0)&nbsp;branch&nbsp;based&nbsp;on&nbsp;the&nbsp;value&nbsp;in&nbsp;this&nbsp;array.&lt;br&gt;This</td><td class="diff_next"></td><td class="diff_header" id="to249_44">44</td><td nowrap="nowrap">&nbsp;&nbsp;value&nbsp;is&nbsp;0)&nbsp;branch&nbsp;based&nbsp;on&nbsp;the&nbsp;value&nbsp;in&nbsp;this&nbsp;array.&lt;br&gt;This</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;attribute&nbsp;may&nbsp;be&nbsp;left&nbsp;undefined&nbsp;and&nbsp;the&nbsp;defalt&nbsp;value&nbsp;is&nbsp;false&nbsp;(0)</td><td class="diff_next"></td><td class="diff_header" id="to249_45">45</td><td nowrap="nowrap">&nbsp;&nbsp;attribute&nbsp;may&nbsp;be&nbsp;left&nbsp;undefined&nbsp;and&nbsp;the&nbsp;defalt&nbsp;value&nbsp;is&nbsp;false&nbsp;(0)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;for&nbsp;all&nbsp;nodes.</td><td class="diff_next"></td><td class="diff_header" id="to249_46">46</td><td nowrap="nowrap">&nbsp;&nbsp;for&nbsp;all&nbsp;nodes.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_39">39</td><td nowrap="nowrap">*&nbsp;**nodes_modes**:</td><td class="diff_next"></td><td class="diff_header" id="to249_47">47</td><td nowrap="nowrap">*&nbsp;**nodes_modes**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;node&nbsp;kind,&nbsp;that&nbsp;is,&nbsp;the&nbsp;comparison&nbsp;to&nbsp;make&nbsp;at&nbsp;the&nbsp;node.&nbsp;There&nbsp;is</td><td class="diff_next"></td><td class="diff_header" id="to249_48">48</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;node&nbsp;kind,&nbsp;that&nbsp;is,&nbsp;the&nbsp;comparison&nbsp;to&nbsp;make&nbsp;at&nbsp;the&nbsp;node.&nbsp;There&nbsp;is</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;no&nbsp;comparison&nbsp;to&nbsp;make&nbsp;at&nbsp;a&nbsp;leaf&nbsp;node.&lt;br&gt;One&nbsp;of&nbsp;'BRANCH_LEQ',</td><td class="diff_next"></td><td class="diff_header" id="to249_49">49</td><td nowrap="nowrap">&nbsp;&nbsp;no&nbsp;comparison&nbsp;to&nbsp;make&nbsp;at&nbsp;a&nbsp;leaf&nbsp;node.&lt;br&gt;One&nbsp;of&nbsp;'BRANCH_LEQ',</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_42">42</td><td nowrap="nowrap">&nbsp;&nbsp;'BRANCH_LT',&nbsp;'BRANCH_GTE',&nbsp;'BRANCH_GT',&nbsp;'BRANCH_EQ',&nbsp;'BRANCH_NEQ',</td><td class="diff_next"></td><td class="diff_header" id="to249_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;'BRANCH_LT',&nbsp;'BRANCH_GTE',&nbsp;'BRANCH_GT',&nbsp;'BRANCH_EQ',&nbsp;'BRANCH_NEQ',</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_43">43</td><td nowrap="nowrap">&nbsp;&nbsp;'LEAF'</td><td class="diff_next"></td><td class="diff_header" id="to249_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;'LEAF'</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_44">44</td><td nowrap="nowrap">*&nbsp;**nodes_nodeids**:</td><td class="diff_next"></td><td class="diff_header" id="to249_52">52</td><td nowrap="nowrap">*&nbsp;**nodes_nodeids**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_45">45</td><td nowrap="nowrap">&nbsp;&nbsp;Node&nbsp;id&nbsp;for&nbsp;each&nbsp;node.&nbsp;Node&nbsp;ids&nbsp;must&nbsp;restart&nbsp;at&nbsp;zero&nbsp;for&nbsp;each&nbsp;tree</td><td class="diff_next"></td><td class="diff_header" id="to249_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;Node&nbsp;id&nbsp;for&nbsp;each&nbsp;node.&nbsp;Node&nbsp;ids&nbsp;must&nbsp;restart&nbsp;at&nbsp;zero&nbsp;for&nbsp;each&nbsp;tree</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_46">46</td><td nowrap="nowrap">&nbsp;&nbsp;and&nbsp;increase&nbsp;sequentially.</td><td class="diff_next"></td><td class="diff_header" id="to249_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;and&nbsp;increase&nbsp;sequentially.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_47">47</td><td nowrap="nowrap">*&nbsp;**nodes_treeids**:</td><td class="diff_next"></td><td class="diff_header" id="to249_55">55</td><td nowrap="nowrap">*&nbsp;**nodes_treeids**:</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to249__3"></td><td class="diff_header" id="from249_48">48</td><td nowrap="nowrap">&nbsp;&nbsp;Tree&nbsp;id&nbsp;for&nbsp;each&nbsp;node.</td><td class="diff_next"></td><td class="diff_header" id="to249_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;Tree&nbsp;id&nbsp;for&nbsp;each&nbsp;node.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_49">49</td><td nowrap="nowrap">*&nbsp;**nodes_truenodeids**:</td><td class="diff_next"></td><td class="diff_header" id="to249_57">57</td><td nowrap="nowrap">*&nbsp;**nodes_truenodeids**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;Child&nbsp;node&nbsp;if&nbsp;expression&nbsp;is&nbsp;true</td><td class="diff_next"></td><td class="diff_header" id="to249_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;Child&nbsp;node&nbsp;if&nbsp;expression&nbsp;is&nbsp;true</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_51">51</td><td nowrap="nowrap">*&nbsp;**nodes_values**:</td><td class="diff_next"></td><td class="diff_header" id="to249_59">59</td><td nowrap="nowrap">*&nbsp;**nodes_values**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;Thresholds&nbsp;to&nbsp;do&nbsp;the&nbsp;splitting&nbsp;on&nbsp;for&nbsp;each&nbsp;node.</td><td class="diff_next"></td><td class="diff_header" id="to249_60">60</td><td nowrap="nowrap">&nbsp;&nbsp;Thresholds&nbsp;to&nbsp;do&nbsp;the&nbsp;splitting&nbsp;on&nbsp;for&nbsp;each&nbsp;node.</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to249__4">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to249__4">n</a></td><td class="diff_header" id="to249_61">61</td><td nowrap="nowrap"><span class="diff_add">*&nbsp;**nodes_values_as_tensor**:</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to249_62">62</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;Thresholds&nbsp;to&nbsp;do&nbsp;the&nbsp;splitting&nbsp;on&nbsp;for&nbsp;each&nbsp;node.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_53">53</td><td nowrap="nowrap">*&nbsp;**post_transform**:</td><td class="diff_next"></td><td class="diff_header" id="to249_63">63</td><td nowrap="nowrap">*&nbsp;**post_transform**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;Indicates&nbsp;the&nbsp;transform&nbsp;to&nbsp;apply&nbsp;to&nbsp;the&nbsp;score.&nbsp;&lt;br&gt;One&nbsp;of&nbsp;'NONE,'</td><td class="diff_next"></td><td class="diff_header" id="to249_64">64</td><td nowrap="nowrap">&nbsp;&nbsp;Indicates&nbsp;the&nbsp;transform&nbsp;to&nbsp;apply&nbsp;to&nbsp;the&nbsp;score.&nbsp;&lt;br&gt;One&nbsp;of&nbsp;'NONE,'</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;'SOFTMAX,'&nbsp;'LOGISTIC,'&nbsp;'SOFTMAX_ZERO,'&nbsp;or&nbsp;'PROBIT'</td><td class="diff_next"></td><td class="diff_header" id="to249_65">65</td><td nowrap="nowrap">&nbsp;&nbsp;'SOFTMAX,'&nbsp;'LOGISTIC,'&nbsp;'SOFTMAX_ZERO,'&nbsp;or&nbsp;'PROBIT'</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_56">56</td><td nowrap="nowrap">*&nbsp;**target_ids**:</td><td class="diff_next"></td><td class="diff_header" id="to249_66">66</td><td nowrap="nowrap">*&nbsp;**target_ids**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_57">57</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;index&nbsp;of&nbsp;the&nbsp;target&nbsp;that&nbsp;each&nbsp;weight&nbsp;is&nbsp;for</td><td class="diff_next"></td><td class="diff_header" id="to249_67">67</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;index&nbsp;of&nbsp;the&nbsp;target&nbsp;that&nbsp;each&nbsp;weight&nbsp;is&nbsp;for</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to249__4"></td><td class="diff_header" id="from249_58">58</td><td nowrap="nowrap">*&nbsp;**target_nodeids**:</td><td class="diff_next"></td><td class="diff_header" id="to249_68">68</td><td nowrap="nowrap">*&nbsp;**target_nodeids**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_59">59</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;node&nbsp;id&nbsp;of&nbsp;each&nbsp;weight</td><td class="diff_next"></td><td class="diff_header" id="to249_69">69</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;node&nbsp;id&nbsp;of&nbsp;each&nbsp;weight</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_60">60</td><td nowrap="nowrap">*&nbsp;**target_treeids**:</td><td class="diff_next"></td><td class="diff_header" id="to249_70">70</td><td nowrap="nowrap">*&nbsp;**target_treeids**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_61">61</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;id&nbsp;of&nbsp;the&nbsp;tree&nbsp;that&nbsp;each&nbsp;node&nbsp;is&nbsp;in.</td><td class="diff_next"></td><td class="diff_header" id="to249_71">71</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;id&nbsp;of&nbsp;the&nbsp;tree&nbsp;that&nbsp;each&nbsp;node&nbsp;is&nbsp;in.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_62">62</td><td nowrap="nowrap">*&nbsp;**target_weights**:</td><td class="diff_next"></td><td class="diff_header" id="to249_72">72</td><td nowrap="nowrap">*&nbsp;**target_weights**:</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to249__top">t</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to249__top">t</a></td><td class="diff_header" id="to249_73">73</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;The&nbsp;weight&nbsp;for&nbsp;each&nbsp;target</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to249_74">74</td><td nowrap="nowrap"><span class="diff_add">*&nbsp;**target_weights_as_tensor**:</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_63">63</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;weight&nbsp;for&nbsp;each&nbsp;target</td><td class="diff_next"></td><td class="diff_header" id="to249_75">75</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;weight&nbsp;for&nbsp;each&nbsp;target</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_64">64</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to249_76">76</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_65">65</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to249_77">77</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_66">66</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to249_78">78</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_67">67</td><td nowrap="nowrap">*&nbsp;**X**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to249_79">79</td><td nowrap="nowrap">*&nbsp;**X**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_68">68</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;of&nbsp;shape&nbsp;[N,F]</td><td class="diff_next"></td><td class="diff_header" id="to249_80">80</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;of&nbsp;shape&nbsp;[N,F]</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_69">69</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to249_81">81</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_70">70</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to249_82">82</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_71">71</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to249_83">83</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_72">72</td><td nowrap="nowrap">*&nbsp;**Y**&nbsp;(heterogeneous)&nbsp;-&nbsp;**tensor(float)**:</td><td class="diff_next"></td><td class="diff_header" id="to249_84">84</td><td nowrap="nowrap">*&nbsp;**Y**&nbsp;(heterogeneous)&nbsp;-&nbsp;**tensor(float)**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_73">73</td><td nowrap="nowrap">&nbsp;&nbsp;N&nbsp;classes</td><td class="diff_next"></td><td class="diff_header" id="to249_85">85</td><td nowrap="nowrap">&nbsp;&nbsp;N&nbsp;classes</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_74">74</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to249_86">86</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_75">75</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to249_87">87</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_76">76</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to249_88">88</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_77">77</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to249_89">89</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_78">78</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to249_90">90</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_79">79</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td><td class="diff_next"></td><td class="diff_header" id="to249_91">91</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_80">80</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64)</td><td class="diff_next"></td><td class="diff_header" id="to249_92">92</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_81">81</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to249_93">93</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from249_82">82</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;input&nbsp;type&nbsp;must&nbsp;be&nbsp;a&nbsp;tensor&nbsp;of&nbsp;a&nbsp;numeric&nbsp;type.</td><td class="diff_next"></td><td class="diff_header" id="to249_94">94</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;input&nbsp;type&nbsp;must&nbsp;be&nbsp;a&nbsp;tensor&nbsp;of&nbsp;a&nbsp;numeric&nbsp;type.</td></tr>
            </tbody>
        </table>

.. _l-onnx-opai-onnx-ml-treeensembleregressor-1:
TreeEnsembleRegressor - 1 (ai.onnx.ml)
======================================
**Version**
* **name**: `TreeEnsembleRegressor (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators-ml.md#ai.onnx.ml.TreeEnsembleRegressor>`_
* **domain**: **ai.onnx.ml**
* **since_version**: **1**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: False

This version of the operator has been available
**since version 1 of domain ai.onnx.ml**.

**Summary**

Tree Ensemble regressor.  Returns the regressed values for each input in N.

All args with nodes_ are fields of a tuple of tree nodes, and
it is assumed they are the same length, and an index i will decode the
tuple across these inputs.  Each node id can appear only once
for each tree id.

All fields prefixed with target_ are tuples of votes at the leaves.

A leaf may have multiple votes, where each vote is weighted by
the associated target_weights index.

All trees must have their node ids start at 0 and increment by 1.

Mode enum is BRANCH_LEQ, BRANCH_LT, BRANCH_GTE, BRANCH_GT, BRANCH_EQ, BRANCH_NEQ, LEAF

**Attributes**
* **aggregate_function**:
  Defines how to aggregate leaf values within a target. <br>One of
  'AVERAGE,' 'SUM,' 'MIN,' 'MAX.'
* **base_values**:
  Base values for classification, added to final class score; the size
  must be the same as the classes or can be left unassigned (assumed
  0)
* **n_targets**:
  The total number of targets.
* **nodes_falsenodeids**:
  Child node if expression is false
* **nodes_featureids**:
  Feature id for each node.
* **nodes_hitrates**:
  Popularity of each node, used for performance and may be omitted.
* **nodes_missing_value_tracks_true**:
  For each node, define what to do in the presence of a NaN: use the
  'true' (if the attribute value is 1) or 'false' (if the attribute
  value is 0) branch based on the value in this array.<br>This
  attribute may be left undefined and the defalt value is false (0)
  for all nodes.
* **nodes_modes**:
  The node kind, that is, the comparison to make at the node. There is
  no comparison to make at a leaf node.<br>One of 'BRANCH_LEQ',
  'BRANCH_LT', 'BRANCH_GTE', 'BRANCH_GT', 'BRANCH_EQ', 'BRANCH_NEQ',
  'LEAF'
* **nodes_nodeids**:
  Node id for each node. Node ids must restart at zero for each tree
  and increase sequentially.
* **nodes_treeids**:
  Tree id for each node.
* **nodes_truenodeids**:
  Child node if expression is true
* **nodes_values**:
  Thresholds to do the splitting on for each node.
* **post_transform**:
  Indicates the transform to apply to the score. <br>One of 'NONE,'
  'SOFTMAX,' 'LOGISTIC,' 'SOFTMAX_ZERO,' or 'PROBIT'
* **target_ids**:
  The index of the target that each weight is for
* **target_nodeids**:
  The node id of each weight
* **target_treeids**:
  The id of the tree that each node is in.
* **target_weights**:
  The weight for each target

**Inputs**

* **X** (heterogeneous) - **T**:
  Input of shape [N,F]

**Outputs**

* **Y** (heterogeneous) - **tensor(float)**:
  N classes

**Type Constraints**
* **T** in (
  tensor(double),
  tensor(float),
  tensor(int32),
  tensor(int64)
  ):
  The input type must be a tensor of a numeric type.
