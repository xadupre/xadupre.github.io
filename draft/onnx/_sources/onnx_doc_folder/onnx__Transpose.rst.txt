
.. _l-onnx-doc-Transpose:

=========
Transpose
=========

.. contents::
    :local:


.. _l-onnx-op-transpose-13:

Transpose - 13
==============

**Version**

* **name**: `Transpose (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Transpose>`_
* **domain**: **main**
* **since_version**: **13**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 13**.

**Summary**

Transpose the input tensor similar to numpy.transpose. For example, when
perm=(1, 0, 2), given an input tensor of shape (1, 2, 3), the output shape
will be (2, 1, 3).

**Attributes**

* **perm**:
  A list of integers. By default, reverse the dimensions, otherwise
  permute the axes according to the values given.

**Inputs**

* **data** (heterogeneous) - **T**:
  An input tensor.

**Outputs**

* **transposed** (heterogeneous) - **T**:
  Transposed output.

**Type Constraints**

* **T** in (
  tensor(bfloat16),
  tensor(bool),
  tensor(complex128),
  tensor(complex64),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain input and output types to all tensor types.

**Examples**

**_default**

::

    shape = (2, 3, 4)
    data = np.random.random_sample(shape).astype(np.float32)

    node = onnx.helper.make_node(
        "Transpose", inputs=["data"], outputs=["transposed"]
    )

    transposed = np.transpose(data)
    expect(node, inputs=[data], outputs=[transposed], name="test_transpose_default")

**_all_permutations**

::

    shape = (2, 3, 4)
    data = np.random.random_sample(shape).astype(np.float32)
    permutations = list(itertools.permutations(np.arange(len(shape))))

    for i in range(len(permutations)):
        node = onnx.helper.make_node(
            "Transpose",
            inputs=["data"],
            outputs=["transposed"],
            perm=permutations[i],
        )
        transposed = np.transpose(data, permutations[i])
        expect(
            node,
            inputs=[data],
            outputs=[transposed],
            name="test_transpose_all_permutations_" + str(i),
        )

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to239__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next"><a href="#difflib_chg_to239__0">f</a></td><td class="diff_header" id="from239_1">1</td><td nowrap="nowrap">Transpose&nbsp;the&nbsp;input&nbsp;tensor&nbsp;similar&nbsp;to&nbsp;numpy.transpose.&nbsp;For&nbsp;example,&nbsp;when</td><td class="diff_next"><a href="#difflib_chg_to239__0">f</a></td><td class="diff_header" id="to239_1">1</td><td nowrap="nowrap">Transpose&nbsp;the&nbsp;input&nbsp;tensor&nbsp;similar&nbsp;to&nbsp;numpy.transpose.&nbsp;For&nbsp;example,&nbsp;when</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_2">2</td><td nowrap="nowrap">perm=(1,&nbsp;0,&nbsp;2),&nbsp;given&nbsp;an&nbsp;input&nbsp;tensor&nbsp;of&nbsp;shape&nbsp;(1,&nbsp;2,&nbsp;3),&nbsp;the&nbsp;output&nbsp;shape</td><td class="diff_next"></td><td class="diff_header" id="to239_2">2</td><td nowrap="nowrap">perm=(1,&nbsp;0,&nbsp;2),&nbsp;given&nbsp;an&nbsp;input&nbsp;tensor&nbsp;of&nbsp;shape&nbsp;(1,&nbsp;2,&nbsp;3),&nbsp;the&nbsp;output&nbsp;shape</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_3">3</td><td nowrap="nowrap">will&nbsp;be&nbsp;(2,&nbsp;1,&nbsp;3).</td><td class="diff_next"></td><td class="diff_header" id="to239_3">3</td><td nowrap="nowrap">will&nbsp;be&nbsp;(2,&nbsp;1,&nbsp;3).</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_4">4</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to239_4">4</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_5">5</td><td nowrap="nowrap">**Attributes**</td><td class="diff_next"></td><td class="diff_header" id="to239_5">5</td><td nowrap="nowrap">**Attributes**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_6">6</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to239_6">6</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_7">7</td><td nowrap="nowrap">*&nbsp;**perm**:</td><td class="diff_next"></td><td class="diff_header" id="to239_7">7</td><td nowrap="nowrap">*&nbsp;**perm**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_8">8</td><td nowrap="nowrap">&nbsp;&nbsp;A&nbsp;list&nbsp;of&nbsp;integers.&nbsp;By&nbsp;default,&nbsp;reverse&nbsp;the&nbsp;dimensions,&nbsp;otherwise</td><td class="diff_next"></td><td class="diff_header" id="to239_8">8</td><td nowrap="nowrap">&nbsp;&nbsp;A&nbsp;list&nbsp;of&nbsp;integers.&nbsp;By&nbsp;default,&nbsp;reverse&nbsp;the&nbsp;dimensions,&nbsp;otherwise</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_9">9</td><td nowrap="nowrap">&nbsp;&nbsp;permute&nbsp;the&nbsp;axes&nbsp;according&nbsp;to&nbsp;the&nbsp;values&nbsp;given.</td><td class="diff_next"></td><td class="diff_header" id="to239_9">9</td><td nowrap="nowrap">&nbsp;&nbsp;permute&nbsp;the&nbsp;axes&nbsp;according&nbsp;to&nbsp;the&nbsp;values&nbsp;given.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_10">10</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to239_10">10</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_11">11</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to239_11">11</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_12">12</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to239_12">12</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_13">13</td><td nowrap="nowrap">*&nbsp;**data**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to239_13">13</td><td nowrap="nowrap">*&nbsp;**data**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_14">14</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;input&nbsp;tensor.</td><td class="diff_next"></td><td class="diff_header" id="to239_14">14</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;input&nbsp;tensor.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_15">15</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to239_15">15</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_16">16</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to239_16">16</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_17">17</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to239_17">17</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_18">18</td><td nowrap="nowrap">*&nbsp;**transposed**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to239_18">18</td><td nowrap="nowrap">*&nbsp;**transposed**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to239__0"></td><td class="diff_header" id="from239_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;Transposed&nbsp;output.</td><td class="diff_next"></td><td class="diff_header" id="to239_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;Transposed&nbsp;output.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_20">20</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to239_20">20</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_21">21</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to239_21">21</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_22">22</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to239_22">22</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_23">23</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to239_23">23</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to239__top">t</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to239__top">t</a></td><td class="diff_header" id="to239_24">24</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;tensor(bfloat16),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td><td class="diff_next"></td><td class="diff_header" id="to239_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex128),</td><td class="diff_next"></td><td class="diff_header" id="to239_26">26</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex128),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_26">26</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex64),</td><td class="diff_next"></td><td class="diff_header" id="to239_27">27</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_27">27</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to239_28">28</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_28">28</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to239_29">29</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_29">29</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td><td class="diff_next"></td><td class="diff_header" id="to239_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td><td class="diff_next"></td><td class="diff_header" id="to239_31">31</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_31">31</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td><td class="diff_next"></td><td class="diff_header" id="to239_32">32</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_32">32</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td><td class="diff_next"></td><td class="diff_header" id="to239_33">33</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_33">33</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td><td class="diff_next"></td><td class="diff_header" id="to239_34">34</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_34">34</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td><td class="diff_next"></td><td class="diff_header" id="to239_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td><td class="diff_next"></td><td class="diff_header" id="to239_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td><td class="diff_next"></td><td class="diff_header" id="to239_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td><td class="diff_next"></td><td class="diff_header" id="to239_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td><td class="diff_next"></td><td class="diff_header" id="to239_39">39</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_39">39</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to239_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from239_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;and&nbsp;output&nbsp;types&nbsp;to&nbsp;all&nbsp;tensor&nbsp;types.</td><td class="diff_next"></td><td class="diff_header" id="to239_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;and&nbsp;output&nbsp;types&nbsp;to&nbsp;all&nbsp;tensor&nbsp;types.</td></tr>
            </tbody>
        </table>

.. _l-onnx-op-transpose-1:

Transpose - 1
=============

**Version**

* **name**: `Transpose (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Transpose>`_
* **domain**: **main**
* **since_version**: **1**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 1**.

**Summary**

Transpose the input tensor similar to numpy.transpose. For example, when
perm=(1, 0, 2), given an input tensor of shape (1, 2, 3), the output shape
will be (2, 1, 3).

**Attributes**

* **perm**:
  A list of integers. By default, reverse the dimensions, otherwise
  permute the axes according to the values given.

**Inputs**

* **data** (heterogeneous) - **T**:
  An input tensor.

**Outputs**

* **transposed** (heterogeneous) - **T**:
  Transposed output.

**Type Constraints**

* **T** in (
  tensor(bool),
  tensor(complex128),
  tensor(complex64),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain input and output types to all tensor types.
