
.. _l-onnx-doc-CumSum:

======
CumSum
======

.. contents::
    :local:


.. _l-onnx-op-cumsum-14:

CumSum - 14
===========

**Version**

* **name**: `CumSum (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#CumSum>`_
* **domain**: **main**
* **since_version**: **14**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 14**.

**Summary**

Performs cumulative sum of the input elements along the given axis.
By default, it will do the sum inclusively meaning the first element is copied as is.
Through an `exclusive` attribute, this behavior can change to exclude the first element.
It can also perform summation in the opposite direction of the axis. For that, set `reverse` attribute to 1.

Example:
::

    input_x = [1, 2, 3]
    axis=0
    output = [1, 3, 6]
    exclusive=1
    output = [0, 1, 3]
    exclusive=0
    reverse=1
    output = [6, 5, 3]
    exclusive=1
    reverse=1
    output = [5, 3, 0]

**Attributes**

* **exclusive**:
  If set to 1 will return exclusive sum in which the top element is
  not included. In other terms, if set to 1, the j-th output element
  would be the sum of the first (j-1) elements. Otherwise, it would be
  the sum of the first j elements.
* **reverse**:
  If set to 1 will perform the sums in reverse direction.

**Inputs**

* **x** (heterogeneous) - **T**:
  An input tensor that is to be processed.
* **axis** (heterogeneous) - **T2**:
  A 0-D tensor. Must be in the range [-rank(x), rank(x)-1]. Negative
  value means counting dimensions from the back.

**Outputs**

* **y** (heterogeneous) - **T**:
  Output tensor of the same type as 'x' with cumulative sums of the
  x's elements

**Type Constraints**

* **T** in (
  tensor(bfloat16),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int32),
  tensor(int64),
  tensor(uint32),
  tensor(uint64)
  ):
  Constrain input and output types to high-precision numeric tensors.
* **T2** in (
  tensor(int32),
  tensor(int64)
  ):
  axis tensor can be int32 or int64 only

**Examples**

**_cumsum_1d**

::

    node = onnx.helper.make_node("CumSum", inputs=["x", "axis"], outputs=["y"])
    x = np.array([1.0, 2.0, 3.0, 4.0, 5.0]).astype(np.float64)
    axis = np.int32(0)
    y = np.array([1.0, 3.0, 6.0, 10.0, 15.0]).astype(np.float64)
    expect(node, inputs=[x, axis], outputs=[y], name="test_cumsum_1d")

**_cumsum_1d_exclusive**

::

    node = onnx.helper.make_node(
        "CumSum", inputs=["x", "axis"], outputs=["y"], exclusive=1
    )
    x = np.array([1.0, 2.0, 3.0, 4.0, 5.0]).astype(np.float64)
    axis = np.int32(0)
    y = np.array([0.0, 1.0, 3.0, 6.0, 10.0]).astype(np.float64)
    expect(node, inputs=[x, axis], outputs=[y], name="test_cumsum_1d_exclusive")

**_cumsum_1d_reverse**

::

    node = onnx.helper.make_node(
        "CumSum", inputs=["x", "axis"], outputs=["y"], reverse=1
    )
    x = np.array([1.0, 2.0, 3.0, 4.0, 5.0]).astype(np.float64)
    axis = np.int32(0)
    y = np.array([15.0, 14.0, 12.0, 9.0, 5.0]).astype(np.float64)
    expect(node, inputs=[x, axis], outputs=[y], name="test_cumsum_1d_reverse")

**_cumsum_1d_reverse_exclusive**

::

    node = onnx.helper.make_node(
        "CumSum", inputs=["x", "axis"], outputs=["y"], reverse=1, exclusive=1
    )
    x = np.array([1.0, 2.0, 3.0, 4.0, 5.0]).astype(np.float64)
    axis = np.int32(0)
    y = np.array([14.0, 12.0, 9.0, 5.0, 0.0]).astype(np.float64)
    expect(
        node, inputs=[x, axis], outputs=[y], name="test_cumsum_1d_reverse_exclusive"
    )

**_cumsum_2d_axis_0**

::

    node = onnx.helper.make_node(
        "CumSum",
        inputs=["x", "axis"],
        outputs=["y"],
    )
    x = np.array([1.0, 2.0, 3.0, 4.0, 5.0, 6.0]).astype(np.float64).reshape((2, 3))
    axis = np.int32(0)
    y = np.array([1.0, 2.0, 3.0, 5.0, 7.0, 9.0]).astype(np.float64).reshape((2, 3))
    expect(node, inputs=[x, axis], outputs=[y], name="test_cumsum_2d_axis_0")

**_cumsum_2d_axis_1**

::

    node = onnx.helper.make_node(
        "CumSum",
        inputs=["x", "axis"],
        outputs=["y"],
    )
    x = np.array([1.0, 2.0, 3.0, 4.0, 5.0, 6.0]).astype(np.float64).reshape((2, 3))
    axis = np.int32(1)
    y = np.array([1.0, 3.0, 6.0, 4.0, 9.0, 15.0]).astype(np.float64).reshape((2, 3))
    expect(node, inputs=[x, axis], outputs=[y], name="test_cumsum_2d_axis_1")

**_cumsum_2d_negative_axis**

::

    node = onnx.helper.make_node(
        "CumSum",
        inputs=["x", "axis"],
        outputs=["y"],
    )
    x = np.array([1.0, 2.0, 3.0, 4.0, 5.0, 6.0]).astype(np.float64).reshape((2, 3))
    axis = np.int32(-1)
    y = np.array([1.0, 3.0, 6.0, 4.0, 9.0, 15.0]).astype(np.float64).reshape((2, 3))
    expect(node, inputs=[x, axis], outputs=[y], name="test_cumsum_2d_negative_axis")

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to40__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next"><a href="#difflib_chg_to40__0">f</a></td><td class="diff_header" id="from40_1">1</td><td nowrap="nowrap">Performs&nbsp;cumulative&nbsp;sum&nbsp;of&nbsp;the&nbsp;input&nbsp;elements&nbsp;along&nbsp;the&nbsp;given&nbsp;axis.</td><td class="diff_next"><a href="#difflib_chg_to40__0">f</a></td><td class="diff_header" id="to40_1">1</td><td nowrap="nowrap">Performs&nbsp;cumulative&nbsp;sum&nbsp;of&nbsp;the&nbsp;input&nbsp;elements&nbsp;along&nbsp;the&nbsp;given&nbsp;axis.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_2">2</td><td nowrap="nowrap">By&nbsp;default,&nbsp;it&nbsp;will&nbsp;do&nbsp;the&nbsp;sum&nbsp;inclusively&nbsp;meaning&nbsp;the&nbsp;first&nbsp;element&nbsp;is&nbsp;copied&nbsp;as&nbsp;is.</td><td class="diff_next"></td><td class="diff_header" id="to40_2">2</td><td nowrap="nowrap">By&nbsp;default,&nbsp;it&nbsp;will&nbsp;do&nbsp;the&nbsp;sum&nbsp;inclusively&nbsp;meaning&nbsp;the&nbsp;first&nbsp;element&nbsp;is&nbsp;copied&nbsp;as&nbsp;is.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_3">3</td><td nowrap="nowrap">Through&nbsp;an&nbsp;exclusive&nbsp;attribute,&nbsp;this&nbsp;behavior&nbsp;can&nbsp;change&nbsp;to&nbsp;exclude&nbsp;the&nbsp;first&nbsp;element.</td><td class="diff_next"></td><td class="diff_header" id="to40_3">3</td><td nowrap="nowrap">Through&nbsp;an&nbsp;exclusive&nbsp;attribute,&nbsp;this&nbsp;behavior&nbsp;can&nbsp;change&nbsp;to&nbsp;exclude&nbsp;the&nbsp;first&nbsp;element.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_4">4</td><td nowrap="nowrap">It&nbsp;can&nbsp;also&nbsp;perform&nbsp;summation&nbsp;in&nbsp;the&nbsp;opposite&nbsp;direction&nbsp;of&nbsp;the&nbsp;axis.&nbsp;For&nbsp;that,&nbsp;set&nbsp;reverse&nbsp;attribute&nbsp;to&nbsp;1.</td><td class="diff_next"></td><td class="diff_header" id="to40_4">4</td><td nowrap="nowrap">It&nbsp;can&nbsp;also&nbsp;perform&nbsp;summation&nbsp;in&nbsp;the&nbsp;opposite&nbsp;direction&nbsp;of&nbsp;the&nbsp;axis.&nbsp;For&nbsp;that,&nbsp;set&nbsp;reverse&nbsp;attribute&nbsp;to&nbsp;1.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_5">5</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to40_5">5</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_6">6</td><td nowrap="nowrap">Example:</td><td class="diff_next"></td><td class="diff_header" id="to40_6">6</td><td nowrap="nowrap">Example:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_7">7</td><td nowrap="nowrap">::</td><td class="diff_next"></td><td class="diff_header" id="to40_7">7</td><td nowrap="nowrap">::</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_8">8</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to40_8">8</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_9">9</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input_x&nbsp;=&nbsp;[1,&nbsp;2,&nbsp;3]</td><td class="diff_next"></td><td class="diff_header" id="to40_9">9</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;input_x&nbsp;=&nbsp;[1,&nbsp;2,&nbsp;3]</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_10">10</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;axis=0</td><td class="diff_next"></td><td class="diff_header" id="to40_10">10</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;axis=0</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_11">11</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;output&nbsp;=&nbsp;[1,&nbsp;3,&nbsp;6]</td><td class="diff_next"></td><td class="diff_header" id="to40_11">11</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;output&nbsp;=&nbsp;[1,&nbsp;3,&nbsp;6]</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_12">12</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;exclusive=1</td><td class="diff_next"></td><td class="diff_header" id="to40_12">12</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;exclusive=1</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_13">13</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;output&nbsp;=&nbsp;[0,&nbsp;1,&nbsp;3]</td><td class="diff_next"></td><td class="diff_header" id="to40_13">13</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;output&nbsp;=&nbsp;[0,&nbsp;1,&nbsp;3]</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_14">14</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;exclusive=0</td><td class="diff_next"></td><td class="diff_header" id="to40_14">14</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;exclusive=0</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_15">15</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;reverse=1</td><td class="diff_next"></td><td class="diff_header" id="to40_15">15</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;reverse=1</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_16">16</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;output&nbsp;=&nbsp;[6,&nbsp;5,&nbsp;3]</td><td class="diff_next"></td><td class="diff_header" id="to40_16">16</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;output&nbsp;=&nbsp;[6,&nbsp;5,&nbsp;3]</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_17">17</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;exclusive=1</td><td class="diff_next"></td><td class="diff_header" id="to40_17">17</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;exclusive=1</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_18">18</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;reverse=1</td><td class="diff_next"></td><td class="diff_header" id="to40_18">18</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;reverse=1</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;output&nbsp;=&nbsp;[5,&nbsp;3,&nbsp;0]</td><td class="diff_next"></td><td class="diff_header" id="to40_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;output&nbsp;=&nbsp;[5,&nbsp;3,&nbsp;0]</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_20">20</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to40_20">20</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_21">21</td><td nowrap="nowrap">**Attributes**</td><td class="diff_next"></td><td class="diff_header" id="to40_21">21</td><td nowrap="nowrap">**Attributes**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_22">22</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to40_22">22</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_23">23</td><td nowrap="nowrap">*&nbsp;**exclusive**:</td><td class="diff_next"></td><td class="diff_header" id="to40_23">23</td><td nowrap="nowrap">*&nbsp;**exclusive**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;If&nbsp;set&nbsp;to&nbsp;1&nbsp;will&nbsp;return&nbsp;exclusive&nbsp;sum&nbsp;in&nbsp;which&nbsp;the&nbsp;top&nbsp;element&nbsp;is</td><td class="diff_next"></td><td class="diff_header" id="to40_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;If&nbsp;set&nbsp;to&nbsp;1&nbsp;will&nbsp;return&nbsp;exclusive&nbsp;sum&nbsp;in&nbsp;which&nbsp;the&nbsp;top&nbsp;element&nbsp;is</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;not&nbsp;included.&nbsp;In&nbsp;other&nbsp;terms,&nbsp;if&nbsp;set&nbsp;to&nbsp;1,&nbsp;the&nbsp;j-th&nbsp;output&nbsp;element</td><td class="diff_next"></td><td class="diff_header" id="to40_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;not&nbsp;included.&nbsp;In&nbsp;other&nbsp;terms,&nbsp;if&nbsp;set&nbsp;to&nbsp;1,&nbsp;the&nbsp;j-th&nbsp;output&nbsp;element</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_26">26</td><td nowrap="nowrap">&nbsp;&nbsp;would&nbsp;be&nbsp;the&nbsp;sum&nbsp;of&nbsp;the&nbsp;first&nbsp;(j-1)&nbsp;elements.&nbsp;Otherwise,&nbsp;it&nbsp;would&nbsp;be</td><td class="diff_next"></td><td class="diff_header" id="to40_26">26</td><td nowrap="nowrap">&nbsp;&nbsp;would&nbsp;be&nbsp;the&nbsp;sum&nbsp;of&nbsp;the&nbsp;first&nbsp;(j-1)&nbsp;elements.&nbsp;Otherwise,&nbsp;it&nbsp;would&nbsp;be</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_27">27</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;sum&nbsp;of&nbsp;the&nbsp;first&nbsp;j&nbsp;elements.</td><td class="diff_next"></td><td class="diff_header" id="to40_27">27</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;sum&nbsp;of&nbsp;the&nbsp;first&nbsp;j&nbsp;elements.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_28">28</td><td nowrap="nowrap">*&nbsp;**reverse**:</td><td class="diff_next"></td><td class="diff_header" id="to40_28">28</td><td nowrap="nowrap">*&nbsp;**reverse**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_29">29</td><td nowrap="nowrap">&nbsp;&nbsp;If&nbsp;set&nbsp;to&nbsp;1&nbsp;will&nbsp;perform&nbsp;the&nbsp;sums&nbsp;in&nbsp;reverse&nbsp;direction.</td><td class="diff_next"></td><td class="diff_header" id="to40_29">29</td><td nowrap="nowrap">&nbsp;&nbsp;If&nbsp;set&nbsp;to&nbsp;1&nbsp;will&nbsp;perform&nbsp;the&nbsp;sums&nbsp;in&nbsp;reverse&nbsp;direction.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_30">30</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to40_30">30</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_31">31</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to40_31">31</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_32">32</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to40_32">32</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_33">33</td><td nowrap="nowrap">*&nbsp;**x**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to40_33">33</td><td nowrap="nowrap">*&nbsp;**x**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_34">34</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;input&nbsp;tensor&nbsp;that&nbsp;is&nbsp;to&nbsp;be&nbsp;processed.</td><td class="diff_next"></td><td class="diff_header" id="to40_34">34</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;input&nbsp;tensor&nbsp;that&nbsp;is&nbsp;to&nbsp;be&nbsp;processed.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_35">35</td><td nowrap="nowrap">*&nbsp;**axis**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T2**:</td><td class="diff_next"></td><td class="diff_header" id="to40_35">35</td><td nowrap="nowrap">*&nbsp;**axis**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T2**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;A&nbsp;0-D&nbsp;tensor.&nbsp;Must&nbsp;be&nbsp;in&nbsp;the&nbsp;range&nbsp;[-rank(x),&nbsp;rank(x)-1].&nbsp;Negative</td><td class="diff_next"></td><td class="diff_header" id="to40_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;A&nbsp;0-D&nbsp;tensor.&nbsp;Must&nbsp;be&nbsp;in&nbsp;the&nbsp;range&nbsp;[-rank(x),&nbsp;rank(x)-1].&nbsp;Negative</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;value&nbsp;means&nbsp;counting&nbsp;dimensions&nbsp;from&nbsp;the&nbsp;back.</td><td class="diff_next"></td><td class="diff_header" id="to40_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;value&nbsp;means&nbsp;counting&nbsp;dimensions&nbsp;from&nbsp;the&nbsp;back.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_38">38</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to40_38">38</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_39">39</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to40_39">39</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_40">40</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to40_40">40</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_41">41</td><td nowrap="nowrap">*&nbsp;**y**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to40_41">41</td><td nowrap="nowrap">*&nbsp;**y**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_42">42</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;tensor&nbsp;of&nbsp;the&nbsp;same&nbsp;type&nbsp;as&nbsp;'x'&nbsp;with&nbsp;cumulative&nbsp;sums&nbsp;of&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to40_42">42</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;tensor&nbsp;of&nbsp;the&nbsp;same&nbsp;type&nbsp;as&nbsp;'x'&nbsp;with&nbsp;cumulative&nbsp;sums&nbsp;of&nbsp;the</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to40__0"></td><td class="diff_header" id="from40_43">43</td><td nowrap="nowrap">&nbsp;&nbsp;x's&nbsp;elements</td><td class="diff_next"></td><td class="diff_header" id="to40_43">43</td><td nowrap="nowrap">&nbsp;&nbsp;x's&nbsp;elements</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_44">44</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to40_44">44</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_45">45</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to40_45">45</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to40__1"></td><td class="diff_header" id="from40_46">46</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to40_46">46</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_47">47</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to40_47">47</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to40__1">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to40__1">n</a></td><td class="diff_header" id="to40_48">48</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;tensor(bfloat16),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_48">48</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to40_49">49</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_49">49</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to40_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to40__2">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to40__2">n</a></td><td class="diff_header" id="to40_51">51</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;tensor(float16),</span></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to40__2"></td><td class="diff_header" id="from40_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td><td class="diff_next"></td><td class="diff_header" id="to40_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td><td class="diff_next"></td><td class="diff_header" id="to40_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td><td class="diff_next"></td><td class="diff_header" id="to40_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64)</td><td class="diff_next"></td><td class="diff_header" id="to40_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to40_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to40__top">t</a></td><td class="diff_header" id="from40_55">55</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;Input&nbsp;can&nbsp;be&nbsp;of&nbsp;any&nbsp;tensor&nbsp;type.</span></td><td class="diff_next"><a href="#difflib_chg_to40__top">t</a></td><td class="diff_header" id="to40_57">57</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;and&nbsp;output&nbsp;types&nbsp;to&nbsp;high-precision&nbsp;numeric&nbsp;tensors.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_56">56</td><td nowrap="nowrap">*&nbsp;**T2**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to40_58">58</td><td nowrap="nowrap">*&nbsp;**T2**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_57">57</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td><td class="diff_next"></td><td class="diff_header" id="to40_59">59</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64)</td><td class="diff_next"></td><td class="diff_header" id="to40_60">60</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_59">59</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to40_61">61</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from40_60">60</td><td nowrap="nowrap">&nbsp;&nbsp;axis&nbsp;tensor&nbsp;can&nbsp;be&nbsp;int32&nbsp;or&nbsp;int64&nbsp;only</td><td class="diff_next"></td><td class="diff_header" id="to40_62">62</td><td nowrap="nowrap">&nbsp;&nbsp;axis&nbsp;tensor&nbsp;can&nbsp;be&nbsp;int32&nbsp;or&nbsp;int64&nbsp;only</td></tr>
            </tbody>
        </table>

.. _l-onnx-op-cumsum-11:

CumSum - 11
===========

**Version**

* **name**: `CumSum (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#CumSum>`_
* **domain**: **main**
* **since_version**: **11**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 11**.

**Summary**

Performs cumulative sum of the input elements along the given axis.
By default, it will do the sum inclusively meaning the first element is copied as is.
Through an `exclusive` attribute, this behavior can change to exclude the first element.
It can also perform summation in the opposite direction of the axis. For that, set `reverse` attribute to 1.

Example:
::

    input_x = [1, 2, 3]
    axis=0
    output = [1, 3, 6]
    exclusive=1
    output = [0, 1, 3]
    exclusive=0
    reverse=1
    output = [6, 5, 3]
    exclusive=1
    reverse=1
    output = [5, 3, 0]

**Attributes**

* **exclusive**:
  If set to 1 will return exclusive sum in which the top element is
  not included. In other terms, if set to 1, the j-th output element
  would be the sum of the first (j-1) elements. Otherwise, it would be
  the sum of the first j elements.
* **reverse**:
  If set to 1 will perform the sums in reverse direction.

**Inputs**

* **x** (heterogeneous) - **T**:
  An input tensor that is to be processed.
* **axis** (heterogeneous) - **T2**:
  A 0-D tensor. Must be in the range [-rank(x), rank(x)-1]. Negative
  value means counting dimensions from the back.

**Outputs**

* **y** (heterogeneous) - **T**:
  Output tensor of the same type as 'x' with cumulative sums of the
  x's elements

**Type Constraints**

* **T** in (
  tensor(double),
  tensor(float),
  tensor(int32),
  tensor(int64),
  tensor(uint32),
  tensor(uint64)
  ):
  Input can be of any tensor type.
* **T2** in (
  tensor(int32),
  tensor(int64)
  ):
  axis tensor can be int32 or int64 only
