
.. _l-onnx-doc-IsNaN:

=====
IsNaN
=====

.. contents::
    :local:


.. _l-onnx-op-isnan-13:

IsNaN - 13
==========

**Version**

* **name**: `IsNaN (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#IsNaN>`_
* **domain**: **main**
* **since_version**: **13**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 13**.

**Summary**

Returns which elements of the input are NaN.

**Inputs**

* **X** (heterogeneous) - **T1**:
  input

**Outputs**

* **Y** (heterogeneous) - **T2**:
  output

**Type Constraints**

* **T1** in (
  tensor(bfloat16),
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain input types to float tensors.
* **T2** in (
  tensor(bool)
  ):
  Constrain output types to boolean tensors.

**Examples**

**default**

::

    node = onnx.helper.make_node(
        "IsNaN",
        inputs=["x"],
        outputs=["y"],
    )

    x = np.array([3.0, np.nan, 4.0, np.nan], dtype=np.float32)
    y = np.isnan(x)
    expect(node, inputs=[x], outputs=[y], name="test_isnan")

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to94__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next"><a href="#difflib_chg_to94__0">f</a></td><td class="diff_header" id="from94_1">1</td><td nowrap="nowrap">Returns&nbsp;which&nbsp;elements&nbsp;of&nbsp;the&nbsp;input&nbsp;are&nbsp;NaN.</td><td class="diff_next"><a href="#difflib_chg_to94__0">f</a></td><td class="diff_header" id="to94_1">1</td><td nowrap="nowrap">Returns&nbsp;which&nbsp;elements&nbsp;of&nbsp;the&nbsp;input&nbsp;are&nbsp;NaN.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_2">2</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to94_2">2</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_3">3</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to94_3">3</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_4">4</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to94_4">4</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_5">5</td><td nowrap="nowrap">*&nbsp;**X**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T1**:</td><td class="diff_next"></td><td class="diff_header" id="to94_5">5</td><td nowrap="nowrap">*&nbsp;**X**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T1**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_6">6</td><td nowrap="nowrap">&nbsp;&nbsp;input</td><td class="diff_next"></td><td class="diff_header" id="to94_6">6</td><td nowrap="nowrap">&nbsp;&nbsp;input</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_7">7</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to94_7">7</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_8">8</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to94_8">8</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_9">9</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to94_9">9</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_10">10</td><td nowrap="nowrap">*&nbsp;**Y**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T2**:</td><td class="diff_next"></td><td class="diff_header" id="to94_10">10</td><td nowrap="nowrap">*&nbsp;**Y**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T2**:</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to94__0"></td><td class="diff_header" id="from94_11">11</td><td nowrap="nowrap">&nbsp;&nbsp;output</td><td class="diff_next"></td><td class="diff_header" id="to94_11">11</td><td nowrap="nowrap">&nbsp;&nbsp;output</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_12">12</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to94_12">12</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_13">13</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to94_13">13</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_14">14</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to94_14">14</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_15">15</td><td nowrap="nowrap">*&nbsp;**T1**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to94_15">15</td><td nowrap="nowrap">*&nbsp;**T1**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to94__top">t</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to94__top">t</a></td><td class="diff_header" id="to94_16">16</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;tensor(bfloat16),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_16">16</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to94_17">17</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_17">17</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to94_18">18</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_18">18</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16)</td><td class="diff_next"></td><td class="diff_header" id="to94_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to94_20">20</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_20">20</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;types&nbsp;to&nbsp;float&nbsp;tensors.</td><td class="diff_next"></td><td class="diff_header" id="to94_21">21</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;types&nbsp;to&nbsp;float&nbsp;tensors.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_21">21</td><td nowrap="nowrap">*&nbsp;**T2**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to94_22">22</td><td nowrap="nowrap">*&nbsp;**T2**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_22">22</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool)</td><td class="diff_next"></td><td class="diff_header" id="to94_23">23</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_23">23</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to94_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from94_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;output&nbsp;types&nbsp;to&nbsp;boolean&nbsp;tensors.</td><td class="diff_next"></td><td class="diff_header" id="to94_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;output&nbsp;types&nbsp;to&nbsp;boolean&nbsp;tensors.</td></tr>
            </tbody>
        </table>

.. _l-onnx-op-isnan-9:

IsNaN - 9
=========

**Version**

* **name**: `IsNaN (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#IsNaN>`_
* **domain**: **main**
* **since_version**: **9**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 9**.

**Summary**

Returns which elements of the input are NaN.

**Inputs**

* **X** (heterogeneous) - **T1**:
  input

**Outputs**

* **Y** (heterogeneous) - **T2**:
  output

**Type Constraints**

* **T1** in (
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain input types to float tensors.
* **T2** in (
  tensor(bool)
  ):
  Constrain output types to boolean tensors.
