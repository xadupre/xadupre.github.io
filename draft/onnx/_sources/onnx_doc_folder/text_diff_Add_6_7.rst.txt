Add - 6 vs 7
============

Next section compares an older to a newer version of the same operator 
after both definition are converted into markdown text.
Green means an addition to the newer version, red means a deletion.
Anything else is unchanged.

.. raw:: html


    <div id="div_Add_4"></div>
    <link rel="stylesheet" type="text/css" href="../_static/diff2html.min.css" />
    <script type="text/javascript" src="../_static/diff2html-ui.min.js"></script>
    <script>
    const diffString = `
    --- a/Add6
    +++ b/Add7
    @@ -1 +1 @@
    - Performs element-wise binary addition (with limited broadcast support).
    ?                                              ---- -
    + Performs element-wise binary addition (with Numpy-style broadcasting support).
    ?                                             +++++++++            +++
  
    + This operator supports **multidirectional (i.e., Numpy-style) broadcasting**; for more details please check Broadcasting in ONNX &amp;lt;https://github.com/onnx/onnx/blob/master/docs/Broadcasting.md&amp;gt;_.
    - If necessary the right-hand-side argument will be broadcasted to match the
    - shape of left-hand-side argument. When broadcasting is specified, the second
    - tensor can either be of element size 1 (including a scalar tensor and any
    - tensor with rank equal to or smaller than the first tensor), or having its
    - shape as a contiguous subset of the first tensor's shape. The starting of the
    - mutually equal shape is specified by the argument "axis", and if it is not set,
    - suffix matching is assumed. 1-dim expansion doesn't work yet.
    - 
    - For example, the following tensor shapes are supported (with broadcast=1):
    - 
    -   shape(A) = (2, 3, 4, 5), shape(B) = (,), i.e. B is a scalar tensor
    -   shape(A) = (2, 3, 4, 5), shape(B) = (1, 1), i.e. B is an 1-element tensor
    -   shape(A) = (2, 3, 4, 5), shape(B) = (5,)
    -   shape(A) = (2, 3, 4, 5), shape(B) = (4, 5)
    -   shape(A) = (2, 3, 4, 5), shape(B) = (3, 4), with axis=1
    -   shape(A) = (2, 3, 4, 5), shape(B) = (2), with axis=0
    - 
    - Attribute broadcast=1 needs to be passed to enable broadcasting.
    - 
    - **Attributes**
    - 
    - * **axis**:
    -   If set, defines the broadcast dimensions. See doc for details.
    - * **broadcast**:
    -   Pass 1 to enable broadcasting
  
      **Inputs**
  
      * **A** (heterogeneous) - **T**:
    -   First operand, should share the type with the second operand.
    +   First operand.
      * **B** (heterogeneous) - **T**:
    +   Second operand.
    -   Second operand. With broadcasting can be of smaller size than A. If
    -   broadcasting is disabled it should be of the same size.
  
      **Outputs**
  
      * **C** (heterogeneous) - **T**:
    -   Result, has same dimensions and type as A
    +   Result, has same element type as two inputs
  
      **Type Constraints**
  
      * **T** in (
        tensor(double),
        tensor(float),
        tensor(float16),
        tensor(int32),
        tensor(int64),
        tensor(uint32),
        tensor(uint64)
        ):
        Constrain input and output types to high-precision numeric tensors.
    `;

    document.addEventListener('DOMContentLoaded', function () {
    var targetElement = document.getElementById('div_Add_4');
    var configuration = {
        drawFileList: true,
        fileListToggle: false,
        fileListStartVisible: false,
        fileContentToggle: false,
        matching: 'lines',
        outputFormat: 'line-by-line',
        synchronisedScroll: true,
        highlight: true,
        renderNothingWhenEmpty: false,
    };
    var diff2htmlUi = new Diff2HtmlUI(targetElement, diffString, configuration);
    diff2htmlUi.draw();
    diff2htmlUi.highlightCode();
    });
    </script>