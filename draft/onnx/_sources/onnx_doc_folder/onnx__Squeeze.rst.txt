
.. _l-onnx-doc-Squeeze:

=======
Squeeze
=======

.. contents::
    :local:


.. _l-onnx-op-squeeze-13:

Squeeze - 13
============

**Version**

* **name**: `Squeeze (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Squeeze>`_
* **domain**: **main**
* **since_version**: **13**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 13**.

**Summary**

Remove single-dimensional entries from the shape of a tensor.
Takes an input `axes` with a list of axes to squeeze.
If `axes` is not provided, all the single dimensions will be removed from
the shape. If an axis is selected with shape entry not equal to one, an error is raised.

**Inputs**

Between 1 and 2 inputs.

* **data** (heterogeneous) - **T**:
  Tensors with at least max(dims) dimensions.
* **axes** (optional, heterogeneous) - **tensor(int64)**:
  List of integers indicating the dimensions to squeeze. Negative
  value means counting dimensions from the back. Accepted range is
  [-r, r-1] where r = rank(data).

**Outputs**

* **squeezed** (heterogeneous) - **T**:
  Reshaped tensor with same data as input.

**Type Constraints**

* **T** in (
  tensor(bfloat16),
  tensor(bool),
  tensor(complex128),
  tensor(complex64),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain input and output types to all tensor types.

**Examples**

**_squeeze**

::

    import numpy as np
    import onnx

    node = onnx.helper.make_node(
        &#34;Squeeze&#34;,
        inputs=[&#34;x&#34;, &#34;axes&#34;],
        outputs=[&#34;y&#34;],
    )
    x = np.random.randn(1, 3, 4, 5).astype(np.float32)
    axes = np.array([0], dtype=np.int64)
    y = np.squeeze(x, axis=0)

    expect(node, inputs=[x, axes], outputs=[y], name=&#34;test_squeeze&#34;)

**_squeeze_negative_axes**

::

    import numpy as np
    import onnx

    node = onnx.helper.make_node(
        &#34;Squeeze&#34;,
        inputs=[&#34;x&#34;, &#34;axes&#34;],
        outputs=[&#34;y&#34;],
    )
    x = np.random.randn(1, 3, 1, 5).astype(np.float32)
    axes = np.array([-2], dtype=np.int64)
    y = np.squeeze(x, axis=-2)
    expect(node, inputs=[x, axes], outputs=[y], name=&#34;test_squeeze_negative_axes&#34;)

.. toctree::

    text_diff_Squeeze_11_13

.. _l-onnx-op-squeeze-11:

Squeeze - 11
============

**Version**

* **name**: `Squeeze (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Squeeze>`_
* **domain**: **main**
* **since_version**: **11**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 11**.

**Summary**

Remove single-dimensional entries from the shape of a tensor.
Takes a  parameter `axes` with a list of axes to squeeze.
If `axes` is not provided, all the single dimensions will be removed from
the shape. If an axis is selected with shape entry not equal to one, an error is raised.

**Attributes**

* **axes**:
  List of integers indicating the dimensions to squeeze. Negative
  value means counting dimensions from the back. Accepted range is
  [-r, r-1] where r = rank(data).

**Inputs**

* **data** (heterogeneous) - **T**:
  Tensors with at least max(dims) dimensions.

**Outputs**

* **squeezed** (heterogeneous) - **T**:
  Reshaped tensor with same data as input.

**Type Constraints**

* **T** in (
  tensor(bool),
  tensor(complex128),
  tensor(complex64),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain input and output types to all tensor types.

.. toctree::

    text_diff_Squeeze_1_11

.. _l-onnx-op-squeeze-1:

Squeeze - 1
===========

**Version**

* **name**: `Squeeze (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Squeeze>`_
* **domain**: **main**
* **since_version**: **1**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 1**.

**Summary**

Remove single-dimensional entries from the shape of a tensor.
Takes a  parameter `axes` with a list of axes to squeeze.
If `axes` is not provided, all the single dimensions will be removed from
the shape. If an axis is selected with shape entry not equal to one, an error is raised.

**Attributes**

* **axes**:
  List of non-negative integers, indicate the dimensions to squeeze.

**Inputs**

* **data** (heterogeneous) - **T**:
  Tensors with at least max(dims) dimensions.

**Outputs**

* **squeezed** (heterogeneous) - **T**:
  Reshaped tensor with same data as input.

**Type Constraints**

* **T** in (
  tensor(bool),
  tensor(complex128),
  tensor(complex64),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain input and output types to all tensor types.
