LpPool - 1 vs 2
===============

.. raw:: html


    <div id="div_LpPool_3"></div>
    <link rel="stylesheet" type="text/css" href="../_static/diff2html.min.css" />
    <script type="text/javascript" src="../_static/diff2html-ui.min.js"></script>
    <script>
    const diffString = `
    --- a/LpPool1
    +++ b/LpPool2
    @@ -1 +1 @@
    - LpPool consumes an input tensor X and applies Lp pooling across the
    ?                                                                ----
    + LpPool consumes an input tensor X and applies Lp pooling across
      the tensor according to kernel sizes, stride sizes, and pad lengths.
      Lp pooling consisting of computing the Lp norm on all values of a subset
      of the input tensor according to the kernel size and downsampling the
      data into the output tensor Y for further processing.
  
      **Attributes**
  
      * **auto_pad**:
        auto_pad must be either NOTSET, SAME_UPPER, SAME_LOWER or VALID.
        Where default value is NOTSET, which means explicit padding is used.
    -   SAME_UPPER or SAME_LOWER mean pad the input so that the output size
    ?                                                                 -----
    +   SAME_UPPER or SAME_LOWER mean pad the input so that the output
    -   match the input.In case of odd number add the extra padding at the
    ?                                                      ---------------
    +   spatial size match the input.In case of odd number add the extra
    ?  +++++++++++++
    +   padding at the end for SAME_UPPER and at the beginning for
    +   SAME_LOWER. VALID mean no padding.
    -   end for SAME_UPPER and at the beginning for SAME_LOWER. VALID mean
    -   no padding. DEPRECATION NOTE: auto_pad is only intended to support
    -   legacy uses, and for framework authors, one is explicitly encouraged
    -   to use explicit padding specified in the pads attribute.
    - * **kernel_shape**:
    + * **kernel_shape** (required):
    ?                   +++++++++++
        The size of the kernel along each axis.
      * **p**:
    -   p value of the Lp norm used to pool over the input data, default is
    ?                                                          ^^^^^^^^^^^^
    +   p value of the Lp norm used to pool over the input data.
    ?                                                          ^
    -   2.0.
      * **pads**:
    -   Padding for the beginning and ending along each axis, it can take
    ?                                                               -----
    +   Padding for the beginning and ending along each spatial axis, it can
    ?                                                   ++++++++
    -   any value greater than or equal to 0. The value represent the number
    ?                                                                -------
    +   take any value greater than or equal to 0. The value represent the
    ?  +++++
    -   of pixels added to the beginning and end part of the corresponding
    ?                                                       --------------
    +   number of pixels added to the beginning and end part of the
    ?  +++++++
    -   axis. pads format should be as follow [x1_begin,
    +   corresponding axis. pads format should be as follow [x1_begin,
    ?  ++++++++++++++
        x2_begin...x1_end, x2_end,...], where xi_begin the number of pixels
        added at the beginning of axis i and xi_end, the number of pixels
        added at the end of axis i. This attribute cannot be used
    -   simultaneously with auto_pad attribute.
    +   simultaneously with auto_pad attribute. If not present, the padding
    ?                                          ++++++++++++++++++++++++++++
    +   defaults to 0 along start and end of each spatial axis.
      * **strides**:
    -   Stride along each axis.
    +   Stride along each spatial axis.
    ?                     ++++++++
  
      **Inputs**
  
      * **X** (heterogeneous) - **T**:
        Input data tensor from the previous operator; dimensions for image
        case are (N x C x H x W), where N is the batch size, C is the number
        of channels, and H and W are the height and the width of the data.
    -   For non image case, the dimension are in the form of (N x C x D1 x
    +   For non image case, the dimensions are in the form of (N x C x D1 x
    ?                                    +
        D2 ... Dn), where N is the batch size.
  
      **Outputs**
  
      * **Y** (heterogeneous) - **T**:
        Output data tensor from Lp pooling across the input tensor.
        Dimensions will vary based on various kernel, stride, and pad sizes.
  
      **Type Constraints**
  
      * **T** in (
        tensor(double),
        tensor(float),
        tensor(float16)
        ):
        Constrain input and output types to float tensors.
    `;

    document.addEventListener('DOMContentLoaded', function () {
    var targetElement = document.getElementById('div_LpPool_3');
    var configuration = {
        drawFileList: true,
        fileListToggle: false,
        fileListStartVisible: false,
        fileContentToggle: false,
        matching: 'lines',
        outputFormat: 'line-by-line',
        synchronisedScroll: true,
        highlight: true,
        renderNothingWhenEmpty: false,
    };
    var diff2htmlUi = new Diff2HtmlUI(targetElement, diffString, configuration);
    diff2htmlUi.draw();
    diff2htmlUi.highlightCode();
    });
    </script>