
.. _l-onnx-docai.onnx.ml-LabelEncoder:

=========================
ai.onnx.ml - LabelEncoder
=========================

.. contents::
    :local:


.. _l-onnx-opai-onnx-ml-labelencoder-2:

LabelEncoder - 2 (ai.onnx.ml)
=============================

**Version**

* **name**: `LabelEncoder (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators-ml.md#ai.onnx.ml.LabelEncoder>`_
* **domain**: **ai.onnx.ml**
* **since_version**: **2**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 2 of domain ai.onnx.ml**.

**Summary**

Maps each element in the input tensor to another value.

The mapping is determined by the two parallel attributes, &#39;keys_*&#39; and
&#39;values_*&#39; attribute. The i-th value in the specified &#39;keys_*&#39; attribute
would be mapped to the i-th value in the specified &#39;values_*&#39; attribute. It
implies that input&#39;s element type and the element type of the specified
&#39;keys_*&#39; should be identical while the output type is identical to the
specified &#39;values_*&#39; attribute. If an input element can not be found in the
specified &#39;keys_*&#39; attribute, the &#39;default_*&#39; that matches the specified
&#39;values_*&#39; attribute may be used as its output value.

Let&#39;s consider an example which maps a string tensor to an integer tensor.
Assume and &#39;keys_strings&#39; is [&#34;Amy&#34;, &#34;Sally&#34;], &#39;values_int64s&#39; is [5, 6],
and &#39;default_int64&#39; is &#39;-1&#39;.  The input [&#34;Dori&#34;, &#34;Amy&#34;, &#34;Amy&#34;, &#34;Sally&#34;,
&#34;Sally&#34;] would be mapped to [-1, 5, 5, 6, 6].

Since this operator is an one-to-one mapping, its input and output shapes
are the same. Notice that only one of &#39;keys_*&#39;/&#39;values_*&#39; can be set.

For key look-up, bit-wise comparison is used so even a float NaN can be
mapped to a value in &#39;values_*&#39; attribute.

**Attributes**

* **default_float**:
  A float.
* **default_int64**:
  An integer.
* **default_string**:
  A string.
* **keys_floats**:
  A list of floats.
* **keys_int64s**:
  A list of ints.
* **keys_strings**:
  A list of strings. One and only one of &#39;keys_*&#39;s should be set.
* **values_floats**:
  A list of floats.
* **values_int64s**:
  A list of ints.
* **values_strings**:
  A list of strings. One and only one of &#39;value_*&#39;s should be set.

**Inputs**

* **X** (heterogeneous) - **T1**:
  Input data. It can be either tensor or scalar.

**Outputs**

* **Y** (heterogeneous) - **T2**:
  Output data.

**Type Constraints**

* **T1** in (
  tensor(float),
  tensor(int64),
  tensor(string)
  ):
  The input type is a tensor of any shape.
* **T2** in (
  tensor(float),
  tensor(int64),
  tensor(string)
  ):
  Output type is determined by the specified &#39;values_*&#39; attribute.

**Examples**

.. toctree::

    text_diff_LabelEncoder_1_2

.. _l-onnx-opai-onnx-ml-labelencoder-1:

LabelEncoder - 1 (ai.onnx.ml)
=============================

**Version**

* **name**: `LabelEncoder (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators-ml.md#ai.onnx.ml.LabelEncoder>`_
* **domain**: **ai.onnx.ml**
* **since_version**: **1**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 1 of domain ai.onnx.ml**.

**Summary**

Converts strings to integers and vice versa.

If the string default value is set, it will convert integers to strings.
If the int default value is set, it will convert strings to integers.

Each operator converts either integers to strings or strings to integers, depending
on which default value attribute is provided. Only one default value attribute
should be defined.

When converting from integers to strings, the string is fetched from the
&#39;classes_strings&#39; list, by simple indexing.

When converting from strings to integers, the string is looked up in the list
and the index at which it is found is used as the converted value.

**Attributes**

* **classes_strings**:
  A list of labels.
* **default_int64**:
  An integer to use when an input string value is not found in the
  map.&lt;br&gt;One and only one of the &#39;default_*&#39; attributes must be
  defined.
* **default_string**:
  A string to use when an input integer value is not found in the
  map.&lt;br&gt;One and only one of the &#39;default_*&#39; attributes must be
  defined.

**Inputs**

* **X** (heterogeneous) - **T1**:
  Input data.

**Outputs**

* **Y** (heterogeneous) - **T2**:
  Output data. If strings are input, the output values are integers,
  and vice versa.

**Type Constraints**

* **T1** in (
  tensor(int64),
  tensor(string)
  ):
  The input type must be a tensor of integers or strings, of any
  shape.
* **T2** in (
  tensor(int64),
  tensor(string)
  ):
  The output type will be a tensor of strings or integers, and will
  have the same shape as the input.
