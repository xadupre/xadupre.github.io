
.. _l-onnx-op-reduceprod-d1-13:

ReduceProd - 1 vs 13
====================

Next section compares an older to a newer version of the same operator 
after both definition are converted into markdown text.
Green means an addition to the newer version, red means a deletion.
Anything else is unchanged.

.. raw:: html


    <div id="div_ReduceProd_3"></div>
    <link rel="stylesheet" type="text/css" href="../_static/diff2html.min.css" />
    <script type="text/javascript" src="../_static/diff2html-ui.min.js"></script>
    <script>
    const diffString = `
    --- a/ReduceProd1
    +++ b/ReduceProd13
    @@ -1 +1 @@
      Computes the product of the input tensor's element along the provided axes. The resulting
    - tensor has the same rank as the input if keepdims equals 1. If keepdims equals 0, then
    ?                                                                              -
    + tensor has the same rank as the input if keepdims equals 1. If keepdims equal 0, then
    - the resulting tensor has the reduced dimension pruned.
    ?           ^^^          ^
    + the resulted tensor have the reduced dimension pruned.
    ?           ^^          ^^
  
      The above behavior is similar to numpy, with the exception that numpy defaults keepdims to
      False instead of True.
  
      **Attributes**
  
      * **axes**:
        A list of integers, along which to reduce. The default is to reduce
    -   over all the dimensions of the input tensor. Accepted range is [-r,
    ?                                               -----------------------
    +   over all the dimensions of the input tensor.
    -   r-1] where r = rank(data).
      * **keepdims**:
        Keep the reduced dimension or not, default 1 means keep reduced
        dimension.
  
      **Inputs**
  
      * **data** (heterogeneous) - **T**:
        An input tensor.
  
      **Outputs**
  
      * **reduced** (heterogeneous) - **T**:
        Reduced output tensor.
  
      **Type Constraints**
  
      * **T** in (
    -   tensor(bfloat16),
        tensor(double),
        tensor(float),
        tensor(float16),
        tensor(int32),
        tensor(int64),
        tensor(uint32),
        tensor(uint64)
        ):
        Constrain input and output types to high-precision numeric tensors.
    `;

    document.addEventListener('DOMContentLoaded', function () {
    var targetElement = document.getElementById('div_ReduceProd_3');
    var configuration = {
        drawFileList: true,
        fileListToggle: false,
        fileListStartVisible: false,
        fileContentToggle: false,
        matching: 'lines',
        outputFormat: 'line-by-line',
        synchronisedScroll: true,
        highlight: true,
        renderNothingWhenEmpty: false,
    };
    var diff2htmlUi = new Diff2HtmlUI(targetElement, diffString, configuration);
    diff2htmlUi.draw();
    diff2htmlUi.highlightCode();
    });
    </script>