
.. _l-onnx-doc-Xor:

===
Xor
===

.. contents::
    :local:


.. _l-onnx-op-xor-7:

Xor - 7
=======

**Version**

* **name**: `Xor (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Xor>`_
* **domain**: **main**
* **since_version**: **7**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 7**.

**Summary**

Returns the tensor resulted from performing the `xor` logical operation
elementwise on the input tensors `A` and `B` (with Numpy-style broadcasting support).

This operator supports **multidirectional (i.e., Numpy-style) broadcasting**; for more details please check `Broadcasting in ONNX <https://github.com/onnx/onnx/blob/master/docs/Broadcasting.md>`_.

**Inputs**

* **A** (heterogeneous) - **T**:
  First input operand for the logical operator.
* **B** (heterogeneous) - **T**:
  Second input operand for the logical operator.

**Outputs**

* **C** (heterogeneous) - **T1**:
  Result tensor.

**Type Constraints**

* **T** in (
  tensor(bool)
  ):
  Constrain input to boolean tensor.
* **T1** in (
  tensor(bool)
  ):
  Constrain output to boolean tensor.

**Examples**

**default**

::

    node = onnx.helper.make_node(
        "Xor",
        inputs=["x", "y"],
        outputs=["xor"],
    )

    # 2d
    x = (np.random.randn(3, 4) > 0).astype(bool)
    y = (np.random.randn(3, 4) > 0).astype(bool)
    z = np.logical_xor(x, y)
    expect(node, inputs=[x, y], outputs=[z], name="test_xor2d")

    # 3d
    x = (np.random.randn(3, 4, 5) > 0).astype(bool)
    y = (np.random.randn(3, 4, 5) > 0).astype(bool)
    z = np.logical_xor(x, y)
    expect(node, inputs=[x, y], outputs=[z], name="test_xor3d")

    # 4d
    x = (np.random.randn(3, 4, 5, 6) > 0).astype(bool)
    y = (np.random.randn(3, 4, 5, 6) > 0).astype(bool)
    z = np.logical_xor(x, y)
    expect(node, inputs=[x, y], outputs=[z], name="test_xor4d")

**_xor_broadcast**

::

    node = onnx.helper.make_node(
        "Xor",
        inputs=["x", "y"],
        outputs=["xor"],
    )

    # 3d vs 1d
    x = (np.random.randn(3, 4, 5) > 0).astype(bool)
    y = (np.random.randn(5) > 0).astype(bool)
    z = np.logical_xor(x, y)
    expect(node, inputs=[x, y], outputs=[z], name="test_xor_bcast3v1d")

    # 3d vs 2d
    x = (np.random.randn(3, 4, 5) > 0).astype(bool)
    y = (np.random.randn(4, 5) > 0).astype(bool)
    z = np.logical_xor(x, y)
    expect(node, inputs=[x, y], outputs=[z], name="test_xor_bcast3v2d")

    # 4d vs 2d
    x = (np.random.randn(3, 4, 5, 6) > 0).astype(bool)
    y = (np.random.randn(5, 6) > 0).astype(bool)
    z = np.logical_xor(x, y)
    expect(node, inputs=[x, y], outputs=[z], name="test_xor_bcast4v2d")

    # 4d vs 3d
    x = (np.random.randn(3, 4, 5, 6) > 0).astype(bool)
    y = (np.random.randn(4, 5, 6) > 0).astype(bool)
    z = np.logical_xor(x, y)
    expect(node, inputs=[x, y], outputs=[z], name="test_xor_bcast4v3d")

    # 4d vs 4d
    x = (np.random.randn(1, 4, 1, 6) > 0).astype(bool)
    y = (np.random.randn(3, 1, 5, 6) > 0).astype(bool)
    z = np.logical_xor(x, y)
    expect(node, inputs=[x, y], outputs=[z], name="test_xor_bcast4v4d")

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to246__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next" id="difflib_chg_to246__1"><a href="#difflib_chg_to246__0">f</a></td><td class="diff_header" id="from246_1">1</td><td nowrap="nowrap">Returns&nbsp;the&nbsp;tensor&nbsp;resulted&nbsp;from&nbsp;performing&nbsp;the&nbsp;xor&nbsp;logical&nbsp;operation</td><td class="diff_next"><a href="#difflib_chg_to246__0">f</a></td><td class="diff_header" id="to246_1">1</td><td nowrap="nowrap">Returns&nbsp;the&nbsp;tensor&nbsp;resulted&nbsp;from&nbsp;performing&nbsp;the&nbsp;xor&nbsp;logical&nbsp;operation</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to246__1">n</a></td><td class="diff_header" id="from246_2">2</td><td nowrap="nowrap"><span class="diff_sub">elementwise&nbsp;on&nbsp;the&nbsp;input&nbsp;tensors&nbsp;A&nbsp;and&nbsp;B.</span></td><td class="diff_next"><a href="#difflib_chg_to246__1">n</a></td><td class="diff_header" id="to246_2">2</td><td nowrap="nowrap"><span class="diff_add">elementwise&nbsp;on&nbsp;the&nbsp;input&nbsp;tensors&nbsp;A&nbsp;and&nbsp;B&nbsp;(with&nbsp;Numpy-style&nbsp;broadcasting&nbsp;support).</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_3">3</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to246_3">3</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to246__2">n</a></td><td class="diff_header" id="from246_4">4</td><td nowrap="nowrap"><span class="diff_sub">If&nbsp;broadcasting&nbsp;is&nbsp;enabled,&nbsp;the&nbsp;right-hand-side&nbsp;argument&nbsp;will&nbsp;be&nbsp;broadcasted</span></td><td class="diff_next"><a href="#difflib_chg_to246__2">n</a></td><td class="diff_header" id="to246_4">4</td><td nowrap="nowrap"><span class="diff_add">This&nbsp;operator&nbsp;supports&nbsp;**multidirectional&nbsp;(i.e.,&nbsp;Numpy-style)&nbsp;broadcasting**;&nbsp;for&nbsp;more&nbsp;details&nbsp;please&nbsp;check&nbsp;Broadcasting&nbsp;in&nbsp;ONNX&nbsp;&lt;https://github.com/onnx/onnx/blob/master/docs/Broadcasting.md&gt;_.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_5">5</td><td nowrap="nowrap"><span class="diff_sub">to&nbsp;match&nbsp;the&nbsp;shape&nbsp;of&nbsp;left-hand-side&nbsp;argument.&nbsp;See&nbsp;the&nbsp;doc&nbsp;of&nbsp;Add&nbsp;for&nbsp;a</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_6">6</td><td nowrap="nowrap"><span class="diff_sub">detailed&nbsp;description&nbsp;of&nbsp;the&nbsp;broadcasting&nbsp;rules.</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_7">7</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_8">8</td><td nowrap="nowrap"><span class="diff_sub">**Attributes**</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_9">9</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_10">10</td><td nowrap="nowrap"><span class="diff_sub">*&nbsp;**axis**:</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_11">11</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;If&nbsp;set,&nbsp;defines&nbsp;the&nbsp;broadcast&nbsp;dimensions.</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_12">12</td><td nowrap="nowrap"><span class="diff_sub">*&nbsp;**broadcast**:</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to246__2"></td><td class="diff_header" id="from246_13">13</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;Enable&nbsp;broadcasting</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_14">14</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to246_5">5</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to246__3"></td><td class="diff_header" id="from246_15">15</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to246_6">6</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_16">16</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to246_7">7</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_17">17</td><td nowrap="nowrap">*&nbsp;**A**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to246_8">8</td><td nowrap="nowrap">*&nbsp;**A**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to246__3">n</a></td><td class="diff_header" id="from246_18">18</td><td nowrap="nowrap">&nbsp;&nbsp;<span class="diff_chg">Lef</span>t&nbsp;input&nbsp;<span class="diff_chg">t</span>en<span class="diff_chg">sor</span>&nbsp;for&nbsp;the&nbsp;logical&nbsp;operator.</td><td class="diff_next"><a href="#difflib_chg_to246__3">n</a></td><td class="diff_header" id="to246_9">9</td><td nowrap="nowrap">&nbsp;&nbsp;<span class="diff_chg">Firs</span>t&nbsp;input&nbsp;<span class="diff_chg">op</span>e<span class="diff_add">ra</span>n<span class="diff_chg">d</span>&nbsp;for&nbsp;the&nbsp;logical&nbsp;operator.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_19">19</td><td nowrap="nowrap">*&nbsp;**B**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to246_10">10</td><td nowrap="nowrap">*&nbsp;**B**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to246__top">t</a></td><td class="diff_header" id="from246_20">20</td><td nowrap="nowrap">&nbsp;&nbsp;<span class="diff_chg">Right</span>&nbsp;input&nbsp;<span class="diff_chg">t</span>en<span class="diff_chg">sor</span>&nbsp;for&nbsp;the&nbsp;logical&nbsp;operator.</td><td class="diff_next"><a href="#difflib_chg_to246__top">t</a></td><td class="diff_header" id="to246_11">11</td><td nowrap="nowrap">&nbsp;&nbsp;<span class="diff_chg">Second</span>&nbsp;input&nbsp;<span class="diff_chg">op</span>e<span class="diff_add">ra</span>n<span class="diff_chg">d</span>&nbsp;for&nbsp;the&nbsp;logical&nbsp;operator.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_21">21</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to246_12">12</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_22">22</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to246_13">13</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_23">23</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to246_14">14</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_24">24</td><td nowrap="nowrap">*&nbsp;**C**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T1**:</td><td class="diff_next"></td><td class="diff_header" id="to246_15">15</td><td nowrap="nowrap">*&nbsp;**C**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T1**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;Result&nbsp;tensor.</td><td class="diff_next"></td><td class="diff_header" id="to246_16">16</td><td nowrap="nowrap">&nbsp;&nbsp;Result&nbsp;tensor.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_26">26</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to246_17">17</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_27">27</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to246_18">18</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_28">28</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to246_19">19</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_29">29</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to246_20">20</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool)</td><td class="diff_next"></td><td class="diff_header" id="to246_21">21</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_31">31</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to246_22">22</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_32">32</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;to&nbsp;boolean&nbsp;tensor.</td><td class="diff_next"></td><td class="diff_header" id="to246_23">23</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;to&nbsp;boolean&nbsp;tensor.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_33">33</td><td nowrap="nowrap">*&nbsp;**T1**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to246_24">24</td><td nowrap="nowrap">*&nbsp;**T1**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_34">34</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool)</td><td class="diff_next"></td><td class="diff_header" id="to246_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to246_26">26</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from246_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;output&nbsp;to&nbsp;boolean&nbsp;tensor.</td><td class="diff_next"></td><td class="diff_header" id="to246_27">27</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;output&nbsp;to&nbsp;boolean&nbsp;tensor.</td></tr>
            </tbody>
        </table>

.. _l-onnx-op-xor-1:

Xor - 1
=======

**Version**

* **name**: `Xor (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Xor>`_
* **domain**: **main**
* **since_version**: **1**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 1**.

**Summary**

Returns the tensor resulted from performing the `xor` logical operation
elementwise on the input tensors `A` and `B`.

If broadcasting is enabled, the right-hand-side argument will be broadcasted
to match the shape of left-hand-side argument. See the doc of `Add` for a
detailed description of the broadcasting rules.

**Attributes**

* **axis**:
  If set, defines the broadcast dimensions.
* **broadcast**:
  Enable broadcasting

**Inputs**

* **A** (heterogeneous) - **T**:
  Left input tensor for the logical operator.
* **B** (heterogeneous) - **T**:
  Right input tensor for the logical operator.

**Outputs**

* **C** (heterogeneous) - **T1**:
  Result tensor.

**Type Constraints**

* **T** in (
  tensor(bool)
  ):
  Constrain input to boolean tensor.
* **T1** in (
  tensor(bool)
  ):
  Constrain output to boolean tensor.
