
.. _l-onnx-doc-Neg:

===
Neg
===

.. contents::
    :local:


.. _l-onnx-op-neg-13:

Neg - 13
========

**Version**

* **name**: `Neg (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Neg>`_
* **domain**: **main**
* **since_version**: **13**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 13**.

**Summary**

Neg takes one input data (Tensor<T>) and produces one output data
(Tensor<T>) where each element flipped sign, y = -x, is applied to
the tensor elementwise.

**Inputs**

* **X** (heterogeneous) - **T**:
  Input tensor

**Outputs**

* **Y** (heterogeneous) - **T**:
  Output tensor

**Type Constraints**

* **T** in (
  tensor(bfloat16),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8)
  ):
  Constrain input and output types to signed numeric tensors.

**Examples**

**default**

::

    import numpy as np
    import onnx

    node = onnx.helper.make_node(
        "Neg",
        inputs=["x"],
        outputs=["y"],
    )

    x = np.array([-4, 2]).astype(np.float32)
    y = np.negative(x)  # expected output [4., -2.],
    expect(node, inputs=[x], outputs=[y], name="test_neg_example")

    x = np.random.randn(3, 4, 5).astype(np.float32)
    y = np.negative(x)
    expect(node, inputs=[x], outputs=[y], name="test_neg")

.. toctree::
    diff_Neg_6_13

.. _l-onnx-op-neg-6:

Neg - 6
=======

**Version**

* **name**: `Neg (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Neg>`_
* **domain**: **main**
* **since_version**: **6**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 6**.

**Summary**

Neg takes one input data (Tensor<T>) and produces one output data
(Tensor<T>) where each element flipped sign, y = -x, is applied to
the tensor elementwise.

**Inputs**

* **X** (heterogeneous) - **T**:
  Input tensor

**Outputs**

* **Y** (heterogeneous) - **T**:
  Output tensor

**Type Constraints**

* **T** in (
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8)
  ):
  Constrain input and output types to signed numeric tensors.

.. toctree::
    diff_Neg_1_6

.. _l-onnx-op-neg-1:

Neg - 1
=======

**Version**

* **name**: `Neg (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Neg>`_
* **domain**: **main**
* **since_version**: **1**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: False

This version of the operator has been available
**since version 1**.

**Summary**

Neg takes one input data (Tensor<T>) and produces one output data
(Tensor<T>) where each element flipped sign, y = -x, is applied to
the tensor elementwise.

**Attributes**

* **consumed_inputs**:
  legacy optimization attribute.

**Inputs**

* **X** (heterogeneous) - **T**:
  Input tensor

**Outputs**

* **Y** (heterogeneous) - **T**:
  Output tensor

**Type Constraints**

* **T** in (
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain input and output types to float tensors.
