QuantizeLinear - 10 vs 13
=========================

Next section compares an older to a newer version of the same operator 
after both definition are converted into markdown text.
Green means an addition to the newer version, red means a deletion.
Anything else is unchanged.

.. raw:: html


    <div id="div_QuantizeLinear_2"></div>
    <link rel="stylesheet" type="text/css" href="../_static/diff2html.min.css" />
    <script type="text/javascript" src="../_static/diff2html-ui.min.js"></script>
    <script>
    const diffString = `
    --- a/QuantizeLinear10
    +++ b/QuantizeLinear13
    @@ -1 +1 @@
    - The linear per-tensor/layer quantization operator. It consumes a high precision tensor, a scale, a zero point to compute the low precision / quantized tensor.
    ?          -----------------
    + The linear quantization operator. It consumes a high precision tensor, a scale, and a zero point to compute the low precision / quantized tensor.
    ?                                                                                  ++++
    - The quantization formula is y = saturate ((x / y_scale) + y_zero_point). For saturation, it saturates to [0, 255] if it&amp;#39;s uint8, or [-128, 127] if it&amp;#39;s int8.
    + The scale factor and zero point must have same shape, and can be either a scalar for per-tensor / per layer quantization, or a 1-D tensor for per-axis quantization.
    + The quantization formula is y = saturate ((x / y_scale) + y_zero_point).
    + For saturation, it saturates to [0, 255] if it&amp;#39;s uint8, or [-128, 127] if it&amp;#39;s int8.
      For (x / y_scale), it&amp;#39;s rounding to nearest ties to even. Refer to https://en.wikipedia.org/wiki/Rounding for details. &amp;#39;y_zero_point&amp;#39; and &amp;#39;y&amp;#39; must have same type.
    + 
    + **Attributes**
    + 
    + * **axis**:
    +   (Optional) The axis of the quantization dimension of the input
    +   tensor. Ignored for per-tensor quantization. Negative value means
    +   counting dimensions from the back. Accepted range is [-r, r-1] where
    +   r = rank(input).
  
      **Inputs**
  
      Between 2 and 3 inputs.
  
      * **x** (heterogeneous) - **T1**:
        N-D full precision Input tensor to be quantized.
      * **y_scale** (heterogeneous) - **tensor(float)**:
    -   Scale for doing quantization to get &amp;#39;y&amp;#39;. It&amp;#39;s a scalar, which means
    ?                                                      ^^^^^^                ------
    +   Scale for doing quantization to get &amp;#39;y&amp;#39;. It can be a scalar, which
    ?                                                      ^^^^^^^
    -   a per-tensor/layer quantization.
    +   means per-tensor/layer quantization, or a 1-D Tensor for per-axis
    +   quantization.
      * **y_zero_point** (optional, heterogeneous) - **T2**:
    -   Zero point for doing quantization to get &amp;#39;y&amp;#39;. It&amp;#39;s a scalar, which
    ?                                                         ^ ------  ^^^^^^^^^^^^
    +   Zero point for doing quantization to get &amp;#39;y&amp;#39;. Shape must match
    ?                                                         ^^^^^^^^^  + ^
    -   means a per-tensor/layer quantization. Default value is uint8 typed
    -   0 if it&amp;#39;s not specified.
    +   y_scale. Default is uint8 with zero point of 0 if it&amp;#39;s not
    +   specified.
  
      **Outputs**
  
      * **y** (heterogeneous) - **T2**:
        N-D quantized output tensor. It has same shape as input &amp;#39;x&amp;#39;.
  
      **Type Constraints**
  
      * **T1** in (
        tensor(float),
        tensor(int32)
        ):
        Constrain &amp;#39;x&amp;#39; to float or int32 tensor.
      * **T2** in (
        tensor(int8),
        tensor(uint8)
        ):
        Constrain &amp;#39;y_zero_point&amp;#39; and &amp;#39;y&amp;#39; to 8-bit integer tensor.
    `;

    document.addEventListener('DOMContentLoaded', function () {
    var targetElement = document.getElementById('div_QuantizeLinear_2');
    var configuration = {
        drawFileList: true,
        fileListToggle: false,
        fileListStartVisible: false,
        fileContentToggle: false,
        matching: 'lines',
        outputFormat: 'line-by-line',
        synchronisedScroll: true,
        highlight: true,
        renderNothingWhenEmpty: false,
    };
    var diff2htmlUi = new Diff2HtmlUI(targetElement, diffString, configuration);
    diff2htmlUi.draw();
    diff2htmlUi.highlightCode();
    });
    </script>