
.. _l-onnx-doc-SpaceToDepth:

============
SpaceToDepth
============

.. contents::
    :local:


.. _l-onnx-op-spacetodepth-13:
SpaceToDepth - 13
=================
**Version**
* **name**: `SpaceToDepth (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#SpaceToDepth>`_
* **domain**: **main**
* **since_version**: **13**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 13**.

**Summary**
SpaceToDepth rearranges blocks of spatial data into depth. More specifically,
this op outputs a copy of the input tensor where values from the height and width dimensions
are moved to the depth dimension.

**Attributes**
* **blocksize** (required):
  Blocks of [blocksize, blocksize] are moved.

**Inputs**

* **input** (heterogeneous) - **T**:
  Input tensor of [N,C,H,W], where N is the batch axis, C is the
  channel or depth, H is the height and W is the width.

**Outputs**

* **output** (heterogeneous) - **T**:
  Output tensor of [N, C * blocksize * blocksize, H/blocksize,
  W/blocksize].

**Type Constraints**
* **T** in (
  tensor(bfloat16),
  tensor(bool),
  tensor(complex128),
  tensor(complex64),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain input and output types to all tensor types.

**Examples**

**default**
::
    b, c, h, w = shape = (2, 2, 6, 6)
    blocksize = 2
    node = onnx.helper.make_node(
        "SpaceToDepth",
        inputs=["x"],
        outputs=["y"],
        blocksize=blocksize,
    )
    x = np.random.random_sample(shape).astype(np.float32)
    tmp = np.reshape(
        x, [b, c, h // blocksize, blocksize, w // blocksize, blocksize]
    )
    tmp = np.transpose(tmp, [0, 3, 5, 1, 2, 4])
    y = np.reshape(tmp, [b, c * (blocksize**2), h // blocksize, w // blocksize])
    expect(node, inputs=[x], outputs=[y], name="test_spacetodepth")

**_example**
::
    node = onnx.helper.make_node(
        "SpaceToDepth",
        inputs=["x"],
        outputs=["y"],
        blocksize=2,
    )

    # (1, 1, 4, 6) input tensor
    x = np.array(
        [
            [
                [
                    [0, 6, 1, 7, 2, 8],
                    [12, 18, 13, 19, 14, 20],
                    [3, 9, 4, 10, 5, 11],
                    [15, 21, 16, 22, 17, 23],
                ]
            ]
        ]
    ).astype(np.float32)

    # (1, 4, 2, 3) output tensor
    y = np.array(
        [
            [
                [[0, 1, 2], [3, 4, 5]],
                [[6, 7, 8], [9, 10, 11]],
                [[12, 13, 14], [15, 16, 17]],
                [[18, 19, 20], [21, 22, 23]],
            ]
        ]
    ).astype(np.float32)
    expect(node, inputs=[x], outputs=[y], name="test_spacetodepth_example")

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to218__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next"><a href="#difflib_chg_to218__0">f</a></td><td class="diff_header" id="from218_1">1</td><td nowrap="nowrap">SpaceToDepth&nbsp;rearranges&nbsp;blocks&nbsp;of&nbsp;spatial&nbsp;data&nbsp;into&nbsp;depth.&nbsp;More&nbsp;specifically,</td><td class="diff_next"><a href="#difflib_chg_to218__0">f</a></td><td class="diff_header" id="to218_1">1</td><td nowrap="nowrap">SpaceToDepth&nbsp;rearranges&nbsp;blocks&nbsp;of&nbsp;spatial&nbsp;data&nbsp;into&nbsp;depth.&nbsp;More&nbsp;specifically,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_2">2</td><td nowrap="nowrap">this&nbsp;op&nbsp;outputs&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;input&nbsp;tensor&nbsp;where&nbsp;values&nbsp;from&nbsp;the&nbsp;height&nbsp;and&nbsp;width&nbsp;dimensions</td><td class="diff_next"></td><td class="diff_header" id="to218_2">2</td><td nowrap="nowrap">this&nbsp;op&nbsp;outputs&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;input&nbsp;tensor&nbsp;where&nbsp;values&nbsp;from&nbsp;the&nbsp;height&nbsp;and&nbsp;width&nbsp;dimensions</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_3">3</td><td nowrap="nowrap">are&nbsp;moved&nbsp;to&nbsp;the&nbsp;depth&nbsp;dimension.</td><td class="diff_next"></td><td class="diff_header" id="to218_3">3</td><td nowrap="nowrap">are&nbsp;moved&nbsp;to&nbsp;the&nbsp;depth&nbsp;dimension.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_4">4</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to218_4">4</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_5">5</td><td nowrap="nowrap">**Attributes**</td><td class="diff_next"></td><td class="diff_header" id="to218_5">5</td><td nowrap="nowrap">**Attributes**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_6">6</td><td nowrap="nowrap">*&nbsp;**blocksize**&nbsp;(required):</td><td class="diff_next"></td><td class="diff_header" id="to218_6">6</td><td nowrap="nowrap">*&nbsp;**blocksize**&nbsp;(required):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_7">7</td><td nowrap="nowrap">&nbsp;&nbsp;Blocks&nbsp;of&nbsp;[blocksize,&nbsp;blocksize]&nbsp;are&nbsp;moved.</td><td class="diff_next"></td><td class="diff_header" id="to218_7">7</td><td nowrap="nowrap">&nbsp;&nbsp;Blocks&nbsp;of&nbsp;[blocksize,&nbsp;blocksize]&nbsp;are&nbsp;moved.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_8">8</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to218_8">8</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_9">9</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to218_9">9</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_10">10</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to218_10">10</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_11">11</td><td nowrap="nowrap">*&nbsp;**input**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to218_11">11</td><td nowrap="nowrap">*&nbsp;**input**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_12">12</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;tensor&nbsp;of&nbsp;[N,C,H,W],&nbsp;where&nbsp;N&nbsp;is&nbsp;the&nbsp;batch&nbsp;axis,&nbsp;C&nbsp;is&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to218_12">12</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;tensor&nbsp;of&nbsp;[N,C,H,W],&nbsp;where&nbsp;N&nbsp;is&nbsp;the&nbsp;batch&nbsp;axis,&nbsp;C&nbsp;is&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_13">13</td><td nowrap="nowrap">&nbsp;&nbsp;channel&nbsp;or&nbsp;depth,&nbsp;H&nbsp;is&nbsp;the&nbsp;height&nbsp;and&nbsp;W&nbsp;is&nbsp;the&nbsp;width.</td><td class="diff_next"></td><td class="diff_header" id="to218_13">13</td><td nowrap="nowrap">&nbsp;&nbsp;channel&nbsp;or&nbsp;depth,&nbsp;H&nbsp;is&nbsp;the&nbsp;height&nbsp;and&nbsp;W&nbsp;is&nbsp;the&nbsp;width.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_14">14</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to218_14">14</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_15">15</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to218_15">15</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_16">16</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to218_16">16</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_17">17</td><td nowrap="nowrap">*&nbsp;**output**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to218_17">17</td><td nowrap="nowrap">*&nbsp;**output**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to218__0"></td><td class="diff_header" id="from218_18">18</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;tensor&nbsp;of&nbsp;[N,&nbsp;C&nbsp;*&nbsp;blocksize&nbsp;*&nbsp;blocksize,&nbsp;H/blocksize,</td><td class="diff_next"></td><td class="diff_header" id="to218_18">18</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;tensor&nbsp;of&nbsp;[N,&nbsp;C&nbsp;*&nbsp;blocksize&nbsp;*&nbsp;blocksize,&nbsp;H/blocksize,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;W/blocksize].</td><td class="diff_next"></td><td class="diff_header" id="to218_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;W/blocksize].</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_20">20</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to218_20">20</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_21">21</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to218_21">21</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_22">22</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to218_22">22</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to218__top">t</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to218__top">t</a></td><td class="diff_header" id="to218_23">23</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;tensor(bfloat16),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_23">23</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td><td class="diff_next"></td><td class="diff_header" id="to218_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex128),</td><td class="diff_next"></td><td class="diff_header" id="to218_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex128),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex64),</td><td class="diff_next"></td><td class="diff_header" id="to218_26">26</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_26">26</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to218_27">27</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_27">27</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to218_28">28</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_28">28</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td><td class="diff_next"></td><td class="diff_header" id="to218_29">29</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_29">29</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td><td class="diff_next"></td><td class="diff_header" id="to218_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td><td class="diff_next"></td><td class="diff_header" id="to218_31">31</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_31">31</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td><td class="diff_next"></td><td class="diff_header" id="to218_32">32</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_32">32</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td><td class="diff_next"></td><td class="diff_header" id="to218_33">33</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_33">33</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td><td class="diff_next"></td><td class="diff_header" id="to218_34">34</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_34">34</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td><td class="diff_next"></td><td class="diff_header" id="to218_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td><td class="diff_next"></td><td class="diff_header" id="to218_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td><td class="diff_next"></td><td class="diff_header" id="to218_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td><td class="diff_next"></td><td class="diff_header" id="to218_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to218_39">39</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from218_39">39</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;and&nbsp;output&nbsp;types&nbsp;to&nbsp;all&nbsp;tensor&nbsp;types.</td><td class="diff_next"></td><td class="diff_header" id="to218_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;and&nbsp;output&nbsp;types&nbsp;to&nbsp;all&nbsp;tensor&nbsp;types.</td></tr>
            </tbody>
        </table>

.. _l-onnx-op-spacetodepth-1:
SpaceToDepth - 1
================
**Version**
* **name**: `SpaceToDepth (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#SpaceToDepth>`_
* **domain**: **main**
* **since_version**: **1**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 1**.

**Summary**
SpaceToDepth rearranges blocks of spatial data into depth. More specifically,
this op outputs a copy of the input tensor where values from the height and width dimensions
are moved to the depth dimension.

**Attributes**
* **blocksize** (required):
  Blocks of [blocksize, blocksize] are moved.

**Inputs**

* **input** (heterogeneous) - **T**:
  Input tensor of [N,C,H,W], where N is the batch axis, C is the
  channel or depth, H is the height and W is the width.

**Outputs**

* **output** (heterogeneous) - **T**:
  Output tensor of [N, C * blocksize * blocksize, H/blocksize,
  W/blocksize].

**Type Constraints**
* **T** in (
  tensor(bool),
  tensor(complex128),
  tensor(complex64),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain input and output types to all tensor types.
