
.. _l-onnx-doc-MaxPool:

=======
MaxPool
=======

.. contents::
    :local:


.. _l-onnx-op-maxpool-12:

MaxPool - 12
============

**Version**

* **name**: `MaxPool (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#MaxPool>`_
* **domain**: **main**
* **since_version**: **12**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 12**.

**Summary**

MaxPool consumes an input tensor X and applies max pooling across
the tensor according to kernel sizes, stride sizes, and pad lengths.
max pooling consisting of computing the max on all values of a
subset of the input tensor according to the kernel size and downsampling the
data into the output tensor Y for further processing. The output spatial shape will be following:
::

    output_spatial_shape[i] = floor((input_spatial_shape[i] + pad_shape[i] - ((kernel_spatial_shape[i] - 1) * dilations[i] + 1)) / strides_spatial_shape[i] + 1)

or
::

    output_spatial_shape[i] = ceil((input_spatial_shape[i] + pad_shape[i] - ((kernel_spatial_shape[i] - 1) * dilations[i] + 1)) / strides_spatial_shape[i] + 1)

if ceil_mode is enabled

::

    * pad_shape[i] is sum of pads along axis i

`auto_pad` is a DEPRECATED attribute. If you are using them currently, the output spatial shape will be following:
::

    VALID: output_spatial_shape[i] = ceil((input_spatial_shape[i] - ((kernel_spatial_shape[i] - 1) * dilations[i] + 1) + 1) / strides_spatial_shape[i])
    SAME_UPPER or SAME_LOWER: output_spatial_shape[i] = ceil(input_spatial_shape[i] / strides_spatial_shape[i])

And pad shape will be following if `SAME_UPPER` or `SAME_LOWER`:
::

    pad_shape[i] = (output_spatial_shape[i] - 1) * strides_spatial_shape[i] + ((kernel_spatial_shape[i] - 1) * dilations[i] + 1) - input_spatial_shape[i]

The output of each pooling window is maximum number of elements exclude pad.

**Attributes**

* **auto_pad**:
  auto_pad must be either NOTSET, SAME_UPPER, SAME_LOWER or VALID.
  Where default value is NOTSET, which means explicit padding is used.
  SAME_UPPER or SAME_LOWER mean pad the input so that `output_shape[i]
  = ceil(input_shape[i] / strides[i])` for each axis `i`. The padding
  is split between the two sides equally or almost equally (depending
  on whether it is even or odd). In case the padding is an odd number,
  the extra padding is added at the end for SAME_UPPER and at the
  beginning for SAME_LOWER.
* **ceil_mode**:
  Whether to use ceil or floor (default) to compute the output shape.
* **dilations**:
  Dilation value along each spatial axis of filter. If not present,
  the dilation defaults to 1 along each spatial axis.
* **kernel_shape** (required):
  The size of the kernel along each axis.
* **pads**:
  Padding for the beginning and ending along each spatial axis, it can
  take any value greater than or equal to 0. The value represent the
  number of pixels added to the beginning and end part of the
  corresponding axis. `pads` format should be as follow [x1_begin,
  x2_begin...x1_end, x2_end,...], where xi_begin the number of pixels
  added at the beginning of axis `i` and xi_end, the number of pixels
  added at the end of axis `i`. This attribute cannot be used
  simultaneously with auto_pad attribute. If not present, the padding
  defaults to 0 along start and end of each spatial axis.
* **storage_order**:
  The storage order of the tensor. 0 is row major, and 1 is column
  major.
* **strides**:
  Stride along each spatial axis. If not present, the stride defaults
  to 1 along each spatial axis.

**Inputs**

* **X** (heterogeneous) - **T**:
  Input data tensor from the previous operator; dimensions for image
  case are (N x C x H x W), where N is the batch size, C is the number
  of channels, and H and W are the height and the width of the data.
  For non image case, the dimensions are in the form of (N x C x D1 x
  D2 ... Dn), where N is the batch size. Optionally, if dimension
  denotation is in effect, the operation expects the input data tensor
  to arrive with the dimension denotation of [DATA_BATCH,
  DATA_CHANNEL, DATA_FEATURE, DATA_FEATURE ...].

**Outputs**

Between 1 and 2 outputs.

* **Y** (heterogeneous) - **T**:
  Output data tensor from average or max pooling across the input
  tensor. Dimensions will vary based on various kernel, stride, and
  pad sizes. Floor value of the dimension is used
* **Indices** (optional, heterogeneous) - **I**:
  Indices tensor from max pooling across the input tensor. The
  dimensions of indices are the same as output tensor. The values in
  indices of are the indices of the selected values during pooling.
  The indices are computed as flatten 1-D tensor, and the indices do
  not consider padding. So the values in indices are in [0, N x C x D1
  x ... x Dn).

**Type Constraints**

* **T** in (
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int8),
  tensor(uint8)
  ):
  Constrain input and output types to float and 8 bit tensors.
* **I** in (
  tensor(int64)
  ):
  Constrain index tensor to int64

**Examples**

**_maxpool_2d_uint8**

::

    """
    input_shape: [1, 1, 5, 5]
    output_shape: [1, 1, 5, 5]
    pad_shape: [4, 4] -> [2, 2, 2, 2] by axis
    """
    node = onnx.helper.make_node(
        "MaxPool",
        inputs=["x"],
        outputs=["y"],
        kernel_shape=[5, 5],
        pads=[2, 2, 2, 2],
    )
    x = np.array(
        [
            [
                [
                    [1, 2, 3, 4, 5],
                    [6, 7, 8, 9, 10],
                    [11, 12, 13, 14, 15],
                    [16, 17, 18, 19, 20],
                    [21, 22, 23, 24, 25],
                ]
            ]
        ]
    ).astype(np.uint8)
    y = np.array(
        [
            [
                [
                    [13, 14, 15, 15, 15],
                    [18, 19, 20, 20, 20],
                    [23, 24, 25, 25, 25],
                    [23, 24, 25, 25, 25],
                    [23, 24, 25, 25, 25],
                ]
            ]
        ]
    ).astype(np.uint8)

    expect(node, inputs=[x], outputs=[y], name="test_maxpool_2d_uint8")

**_maxpool_2d_precomputed_pads**

::

    """
    input_shape: [1, 1, 5, 5]
    output_shape: [1, 1, 5, 5]
    pad_shape: [4, 4] -> [2, 2, 2, 2] by axis
    """
    node = onnx.helper.make_node(
        "MaxPool",
        inputs=["x"],
        outputs=["y"],
        kernel_shape=[5, 5],
        pads=[2, 2, 2, 2],
    )
    x = np.array(
        [
            [
                [
                    [1, 2, 3, 4, 5],
                    [6, 7, 8, 9, 10],
                    [11, 12, 13, 14, 15],
                    [16, 17, 18, 19, 20],
                    [21, 22, 23, 24, 25],
                ]
            ]
        ]
    ).astype(np.float32)
    y = np.array(
        [
            [
                [
                    [13, 14, 15, 15, 15],
                    [18, 19, 20, 20, 20],
                    [23, 24, 25, 25, 25],
                    [23, 24, 25, 25, 25],
                    [23, 24, 25, 25, 25],
                ]
            ]
        ]
    ).astype(np.float32)

    expect(node, inputs=[x], outputs=[y], name="test_maxpool_2d_precomputed_pads")

**_maxpool_with_argmax_2d_precomputed_pads**

::

    """
    input_shape: [1, 1, 5, 5]
    output_shape: [1, 1, 5, 5]
    pad_shape: [4, 4] -> [2, 2, 2, 2] by axis
    """
    node = onnx.helper.make_node(
        "MaxPool",
        inputs=["x"],
        outputs=["y", "z"],
        kernel_shape=[5, 5],
        pads=[2, 2, 2, 2],
    )
    x = np.array(
        [
            [
                [
                    [1, 2, 3, 4, 5],
                    [6, 7, 8, 9, 10],
                    [11, 12, 13, 14, 15],
                    [16, 17, 18, 19, 20],
                    [21, 22, 23, 24, 25],
                ]
            ]
        ]
    ).astype(np.float32)
    y = np.array(
        [
            [
                [
                    [13, 14, 15, 15, 15],
                    [18, 19, 20, 20, 20],
                    [23, 24, 25, 25, 25],
                    [23, 24, 25, 25, 25],
                    [23, 24, 25, 25, 25],
                ]
            ]
        ]
    ).astype(np.float32)
    z = np.array(
        [
            [
                [
                    [12, 13, 14, 14, 14],
                    [17, 18, 19, 19, 19],
                    [22, 23, 24, 24, 24],
                    [22, 23, 24, 24, 24],
                    [22, 23, 24, 24, 24],
                ]
            ]
        ]
    ).astype(np.int64)

    expect(
        node,
        inputs=[x],
        outputs=[y, z],
        name="test_maxpool_with_argmax_2d_precomputed_pads",
    )

**_maxpool_2d_precomputed_strides**

::

    """
    input_shape: [1, 1, 5, 5]
    output_shape: [1, 1, 2, 2]
    """
    node = onnx.helper.make_node(
        "MaxPool", inputs=["x"], outputs=["y"], kernel_shape=[2, 2], strides=[2, 2]
    )
    x = np.array(
        [
            [
                [
                    [1, 2, 3, 4, 5],
                    [6, 7, 8, 9, 10],
                    [11, 12, 13, 14, 15],
                    [16, 17, 18, 19, 20],
                    [21, 22, 23, 24, 25],
                ]
            ]
        ]
    ).astype(np.float32)
    y = np.array([[[[7, 9], [17, 19]]]]).astype(np.float32)

    expect(
        node, inputs=[x], outputs=[y], name="test_maxpool_2d_precomputed_strides"
    )

**_maxpool_with_argmax_2d_precomputed_strides**

::

    """
    input_shape: [1, 1, 5, 5]
    output_shape: [1, 1, 2, 2]
    """
    node = onnx.helper.make_node(
        "MaxPool",
        inputs=["x"],
        outputs=["y", "z"],
        kernel_shape=[2, 2],
        strides=[2, 2],
        storage_order=1,
    )
    x = np.array(
        [
            [
                [
                    [1, 2, 3, 4, 5],
                    [6, 7, 8, 9, 10],
                    [11, 12, 13, 14, 15],
                    [16, 17, 18, 19, 20],
                    [21, 22, 23, 24, 25],
                ]
            ]
        ]
    ).astype(np.float32)
    y = np.array([[[[7, 9], [17, 19]]]]).astype(np.float32)
    z = np.array([[[[6, 16], [8, 18]]]]).astype(np.int64)

    expect(
        node,
        inputs=[x],
        outputs=[y, z],
        name="test_maxpool_with_argmax_2d_precomputed_strides",
    )

**_maxpool_2d_precomputed_same_upper**

::

    """
    input_shape: [1, 1, 5, 5]
    output_shape: [1, 1, 3, 3]
    pad_shape: [2, 2] -> [1, 1, 1, 1] by axis
    """
    node = onnx.helper.make_node(
        "MaxPool",
        inputs=["x"],
        outputs=["y"],
        kernel_shape=[3, 3],
        strides=[2, 2],
        auto_pad="SAME_UPPER",
    )
    x = np.array(
        [
            [
                [
                    [1, 2, 3, 4, 5],
                    [6, 7, 8, 9, 10],
                    [11, 12, 13, 14, 15],
                    [16, 17, 18, 19, 20],
                    [21, 22, 23, 24, 25],
                ]
            ]
        ]
    ).astype(np.float32)
    y = np.array([[[[7, 9, 10], [17, 19, 20], [22, 24, 25]]]]).astype(np.float32)

    expect(
        node, inputs=[x], outputs=[y], name="test_maxpool_2d_precomputed_same_upper"
    )

**_maxpool_1d_default**

::

    """
    input_shape: [1, 3, 32]
    output_shape: [1, 3, 31]
    """
    node = onnx.helper.make_node(
        "MaxPool",
        inputs=["x"],
        outputs=["y"],
        kernel_shape=[2],
    )
    x = np.random.randn(1, 3, 32).astype(np.float32)
    x_shape = np.shape(x)
    kernel_shape = [2]
    strides = [1]
    out_shape = get_output_shape("VALID", x_shape[2:], kernel_shape, strides)
    padded = x
    y = pool(padded, x_shape, kernel_shape, strides, out_shape, [0], "MAX")

    expect(node, inputs=[x], outputs=[y], name="test_maxpool_1d_default")

**_maxpool_2d_default**

::

    """
    input_shape: [1, 3, 32, 32]
    output_shape: [1, 3, 31, 31]
    """
    node = onnx.helper.make_node(
        "MaxPool",
        inputs=["x"],
        outputs=["y"],
        kernel_shape=[2, 2],
    )
    x = np.random.randn(1, 3, 32, 32).astype(np.float32)
    x_shape = np.shape(x)
    kernel_shape = (2, 2)
    strides = (1, 1)
    out_shape = get_output_shape("VALID", x_shape[2:], kernel_shape, strides)
    padded = x
    y = pool(padded, x_shape, kernel_shape, strides, out_shape, (0, 0), "MAX")

    expect(node, inputs=[x], outputs=[y], name="test_maxpool_2d_default")

**_maxpool_3d_default**

::

    """
    input_shape: [1, 3, 32, 32, 32]
    output_shape: [1, 3, 31, 31, 31]
    """
    node = onnx.helper.make_node(
        "MaxPool",
        inputs=["x"],
        outputs=["y"],
        kernel_shape=[2, 2, 2],
    )
    x = np.random.randn(1, 3, 32, 32, 32).astype(np.float32)
    x_shape = np.shape(x)
    kernel_shape = [2, 2, 2]
    strides = [1, 1, 1]
    out_shape = get_output_shape("VALID", x_shape[2:], kernel_shape, strides)
    padded = x
    y = pool(padded, x_shape, kernel_shape, strides, out_shape, [0, 0, 0], "MAX")

    expect(node, inputs=[x], outputs=[y], name="test_maxpool_3d_default")

**_maxpool_2d_same_upper**

::

    """
    input_shape: [1, 3, 32, 32]
    output_shape: [1, 3, 32, 32]
    pad_shape: [1, 1] -> [0, 1, 0, 1] by axis
    """
    node = onnx.helper.make_node(
        "MaxPool",
        inputs=["x"],
        outputs=["y"],
        kernel_shape=[2, 2],
        auto_pad="SAME_UPPER",
    )
    x = np.random.randn(1, 3, 32, 32).astype(np.float32)
    x_shape = np.shape(x)
    kernel_shape = (2, 2)
    strides = (1, 1)
    out_shape = get_output_shape("SAME_UPPER", x_shape[2:], kernel_shape, strides)
    pad_shape = get_pad_shape(
        "SAME_UPPER", x_shape[2:], kernel_shape, strides, out_shape
    )
    pad_top = pad_shape[0] // 2
    pad_bottom = pad_shape[0] - pad_top
    pad_left = pad_shape[1] // 2
    pad_right = pad_shape[1] - pad_left
    padded = np.pad(
        x,
        ((0, 0), (0, 0), (pad_top, pad_bottom), (pad_left, pad_right)),
        mode="constant",
        constant_values=np.nan,
    )
    y = pool(padded, x_shape, kernel_shape, strides, out_shape, pad_shape, "MAX")

    expect(node, inputs=[x], outputs=[y], name="test_maxpool_2d_same_upper")

**_maxpool_2d_same_lower**

::

    """
    input_shape: [1, 3, 32, 32]
    output_shape: [1, 3, 32, 32]
    pad_shape: [1, 1] -> [1, 0, 1, 0] by axis
    """
    node = onnx.helper.make_node(
        "MaxPool",
        inputs=["x"],
        outputs=["y"],
        kernel_shape=[2, 2],
        auto_pad="SAME_LOWER",
    )
    x = np.random.randn(1, 3, 32, 32).astype(np.float32)
    x_shape = np.shape(x)
    kernel_shape = (2, 2)
    strides = (1, 1)
    out_shape = get_output_shape("SAME_LOWER", x_shape[2:], kernel_shape, strides)
    pad_shape = get_pad_shape(
        "SAME_LOWER", x_shape[2:], kernel_shape, strides, out_shape
    )
    pad_bottom = pad_shape[0] // 2
    pad_top = pad_shape[0] - pad_bottom
    pad_right = pad_shape[1] // 2
    pad_left = pad_shape[1] - pad_right
    padded = np.pad(
        x,
        ((0, 0), (0, 0), (pad_top, pad_bottom), (pad_left, pad_right)),
        mode="constant",
        constant_values=np.nan,
    )
    y = pool(padded, x_shape, kernel_shape, strides, out_shape, pad_shape, "MAX")

    expect(node, inputs=[x], outputs=[y], name="test_maxpool_2d_same_lower")

**_maxpool_2d_pads**

::

    """
    input_shape: [1, 3, 28, 28]
    output_shape: [1, 3, 30, 30]
    pad_shape: [4, 4] -> [2, 2, 2, 2] by axis
    """
    node = onnx.helper.make_node(
        "MaxPool",
        inputs=["x"],
        outputs=["y"],
        kernel_shape=[3, 3],
        pads=[2, 2, 2, 2],
    )
    x = np.random.randn(1, 3, 28, 28).astype(np.float32)
    x_shape = np.shape(x)
    kernel_shape = (3, 3)
    strides = (1, 1)
    pad_bottom = pad_top = pad_right = pad_left = 2
    pad_shape = [pad_top + pad_bottom, pad_left + pad_right]
    out_shape = get_output_shape(
        "VALID", np.add(x_shape[2:], pad_shape), kernel_shape, strides
    )
    padded = np.pad(
        x,
        ((0, 0), (0, 0), (pad_top, pad_bottom), (pad_left, pad_right)),
        mode="constant",
        constant_values=np.nan,
    )
    y = pool(padded, x_shape, kernel_shape, strides, out_shape, pad_shape, "MAX")

    expect(node, inputs=[x], outputs=[y], name="test_maxpool_2d_pads")

**_maxpool_2d_strides**

::

    """
    input_shape: [1, 3, 32, 32]
    output_shape: [1, 3, 10, 10]
    """
    node = onnx.helper.make_node(
        "MaxPool", inputs=["x"], outputs=["y"], kernel_shape=[5, 5], strides=[3, 3]
    )
    x = np.random.randn(1, 3, 32, 32).astype(np.float32)
    x_shape = np.shape(x)
    kernel_shape = (5, 5)
    strides = (3, 3)
    out_shape = get_output_shape("VALID", x_shape[2:], kernel_shape, strides)
    padded = x
    y = pool(padded, x_shape, kernel_shape, strides, out_shape, (0, 0), "MAX")

    expect(node, inputs=[x], outputs=[y], name="test_maxpool_2d_strides")

**_maxpool_2d_ceil**

::

    """
    input_shape: [1, 1, 4, 4]
    output_shape: [1, 1, 2, 2]
    """
    node = onnx.helper.make_node(
        "MaxPool",
        inputs=["x"],
        outputs=["y"],
        kernel_shape=[3, 3],
        strides=[2, 2],
        ceil_mode=True,
    )
    x = np.array(
        [
            [
                [
                    [1, 2, 3, 4],
                    [5, 6, 7, 8],
                    [9, 10, 11, 12],
                    [13, 14, 15, 16],
                ]
            ]
        ]
    ).astype(np.float32)
    y = np.array([[[[11, 12], [15, 16]]]]).astype(np.float32)

    expect(node, inputs=[x], outputs=[y], name="test_maxpool_2d_ceil")

**_maxpool_2d_dilations**

::

    """
    input_shape: [1, 1, 4, 4]
    output_shape: [1, 1, 2, 2]
    """
    node = onnx.helper.make_node(
        "MaxPool",
        inputs=["x"],
        outputs=["y"],
        kernel_shape=[2, 2],
        strides=[1, 1],
        dilations=[2, 2],
    )
    x = np.array(
        [
            [
                [
                    [1, 2, 3, 4],
                    [5, 6, 7, 8],
                    [9, 10, 11, 12],
                    [13, 14, 15, 16],
                ]
            ]
        ]
    ).astype(np.float32)
    y = np.array([[[[11, 12], [15, 16]]]]).astype(np.float32)

    expect(node, inputs=[x], outputs=[y], name="test_maxpool_2d_dilations")

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to119__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next"><a href="#difflib_chg_to119__0">f</a></td><td class="diff_header" id="from119_1">1</td><td nowrap="nowrap">MaxPool&nbsp;consumes&nbsp;an&nbsp;input&nbsp;tensor&nbsp;X&nbsp;and&nbsp;applies&nbsp;max&nbsp;pooling&nbsp;across</td><td class="diff_next"><a href="#difflib_chg_to119__0">f</a></td><td class="diff_header" id="to119_1">1</td><td nowrap="nowrap">MaxPool&nbsp;consumes&nbsp;an&nbsp;input&nbsp;tensor&nbsp;X&nbsp;and&nbsp;applies&nbsp;max&nbsp;pooling&nbsp;across</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_2">2</td><td nowrap="nowrap">the&nbsp;tensor&nbsp;according&nbsp;to&nbsp;kernel&nbsp;sizes,&nbsp;stride&nbsp;sizes,&nbsp;and&nbsp;pad&nbsp;lengths.</td><td class="diff_next"></td><td class="diff_header" id="to119_2">2</td><td nowrap="nowrap">the&nbsp;tensor&nbsp;according&nbsp;to&nbsp;kernel&nbsp;sizes,&nbsp;stride&nbsp;sizes,&nbsp;and&nbsp;pad&nbsp;lengths.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_3">3</td><td nowrap="nowrap">max&nbsp;pooling&nbsp;consisting&nbsp;of&nbsp;computing&nbsp;the&nbsp;max&nbsp;on&nbsp;all&nbsp;values&nbsp;of&nbsp;a</td><td class="diff_next"></td><td class="diff_header" id="to119_3">3</td><td nowrap="nowrap">max&nbsp;pooling&nbsp;consisting&nbsp;of&nbsp;computing&nbsp;the&nbsp;max&nbsp;on&nbsp;all&nbsp;values&nbsp;of&nbsp;a</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_4">4</td><td nowrap="nowrap">subset&nbsp;of&nbsp;the&nbsp;input&nbsp;tensor&nbsp;according&nbsp;to&nbsp;the&nbsp;kernel&nbsp;size&nbsp;and&nbsp;downsampling&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to119_4">4</td><td nowrap="nowrap">subset&nbsp;of&nbsp;the&nbsp;input&nbsp;tensor&nbsp;according&nbsp;to&nbsp;the&nbsp;kernel&nbsp;size&nbsp;and&nbsp;downsampling&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_5">5</td><td nowrap="nowrap">data&nbsp;into&nbsp;the&nbsp;output&nbsp;tensor&nbsp;Y&nbsp;for&nbsp;further&nbsp;processing.&nbsp;The&nbsp;output&nbsp;spatial&nbsp;shape&nbsp;will&nbsp;be&nbsp;following:</td><td class="diff_next"></td><td class="diff_header" id="to119_5">5</td><td nowrap="nowrap">data&nbsp;into&nbsp;the&nbsp;output&nbsp;tensor&nbsp;Y&nbsp;for&nbsp;further&nbsp;processing.&nbsp;The&nbsp;output&nbsp;spatial&nbsp;shape&nbsp;will&nbsp;be&nbsp;following:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_6">6</td><td nowrap="nowrap">::</td><td class="diff_next"></td><td class="diff_header" id="to119_6">6</td><td nowrap="nowrap">::</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_7">7</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_7">7</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_8">8</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;floor((input_spatial_shape[i]&nbsp;+&nbsp;pad_shape[i]&nbsp;-&nbsp;((kernel_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;dilations[i]&nbsp;+&nbsp;1))&nbsp;/&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;1)</td><td class="diff_next"></td><td class="diff_header" id="to119_8">8</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;floor((input_spatial_shape[i]&nbsp;+&nbsp;pad_shape[i]&nbsp;-&nbsp;((kernel_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;dilations[i]&nbsp;+&nbsp;1))&nbsp;/&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;1)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_9">9</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_9">9</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_10">10</td><td nowrap="nowrap">or</td><td class="diff_next"></td><td class="diff_header" id="to119_10">10</td><td nowrap="nowrap">or</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_11">11</td><td nowrap="nowrap">::</td><td class="diff_next"></td><td class="diff_header" id="to119_11">11</td><td nowrap="nowrap">::</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_12">12</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_12">12</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_13">13</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil((input_spatial_shape[i]&nbsp;+&nbsp;pad_shape[i]&nbsp;-&nbsp;((kernel_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;dilations[i]&nbsp;+&nbsp;1))&nbsp;/&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;1)</td><td class="diff_next"></td><td class="diff_header" id="to119_13">13</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil((input_spatial_shape[i]&nbsp;+&nbsp;pad_shape[i]&nbsp;-&nbsp;((kernel_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;dilations[i]&nbsp;+&nbsp;1))&nbsp;/&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;1)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_14">14</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_14">14</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_15">15</td><td nowrap="nowrap">if&nbsp;ceil_mode&nbsp;is&nbsp;enabled</td><td class="diff_next"></td><td class="diff_header" id="to119_15">15</td><td nowrap="nowrap">if&nbsp;ceil_mode&nbsp;is&nbsp;enabled</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_16">16</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_16">16</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_17">17</td><td nowrap="nowrap">::</td><td class="diff_next"></td><td class="diff_header" id="to119_17">17</td><td nowrap="nowrap">::</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_18">18</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_18">18</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;pad_shape[i]&nbsp;is&nbsp;sum&nbsp;of&nbsp;pads&nbsp;along&nbsp;axis&nbsp;i</td><td class="diff_next"></td><td class="diff_header" id="to119_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;pad_shape[i]&nbsp;is&nbsp;sum&nbsp;of&nbsp;pads&nbsp;along&nbsp;axis&nbsp;i</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_20">20</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_20">20</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_21">21</td><td nowrap="nowrap">auto_pad&nbsp;is&nbsp;a&nbsp;DEPRECATED&nbsp;attribute.&nbsp;If&nbsp;you&nbsp;are&nbsp;using&nbsp;them&nbsp;currently,&nbsp;the&nbsp;output&nbsp;spatial&nbsp;shape&nbsp;will&nbsp;be&nbsp;following:</td><td class="diff_next"></td><td class="diff_header" id="to119_21">21</td><td nowrap="nowrap">auto_pad&nbsp;is&nbsp;a&nbsp;DEPRECATED&nbsp;attribute.&nbsp;If&nbsp;you&nbsp;are&nbsp;using&nbsp;them&nbsp;currently,&nbsp;the&nbsp;output&nbsp;spatial&nbsp;shape&nbsp;will&nbsp;be&nbsp;following:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_22">22</td><td nowrap="nowrap">::</td><td class="diff_next"></td><td class="diff_header" id="to119_22">22</td><td nowrap="nowrap">::</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_23">23</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_23">23</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;VALID:&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil((input_spatial_shape[i]&nbsp;-&nbsp;((kernel_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;dilations[i]&nbsp;+&nbsp;1)&nbsp;+&nbsp;1)&nbsp;/&nbsp;strides_spatial_shape[i])</td><td class="diff_next"></td><td class="diff_header" id="to119_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;VALID:&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil((input_spatial_shape[i]&nbsp;-&nbsp;((kernel_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;dilations[i]&nbsp;+&nbsp;1)&nbsp;+&nbsp;1)&nbsp;/&nbsp;strides_spatial_shape[i])</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER:&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil(input_spatial_shape[i]&nbsp;/&nbsp;strides_spatial_shape[i])</td><td class="diff_next"></td><td class="diff_header" id="to119_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER:&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil(input_spatial_shape[i]&nbsp;/&nbsp;strides_spatial_shape[i])</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_26">26</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_26">26</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_27">27</td><td nowrap="nowrap">And&nbsp;pad&nbsp;shape&nbsp;will&nbsp;be&nbsp;following&nbsp;if&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER:</td><td class="diff_next"></td><td class="diff_header" id="to119_27">27</td><td nowrap="nowrap">And&nbsp;pad&nbsp;shape&nbsp;will&nbsp;be&nbsp;following&nbsp;if&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_28">28</td><td nowrap="nowrap">::</td><td class="diff_next"></td><td class="diff_header" id="to119_28">28</td><td nowrap="nowrap">::</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_29">29</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_29">29</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;pad_shape[i]&nbsp;=&nbsp;(output_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;((kernel_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;dilations[i]&nbsp;+&nbsp;1)&nbsp;-&nbsp;input_spatial_shape[i]</td><td class="diff_next"></td><td class="diff_header" id="to119_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;pad_shape[i]&nbsp;=&nbsp;(output_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;((kernel_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;dilations[i]&nbsp;+&nbsp;1)&nbsp;-&nbsp;input_spatial_shape[i]</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_31">31</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_31">31</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_32">32</td><td nowrap="nowrap">The&nbsp;output&nbsp;of&nbsp;each&nbsp;pooling&nbsp;window&nbsp;is&nbsp;maximum&nbsp;number&nbsp;of&nbsp;elements&nbsp;exclude&nbsp;pad.</td><td class="diff_next"></td><td class="diff_header" id="to119_32">32</td><td nowrap="nowrap">The&nbsp;output&nbsp;of&nbsp;each&nbsp;pooling&nbsp;window&nbsp;is&nbsp;maximum&nbsp;number&nbsp;of&nbsp;elements&nbsp;exclude&nbsp;pad.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_33">33</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_33">33</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to119__0"></td><td class="diff_header" id="from119_34">34</td><td nowrap="nowrap">**Attributes**</td><td class="diff_next"></td><td class="diff_header" id="to119_34">34</td><td nowrap="nowrap">**Attributes**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_35">35</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_35">35</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_36">36</td><td nowrap="nowrap">*&nbsp;**auto_pad**:</td><td class="diff_next"></td><td class="diff_header" id="to119_36">36</td><td nowrap="nowrap">*&nbsp;**auto_pad**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;auto_pad&nbsp;must&nbsp;be&nbsp;either&nbsp;NOTSET,&nbsp;SAME_UPPER,&nbsp;SAME_LOWER&nbsp;or&nbsp;VALID.</td><td class="diff_next"></td><td class="diff_header" id="to119_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;auto_pad&nbsp;must&nbsp;be&nbsp;either&nbsp;NOTSET,&nbsp;SAME_UPPER,&nbsp;SAME_LOWER&nbsp;or&nbsp;VALID.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;Where&nbsp;default&nbsp;value&nbsp;is&nbsp;NOTSET,&nbsp;which&nbsp;means&nbsp;explicit&nbsp;padding&nbsp;is&nbsp;used.</td><td class="diff_next"></td><td class="diff_header" id="to119_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;Where&nbsp;default&nbsp;value&nbsp;is&nbsp;NOTSET,&nbsp;which&nbsp;means&nbsp;explicit&nbsp;padding&nbsp;is&nbsp;used.</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to119__1">n</a></td><td class="diff_header" id="from119_39">39</td><td nowrap="nowrap">&nbsp;&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER&nbsp;mean&nbsp;pad&nbsp;the&nbsp;input&nbsp;so&nbsp;that<span class="diff_sub">&nbsp;the</span>&nbsp;output</td><td class="diff_next"><a href="#difflib_chg_to119__1">n</a></td><td class="diff_header" id="to119_39">39</td><td nowrap="nowrap">&nbsp;&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER&nbsp;mean&nbsp;pad&nbsp;the&nbsp;input&nbsp;so&nbsp;that&nbsp;output<span class="diff_add">_shape[i]</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_40">40</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;spatial&nbsp;size&nbsp;match&nbsp;the&nbsp;input.In&nbsp;case&nbsp;of&nbsp;odd&nbsp;number&nbsp;add&nbsp;the&nbsp;extra</span></td><td class="diff_next"></td><td class="diff_header" id="to119_40">40</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;=&nbsp;ceil(input_shape[i]&nbsp;/&nbsp;strides[i])&nbsp;for&nbsp;each&nbsp;axis&nbsp;i.&nbsp;The&nbsp;padding</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_41">41</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;padding&nbsp;at&nbsp;the&nbsp;end&nbsp;for&nbsp;SAME_UPPER&nbsp;and&nbsp;at&nbsp;the&nbsp;beginning&nbsp;for</span></td><td class="diff_next"></td><td class="diff_header" id="to119_41">41</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;is&nbsp;split&nbsp;between&nbsp;the&nbsp;two&nbsp;sides&nbsp;equally&nbsp;or&nbsp;almost&nbsp;equally&nbsp;(depending</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_42">42</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;SAME_LOWER.&nbsp;VALID&nbsp;mean&nbsp;no&nbsp;padding.</span></td><td class="diff_next"></td><td class="diff_header" id="to119_42">42</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;on&nbsp;whether&nbsp;it&nbsp;is&nbsp;even&nbsp;or&nbsp;odd).&nbsp;In&nbsp;case&nbsp;the&nbsp;padding&nbsp;is&nbsp;an&nbsp;odd&nbsp;number,</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_43">43</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;the&nbsp;extra&nbsp;padding&nbsp;is&nbsp;added&nbsp;at&nbsp;the&nbsp;end&nbsp;for&nbsp;SAME_UPPER&nbsp;and&nbsp;at&nbsp;the</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_44">44</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;beginning&nbsp;for&nbsp;SAME_LOWER.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_43">43</td><td nowrap="nowrap">*&nbsp;**ceil_mode**:</td><td class="diff_next"></td><td class="diff_header" id="to119_45">45</td><td nowrap="nowrap">*&nbsp;**ceil_mode**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_44">44</td><td nowrap="nowrap">&nbsp;&nbsp;Whether&nbsp;to&nbsp;use&nbsp;ceil&nbsp;or&nbsp;floor&nbsp;(default)&nbsp;to&nbsp;compute&nbsp;the&nbsp;output&nbsp;shape.</td><td class="diff_next"></td><td class="diff_header" id="to119_46">46</td><td nowrap="nowrap">&nbsp;&nbsp;Whether&nbsp;to&nbsp;use&nbsp;ceil&nbsp;or&nbsp;floor&nbsp;(default)&nbsp;to&nbsp;compute&nbsp;the&nbsp;output&nbsp;shape.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_45">45</td><td nowrap="nowrap">*&nbsp;**dilations**:</td><td class="diff_next"></td><td class="diff_header" id="to119_47">47</td><td nowrap="nowrap">*&nbsp;**dilations**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_46">46</td><td nowrap="nowrap">&nbsp;&nbsp;Dilation&nbsp;value&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis&nbsp;of&nbsp;filter.&nbsp;If&nbsp;not&nbsp;present,</td><td class="diff_next"></td><td class="diff_header" id="to119_48">48</td><td nowrap="nowrap">&nbsp;&nbsp;Dilation&nbsp;value&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis&nbsp;of&nbsp;filter.&nbsp;If&nbsp;not&nbsp;present,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_47">47</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;dilation&nbsp;defaults&nbsp;to&nbsp;1&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis.</td><td class="diff_next"></td><td class="diff_header" id="to119_49">49</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;dilation&nbsp;defaults&nbsp;to&nbsp;1&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_48">48</td><td nowrap="nowrap">*&nbsp;**kernel_shape**&nbsp;(required):</td><td class="diff_next"></td><td class="diff_header" id="to119_50">50</td><td nowrap="nowrap">*&nbsp;**kernel_shape**&nbsp;(required):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_49">49</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;size&nbsp;of&nbsp;the&nbsp;kernel&nbsp;along&nbsp;each&nbsp;axis.</td><td class="diff_next"></td><td class="diff_header" id="to119_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;size&nbsp;of&nbsp;the&nbsp;kernel&nbsp;along&nbsp;each&nbsp;axis.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_50">50</td><td nowrap="nowrap">*&nbsp;**pads**:</td><td class="diff_next"></td><td class="diff_header" id="to119_52">52</td><td nowrap="nowrap">*&nbsp;**pads**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;Padding&nbsp;for&nbsp;the&nbsp;beginning&nbsp;and&nbsp;ending&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis,&nbsp;it&nbsp;can</td><td class="diff_next"></td><td class="diff_header" id="to119_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;Padding&nbsp;for&nbsp;the&nbsp;beginning&nbsp;and&nbsp;ending&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis,&nbsp;it&nbsp;can</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;take&nbsp;any&nbsp;value&nbsp;greater&nbsp;than&nbsp;or&nbsp;equal&nbsp;to&nbsp;0.&nbsp;The&nbsp;value&nbsp;represent&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to119_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;take&nbsp;any&nbsp;value&nbsp;greater&nbsp;than&nbsp;or&nbsp;equal&nbsp;to&nbsp;0.&nbsp;The&nbsp;value&nbsp;represent&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;number&nbsp;of&nbsp;pixels&nbsp;added&nbsp;to&nbsp;the&nbsp;beginning&nbsp;and&nbsp;end&nbsp;part&nbsp;of&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to119_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;number&nbsp;of&nbsp;pixels&nbsp;added&nbsp;to&nbsp;the&nbsp;beginning&nbsp;and&nbsp;end&nbsp;part&nbsp;of&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;corresponding&nbsp;axis.&nbsp;pads&nbsp;format&nbsp;should&nbsp;be&nbsp;as&nbsp;follow&nbsp;[x1_begin,</td><td class="diff_next"></td><td class="diff_header" id="to119_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;corresponding&nbsp;axis.&nbsp;pads&nbsp;format&nbsp;should&nbsp;be&nbsp;as&nbsp;follow&nbsp;[x1_begin,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;x2_begin...x1_end,&nbsp;x2_end,...],&nbsp;where&nbsp;xi_begin&nbsp;the&nbsp;number&nbsp;of&nbsp;pixels</td><td class="diff_next"></td><td class="diff_header" id="to119_57">57</td><td nowrap="nowrap">&nbsp;&nbsp;x2_begin...x1_end,&nbsp;x2_end,...],&nbsp;where&nbsp;xi_begin&nbsp;the&nbsp;number&nbsp;of&nbsp;pixels</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;added&nbsp;at&nbsp;the&nbsp;beginning&nbsp;of&nbsp;axis&nbsp;i&nbsp;and&nbsp;xi_end,&nbsp;the&nbsp;number&nbsp;of&nbsp;pixels</td><td class="diff_next"></td><td class="diff_header" id="to119_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;added&nbsp;at&nbsp;the&nbsp;beginning&nbsp;of&nbsp;axis&nbsp;i&nbsp;and&nbsp;xi_end,&nbsp;the&nbsp;number&nbsp;of&nbsp;pixels</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_57">57</td><td nowrap="nowrap">&nbsp;&nbsp;added&nbsp;at&nbsp;the&nbsp;end&nbsp;of&nbsp;axis&nbsp;i.&nbsp;This&nbsp;attribute&nbsp;cannot&nbsp;be&nbsp;used</td><td class="diff_next"></td><td class="diff_header" id="to119_59">59</td><td nowrap="nowrap">&nbsp;&nbsp;added&nbsp;at&nbsp;the&nbsp;end&nbsp;of&nbsp;axis&nbsp;i.&nbsp;This&nbsp;attribute&nbsp;cannot&nbsp;be&nbsp;used</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;simultaneously&nbsp;with&nbsp;auto_pad&nbsp;attribute.&nbsp;If&nbsp;not&nbsp;present,&nbsp;the&nbsp;padding</td><td class="diff_next"></td><td class="diff_header" id="to119_60">60</td><td nowrap="nowrap">&nbsp;&nbsp;simultaneously&nbsp;with&nbsp;auto_pad&nbsp;attribute.&nbsp;If&nbsp;not&nbsp;present,&nbsp;the&nbsp;padding</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_59">59</td><td nowrap="nowrap">&nbsp;&nbsp;defaults&nbsp;to&nbsp;0&nbsp;along&nbsp;start&nbsp;and&nbsp;end&nbsp;of&nbsp;each&nbsp;spatial&nbsp;axis.</td><td class="diff_next"></td><td class="diff_header" id="to119_61">61</td><td nowrap="nowrap">&nbsp;&nbsp;defaults&nbsp;to&nbsp;0&nbsp;along&nbsp;start&nbsp;and&nbsp;end&nbsp;of&nbsp;each&nbsp;spatial&nbsp;axis.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_60">60</td><td nowrap="nowrap">*&nbsp;**storage_order**:</td><td class="diff_next"></td><td class="diff_header" id="to119_62">62</td><td nowrap="nowrap">*&nbsp;**storage_order**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_61">61</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;storage&nbsp;order&nbsp;of&nbsp;the&nbsp;tensor.&nbsp;0&nbsp;is&nbsp;row&nbsp;major,&nbsp;and&nbsp;1&nbsp;is&nbsp;column</td><td class="diff_next"></td><td class="diff_header" id="to119_63">63</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;storage&nbsp;order&nbsp;of&nbsp;the&nbsp;tensor.&nbsp;0&nbsp;is&nbsp;row&nbsp;major,&nbsp;and&nbsp;1&nbsp;is&nbsp;column</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_62">62</td><td nowrap="nowrap">&nbsp;&nbsp;major.</td><td class="diff_next"></td><td class="diff_header" id="to119_64">64</td><td nowrap="nowrap">&nbsp;&nbsp;major.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_63">63</td><td nowrap="nowrap">*&nbsp;**strides**:</td><td class="diff_next"></td><td class="diff_header" id="to119_65">65</td><td nowrap="nowrap">*&nbsp;**strides**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_64">64</td><td nowrap="nowrap">&nbsp;&nbsp;Stride&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis.&nbsp;If&nbsp;not&nbsp;present,&nbsp;the&nbsp;stride&nbsp;defaults</td><td class="diff_next"></td><td class="diff_header" id="to119_66">66</td><td nowrap="nowrap">&nbsp;&nbsp;Stride&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis.&nbsp;If&nbsp;not&nbsp;present,&nbsp;the&nbsp;stride&nbsp;defaults</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_65">65</td><td nowrap="nowrap">&nbsp;&nbsp;to&nbsp;1&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis.</td><td class="diff_next"></td><td class="diff_header" id="to119_67">67</td><td nowrap="nowrap">&nbsp;&nbsp;to&nbsp;1&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_66">66</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_68">68</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_67">67</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to119_69">69</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_68">68</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_70">70</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_69">69</td><td nowrap="nowrap">*&nbsp;**X**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to119_71">71</td><td nowrap="nowrap">*&nbsp;**X**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_70">70</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;data&nbsp;tensor&nbsp;from&nbsp;the&nbsp;previous&nbsp;operator;&nbsp;dimensions&nbsp;for&nbsp;image</td><td class="diff_next"></td><td class="diff_header" id="to119_72">72</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;data&nbsp;tensor&nbsp;from&nbsp;the&nbsp;previous&nbsp;operator;&nbsp;dimensions&nbsp;for&nbsp;image</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_71">71</td><td nowrap="nowrap">&nbsp;&nbsp;case&nbsp;are&nbsp;(N&nbsp;x&nbsp;C&nbsp;x&nbsp;H&nbsp;x&nbsp;W),&nbsp;where&nbsp;N&nbsp;is&nbsp;the&nbsp;batch&nbsp;size,&nbsp;C&nbsp;is&nbsp;the&nbsp;number</td><td class="diff_next"></td><td class="diff_header" id="to119_73">73</td><td nowrap="nowrap">&nbsp;&nbsp;case&nbsp;are&nbsp;(N&nbsp;x&nbsp;C&nbsp;x&nbsp;H&nbsp;x&nbsp;W),&nbsp;where&nbsp;N&nbsp;is&nbsp;the&nbsp;batch&nbsp;size,&nbsp;C&nbsp;is&nbsp;the&nbsp;number</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_72">72</td><td nowrap="nowrap">&nbsp;&nbsp;of&nbsp;channels,&nbsp;and&nbsp;H&nbsp;and&nbsp;W&nbsp;are&nbsp;the&nbsp;height&nbsp;and&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;data.</td><td class="diff_next"></td><td class="diff_header" id="to119_74">74</td><td nowrap="nowrap">&nbsp;&nbsp;of&nbsp;channels,&nbsp;and&nbsp;H&nbsp;and&nbsp;W&nbsp;are&nbsp;the&nbsp;height&nbsp;and&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;data.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_73">73</td><td nowrap="nowrap">&nbsp;&nbsp;For&nbsp;non&nbsp;image&nbsp;case,&nbsp;the&nbsp;dimensions&nbsp;are&nbsp;in&nbsp;the&nbsp;form&nbsp;of&nbsp;(N&nbsp;x&nbsp;C&nbsp;x&nbsp;D1&nbsp;x</td><td class="diff_next"></td><td class="diff_header" id="to119_75">75</td><td nowrap="nowrap">&nbsp;&nbsp;For&nbsp;non&nbsp;image&nbsp;case,&nbsp;the&nbsp;dimensions&nbsp;are&nbsp;in&nbsp;the&nbsp;form&nbsp;of&nbsp;(N&nbsp;x&nbsp;C&nbsp;x&nbsp;D1&nbsp;x</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_74">74</td><td nowrap="nowrap">&nbsp;&nbsp;D2&nbsp;...&nbsp;Dn),&nbsp;where&nbsp;N&nbsp;is&nbsp;the&nbsp;batch&nbsp;size.&nbsp;Optionally,&nbsp;if&nbsp;dimension</td><td class="diff_next"></td><td class="diff_header" id="to119_76">76</td><td nowrap="nowrap">&nbsp;&nbsp;D2&nbsp;...&nbsp;Dn),&nbsp;where&nbsp;N&nbsp;is&nbsp;the&nbsp;batch&nbsp;size.&nbsp;Optionally,&nbsp;if&nbsp;dimension</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_75">75</td><td nowrap="nowrap">&nbsp;&nbsp;denotation&nbsp;is&nbsp;in&nbsp;effect,&nbsp;the&nbsp;operation&nbsp;expects&nbsp;the&nbsp;input&nbsp;data&nbsp;tensor</td><td class="diff_next"></td><td class="diff_header" id="to119_77">77</td><td nowrap="nowrap">&nbsp;&nbsp;denotation&nbsp;is&nbsp;in&nbsp;effect,&nbsp;the&nbsp;operation&nbsp;expects&nbsp;the&nbsp;input&nbsp;data&nbsp;tensor</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_76">76</td><td nowrap="nowrap">&nbsp;&nbsp;to&nbsp;arrive&nbsp;with&nbsp;the&nbsp;dimension&nbsp;denotation&nbsp;of&nbsp;[DATA_BATCH,</td><td class="diff_next"></td><td class="diff_header" id="to119_78">78</td><td nowrap="nowrap">&nbsp;&nbsp;to&nbsp;arrive&nbsp;with&nbsp;the&nbsp;dimension&nbsp;denotation&nbsp;of&nbsp;[DATA_BATCH,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_77">77</td><td nowrap="nowrap">&nbsp;&nbsp;DATA_CHANNEL,&nbsp;DATA_FEATURE,&nbsp;DATA_FEATURE&nbsp;...].</td><td class="diff_next"></td><td class="diff_header" id="to119_79">79</td><td nowrap="nowrap">&nbsp;&nbsp;DATA_CHANNEL,&nbsp;DATA_FEATURE,&nbsp;DATA_FEATURE&nbsp;...].</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_78">78</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_80">80</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_79">79</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to119_81">81</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_80">80</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_82">82</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_81">81</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2&nbsp;outputs.</td><td class="diff_next"></td><td class="diff_header" id="to119_83">83</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2&nbsp;outputs.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_82">82</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_84">84</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_83">83</td><td nowrap="nowrap">*&nbsp;**Y**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to119_85">85</td><td nowrap="nowrap">*&nbsp;**Y**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_84">84</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;data&nbsp;tensor&nbsp;from&nbsp;average&nbsp;or&nbsp;max&nbsp;pooling&nbsp;across&nbsp;the&nbsp;input</td><td class="diff_next"></td><td class="diff_header" id="to119_86">86</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;data&nbsp;tensor&nbsp;from&nbsp;average&nbsp;or&nbsp;max&nbsp;pooling&nbsp;across&nbsp;the&nbsp;input</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_85">85</td><td nowrap="nowrap">&nbsp;&nbsp;tensor.&nbsp;Dimensions&nbsp;will&nbsp;vary&nbsp;based&nbsp;on&nbsp;various&nbsp;kernel,&nbsp;stride,&nbsp;and</td><td class="diff_next"></td><td class="diff_header" id="to119_87">87</td><td nowrap="nowrap">&nbsp;&nbsp;tensor.&nbsp;Dimensions&nbsp;will&nbsp;vary&nbsp;based&nbsp;on&nbsp;various&nbsp;kernel,&nbsp;stride,&nbsp;and</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_86">86</td><td nowrap="nowrap">&nbsp;&nbsp;pad&nbsp;sizes.&nbsp;Floor&nbsp;value&nbsp;of&nbsp;the&nbsp;dimension&nbsp;is&nbsp;used</td><td class="diff_next"></td><td class="diff_header" id="to119_88">88</td><td nowrap="nowrap">&nbsp;&nbsp;pad&nbsp;sizes.&nbsp;Floor&nbsp;value&nbsp;of&nbsp;the&nbsp;dimension&nbsp;is&nbsp;used</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_87">87</td><td nowrap="nowrap">*&nbsp;**Indices**&nbsp;(optional,&nbsp;heterogeneous)&nbsp;-&nbsp;**I**:</td><td class="diff_next"></td><td class="diff_header" id="to119_89">89</td><td nowrap="nowrap">*&nbsp;**Indices**&nbsp;(optional,&nbsp;heterogeneous)&nbsp;-&nbsp;**I**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_88">88</td><td nowrap="nowrap">&nbsp;&nbsp;Indices&nbsp;tensor&nbsp;from&nbsp;max&nbsp;pooling&nbsp;across&nbsp;the&nbsp;input&nbsp;tensor.&nbsp;The</td><td class="diff_next"></td><td class="diff_header" id="to119_90">90</td><td nowrap="nowrap">&nbsp;&nbsp;Indices&nbsp;tensor&nbsp;from&nbsp;max&nbsp;pooling&nbsp;across&nbsp;the&nbsp;input&nbsp;tensor.&nbsp;The</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_89">89</td><td nowrap="nowrap">&nbsp;&nbsp;dimensions&nbsp;of&nbsp;indices&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;output&nbsp;tensor.&nbsp;The&nbsp;values&nbsp;in</td><td class="diff_next"></td><td class="diff_header" id="to119_91">91</td><td nowrap="nowrap">&nbsp;&nbsp;dimensions&nbsp;of&nbsp;indices&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;output&nbsp;tensor.&nbsp;The&nbsp;values&nbsp;in</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_90">90</td><td nowrap="nowrap">&nbsp;&nbsp;indices&nbsp;of&nbsp;are&nbsp;the&nbsp;indices&nbsp;of&nbsp;the&nbsp;selected&nbsp;values&nbsp;during&nbsp;pooling.</td><td class="diff_next"></td><td class="diff_header" id="to119_92">92</td><td nowrap="nowrap">&nbsp;&nbsp;indices&nbsp;of&nbsp;are&nbsp;the&nbsp;indices&nbsp;of&nbsp;the&nbsp;selected&nbsp;values&nbsp;during&nbsp;pooling.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_91">91</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;indices&nbsp;are&nbsp;computed&nbsp;as&nbsp;flatten&nbsp;1-D&nbsp;tensor,&nbsp;and&nbsp;the&nbsp;indices&nbsp;do</td><td class="diff_next"></td><td class="diff_header" id="to119_93">93</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;indices&nbsp;are&nbsp;computed&nbsp;as&nbsp;flatten&nbsp;1-D&nbsp;tensor,&nbsp;and&nbsp;the&nbsp;indices&nbsp;do</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_92">92</td><td nowrap="nowrap">&nbsp;&nbsp;not&nbsp;consider&nbsp;padding.&nbsp;So&nbsp;the&nbsp;values&nbsp;in&nbsp;indices&nbsp;are&nbsp;in&nbsp;[0,&nbsp;N&nbsp;x&nbsp;C&nbsp;x&nbsp;D1</td><td class="diff_next"></td><td class="diff_header" id="to119_94">94</td><td nowrap="nowrap">&nbsp;&nbsp;not&nbsp;consider&nbsp;padding.&nbsp;So&nbsp;the&nbsp;values&nbsp;in&nbsp;indices&nbsp;are&nbsp;in&nbsp;[0,&nbsp;N&nbsp;x&nbsp;C&nbsp;x&nbsp;D1</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_93">93</td><td nowrap="nowrap">&nbsp;&nbsp;x&nbsp;...&nbsp;x&nbsp;Dn).</td><td class="diff_next"></td><td class="diff_header" id="to119_95">95</td><td nowrap="nowrap">&nbsp;&nbsp;x&nbsp;...&nbsp;x&nbsp;Dn).</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_94">94</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_96">96</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to119__1"></td><td class="diff_header" id="from119_95">95</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to119_97">97</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_96">96</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_98">98</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_97">97</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to119_99">99</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_98">98</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to119_100">100</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to119__2"></td><td class="diff_header" id="from119_99">99</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to119_101">101</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to119__2">n</a></td><td class="diff_header" id="from119_100">100</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16)</td><td class="diff_next"><a href="#difflib_chg_to119__2">n</a></td><td class="diff_header" id="to119_102">102</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16)<span class="diff_add">,</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_103">103</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;tensor(int8),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to119_104">104</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;tensor(uint8)</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_101">101</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to119_105">105</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to119__top">t</a></td><td class="diff_header" id="from119_102">102</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;and&nbsp;output&nbsp;types&nbsp;to&nbsp;float&nbsp;tensors.</td><td class="diff_next"><a href="#difflib_chg_to119__top">t</a></td><td class="diff_header" id="to119_106">106</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;and&nbsp;output&nbsp;types&nbsp;to&nbsp;float<span class="diff_add">&nbsp;and&nbsp;8&nbsp;bit</span>&nbsp;tensors.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_103">103</td><td nowrap="nowrap">*&nbsp;**I**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to119_107">107</td><td nowrap="nowrap">*&nbsp;**I**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_104">104</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64)</td><td class="diff_next"></td><td class="diff_header" id="to119_108">108</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_105">105</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to119_109">109</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from119_106">106</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;index&nbsp;tensor&nbsp;to&nbsp;int64</td><td class="diff_next"></td><td class="diff_header" id="to119_110">110</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;index&nbsp;tensor&nbsp;to&nbsp;int64</td></tr>
            </tbody>
        </table>

.. _l-onnx-op-maxpool-11:

MaxPool - 11
============

**Version**

* **name**: `MaxPool (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#MaxPool>`_
* **domain**: **main**
* **since_version**: **11**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 11**.

**Summary**

MaxPool consumes an input tensor X and applies max pooling across
the tensor according to kernel sizes, stride sizes, and pad lengths.
max pooling consisting of computing the max on all values of a
subset of the input tensor according to the kernel size and downsampling the
data into the output tensor Y for further processing. The output spatial shape will be following:
::

    output_spatial_shape[i] = floor((input_spatial_shape[i] + pad_shape[i] - ((kernel_spatial_shape[i] - 1) * dilations[i] + 1)) / strides_spatial_shape[i] + 1)

or
::

    output_spatial_shape[i] = ceil((input_spatial_shape[i] + pad_shape[i] - ((kernel_spatial_shape[i] - 1) * dilations[i] + 1)) / strides_spatial_shape[i] + 1)

if ceil_mode is enabled

::

    * pad_shape[i] is sum of pads along axis i

`auto_pad` is a DEPRECATED attribute. If you are using them currently, the output spatial shape will be following:
::

    VALID: output_spatial_shape[i] = ceil((input_spatial_shape[i] - ((kernel_spatial_shape[i] - 1) * dilations[i] + 1) + 1) / strides_spatial_shape[i])
    SAME_UPPER or SAME_LOWER: output_spatial_shape[i] = ceil(input_spatial_shape[i] / strides_spatial_shape[i])

And pad shape will be following if `SAME_UPPER` or `SAME_LOWER`:
::

    pad_shape[i] = (output_spatial_shape[i] - 1) * strides_spatial_shape[i] + ((kernel_spatial_shape[i] - 1) * dilations[i] + 1) - input_spatial_shape[i]

The output of each pooling window is maximum number of elements exclude pad.

**Attributes**

* **auto_pad**:
  auto_pad must be either NOTSET, SAME_UPPER, SAME_LOWER or VALID.
  Where default value is NOTSET, which means explicit padding is used.
  SAME_UPPER or SAME_LOWER mean pad the input so that the output
  spatial size match the input.In case of odd number add the extra
  padding at the end for SAME_UPPER and at the beginning for
  SAME_LOWER. VALID mean no padding.
* **ceil_mode**:
  Whether to use ceil or floor (default) to compute the output shape.
* **dilations**:
  Dilation value along each spatial axis of filter. If not present,
  the dilation defaults to 1 along each spatial axis.
* **kernel_shape** (required):
  The size of the kernel along each axis.
* **pads**:
  Padding for the beginning and ending along each spatial axis, it can
  take any value greater than or equal to 0. The value represent the
  number of pixels added to the beginning and end part of the
  corresponding axis. `pads` format should be as follow [x1_begin,
  x2_begin...x1_end, x2_end,...], where xi_begin the number of pixels
  added at the beginning of axis `i` and xi_end, the number of pixels
  added at the end of axis `i`. This attribute cannot be used
  simultaneously with auto_pad attribute. If not present, the padding
  defaults to 0 along start and end of each spatial axis.
* **storage_order**:
  The storage order of the tensor. 0 is row major, and 1 is column
  major.
* **strides**:
  Stride along each spatial axis. If not present, the stride defaults
  to 1 along each spatial axis.

**Inputs**

* **X** (heterogeneous) - **T**:
  Input data tensor from the previous operator; dimensions for image
  case are (N x C x H x W), where N is the batch size, C is the number
  of channels, and H and W are the height and the width of the data.
  For non image case, the dimensions are in the form of (N x C x D1 x
  D2 ... Dn), where N is the batch size. Optionally, if dimension
  denotation is in effect, the operation expects the input data tensor
  to arrive with the dimension denotation of [DATA_BATCH,
  DATA_CHANNEL, DATA_FEATURE, DATA_FEATURE ...].

**Outputs**

Between 1 and 2 outputs.

* **Y** (heterogeneous) - **T**:
  Output data tensor from average or max pooling across the input
  tensor. Dimensions will vary based on various kernel, stride, and
  pad sizes. Floor value of the dimension is used
* **Indices** (optional, heterogeneous) - **I**:
  Indices tensor from max pooling across the input tensor. The
  dimensions of indices are the same as output tensor. The values in
  indices of are the indices of the selected values during pooling.
  The indices are computed as flatten 1-D tensor, and the indices do
  not consider padding. So the values in indices are in [0, N x C x D1
  x ... x Dn).

**Type Constraints**

* **T** in (
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain input and output types to float tensors.
* **I** in (
  tensor(int64)
  ):
  Constrain index tensor to int64

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to120__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next"><a href="#difflib_chg_to120__0">f</a></td><td class="diff_header" id="from120_1">1</td><td nowrap="nowrap">MaxPool&nbsp;consumes&nbsp;an&nbsp;input&nbsp;tensor&nbsp;X&nbsp;and&nbsp;applies&nbsp;max&nbsp;pooling&nbsp;across</td><td class="diff_next"><a href="#difflib_chg_to120__0">f</a></td><td class="diff_header" id="to120_1">1</td><td nowrap="nowrap">MaxPool&nbsp;consumes&nbsp;an&nbsp;input&nbsp;tensor&nbsp;X&nbsp;and&nbsp;applies&nbsp;max&nbsp;pooling&nbsp;across</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_2">2</td><td nowrap="nowrap">the&nbsp;tensor&nbsp;according&nbsp;to&nbsp;kernel&nbsp;sizes,&nbsp;stride&nbsp;sizes,&nbsp;and&nbsp;pad&nbsp;lengths.</td><td class="diff_next"></td><td class="diff_header" id="to120_2">2</td><td nowrap="nowrap">the&nbsp;tensor&nbsp;according&nbsp;to&nbsp;kernel&nbsp;sizes,&nbsp;stride&nbsp;sizes,&nbsp;and&nbsp;pad&nbsp;lengths.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_3">3</td><td nowrap="nowrap">max&nbsp;pooling&nbsp;consisting&nbsp;of&nbsp;computing&nbsp;the&nbsp;max&nbsp;on&nbsp;all&nbsp;values&nbsp;of&nbsp;a</td><td class="diff_next"></td><td class="diff_header" id="to120_3">3</td><td nowrap="nowrap">max&nbsp;pooling&nbsp;consisting&nbsp;of&nbsp;computing&nbsp;the&nbsp;max&nbsp;on&nbsp;all&nbsp;values&nbsp;of&nbsp;a</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_4">4</td><td nowrap="nowrap">subset&nbsp;of&nbsp;the&nbsp;input&nbsp;tensor&nbsp;according&nbsp;to&nbsp;the&nbsp;kernel&nbsp;size&nbsp;and&nbsp;downsampling&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to120_4">4</td><td nowrap="nowrap">subset&nbsp;of&nbsp;the&nbsp;input&nbsp;tensor&nbsp;according&nbsp;to&nbsp;the&nbsp;kernel&nbsp;size&nbsp;and&nbsp;downsampling&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_5">5</td><td nowrap="nowrap">data&nbsp;into&nbsp;the&nbsp;output&nbsp;tensor&nbsp;Y&nbsp;for&nbsp;further&nbsp;processing.&nbsp;The&nbsp;output&nbsp;spatial&nbsp;shape&nbsp;will&nbsp;be&nbsp;following:</td><td class="diff_next"></td><td class="diff_header" id="to120_5">5</td><td nowrap="nowrap">data&nbsp;into&nbsp;the&nbsp;output&nbsp;tensor&nbsp;Y&nbsp;for&nbsp;further&nbsp;processing.&nbsp;The&nbsp;output&nbsp;spatial&nbsp;shape&nbsp;will&nbsp;be&nbsp;following:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_6">6</td><td nowrap="nowrap">::</td><td class="diff_next"></td><td class="diff_header" id="to120_6">6</td><td nowrap="nowrap">::</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_7">7</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_7">7</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_8">8</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;floor((input_spatial_shape[i]&nbsp;+&nbsp;pad_shape[i]&nbsp;-&nbsp;((kernel_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;dilations[i]&nbsp;+&nbsp;1))&nbsp;/&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;1)</td><td class="diff_next"></td><td class="diff_header" id="to120_8">8</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;floor((input_spatial_shape[i]&nbsp;+&nbsp;pad_shape[i]&nbsp;-&nbsp;((kernel_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;dilations[i]&nbsp;+&nbsp;1))&nbsp;/&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;1)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_9">9</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_9">9</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_10">10</td><td nowrap="nowrap">or</td><td class="diff_next"></td><td class="diff_header" id="to120_10">10</td><td nowrap="nowrap">or</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_11">11</td><td nowrap="nowrap">::</td><td class="diff_next"></td><td class="diff_header" id="to120_11">11</td><td nowrap="nowrap">::</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_12">12</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_12">12</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_13">13</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil((input_spatial_shape[i]&nbsp;+&nbsp;pad_shape[i]&nbsp;-&nbsp;((kernel_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;dilations[i]&nbsp;+&nbsp;1))&nbsp;/&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;1)</td><td class="diff_next"></td><td class="diff_header" id="to120_13">13</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil((input_spatial_shape[i]&nbsp;+&nbsp;pad_shape[i]&nbsp;-&nbsp;((kernel_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;dilations[i]&nbsp;+&nbsp;1))&nbsp;/&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;1)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_14">14</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_14">14</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_15">15</td><td nowrap="nowrap">if&nbsp;ceil_mode&nbsp;is&nbsp;enabled</td><td class="diff_next"></td><td class="diff_header" id="to120_15">15</td><td nowrap="nowrap">if&nbsp;ceil_mode&nbsp;is&nbsp;enabled</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_16">16</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_16">16</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_17">17</td><td nowrap="nowrap">::</td><td class="diff_next"></td><td class="diff_header" id="to120_17">17</td><td nowrap="nowrap">::</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_18">18</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_18">18</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;pad_shape[i]&nbsp;is&nbsp;sum&nbsp;of&nbsp;pads&nbsp;along&nbsp;axis&nbsp;i</td><td class="diff_next"></td><td class="diff_header" id="to120_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;pad_shape[i]&nbsp;is&nbsp;sum&nbsp;of&nbsp;pads&nbsp;along&nbsp;axis&nbsp;i</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_20">20</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_20">20</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_21">21</td><td nowrap="nowrap">auto_pad&nbsp;is&nbsp;a&nbsp;DEPRECATED&nbsp;attribute.&nbsp;If&nbsp;you&nbsp;are&nbsp;using&nbsp;them&nbsp;currently,&nbsp;the&nbsp;output&nbsp;spatial&nbsp;shape&nbsp;will&nbsp;be&nbsp;following:</td><td class="diff_next"></td><td class="diff_header" id="to120_21">21</td><td nowrap="nowrap">auto_pad&nbsp;is&nbsp;a&nbsp;DEPRECATED&nbsp;attribute.&nbsp;If&nbsp;you&nbsp;are&nbsp;using&nbsp;them&nbsp;currently,&nbsp;the&nbsp;output&nbsp;spatial&nbsp;shape&nbsp;will&nbsp;be&nbsp;following:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_22">22</td><td nowrap="nowrap">::</td><td class="diff_next"></td><td class="diff_header" id="to120_22">22</td><td nowrap="nowrap">::</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_23">23</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_23">23</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;VALID:&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil((input_spatial_shape[i]&nbsp;-&nbsp;((kernel_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;dilations[i]&nbsp;+&nbsp;1)&nbsp;+&nbsp;1)&nbsp;/&nbsp;strides_spatial_shape[i])</td><td class="diff_next"></td><td class="diff_header" id="to120_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;VALID:&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil((input_spatial_shape[i]&nbsp;-&nbsp;((kernel_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;dilations[i]&nbsp;+&nbsp;1)&nbsp;+&nbsp;1)&nbsp;/&nbsp;strides_spatial_shape[i])</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER:&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil(input_spatial_shape[i]&nbsp;/&nbsp;strides_spatial_shape[i])</td><td class="diff_next"></td><td class="diff_header" id="to120_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER:&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil(input_spatial_shape[i]&nbsp;/&nbsp;strides_spatial_shape[i])</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_26">26</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_26">26</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_27">27</td><td nowrap="nowrap">And&nbsp;pad&nbsp;shape&nbsp;will&nbsp;be&nbsp;following&nbsp;if&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER:</td><td class="diff_next"></td><td class="diff_header" id="to120_27">27</td><td nowrap="nowrap">And&nbsp;pad&nbsp;shape&nbsp;will&nbsp;be&nbsp;following&nbsp;if&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_28">28</td><td nowrap="nowrap">::</td><td class="diff_next"></td><td class="diff_header" id="to120_28">28</td><td nowrap="nowrap">::</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_29">29</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_29">29</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;pad_shape[i]&nbsp;=&nbsp;(output_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;((kernel_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;dilations[i]&nbsp;+&nbsp;1)&nbsp;-&nbsp;input_spatial_shape[i]</td><td class="diff_next"></td><td class="diff_header" id="to120_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;pad_shape[i]&nbsp;=&nbsp;(output_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;((kernel_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;dilations[i]&nbsp;+&nbsp;1)&nbsp;-&nbsp;input_spatial_shape[i]</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_31">31</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_31">31</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_32">32</td><td nowrap="nowrap">The&nbsp;output&nbsp;of&nbsp;each&nbsp;pooling&nbsp;window&nbsp;is&nbsp;maximum&nbsp;number&nbsp;of&nbsp;elements&nbsp;exclude&nbsp;pad.</td><td class="diff_next"></td><td class="diff_header" id="to120_32">32</td><td nowrap="nowrap">The&nbsp;output&nbsp;of&nbsp;each&nbsp;pooling&nbsp;window&nbsp;is&nbsp;maximum&nbsp;number&nbsp;of&nbsp;elements&nbsp;exclude&nbsp;pad.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_33">33</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_33">33</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_34">34</td><td nowrap="nowrap">**Attributes**</td><td class="diff_next"></td><td class="diff_header" id="to120_34">34</td><td nowrap="nowrap">**Attributes**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_35">35</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_35">35</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_36">36</td><td nowrap="nowrap">*&nbsp;**auto_pad**:</td><td class="diff_next"></td><td class="diff_header" id="to120_36">36</td><td nowrap="nowrap">*&nbsp;**auto_pad**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;auto_pad&nbsp;must&nbsp;be&nbsp;either&nbsp;NOTSET,&nbsp;SAME_UPPER,&nbsp;SAME_LOWER&nbsp;or&nbsp;VALID.</td><td class="diff_next"></td><td class="diff_header" id="to120_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;auto_pad&nbsp;must&nbsp;be&nbsp;either&nbsp;NOTSET,&nbsp;SAME_UPPER,&nbsp;SAME_LOWER&nbsp;or&nbsp;VALID.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;Where&nbsp;default&nbsp;value&nbsp;is&nbsp;NOTSET,&nbsp;which&nbsp;means&nbsp;explicit&nbsp;padding&nbsp;is&nbsp;used.</td><td class="diff_next"></td><td class="diff_header" id="to120_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;Where&nbsp;default&nbsp;value&nbsp;is&nbsp;NOTSET,&nbsp;which&nbsp;means&nbsp;explicit&nbsp;padding&nbsp;is&nbsp;used.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_39">39</td><td nowrap="nowrap">&nbsp;&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER&nbsp;mean&nbsp;pad&nbsp;the&nbsp;input&nbsp;so&nbsp;that&nbsp;the&nbsp;output</td><td class="diff_next"></td><td class="diff_header" id="to120_39">39</td><td nowrap="nowrap">&nbsp;&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER&nbsp;mean&nbsp;pad&nbsp;the&nbsp;input&nbsp;so&nbsp;that&nbsp;the&nbsp;output</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;spatial&nbsp;size&nbsp;match&nbsp;the&nbsp;input.In&nbsp;case&nbsp;of&nbsp;odd&nbsp;number&nbsp;add&nbsp;the&nbsp;extra</td><td class="diff_next"></td><td class="diff_header" id="to120_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;spatial&nbsp;size&nbsp;match&nbsp;the&nbsp;input.In&nbsp;case&nbsp;of&nbsp;odd&nbsp;number&nbsp;add&nbsp;the&nbsp;extra</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to120__0"></td><td class="diff_header" id="from120_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;padding&nbsp;at&nbsp;the&nbsp;end&nbsp;for&nbsp;SAME_UPPER&nbsp;and&nbsp;at&nbsp;the&nbsp;beginning&nbsp;for</td><td class="diff_next"></td><td class="diff_header" id="to120_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;padding&nbsp;at&nbsp;the&nbsp;end&nbsp;for&nbsp;SAME_UPPER&nbsp;and&nbsp;at&nbsp;the&nbsp;beginning&nbsp;for</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_42">42</td><td nowrap="nowrap">&nbsp;&nbsp;SAME_LOWER.&nbsp;VALID&nbsp;mean&nbsp;no&nbsp;padding.</td><td class="diff_next"></td><td class="diff_header" id="to120_42">42</td><td nowrap="nowrap">&nbsp;&nbsp;SAME_LOWER.&nbsp;VALID&nbsp;mean&nbsp;no&nbsp;padding.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_43">43</td><td nowrap="nowrap">*&nbsp;**ceil_mode**:</td><td class="diff_next"></td><td class="diff_header" id="to120_43">43</td><td nowrap="nowrap">*&nbsp;**ceil_mode**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_44">44</td><td nowrap="nowrap">&nbsp;&nbsp;Whether&nbsp;to&nbsp;use&nbsp;ceil&nbsp;or&nbsp;floor&nbsp;(default)&nbsp;to&nbsp;compute&nbsp;the&nbsp;output&nbsp;shape.</td><td class="diff_next"></td><td class="diff_header" id="to120_44">44</td><td nowrap="nowrap">&nbsp;&nbsp;Whether&nbsp;to&nbsp;use&nbsp;ceil&nbsp;or&nbsp;floor&nbsp;(default)&nbsp;to&nbsp;compute&nbsp;the&nbsp;output&nbsp;shape.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_45">45</td><td nowrap="nowrap">*&nbsp;**dilations**:</td><td class="diff_next"></td><td class="diff_header" id="to120_45">45</td><td nowrap="nowrap">*&nbsp;**dilations**:</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to120__1">n</a></td><td class="diff_header" id="from120_46">46</td><td nowrap="nowrap">&nbsp;&nbsp;Dilation&nbsp;value&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis&nbsp;of&nbsp;filter.</td><td class="diff_next"><a href="#difflib_chg_to120__1">n</a></td><td class="diff_header" id="to120_46">46</td><td nowrap="nowrap">&nbsp;&nbsp;Dilation&nbsp;value&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis&nbsp;of&nbsp;filter.<span class="diff_add">&nbsp;If&nbsp;not&nbsp;present,</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_47">47</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;the&nbsp;dilation&nbsp;defaults&nbsp;to&nbsp;1&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_47">47</td><td nowrap="nowrap">*&nbsp;**kernel_shape**&nbsp;(required):</td><td class="diff_next"></td><td class="diff_header" id="to120_48">48</td><td nowrap="nowrap">*&nbsp;**kernel_shape**&nbsp;(required):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_48">48</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;size&nbsp;of&nbsp;the&nbsp;kernel&nbsp;along&nbsp;each&nbsp;axis.</td><td class="diff_next"></td><td class="diff_header" id="to120_49">49</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;size&nbsp;of&nbsp;the&nbsp;kernel&nbsp;along&nbsp;each&nbsp;axis.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_49">49</td><td nowrap="nowrap">*&nbsp;**pads**:</td><td class="diff_next"></td><td class="diff_header" id="to120_50">50</td><td nowrap="nowrap">*&nbsp;**pads**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;Padding&nbsp;for&nbsp;the&nbsp;beginning&nbsp;and&nbsp;ending&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis,&nbsp;it&nbsp;can</td><td class="diff_next"></td><td class="diff_header" id="to120_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;Padding&nbsp;for&nbsp;the&nbsp;beginning&nbsp;and&nbsp;ending&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis,&nbsp;it&nbsp;can</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;take&nbsp;any&nbsp;value&nbsp;greater&nbsp;than&nbsp;or&nbsp;equal&nbsp;to&nbsp;0.&nbsp;The&nbsp;value&nbsp;represent&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to120_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;take&nbsp;any&nbsp;value&nbsp;greater&nbsp;than&nbsp;or&nbsp;equal&nbsp;to&nbsp;0.&nbsp;The&nbsp;value&nbsp;represent&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;number&nbsp;of&nbsp;pixels&nbsp;added&nbsp;to&nbsp;the&nbsp;beginning&nbsp;and&nbsp;end&nbsp;part&nbsp;of&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to120_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;number&nbsp;of&nbsp;pixels&nbsp;added&nbsp;to&nbsp;the&nbsp;beginning&nbsp;and&nbsp;end&nbsp;part&nbsp;of&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;corresponding&nbsp;axis.&nbsp;pads&nbsp;format&nbsp;should&nbsp;be&nbsp;as&nbsp;follow&nbsp;[x1_begin,</td><td class="diff_next"></td><td class="diff_header" id="to120_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;corresponding&nbsp;axis.&nbsp;pads&nbsp;format&nbsp;should&nbsp;be&nbsp;as&nbsp;follow&nbsp;[x1_begin,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;x2_begin...x1_end,&nbsp;x2_end,...],&nbsp;where&nbsp;xi_begin&nbsp;the&nbsp;number&nbsp;of&nbsp;pixels</td><td class="diff_next"></td><td class="diff_header" id="to120_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;x2_begin...x1_end,&nbsp;x2_end,...],&nbsp;where&nbsp;xi_begin&nbsp;the&nbsp;number&nbsp;of&nbsp;pixels</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;added&nbsp;at&nbsp;the&nbsp;beginning&nbsp;of&nbsp;axis&nbsp;i&nbsp;and&nbsp;xi_end,&nbsp;the&nbsp;number&nbsp;of&nbsp;pixels</td><td class="diff_next"></td><td class="diff_header" id="to120_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;added&nbsp;at&nbsp;the&nbsp;beginning&nbsp;of&nbsp;axis&nbsp;i&nbsp;and&nbsp;xi_end,&nbsp;the&nbsp;number&nbsp;of&nbsp;pixels</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;added&nbsp;at&nbsp;the&nbsp;end&nbsp;of&nbsp;axis&nbsp;i.&nbsp;This&nbsp;attribute&nbsp;cannot&nbsp;be&nbsp;used</td><td class="diff_next"></td><td class="diff_header" id="to120_57">57</td><td nowrap="nowrap">&nbsp;&nbsp;added&nbsp;at&nbsp;the&nbsp;end&nbsp;of&nbsp;axis&nbsp;i.&nbsp;This&nbsp;attribute&nbsp;cannot&nbsp;be&nbsp;used</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_57">57</td><td nowrap="nowrap">&nbsp;&nbsp;simultaneously&nbsp;with&nbsp;auto_pad&nbsp;attribute.&nbsp;If&nbsp;not&nbsp;present,&nbsp;the&nbsp;padding</td><td class="diff_next"></td><td class="diff_header" id="to120_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;simultaneously&nbsp;with&nbsp;auto_pad&nbsp;attribute.&nbsp;If&nbsp;not&nbsp;present,&nbsp;the&nbsp;padding</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to120__1"></td><td class="diff_header" id="from120_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;defaults&nbsp;to&nbsp;0&nbsp;along&nbsp;start&nbsp;and&nbsp;end&nbsp;of&nbsp;each&nbsp;spatial&nbsp;axis.</td><td class="diff_next"></td><td class="diff_header" id="to120_59">59</td><td nowrap="nowrap">&nbsp;&nbsp;defaults&nbsp;to&nbsp;0&nbsp;along&nbsp;start&nbsp;and&nbsp;end&nbsp;of&nbsp;each&nbsp;spatial&nbsp;axis.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_59">59</td><td nowrap="nowrap">*&nbsp;**storage_order**:</td><td class="diff_next"></td><td class="diff_header" id="to120_60">60</td><td nowrap="nowrap">*&nbsp;**storage_order**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_60">60</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;storage&nbsp;order&nbsp;of&nbsp;the&nbsp;tensor.&nbsp;0&nbsp;is&nbsp;row&nbsp;major,&nbsp;and&nbsp;1&nbsp;is&nbsp;column</td><td class="diff_next"></td><td class="diff_header" id="to120_61">61</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;storage&nbsp;order&nbsp;of&nbsp;the&nbsp;tensor.&nbsp;0&nbsp;is&nbsp;row&nbsp;major,&nbsp;and&nbsp;1&nbsp;is&nbsp;column</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_61">61</td><td nowrap="nowrap">&nbsp;&nbsp;major.</td><td class="diff_next"></td><td class="diff_header" id="to120_62">62</td><td nowrap="nowrap">&nbsp;&nbsp;major.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_62">62</td><td nowrap="nowrap">*&nbsp;**strides**:</td><td class="diff_next"></td><td class="diff_header" id="to120_63">63</td><td nowrap="nowrap">*&nbsp;**strides**:</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to120__top">t</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to120__top">t</a></td><td class="diff_header" id="to120_64">64</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;Stride&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis.&nbsp;If&nbsp;not&nbsp;present,&nbsp;the&nbsp;stride&nbsp;defaults</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_63">63</td><td nowrap="nowrap">&nbsp;&nbsp;<span class="diff_sub">S</span>t<span class="diff_chg">ride</span>&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis.</td><td class="diff_next"></td><td class="diff_header" id="to120_65">65</td><td nowrap="nowrap">&nbsp;&nbsp;t<span class="diff_chg">o&nbsp;1</span>&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_64">64</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_66">66</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_65">65</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to120_67">67</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_66">66</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_68">68</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_67">67</td><td nowrap="nowrap">*&nbsp;**X**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to120_69">69</td><td nowrap="nowrap">*&nbsp;**X**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_68">68</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;data&nbsp;tensor&nbsp;from&nbsp;the&nbsp;previous&nbsp;operator;&nbsp;dimensions&nbsp;for&nbsp;image</td><td class="diff_next"></td><td class="diff_header" id="to120_70">70</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;data&nbsp;tensor&nbsp;from&nbsp;the&nbsp;previous&nbsp;operator;&nbsp;dimensions&nbsp;for&nbsp;image</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_69">69</td><td nowrap="nowrap">&nbsp;&nbsp;case&nbsp;are&nbsp;(N&nbsp;x&nbsp;C&nbsp;x&nbsp;H&nbsp;x&nbsp;W),&nbsp;where&nbsp;N&nbsp;is&nbsp;the&nbsp;batch&nbsp;size,&nbsp;C&nbsp;is&nbsp;the&nbsp;number</td><td class="diff_next"></td><td class="diff_header" id="to120_71">71</td><td nowrap="nowrap">&nbsp;&nbsp;case&nbsp;are&nbsp;(N&nbsp;x&nbsp;C&nbsp;x&nbsp;H&nbsp;x&nbsp;W),&nbsp;where&nbsp;N&nbsp;is&nbsp;the&nbsp;batch&nbsp;size,&nbsp;C&nbsp;is&nbsp;the&nbsp;number</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_70">70</td><td nowrap="nowrap">&nbsp;&nbsp;of&nbsp;channels,&nbsp;and&nbsp;H&nbsp;and&nbsp;W&nbsp;are&nbsp;the&nbsp;height&nbsp;and&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;data.</td><td class="diff_next"></td><td class="diff_header" id="to120_72">72</td><td nowrap="nowrap">&nbsp;&nbsp;of&nbsp;channels,&nbsp;and&nbsp;H&nbsp;and&nbsp;W&nbsp;are&nbsp;the&nbsp;height&nbsp;and&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;data.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_71">71</td><td nowrap="nowrap">&nbsp;&nbsp;For&nbsp;non&nbsp;image&nbsp;case,&nbsp;the&nbsp;dimensions&nbsp;are&nbsp;in&nbsp;the&nbsp;form&nbsp;of&nbsp;(N&nbsp;x&nbsp;C&nbsp;x&nbsp;D1&nbsp;x</td><td class="diff_next"></td><td class="diff_header" id="to120_73">73</td><td nowrap="nowrap">&nbsp;&nbsp;For&nbsp;non&nbsp;image&nbsp;case,&nbsp;the&nbsp;dimensions&nbsp;are&nbsp;in&nbsp;the&nbsp;form&nbsp;of&nbsp;(N&nbsp;x&nbsp;C&nbsp;x&nbsp;D1&nbsp;x</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_72">72</td><td nowrap="nowrap">&nbsp;&nbsp;D2&nbsp;...&nbsp;Dn),&nbsp;where&nbsp;N&nbsp;is&nbsp;the&nbsp;batch&nbsp;size.&nbsp;Optionally,&nbsp;if&nbsp;dimension</td><td class="diff_next"></td><td class="diff_header" id="to120_74">74</td><td nowrap="nowrap">&nbsp;&nbsp;D2&nbsp;...&nbsp;Dn),&nbsp;where&nbsp;N&nbsp;is&nbsp;the&nbsp;batch&nbsp;size.&nbsp;Optionally,&nbsp;if&nbsp;dimension</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_73">73</td><td nowrap="nowrap">&nbsp;&nbsp;denotation&nbsp;is&nbsp;in&nbsp;effect,&nbsp;the&nbsp;operation&nbsp;expects&nbsp;the&nbsp;input&nbsp;data&nbsp;tensor</td><td class="diff_next"></td><td class="diff_header" id="to120_75">75</td><td nowrap="nowrap">&nbsp;&nbsp;denotation&nbsp;is&nbsp;in&nbsp;effect,&nbsp;the&nbsp;operation&nbsp;expects&nbsp;the&nbsp;input&nbsp;data&nbsp;tensor</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_74">74</td><td nowrap="nowrap">&nbsp;&nbsp;to&nbsp;arrive&nbsp;with&nbsp;the&nbsp;dimension&nbsp;denotation&nbsp;of&nbsp;[DATA_BATCH,</td><td class="diff_next"></td><td class="diff_header" id="to120_76">76</td><td nowrap="nowrap">&nbsp;&nbsp;to&nbsp;arrive&nbsp;with&nbsp;the&nbsp;dimension&nbsp;denotation&nbsp;of&nbsp;[DATA_BATCH,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_75">75</td><td nowrap="nowrap">&nbsp;&nbsp;DATA_CHANNEL,&nbsp;DATA_FEATURE,&nbsp;DATA_FEATURE&nbsp;...].</td><td class="diff_next"></td><td class="diff_header" id="to120_77">77</td><td nowrap="nowrap">&nbsp;&nbsp;DATA_CHANNEL,&nbsp;DATA_FEATURE,&nbsp;DATA_FEATURE&nbsp;...].</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_76">76</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_78">78</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_77">77</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to120_79">79</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_78">78</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_80">80</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_79">79</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2&nbsp;outputs.</td><td class="diff_next"></td><td class="diff_header" id="to120_81">81</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2&nbsp;outputs.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_80">80</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_82">82</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_81">81</td><td nowrap="nowrap">*&nbsp;**Y**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to120_83">83</td><td nowrap="nowrap">*&nbsp;**Y**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_82">82</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;data&nbsp;tensor&nbsp;from&nbsp;average&nbsp;or&nbsp;max&nbsp;pooling&nbsp;across&nbsp;the&nbsp;input</td><td class="diff_next"></td><td class="diff_header" id="to120_84">84</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;data&nbsp;tensor&nbsp;from&nbsp;average&nbsp;or&nbsp;max&nbsp;pooling&nbsp;across&nbsp;the&nbsp;input</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_83">83</td><td nowrap="nowrap">&nbsp;&nbsp;tensor.&nbsp;Dimensions&nbsp;will&nbsp;vary&nbsp;based&nbsp;on&nbsp;various&nbsp;kernel,&nbsp;stride,&nbsp;and</td><td class="diff_next"></td><td class="diff_header" id="to120_85">85</td><td nowrap="nowrap">&nbsp;&nbsp;tensor.&nbsp;Dimensions&nbsp;will&nbsp;vary&nbsp;based&nbsp;on&nbsp;various&nbsp;kernel,&nbsp;stride,&nbsp;and</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_84">84</td><td nowrap="nowrap">&nbsp;&nbsp;pad&nbsp;sizes.&nbsp;Floor&nbsp;value&nbsp;of&nbsp;the&nbsp;dimension&nbsp;is&nbsp;used</td><td class="diff_next"></td><td class="diff_header" id="to120_86">86</td><td nowrap="nowrap">&nbsp;&nbsp;pad&nbsp;sizes.&nbsp;Floor&nbsp;value&nbsp;of&nbsp;the&nbsp;dimension&nbsp;is&nbsp;used</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_85">85</td><td nowrap="nowrap">*&nbsp;**Indices**&nbsp;(optional,&nbsp;heterogeneous)&nbsp;-&nbsp;**I**:</td><td class="diff_next"></td><td class="diff_header" id="to120_87">87</td><td nowrap="nowrap">*&nbsp;**Indices**&nbsp;(optional,&nbsp;heterogeneous)&nbsp;-&nbsp;**I**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_86">86</td><td nowrap="nowrap">&nbsp;&nbsp;Indices&nbsp;tensor&nbsp;from&nbsp;max&nbsp;pooling&nbsp;across&nbsp;the&nbsp;input&nbsp;tensor.&nbsp;The</td><td class="diff_next"></td><td class="diff_header" id="to120_88">88</td><td nowrap="nowrap">&nbsp;&nbsp;Indices&nbsp;tensor&nbsp;from&nbsp;max&nbsp;pooling&nbsp;across&nbsp;the&nbsp;input&nbsp;tensor.&nbsp;The</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_87">87</td><td nowrap="nowrap">&nbsp;&nbsp;dimensions&nbsp;of&nbsp;indices&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;output&nbsp;tensor.&nbsp;The&nbsp;values&nbsp;in</td><td class="diff_next"></td><td class="diff_header" id="to120_89">89</td><td nowrap="nowrap">&nbsp;&nbsp;dimensions&nbsp;of&nbsp;indices&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;output&nbsp;tensor.&nbsp;The&nbsp;values&nbsp;in</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_88">88</td><td nowrap="nowrap">&nbsp;&nbsp;indices&nbsp;of&nbsp;are&nbsp;the&nbsp;indices&nbsp;of&nbsp;the&nbsp;selected&nbsp;values&nbsp;during&nbsp;pooling.</td><td class="diff_next"></td><td class="diff_header" id="to120_90">90</td><td nowrap="nowrap">&nbsp;&nbsp;indices&nbsp;of&nbsp;are&nbsp;the&nbsp;indices&nbsp;of&nbsp;the&nbsp;selected&nbsp;values&nbsp;during&nbsp;pooling.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_89">89</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;indices&nbsp;are&nbsp;computed&nbsp;as&nbsp;flatten&nbsp;1-D&nbsp;tensor,&nbsp;and&nbsp;the&nbsp;indices&nbsp;do</td><td class="diff_next"></td><td class="diff_header" id="to120_91">91</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;indices&nbsp;are&nbsp;computed&nbsp;as&nbsp;flatten&nbsp;1-D&nbsp;tensor,&nbsp;and&nbsp;the&nbsp;indices&nbsp;do</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_90">90</td><td nowrap="nowrap">&nbsp;&nbsp;not&nbsp;consider&nbsp;padding.&nbsp;So&nbsp;the&nbsp;values&nbsp;in&nbsp;indices&nbsp;are&nbsp;in&nbsp;[0,&nbsp;N&nbsp;x&nbsp;C&nbsp;x&nbsp;D1</td><td class="diff_next"></td><td class="diff_header" id="to120_92">92</td><td nowrap="nowrap">&nbsp;&nbsp;not&nbsp;consider&nbsp;padding.&nbsp;So&nbsp;the&nbsp;values&nbsp;in&nbsp;indices&nbsp;are&nbsp;in&nbsp;[0,&nbsp;N&nbsp;x&nbsp;C&nbsp;x&nbsp;D1</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_91">91</td><td nowrap="nowrap">&nbsp;&nbsp;x&nbsp;...&nbsp;x&nbsp;Dn).</td><td class="diff_next"></td><td class="diff_header" id="to120_93">93</td><td nowrap="nowrap">&nbsp;&nbsp;x&nbsp;...&nbsp;x&nbsp;Dn).</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_92">92</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_94">94</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_93">93</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to120_95">95</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_94">94</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to120_96">96</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_95">95</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to120_97">97</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_96">96</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to120_98">98</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_97">97</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to120_99">99</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_98">98</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16)</td><td class="diff_next"></td><td class="diff_header" id="to120_100">100</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_99">99</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to120_101">101</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_100">100</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;and&nbsp;output&nbsp;types&nbsp;to&nbsp;float&nbsp;tensors.</td><td class="diff_next"></td><td class="diff_header" id="to120_102">102</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;and&nbsp;output&nbsp;types&nbsp;to&nbsp;float&nbsp;tensors.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_101">101</td><td nowrap="nowrap">*&nbsp;**I**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to120_103">103</td><td nowrap="nowrap">*&nbsp;**I**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_102">102</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64)</td><td class="diff_next"></td><td class="diff_header" id="to120_104">104</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_103">103</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to120_105">105</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from120_104">104</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;index&nbsp;tensor&nbsp;to&nbsp;int64</td><td class="diff_next"></td><td class="diff_header" id="to120_106">106</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;index&nbsp;tensor&nbsp;to&nbsp;int64</td></tr>
            </tbody>
        </table>

.. _l-onnx-op-maxpool-10:

MaxPool - 10
============

**Version**

* **name**: `MaxPool (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#MaxPool>`_
* **domain**: **main**
* **since_version**: **10**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 10**.

**Summary**

MaxPool consumes an input tensor X and applies max pooling across
the tensor according to kernel sizes, stride sizes, and pad lengths.
max pooling consisting of computing the max on all values of a
subset of the input tensor according to the kernel size and downsampling the
data into the output tensor Y for further processing. The output spatial shape will be following:
::

    output_spatial_shape[i] = floor((input_spatial_shape[i] + pad_shape[i] - ((kernel_spatial_shape[i] - 1) * dilations[i] + 1)) / strides_spatial_shape[i] + 1)

or
::

    output_spatial_shape[i] = ceil((input_spatial_shape[i] + pad_shape[i] - ((kernel_spatial_shape[i] - 1) * dilations[i] + 1)) / strides_spatial_shape[i] + 1)

if ceil_mode is enabled

::

    * pad_shape[i] is sum of pads along axis i

`auto_pad` is a DEPRECATED attribute. If you are using them currently, the output spatial shape will be following:
::

    VALID: output_spatial_shape[i] = ceil((input_spatial_shape[i] - ((kernel_spatial_shape[i] - 1) * dilations[i] + 1) + 1) / strides_spatial_shape[i])
    SAME_UPPER or SAME_LOWER: output_spatial_shape[i] = ceil(input_spatial_shape[i] / strides_spatial_shape[i])

And pad shape will be following if `SAME_UPPER` or `SAME_LOWER`:
::

    pad_shape[i] = (output_spatial_shape[i] - 1) * strides_spatial_shape[i] + ((kernel_spatial_shape[i] - 1) * dilations[i] + 1) - input_spatial_shape[i]

The output of each pooling window is maximum number of elements exclude pad.

**Attributes**

* **auto_pad**:
  auto_pad must be either NOTSET, SAME_UPPER, SAME_LOWER or VALID.
  Where default value is NOTSET, which means explicit padding is used.
  SAME_UPPER or SAME_LOWER mean pad the input so that the output
  spatial size match the input.In case of odd number add the extra
  padding at the end for SAME_UPPER and at the beginning for
  SAME_LOWER. VALID mean no padding.
* **ceil_mode**:
  Whether to use ceil or floor (default) to compute the output shape.
* **dilations**:
  Dilation value along each spatial axis of filter.
* **kernel_shape** (required):
  The size of the kernel along each axis.
* **pads**:
  Padding for the beginning and ending along each spatial axis, it can
  take any value greater than or equal to 0. The value represent the
  number of pixels added to the beginning and end part of the
  corresponding axis. `pads` format should be as follow [x1_begin,
  x2_begin...x1_end, x2_end,...], where xi_begin the number of pixels
  added at the beginning of axis `i` and xi_end, the number of pixels
  added at the end of axis `i`. This attribute cannot be used
  simultaneously with auto_pad attribute. If not present, the padding
  defaults to 0 along start and end of each spatial axis.
* **storage_order**:
  The storage order of the tensor. 0 is row major, and 1 is column
  major.
* **strides**:
  Stride along each spatial axis.

**Inputs**

* **X** (heterogeneous) - **T**:
  Input data tensor from the previous operator; dimensions for image
  case are (N x C x H x W), where N is the batch size, C is the number
  of channels, and H and W are the height and the width of the data.
  For non image case, the dimensions are in the form of (N x C x D1 x
  D2 ... Dn), where N is the batch size. Optionally, if dimension
  denotation is in effect, the operation expects the input data tensor
  to arrive with the dimension denotation of [DATA_BATCH,
  DATA_CHANNEL, DATA_FEATURE, DATA_FEATURE ...].

**Outputs**

Between 1 and 2 outputs.

* **Y** (heterogeneous) - **T**:
  Output data tensor from average or max pooling across the input
  tensor. Dimensions will vary based on various kernel, stride, and
  pad sizes. Floor value of the dimension is used
* **Indices** (optional, heterogeneous) - **I**:
  Indices tensor from max pooling across the input tensor. The
  dimensions of indices are the same as output tensor. The values in
  indices of are the indices of the selected values during pooling.
  The indices are computed as flatten 1-D tensor, and the indices do
  not consider padding. So the values in indices are in [0, N x C x D1
  x ... x Dn).

**Type Constraints**

* **T** in (
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain input and output types to float tensors.
* **I** in (
  tensor(int64)
  ):
  Constrain index tensor to int64

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to121__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next"><a href="#difflib_chg_to121__0">f</a></td><td class="diff_header" id="from121_1">1</td><td nowrap="nowrap">MaxPool&nbsp;consumes&nbsp;an&nbsp;input&nbsp;tensor&nbsp;X&nbsp;and&nbsp;applies&nbsp;max&nbsp;pooling&nbsp;across</td><td class="diff_next"><a href="#difflib_chg_to121__0">f</a></td><td class="diff_header" id="to121_1">1</td><td nowrap="nowrap">MaxPool&nbsp;consumes&nbsp;an&nbsp;input&nbsp;tensor&nbsp;X&nbsp;and&nbsp;applies&nbsp;max&nbsp;pooling&nbsp;across</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_2">2</td><td nowrap="nowrap">the&nbsp;tensor&nbsp;according&nbsp;to&nbsp;kernel&nbsp;sizes,&nbsp;stride&nbsp;sizes,&nbsp;and&nbsp;pad&nbsp;lengths.</td><td class="diff_next"></td><td class="diff_header" id="to121_2">2</td><td nowrap="nowrap">the&nbsp;tensor&nbsp;according&nbsp;to&nbsp;kernel&nbsp;sizes,&nbsp;stride&nbsp;sizes,&nbsp;and&nbsp;pad&nbsp;lengths.</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to121__0"></td><td class="diff_header" id="from121_3">3</td><td nowrap="nowrap">max&nbsp;pooling&nbsp;consisting&nbsp;of&nbsp;computing&nbsp;the&nbsp;max&nbsp;on&nbsp;all&nbsp;values&nbsp;of&nbsp;a</td><td class="diff_next"></td><td class="diff_header" id="to121_3">3</td><td nowrap="nowrap">max&nbsp;pooling&nbsp;consisting&nbsp;of&nbsp;computing&nbsp;the&nbsp;max&nbsp;on&nbsp;all&nbsp;values&nbsp;of&nbsp;a</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_4">4</td><td nowrap="nowrap">subset&nbsp;of&nbsp;the&nbsp;input&nbsp;tensor&nbsp;according&nbsp;to&nbsp;the&nbsp;kernel&nbsp;size&nbsp;and&nbsp;downsampling&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to121_4">4</td><td nowrap="nowrap">subset&nbsp;of&nbsp;the&nbsp;input&nbsp;tensor&nbsp;according&nbsp;to&nbsp;the&nbsp;kernel&nbsp;size&nbsp;and&nbsp;downsampling&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_5">5</td><td nowrap="nowrap">data&nbsp;into&nbsp;the&nbsp;output&nbsp;tensor&nbsp;Y&nbsp;for&nbsp;further&nbsp;processing.&nbsp;The&nbsp;output&nbsp;spatial&nbsp;shape&nbsp;will&nbsp;be&nbsp;following:</td><td class="diff_next"></td><td class="diff_header" id="to121_5">5</td><td nowrap="nowrap">data&nbsp;into&nbsp;the&nbsp;output&nbsp;tensor&nbsp;Y&nbsp;for&nbsp;further&nbsp;processing.&nbsp;The&nbsp;output&nbsp;spatial&nbsp;shape&nbsp;will&nbsp;be&nbsp;following:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_6">6</td><td nowrap="nowrap">::</td><td class="diff_next"></td><td class="diff_header" id="to121_6">6</td><td nowrap="nowrap">::</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_7">7</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_7">7</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to121__1">n</a></td><td class="diff_header" id="from121_8">8</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;floor((input_spatial_shape[i]&nbsp;+&nbsp;pad_shape[i]&nbsp;-&nbsp;kernel_spatial_shape[i])&nbsp;/&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;1)</td><td class="diff_next"><a href="#difflib_chg_to121__1">n</a></td><td class="diff_header" id="to121_8">8</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;floor((input_spatial_shape[i]&nbsp;+&nbsp;pad_shape[i]&nbsp;-&nbsp;<span class="diff_add">((</span>kernel_spatial_shape[i]<span class="diff_add">&nbsp;-&nbsp;1</span>)&nbsp;<span class="diff_add">*&nbsp;dilations[i]&nbsp;+&nbsp;1))&nbsp;</span>/&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;1)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_9">9</td><td nowrap="nowrap"><span class="diff_add">&nbsp;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_10">10</td><td nowrap="nowrap"><span class="diff_add">or</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_11">11</td><td nowrap="nowrap"><span class="diff_add">::</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_12">12</td><td nowrap="nowrap"><span class="diff_add">&nbsp;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_13">13</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil((input_spatial_shape[i]&nbsp;+&nbsp;pad_shape[i]&nbsp;-&nbsp;((kernel_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;dilations[i]&nbsp;+&nbsp;1))&nbsp;/&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;1)</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_14">14</td><td nowrap="nowrap"><span class="diff_add">&nbsp;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_15">15</td><td nowrap="nowrap"><span class="diff_add">if&nbsp;ceil_mode&nbsp;is&nbsp;enabled</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_16">16</td><td nowrap="nowrap"><span class="diff_add">&nbsp;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_17">17</td><td nowrap="nowrap"><span class="diff_add">::</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_9">9</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_18">18</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to121__1"></td><td class="diff_header" id="from121_10">10</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;pad_shape[i]&nbsp;is&nbsp;sum&nbsp;of&nbsp;pads&nbsp;along&nbsp;axis&nbsp;i</td><td class="diff_next"></td><td class="diff_header" id="to121_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;pad_shape[i]&nbsp;is&nbsp;sum&nbsp;of&nbsp;pads&nbsp;along&nbsp;axis&nbsp;i</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_11">11</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_20">20</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_12">12</td><td nowrap="nowrap">auto_pad&nbsp;is&nbsp;a&nbsp;DEPRECATED&nbsp;attribute.&nbsp;If&nbsp;you&nbsp;are&nbsp;using&nbsp;them&nbsp;currently,&nbsp;the&nbsp;output&nbsp;spatial&nbsp;shape&nbsp;will&nbsp;be&nbsp;following:</td><td class="diff_next"></td><td class="diff_header" id="to121_21">21</td><td nowrap="nowrap">auto_pad&nbsp;is&nbsp;a&nbsp;DEPRECATED&nbsp;attribute.&nbsp;If&nbsp;you&nbsp;are&nbsp;using&nbsp;them&nbsp;currently,&nbsp;the&nbsp;output&nbsp;spatial&nbsp;shape&nbsp;will&nbsp;be&nbsp;following:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_13">13</td><td nowrap="nowrap">::</td><td class="diff_next"></td><td class="diff_header" id="to121_22">22</td><td nowrap="nowrap">::</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_14">14</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_23">23</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to121__2">n</a></td><td class="diff_header" id="from121_15">15</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;VALID:&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil((input_spatial_shape[i]&nbsp;-&nbsp;kernel_spatial_shape[i]&nbsp;<span class="diff_chg">+</span>&nbsp;1)&nbsp;/&nbsp;strides_spatial_shape[i])</td><td class="diff_next"><a href="#difflib_chg_to121__2">n</a></td><td class="diff_header" id="to121_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;VALID:&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil((input_spatial_shape[i]&nbsp;-&nbsp;<span class="diff_add">((</span>kernel_spatial_shape[i]&nbsp;<span class="diff_chg">-</span>&nbsp;1)&nbsp;<span class="diff_add">*&nbsp;dilations[i]&nbsp;+&nbsp;1)&nbsp;+&nbsp;1)&nbsp;</span>/&nbsp;strides_spatial_shape[i])</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to121__2"></td><td class="diff_header" id="from121_16">16</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER:&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil(input_spatial_shape[i]&nbsp;/&nbsp;strides_spatial_shape[i])</td><td class="diff_next"></td><td class="diff_header" id="to121_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER:&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil(input_spatial_shape[i]&nbsp;/&nbsp;strides_spatial_shape[i])</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_17">17</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_26">26</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_18">18</td><td nowrap="nowrap">And&nbsp;pad&nbsp;shape&nbsp;will&nbsp;be&nbsp;following&nbsp;if&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER:</td><td class="diff_next"></td><td class="diff_header" id="to121_27">27</td><td nowrap="nowrap">And&nbsp;pad&nbsp;shape&nbsp;will&nbsp;be&nbsp;following&nbsp;if&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_19">19</td><td nowrap="nowrap">::</td><td class="diff_next"></td><td class="diff_header" id="to121_28">28</td><td nowrap="nowrap">::</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_20">20</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_29">29</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to121__3">n</a></td><td class="diff_header" id="from121_21">21</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;pad_shape[i]&nbsp;=&nbsp;(output_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;kernel_spatial_shape[i]&nbsp;-&nbsp;input_spatial_shape[i]</td><td class="diff_next"><a href="#difflib_chg_to121__3">n</a></td><td class="diff_header" id="to121_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;pad_shape[i]&nbsp;=&nbsp;(output_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;<span class="diff_add">((</span>kernel_spatial_shape[i]&nbsp;-<span class="diff_add">&nbsp;1)&nbsp;*&nbsp;dilations[i]&nbsp;+&nbsp;1)&nbsp;-</span>&nbsp;input_spatial_shape[i]</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_22">22</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_31">31</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_23">23</td><td nowrap="nowrap">The&nbsp;output&nbsp;of&nbsp;each&nbsp;pooling&nbsp;window&nbsp;is&nbsp;maximum&nbsp;number&nbsp;of&nbsp;elements&nbsp;exclude&nbsp;pad.</td><td class="diff_next"></td><td class="diff_header" id="to121_32">32</td><td nowrap="nowrap">The&nbsp;output&nbsp;of&nbsp;each&nbsp;pooling&nbsp;window&nbsp;is&nbsp;maximum&nbsp;number&nbsp;of&nbsp;elements&nbsp;exclude&nbsp;pad.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_24">24</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_33">33</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_25">25</td><td nowrap="nowrap">**Attributes**</td><td class="diff_next"></td><td class="diff_header" id="to121_34">34</td><td nowrap="nowrap">**Attributes**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_26">26</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_35">35</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_27">27</td><td nowrap="nowrap">*&nbsp;**auto_pad**:</td><td class="diff_next"></td><td class="diff_header" id="to121_36">36</td><td nowrap="nowrap">*&nbsp;**auto_pad**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_28">28</td><td nowrap="nowrap">&nbsp;&nbsp;auto_pad&nbsp;must&nbsp;be&nbsp;either&nbsp;NOTSET,&nbsp;SAME_UPPER,&nbsp;SAME_LOWER&nbsp;or&nbsp;VALID.</td><td class="diff_next"></td><td class="diff_header" id="to121_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;auto_pad&nbsp;must&nbsp;be&nbsp;either&nbsp;NOTSET,&nbsp;SAME_UPPER,&nbsp;SAME_LOWER&nbsp;or&nbsp;VALID.</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to121__3"></td><td class="diff_header" id="from121_29">29</td><td nowrap="nowrap">&nbsp;&nbsp;Where&nbsp;default&nbsp;value&nbsp;is&nbsp;NOTSET,&nbsp;which&nbsp;means&nbsp;explicit&nbsp;padding&nbsp;is&nbsp;used.</td><td class="diff_next"></td><td class="diff_header" id="to121_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;Where&nbsp;default&nbsp;value&nbsp;is&nbsp;NOTSET,&nbsp;which&nbsp;means&nbsp;explicit&nbsp;padding&nbsp;is&nbsp;used.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER&nbsp;mean&nbsp;pad&nbsp;the&nbsp;input&nbsp;so&nbsp;that&nbsp;the&nbsp;output</td><td class="diff_next"></td><td class="diff_header" id="to121_39">39</td><td nowrap="nowrap">&nbsp;&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER&nbsp;mean&nbsp;pad&nbsp;the&nbsp;input&nbsp;so&nbsp;that&nbsp;the&nbsp;output</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_31">31</td><td nowrap="nowrap">&nbsp;&nbsp;spatial&nbsp;size&nbsp;match&nbsp;the&nbsp;input.In&nbsp;case&nbsp;of&nbsp;odd&nbsp;number&nbsp;add&nbsp;the&nbsp;extra</td><td class="diff_next"></td><td class="diff_header" id="to121_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;spatial&nbsp;size&nbsp;match&nbsp;the&nbsp;input.In&nbsp;case&nbsp;of&nbsp;odd&nbsp;number&nbsp;add&nbsp;the&nbsp;extra</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_32">32</td><td nowrap="nowrap">&nbsp;&nbsp;padding&nbsp;at&nbsp;the&nbsp;end&nbsp;for&nbsp;SAME_UPPER&nbsp;and&nbsp;at&nbsp;the&nbsp;beginning&nbsp;for</td><td class="diff_next"></td><td class="diff_header" id="to121_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;padding&nbsp;at&nbsp;the&nbsp;end&nbsp;for&nbsp;SAME_UPPER&nbsp;and&nbsp;at&nbsp;the&nbsp;beginning&nbsp;for</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_33">33</td><td nowrap="nowrap">&nbsp;&nbsp;SAME_LOWER.&nbsp;VALID&nbsp;mean&nbsp;no&nbsp;padding.</td><td class="diff_next"></td><td class="diff_header" id="to121_42">42</td><td nowrap="nowrap">&nbsp;&nbsp;SAME_LOWER.&nbsp;VALID&nbsp;mean&nbsp;no&nbsp;padding.</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to121__top">t</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to121__top">t</a></td><td class="diff_header" id="to121_43">43</td><td nowrap="nowrap"><span class="diff_add">*&nbsp;**ceil_mode**:</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_44">44</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;Whether&nbsp;to&nbsp;use&nbsp;ceil&nbsp;or&nbsp;floor&nbsp;(default)&nbsp;to&nbsp;compute&nbsp;the&nbsp;output&nbsp;shape.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_45">45</td><td nowrap="nowrap"><span class="diff_add">*&nbsp;**dilations**:</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_46">46</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;Dilation&nbsp;value&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis&nbsp;of&nbsp;filter.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_34">34</td><td nowrap="nowrap">*&nbsp;**kernel_shape**&nbsp;(required):</td><td class="diff_next"></td><td class="diff_header" id="to121_47">47</td><td nowrap="nowrap">*&nbsp;**kernel_shape**&nbsp;(required):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;size&nbsp;of&nbsp;the&nbsp;kernel&nbsp;along&nbsp;each&nbsp;axis.</td><td class="diff_next"></td><td class="diff_header" id="to121_48">48</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;size&nbsp;of&nbsp;the&nbsp;kernel&nbsp;along&nbsp;each&nbsp;axis.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_36">36</td><td nowrap="nowrap">*&nbsp;**pads**:</td><td class="diff_next"></td><td class="diff_header" id="to121_49">49</td><td nowrap="nowrap">*&nbsp;**pads**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;Padding&nbsp;for&nbsp;the&nbsp;beginning&nbsp;and&nbsp;ending&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis,&nbsp;it&nbsp;can</td><td class="diff_next"></td><td class="diff_header" id="to121_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;Padding&nbsp;for&nbsp;the&nbsp;beginning&nbsp;and&nbsp;ending&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis,&nbsp;it&nbsp;can</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;take&nbsp;any&nbsp;value&nbsp;greater&nbsp;than&nbsp;or&nbsp;equal&nbsp;to&nbsp;0.&nbsp;The&nbsp;value&nbsp;represent&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to121_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;take&nbsp;any&nbsp;value&nbsp;greater&nbsp;than&nbsp;or&nbsp;equal&nbsp;to&nbsp;0.&nbsp;The&nbsp;value&nbsp;represent&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_39">39</td><td nowrap="nowrap">&nbsp;&nbsp;number&nbsp;of&nbsp;pixels&nbsp;added&nbsp;to&nbsp;the&nbsp;beginning&nbsp;and&nbsp;end&nbsp;part&nbsp;of&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to121_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;number&nbsp;of&nbsp;pixels&nbsp;added&nbsp;to&nbsp;the&nbsp;beginning&nbsp;and&nbsp;end&nbsp;part&nbsp;of&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;corresponding&nbsp;axis.&nbsp;pads&nbsp;format&nbsp;should&nbsp;be&nbsp;as&nbsp;follow&nbsp;[x1_begin,</td><td class="diff_next"></td><td class="diff_header" id="to121_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;corresponding&nbsp;axis.&nbsp;pads&nbsp;format&nbsp;should&nbsp;be&nbsp;as&nbsp;follow&nbsp;[x1_begin,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;x2_begin...x1_end,&nbsp;x2_end,...],&nbsp;where&nbsp;xi_begin&nbsp;the&nbsp;number&nbsp;of&nbsp;pixels</td><td class="diff_next"></td><td class="diff_header" id="to121_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;x2_begin...x1_end,&nbsp;x2_end,...],&nbsp;where&nbsp;xi_begin&nbsp;the&nbsp;number&nbsp;of&nbsp;pixels</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_42">42</td><td nowrap="nowrap">&nbsp;&nbsp;added&nbsp;at&nbsp;the&nbsp;beginning&nbsp;of&nbsp;axis&nbsp;i&nbsp;and&nbsp;xi_end,&nbsp;the&nbsp;number&nbsp;of&nbsp;pixels</td><td class="diff_next"></td><td class="diff_header" id="to121_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;added&nbsp;at&nbsp;the&nbsp;beginning&nbsp;of&nbsp;axis&nbsp;i&nbsp;and&nbsp;xi_end,&nbsp;the&nbsp;number&nbsp;of&nbsp;pixels</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_43">43</td><td nowrap="nowrap">&nbsp;&nbsp;added&nbsp;at&nbsp;the&nbsp;end&nbsp;of&nbsp;axis&nbsp;i.&nbsp;This&nbsp;attribute&nbsp;cannot&nbsp;be&nbsp;used</td><td class="diff_next"></td><td class="diff_header" id="to121_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;added&nbsp;at&nbsp;the&nbsp;end&nbsp;of&nbsp;axis&nbsp;i.&nbsp;This&nbsp;attribute&nbsp;cannot&nbsp;be&nbsp;used</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_44">44</td><td nowrap="nowrap">&nbsp;&nbsp;simultaneously&nbsp;with&nbsp;auto_pad&nbsp;attribute.&nbsp;If&nbsp;not&nbsp;present,&nbsp;the&nbsp;padding</td><td class="diff_next"></td><td class="diff_header" id="to121_57">57</td><td nowrap="nowrap">&nbsp;&nbsp;simultaneously&nbsp;with&nbsp;auto_pad&nbsp;attribute.&nbsp;If&nbsp;not&nbsp;present,&nbsp;the&nbsp;padding</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_45">45</td><td nowrap="nowrap">&nbsp;&nbsp;defaults&nbsp;to&nbsp;0&nbsp;along&nbsp;start&nbsp;and&nbsp;end&nbsp;of&nbsp;each&nbsp;spatial&nbsp;axis.</td><td class="diff_next"></td><td class="diff_header" id="to121_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;defaults&nbsp;to&nbsp;0&nbsp;along&nbsp;start&nbsp;and&nbsp;end&nbsp;of&nbsp;each&nbsp;spatial&nbsp;axis.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_46">46</td><td nowrap="nowrap">*&nbsp;**storage_order**:</td><td class="diff_next"></td><td class="diff_header" id="to121_59">59</td><td nowrap="nowrap">*&nbsp;**storage_order**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_47">47</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;storage&nbsp;order&nbsp;of&nbsp;the&nbsp;tensor.&nbsp;0&nbsp;is&nbsp;row&nbsp;major,&nbsp;and&nbsp;1&nbsp;is&nbsp;column</td><td class="diff_next"></td><td class="diff_header" id="to121_60">60</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;storage&nbsp;order&nbsp;of&nbsp;the&nbsp;tensor.&nbsp;0&nbsp;is&nbsp;row&nbsp;major,&nbsp;and&nbsp;1&nbsp;is&nbsp;column</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_48">48</td><td nowrap="nowrap">&nbsp;&nbsp;major.</td><td class="diff_next"></td><td class="diff_header" id="to121_61">61</td><td nowrap="nowrap">&nbsp;&nbsp;major.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_49">49</td><td nowrap="nowrap">*&nbsp;**strides**:</td><td class="diff_next"></td><td class="diff_header" id="to121_62">62</td><td nowrap="nowrap">*&nbsp;**strides**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;Stride&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis.</td><td class="diff_next"></td><td class="diff_header" id="to121_63">63</td><td nowrap="nowrap">&nbsp;&nbsp;Stride&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_51">51</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_64">64</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_52">52</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to121_65">65</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_53">53</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_66">66</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_54">54</td><td nowrap="nowrap">*&nbsp;**X**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to121_67">67</td><td nowrap="nowrap">*&nbsp;**X**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;data&nbsp;tensor&nbsp;from&nbsp;the&nbsp;previous&nbsp;operator;&nbsp;dimensions&nbsp;for&nbsp;image</td><td class="diff_next"></td><td class="diff_header" id="to121_68">68</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;data&nbsp;tensor&nbsp;from&nbsp;the&nbsp;previous&nbsp;operator;&nbsp;dimensions&nbsp;for&nbsp;image</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;case&nbsp;are&nbsp;(N&nbsp;x&nbsp;C&nbsp;x&nbsp;H&nbsp;x&nbsp;W),&nbsp;where&nbsp;N&nbsp;is&nbsp;the&nbsp;batch&nbsp;size,&nbsp;C&nbsp;is&nbsp;the&nbsp;number</td><td class="diff_next"></td><td class="diff_header" id="to121_69">69</td><td nowrap="nowrap">&nbsp;&nbsp;case&nbsp;are&nbsp;(N&nbsp;x&nbsp;C&nbsp;x&nbsp;H&nbsp;x&nbsp;W),&nbsp;where&nbsp;N&nbsp;is&nbsp;the&nbsp;batch&nbsp;size,&nbsp;C&nbsp;is&nbsp;the&nbsp;number</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_57">57</td><td nowrap="nowrap">&nbsp;&nbsp;of&nbsp;channels,&nbsp;and&nbsp;H&nbsp;and&nbsp;W&nbsp;are&nbsp;the&nbsp;height&nbsp;and&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;data.</td><td class="diff_next"></td><td class="diff_header" id="to121_70">70</td><td nowrap="nowrap">&nbsp;&nbsp;of&nbsp;channels,&nbsp;and&nbsp;H&nbsp;and&nbsp;W&nbsp;are&nbsp;the&nbsp;height&nbsp;and&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;data.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;For&nbsp;non&nbsp;image&nbsp;case,&nbsp;the&nbsp;dimensions&nbsp;are&nbsp;in&nbsp;the&nbsp;form&nbsp;of&nbsp;(N&nbsp;x&nbsp;C&nbsp;x&nbsp;D1&nbsp;x</td><td class="diff_next"></td><td class="diff_header" id="to121_71">71</td><td nowrap="nowrap">&nbsp;&nbsp;For&nbsp;non&nbsp;image&nbsp;case,&nbsp;the&nbsp;dimensions&nbsp;are&nbsp;in&nbsp;the&nbsp;form&nbsp;of&nbsp;(N&nbsp;x&nbsp;C&nbsp;x&nbsp;D1&nbsp;x</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_59">59</td><td nowrap="nowrap">&nbsp;&nbsp;D2&nbsp;...&nbsp;Dn),&nbsp;where&nbsp;N&nbsp;is&nbsp;the&nbsp;batch&nbsp;size.&nbsp;Optionally,&nbsp;if&nbsp;dimension</td><td class="diff_next"></td><td class="diff_header" id="to121_72">72</td><td nowrap="nowrap">&nbsp;&nbsp;D2&nbsp;...&nbsp;Dn),&nbsp;where&nbsp;N&nbsp;is&nbsp;the&nbsp;batch&nbsp;size.&nbsp;Optionally,&nbsp;if&nbsp;dimension</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_60">60</td><td nowrap="nowrap">&nbsp;&nbsp;denotation&nbsp;is&nbsp;in&nbsp;effect,&nbsp;the&nbsp;operation&nbsp;expects&nbsp;the&nbsp;input&nbsp;data&nbsp;tensor</td><td class="diff_next"></td><td class="diff_header" id="to121_73">73</td><td nowrap="nowrap">&nbsp;&nbsp;denotation&nbsp;is&nbsp;in&nbsp;effect,&nbsp;the&nbsp;operation&nbsp;expects&nbsp;the&nbsp;input&nbsp;data&nbsp;tensor</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_61">61</td><td nowrap="nowrap">&nbsp;&nbsp;to&nbsp;arrive&nbsp;with&nbsp;the&nbsp;dimension&nbsp;denotation&nbsp;of&nbsp;[DATA_BATCH,</td><td class="diff_next"></td><td class="diff_header" id="to121_74">74</td><td nowrap="nowrap">&nbsp;&nbsp;to&nbsp;arrive&nbsp;with&nbsp;the&nbsp;dimension&nbsp;denotation&nbsp;of&nbsp;[DATA_BATCH,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_62">62</td><td nowrap="nowrap">&nbsp;&nbsp;DATA_CHANNEL,&nbsp;DATA_FEATURE,&nbsp;DATA_FEATURE&nbsp;...].</td><td class="diff_next"></td><td class="diff_header" id="to121_75">75</td><td nowrap="nowrap">&nbsp;&nbsp;DATA_CHANNEL,&nbsp;DATA_FEATURE,&nbsp;DATA_FEATURE&nbsp;...].</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_63">63</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_76">76</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_64">64</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to121_77">77</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_65">65</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_78">78</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_66">66</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2&nbsp;outputs.</td><td class="diff_next"></td><td class="diff_header" id="to121_79">79</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2&nbsp;outputs.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_67">67</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_80">80</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_68">68</td><td nowrap="nowrap">*&nbsp;**Y**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to121_81">81</td><td nowrap="nowrap">*&nbsp;**Y**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_69">69</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;data&nbsp;tensor&nbsp;from&nbsp;average&nbsp;or&nbsp;max&nbsp;pooling&nbsp;across&nbsp;the&nbsp;input</td><td class="diff_next"></td><td class="diff_header" id="to121_82">82</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;data&nbsp;tensor&nbsp;from&nbsp;average&nbsp;or&nbsp;max&nbsp;pooling&nbsp;across&nbsp;the&nbsp;input</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_70">70</td><td nowrap="nowrap">&nbsp;&nbsp;tensor.&nbsp;Dimensions&nbsp;will&nbsp;vary&nbsp;based&nbsp;on&nbsp;various&nbsp;kernel,&nbsp;stride,&nbsp;and</td><td class="diff_next"></td><td class="diff_header" id="to121_83">83</td><td nowrap="nowrap">&nbsp;&nbsp;tensor.&nbsp;Dimensions&nbsp;will&nbsp;vary&nbsp;based&nbsp;on&nbsp;various&nbsp;kernel,&nbsp;stride,&nbsp;and</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_71">71</td><td nowrap="nowrap">&nbsp;&nbsp;pad&nbsp;sizes.&nbsp;Floor&nbsp;value&nbsp;of&nbsp;the&nbsp;dimension&nbsp;is&nbsp;used</td><td class="diff_next"></td><td class="diff_header" id="to121_84">84</td><td nowrap="nowrap">&nbsp;&nbsp;pad&nbsp;sizes.&nbsp;Floor&nbsp;value&nbsp;of&nbsp;the&nbsp;dimension&nbsp;is&nbsp;used</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_72">72</td><td nowrap="nowrap">*&nbsp;**Indices**&nbsp;(optional,&nbsp;heterogeneous)&nbsp;-&nbsp;**I**:</td><td class="diff_next"></td><td class="diff_header" id="to121_85">85</td><td nowrap="nowrap">*&nbsp;**Indices**&nbsp;(optional,&nbsp;heterogeneous)&nbsp;-&nbsp;**I**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_73">73</td><td nowrap="nowrap">&nbsp;&nbsp;Indices&nbsp;tensor&nbsp;from&nbsp;max&nbsp;pooling&nbsp;across&nbsp;the&nbsp;input&nbsp;tensor.&nbsp;The</td><td class="diff_next"></td><td class="diff_header" id="to121_86">86</td><td nowrap="nowrap">&nbsp;&nbsp;Indices&nbsp;tensor&nbsp;from&nbsp;max&nbsp;pooling&nbsp;across&nbsp;the&nbsp;input&nbsp;tensor.&nbsp;The</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_74">74</td><td nowrap="nowrap">&nbsp;&nbsp;dimensions&nbsp;of&nbsp;indices&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;output&nbsp;tensor.&nbsp;The&nbsp;values&nbsp;in</td><td class="diff_next"></td><td class="diff_header" id="to121_87">87</td><td nowrap="nowrap">&nbsp;&nbsp;dimensions&nbsp;of&nbsp;indices&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;output&nbsp;tensor.&nbsp;The&nbsp;values&nbsp;in</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_75">75</td><td nowrap="nowrap">&nbsp;&nbsp;indices&nbsp;of&nbsp;are&nbsp;the&nbsp;indices&nbsp;of&nbsp;the&nbsp;selected&nbsp;values&nbsp;during&nbsp;pooling.</td><td class="diff_next"></td><td class="diff_header" id="to121_88">88</td><td nowrap="nowrap">&nbsp;&nbsp;indices&nbsp;of&nbsp;are&nbsp;the&nbsp;indices&nbsp;of&nbsp;the&nbsp;selected&nbsp;values&nbsp;during&nbsp;pooling.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_76">76</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;indices&nbsp;are&nbsp;computed&nbsp;as&nbsp;flatten&nbsp;1-D&nbsp;tensor,&nbsp;and&nbsp;the&nbsp;indices&nbsp;do</td><td class="diff_next"></td><td class="diff_header" id="to121_89">89</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;indices&nbsp;are&nbsp;computed&nbsp;as&nbsp;flatten&nbsp;1-D&nbsp;tensor,&nbsp;and&nbsp;the&nbsp;indices&nbsp;do</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_77">77</td><td nowrap="nowrap">&nbsp;&nbsp;not&nbsp;consider&nbsp;padding.&nbsp;So&nbsp;the&nbsp;values&nbsp;in&nbsp;indices&nbsp;are&nbsp;in&nbsp;[0,&nbsp;N&nbsp;x&nbsp;C&nbsp;x&nbsp;D1</td><td class="diff_next"></td><td class="diff_header" id="to121_90">90</td><td nowrap="nowrap">&nbsp;&nbsp;not&nbsp;consider&nbsp;padding.&nbsp;So&nbsp;the&nbsp;values&nbsp;in&nbsp;indices&nbsp;are&nbsp;in&nbsp;[0,&nbsp;N&nbsp;x&nbsp;C&nbsp;x&nbsp;D1</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_78">78</td><td nowrap="nowrap">&nbsp;&nbsp;x&nbsp;...&nbsp;x&nbsp;Dn).</td><td class="diff_next"></td><td class="diff_header" id="to121_91">91</td><td nowrap="nowrap">&nbsp;&nbsp;x&nbsp;...&nbsp;x&nbsp;Dn).</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_79">79</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_92">92</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_80">80</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to121_93">93</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_81">81</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to121_94">94</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_82">82</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to121_95">95</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_83">83</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to121_96">96</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_84">84</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to121_97">97</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_85">85</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16)</td><td class="diff_next"></td><td class="diff_header" id="to121_98">98</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_86">86</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to121_99">99</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_87">87</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;and&nbsp;output&nbsp;types&nbsp;to&nbsp;float&nbsp;tensors.</td><td class="diff_next"></td><td class="diff_header" id="to121_100">100</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;and&nbsp;output&nbsp;types&nbsp;to&nbsp;float&nbsp;tensors.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_88">88</td><td nowrap="nowrap">*&nbsp;**I**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to121_101">101</td><td nowrap="nowrap">*&nbsp;**I**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_89">89</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64)</td><td class="diff_next"></td><td class="diff_header" id="to121_102">102</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_90">90</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to121_103">103</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from121_91">91</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;index&nbsp;tensor&nbsp;to&nbsp;int64</td><td class="diff_next"></td><td class="diff_header" id="to121_104">104</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;index&nbsp;tensor&nbsp;to&nbsp;int64</td></tr>
            </tbody>
        </table>

.. _l-onnx-op-maxpool-8:

MaxPool - 8
===========

**Version**

* **name**: `MaxPool (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#MaxPool>`_
* **domain**: **main**
* **since_version**: **8**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 8**.

**Summary**

MaxPool consumes an input tensor X and applies max pooling across
the tensor according to kernel sizes, stride sizes, and pad lengths.
max pooling consisting of computing the max on all values of a
subset of the input tensor according to the kernel size and downsampling the
data into the output tensor Y for further processing. The output spatial shape will be following:
::

    output_spatial_shape[i] = floor((input_spatial_shape[i] + pad_shape[i] - kernel_spatial_shape[i]) / strides_spatial_shape[i] + 1)

    * pad_shape[i] is sum of pads along axis i

`auto_pad` is a DEPRECATED attribute. If you are using them currently, the output spatial shape will be following:
::

    VALID: output_spatial_shape[i] = ceil((input_spatial_shape[i] - kernel_spatial_shape[i] + 1) / strides_spatial_shape[i])
    SAME_UPPER or SAME_LOWER: output_spatial_shape[i] = ceil(input_spatial_shape[i] / strides_spatial_shape[i])

And pad shape will be following if `SAME_UPPER` or `SAME_LOWER`:
::

    pad_shape[i] = (output_spatial_shape[i] - 1) * strides_spatial_shape[i] + kernel_spatial_shape[i] - input_spatial_shape[i]

The output of each pooling window is maximum number of elements exclude pad.

**Attributes**

* **auto_pad**:
  auto_pad must be either NOTSET, SAME_UPPER, SAME_LOWER or VALID.
  Where default value is NOTSET, which means explicit padding is used.
  SAME_UPPER or SAME_LOWER mean pad the input so that the output
  spatial size match the input.In case of odd number add the extra
  padding at the end for SAME_UPPER and at the beginning for
  SAME_LOWER. VALID mean no padding.
* **kernel_shape** (required):
  The size of the kernel along each axis.
* **pads**:
  Padding for the beginning and ending along each spatial axis, it can
  take any value greater than or equal to 0. The value represent the
  number of pixels added to the beginning and end part of the
  corresponding axis. `pads` format should be as follow [x1_begin,
  x2_begin...x1_end, x2_end,...], where xi_begin the number of pixels
  added at the beginning of axis `i` and xi_end, the number of pixels
  added at the end of axis `i`. This attribute cannot be used
  simultaneously with auto_pad attribute. If not present, the padding
  defaults to 0 along start and end of each spatial axis.
* **storage_order**:
  The storage order of the tensor. 0 is row major, and 1 is column
  major.
* **strides**:
  Stride along each spatial axis.

**Inputs**

* **X** (heterogeneous) - **T**:
  Input data tensor from the previous operator; dimensions for image
  case are (N x C x H x W), where N is the batch size, C is the number
  of channels, and H and W are the height and the width of the data.
  For non image case, the dimensions are in the form of (N x C x D1 x
  D2 ... Dn), where N is the batch size. Optionally, if dimension
  denotation is in effect, the operation expects the input data tensor
  to arrive with the dimension denotation of [DATA_BATCH,
  DATA_CHANNEL, DATA_FEATURE, DATA_FEATURE ...].

**Outputs**

Between 1 and 2 outputs.

* **Y** (heterogeneous) - **T**:
  Output data tensor from average or max pooling across the input
  tensor. Dimensions will vary based on various kernel, stride, and
  pad sizes. Floor value of the dimension is used
* **Indices** (optional, heterogeneous) - **I**:
  Indices tensor from max pooling across the input tensor. The
  dimensions of indices are the same as output tensor. The values in
  indices of are the indices of the selected values during pooling.
  The indices are computed as flatten 1-D tensor, and the indices do
  not consider padding. So the values in indices are in [0, N x C x D1
  x ... x Dn).

**Type Constraints**

* **T** in (
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain input and output types to float tensors.
* **I** in (
  tensor(int64)
  ):
  Constrain index tensor to int64

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to122__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next"><a href="#difflib_chg_to122__0">f</a></td><td class="diff_header" id="from122_1">1</td><td nowrap="nowrap">MaxPool&nbsp;consumes&nbsp;an&nbsp;input&nbsp;tensor&nbsp;X&nbsp;and&nbsp;applies&nbsp;max&nbsp;pooling&nbsp;across</td><td class="diff_next"><a href="#difflib_chg_to122__0">f</a></td><td class="diff_header" id="to122_1">1</td><td nowrap="nowrap">MaxPool&nbsp;consumes&nbsp;an&nbsp;input&nbsp;tensor&nbsp;X&nbsp;and&nbsp;applies&nbsp;max&nbsp;pooling&nbsp;across</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_2">2</td><td nowrap="nowrap">the&nbsp;tensor&nbsp;according&nbsp;to&nbsp;kernel&nbsp;sizes,&nbsp;stride&nbsp;sizes,&nbsp;and&nbsp;pad&nbsp;lengths.</td><td class="diff_next"></td><td class="diff_header" id="to122_2">2</td><td nowrap="nowrap">the&nbsp;tensor&nbsp;according&nbsp;to&nbsp;kernel&nbsp;sizes,&nbsp;stride&nbsp;sizes,&nbsp;and&nbsp;pad&nbsp;lengths.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_3">3</td><td nowrap="nowrap">max&nbsp;pooling&nbsp;consisting&nbsp;of&nbsp;computing&nbsp;the&nbsp;max&nbsp;on&nbsp;all&nbsp;values&nbsp;of&nbsp;a</td><td class="diff_next"></td><td class="diff_header" id="to122_3">3</td><td nowrap="nowrap">max&nbsp;pooling&nbsp;consisting&nbsp;of&nbsp;computing&nbsp;the&nbsp;max&nbsp;on&nbsp;all&nbsp;values&nbsp;of&nbsp;a</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_4">4</td><td nowrap="nowrap">subset&nbsp;of&nbsp;the&nbsp;input&nbsp;tensor&nbsp;according&nbsp;to&nbsp;the&nbsp;kernel&nbsp;size&nbsp;and&nbsp;downsampling&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to122_4">4</td><td nowrap="nowrap">subset&nbsp;of&nbsp;the&nbsp;input&nbsp;tensor&nbsp;according&nbsp;to&nbsp;the&nbsp;kernel&nbsp;size&nbsp;and&nbsp;downsampling&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_5">5</td><td nowrap="nowrap">data&nbsp;into&nbsp;the&nbsp;output&nbsp;tensor&nbsp;Y&nbsp;for&nbsp;further&nbsp;processing.&nbsp;The&nbsp;output&nbsp;spatial&nbsp;shape&nbsp;will&nbsp;be&nbsp;following:</td><td class="diff_next"></td><td class="diff_header" id="to122_5">5</td><td nowrap="nowrap">data&nbsp;into&nbsp;the&nbsp;output&nbsp;tensor&nbsp;Y&nbsp;for&nbsp;further&nbsp;processing.&nbsp;The&nbsp;output&nbsp;spatial&nbsp;shape&nbsp;will&nbsp;be&nbsp;following:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_6">6</td><td nowrap="nowrap">::</td><td class="diff_next"></td><td class="diff_header" id="to122_6">6</td><td nowrap="nowrap">::</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_7">7</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_7">7</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_8">8</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;floor((input_spatial_shape[i]&nbsp;+&nbsp;pad_shape[i]&nbsp;-&nbsp;kernel_spatial_shape[i])&nbsp;/&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;1)</td><td class="diff_next"></td><td class="diff_header" id="to122_8">8</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;floor((input_spatial_shape[i]&nbsp;+&nbsp;pad_shape[i]&nbsp;-&nbsp;kernel_spatial_shape[i])&nbsp;/&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;1)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_9">9</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_9">9</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_10">10</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;pad_shape[i]&nbsp;is&nbsp;sum&nbsp;of&nbsp;pads&nbsp;along&nbsp;axis&nbsp;i</td><td class="diff_next"></td><td class="diff_header" id="to122_10">10</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;pad_shape[i]&nbsp;is&nbsp;sum&nbsp;of&nbsp;pads&nbsp;along&nbsp;axis&nbsp;i</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_11">11</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_11">11</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_12">12</td><td nowrap="nowrap">auto_pad&nbsp;is&nbsp;a&nbsp;DEPRECATED&nbsp;attribute.&nbsp;If&nbsp;you&nbsp;are&nbsp;using&nbsp;them&nbsp;currently,&nbsp;the&nbsp;output&nbsp;spatial&nbsp;shape&nbsp;will&nbsp;be&nbsp;following:</td><td class="diff_next"></td><td class="diff_header" id="to122_12">12</td><td nowrap="nowrap">auto_pad&nbsp;is&nbsp;a&nbsp;DEPRECATED&nbsp;attribute.&nbsp;If&nbsp;you&nbsp;are&nbsp;using&nbsp;them&nbsp;currently,&nbsp;the&nbsp;output&nbsp;spatial&nbsp;shape&nbsp;will&nbsp;be&nbsp;following:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_13">13</td><td nowrap="nowrap">::</td><td class="diff_next"></td><td class="diff_header" id="to122_13">13</td><td nowrap="nowrap">::</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_14">14</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_14">14</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_15">15</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;VALID:&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil((input_spatial_shape[i]&nbsp;-&nbsp;kernel_spatial_shape[i]&nbsp;+&nbsp;1)&nbsp;/&nbsp;strides_spatial_shape[i])</td><td class="diff_next"></td><td class="diff_header" id="to122_15">15</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;VALID:&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil((input_spatial_shape[i]&nbsp;-&nbsp;kernel_spatial_shape[i]&nbsp;+&nbsp;1)&nbsp;/&nbsp;strides_spatial_shape[i])</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_16">16</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER:&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil(input_spatial_shape[i]&nbsp;/&nbsp;strides_spatial_shape[i])</td><td class="diff_next"></td><td class="diff_header" id="to122_16">16</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER:&nbsp;output_spatial_shape[i]&nbsp;=&nbsp;ceil(input_spatial_shape[i]&nbsp;/&nbsp;strides_spatial_shape[i])</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_17">17</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_17">17</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_18">18</td><td nowrap="nowrap">And&nbsp;pad&nbsp;shape&nbsp;will&nbsp;be&nbsp;following&nbsp;if&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER:</td><td class="diff_next"></td><td class="diff_header" id="to122_18">18</td><td nowrap="nowrap">And&nbsp;pad&nbsp;shape&nbsp;will&nbsp;be&nbsp;following&nbsp;if&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_19">19</td><td nowrap="nowrap">::</td><td class="diff_next"></td><td class="diff_header" id="to122_19">19</td><td nowrap="nowrap">::</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_20">20</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_20">20</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_21">21</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;pad_shape[i]&nbsp;=&nbsp;(output_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;kernel_spatial_shape[i]&nbsp;-&nbsp;input_spatial_shape[i]</td><td class="diff_next"></td><td class="diff_header" id="to122_21">21</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;pad_shape[i]&nbsp;=&nbsp;(output_spatial_shape[i]&nbsp;-&nbsp;1)&nbsp;*&nbsp;strides_spatial_shape[i]&nbsp;+&nbsp;kernel_spatial_shape[i]&nbsp;-&nbsp;input_spatial_shape[i]</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_22">22</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_22">22</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_23">23</td><td nowrap="nowrap">The&nbsp;output&nbsp;of&nbsp;each&nbsp;pooling&nbsp;window&nbsp;is&nbsp;maximum&nbsp;number&nbsp;of&nbsp;elements&nbsp;exclude&nbsp;pad.</td><td class="diff_next"></td><td class="diff_header" id="to122_23">23</td><td nowrap="nowrap">The&nbsp;output&nbsp;of&nbsp;each&nbsp;pooling&nbsp;window&nbsp;is&nbsp;maximum&nbsp;number&nbsp;of&nbsp;elements&nbsp;exclude&nbsp;pad.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_24">24</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_24">24</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_25">25</td><td nowrap="nowrap">**Attributes**</td><td class="diff_next"></td><td class="diff_header" id="to122_25">25</td><td nowrap="nowrap">**Attributes**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_26">26</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_26">26</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_27">27</td><td nowrap="nowrap">*&nbsp;**auto_pad**:</td><td class="diff_next"></td><td class="diff_header" id="to122_27">27</td><td nowrap="nowrap">*&nbsp;**auto_pad**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_28">28</td><td nowrap="nowrap">&nbsp;&nbsp;auto_pad&nbsp;must&nbsp;be&nbsp;either&nbsp;NOTSET,&nbsp;SAME_UPPER,&nbsp;SAME_LOWER&nbsp;or&nbsp;VALID.</td><td class="diff_next"></td><td class="diff_header" id="to122_28">28</td><td nowrap="nowrap">&nbsp;&nbsp;auto_pad&nbsp;must&nbsp;be&nbsp;either&nbsp;NOTSET,&nbsp;SAME_UPPER,&nbsp;SAME_LOWER&nbsp;or&nbsp;VALID.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_29">29</td><td nowrap="nowrap">&nbsp;&nbsp;Where&nbsp;default&nbsp;value&nbsp;is&nbsp;NOTSET,&nbsp;which&nbsp;means&nbsp;explicit&nbsp;padding&nbsp;is&nbsp;used.</td><td class="diff_next"></td><td class="diff_header" id="to122_29">29</td><td nowrap="nowrap">&nbsp;&nbsp;Where&nbsp;default&nbsp;value&nbsp;is&nbsp;NOTSET,&nbsp;which&nbsp;means&nbsp;explicit&nbsp;padding&nbsp;is&nbsp;used.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER&nbsp;mean&nbsp;pad&nbsp;the&nbsp;input&nbsp;so&nbsp;that&nbsp;the&nbsp;output</td><td class="diff_next"></td><td class="diff_header" id="to122_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;SAME_UPPER&nbsp;or&nbsp;SAME_LOWER&nbsp;mean&nbsp;pad&nbsp;the&nbsp;input&nbsp;so&nbsp;that&nbsp;the&nbsp;output</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_31">31</td><td nowrap="nowrap">&nbsp;&nbsp;spatial&nbsp;size&nbsp;match&nbsp;the&nbsp;input.In&nbsp;case&nbsp;of&nbsp;odd&nbsp;number&nbsp;add&nbsp;the&nbsp;extra</td><td class="diff_next"></td><td class="diff_header" id="to122_31">31</td><td nowrap="nowrap">&nbsp;&nbsp;spatial&nbsp;size&nbsp;match&nbsp;the&nbsp;input.In&nbsp;case&nbsp;of&nbsp;odd&nbsp;number&nbsp;add&nbsp;the&nbsp;extra</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_32">32</td><td nowrap="nowrap">&nbsp;&nbsp;padding&nbsp;at&nbsp;the&nbsp;end&nbsp;for&nbsp;SAME_UPPER&nbsp;and&nbsp;at&nbsp;the&nbsp;beginning&nbsp;for</td><td class="diff_next"></td><td class="diff_header" id="to122_32">32</td><td nowrap="nowrap">&nbsp;&nbsp;padding&nbsp;at&nbsp;the&nbsp;end&nbsp;for&nbsp;SAME_UPPER&nbsp;and&nbsp;at&nbsp;the&nbsp;beginning&nbsp;for</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_33">33</td><td nowrap="nowrap">&nbsp;&nbsp;SAME_LOWER.&nbsp;VALID&nbsp;mean&nbsp;no&nbsp;padding.</td><td class="diff_next"></td><td class="diff_header" id="to122_33">33</td><td nowrap="nowrap">&nbsp;&nbsp;SAME_LOWER.&nbsp;VALID&nbsp;mean&nbsp;no&nbsp;padding.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_34">34</td><td nowrap="nowrap">*&nbsp;**kernel_shape**&nbsp;(required):</td><td class="diff_next"></td><td class="diff_header" id="to122_34">34</td><td nowrap="nowrap">*&nbsp;**kernel_shape**&nbsp;(required):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;size&nbsp;of&nbsp;the&nbsp;kernel&nbsp;along&nbsp;each&nbsp;axis.</td><td class="diff_next"></td><td class="diff_header" id="to122_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;size&nbsp;of&nbsp;the&nbsp;kernel&nbsp;along&nbsp;each&nbsp;axis.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_36">36</td><td nowrap="nowrap">*&nbsp;**pads**:</td><td class="diff_next"></td><td class="diff_header" id="to122_36">36</td><td nowrap="nowrap">*&nbsp;**pads**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;Padding&nbsp;for&nbsp;the&nbsp;beginning&nbsp;and&nbsp;ending&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis,&nbsp;it&nbsp;can</td><td class="diff_next"></td><td class="diff_header" id="to122_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;Padding&nbsp;for&nbsp;the&nbsp;beginning&nbsp;and&nbsp;ending&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis,&nbsp;it&nbsp;can</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;take&nbsp;any&nbsp;value&nbsp;greater&nbsp;than&nbsp;or&nbsp;equal&nbsp;to&nbsp;0.&nbsp;The&nbsp;value&nbsp;represent&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to122_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;take&nbsp;any&nbsp;value&nbsp;greater&nbsp;than&nbsp;or&nbsp;equal&nbsp;to&nbsp;0.&nbsp;The&nbsp;value&nbsp;represent&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_39">39</td><td nowrap="nowrap">&nbsp;&nbsp;number&nbsp;of&nbsp;pixels&nbsp;added&nbsp;to&nbsp;the&nbsp;beginning&nbsp;and&nbsp;end&nbsp;part&nbsp;of&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to122_39">39</td><td nowrap="nowrap">&nbsp;&nbsp;number&nbsp;of&nbsp;pixels&nbsp;added&nbsp;to&nbsp;the&nbsp;beginning&nbsp;and&nbsp;end&nbsp;part&nbsp;of&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;corresponding&nbsp;axis.&nbsp;pads&nbsp;format&nbsp;should&nbsp;be&nbsp;as&nbsp;follow&nbsp;[x1_begin,</td><td class="diff_next"></td><td class="diff_header" id="to122_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;corresponding&nbsp;axis.&nbsp;pads&nbsp;format&nbsp;should&nbsp;be&nbsp;as&nbsp;follow&nbsp;[x1_begin,</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to122__0"></td><td class="diff_header" id="from122_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;x2_begin...x1_end,&nbsp;x2_end,...],&nbsp;where&nbsp;xi_begin&nbsp;the&nbsp;number&nbsp;of&nbsp;pixels</td><td class="diff_next"></td><td class="diff_header" id="to122_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;x2_begin...x1_end,&nbsp;x2_end,...],&nbsp;where&nbsp;xi_begin&nbsp;the&nbsp;number&nbsp;of&nbsp;pixels</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_42">42</td><td nowrap="nowrap">&nbsp;&nbsp;added&nbsp;at&nbsp;the&nbsp;beginning&nbsp;of&nbsp;axis&nbsp;i&nbsp;and&nbsp;xi_end,&nbsp;the&nbsp;number&nbsp;of&nbsp;pixels</td><td class="diff_next"></td><td class="diff_header" id="to122_42">42</td><td nowrap="nowrap">&nbsp;&nbsp;added&nbsp;at&nbsp;the&nbsp;beginning&nbsp;of&nbsp;axis&nbsp;i&nbsp;and&nbsp;xi_end,&nbsp;the&nbsp;number&nbsp;of&nbsp;pixels</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_43">43</td><td nowrap="nowrap">&nbsp;&nbsp;added&nbsp;at&nbsp;the&nbsp;end&nbsp;of&nbsp;axis&nbsp;i.&nbsp;This&nbsp;attribute&nbsp;cannot&nbsp;be&nbsp;used</td><td class="diff_next"></td><td class="diff_header" id="to122_43">43</td><td nowrap="nowrap">&nbsp;&nbsp;added&nbsp;at&nbsp;the&nbsp;end&nbsp;of&nbsp;axis&nbsp;i.&nbsp;This&nbsp;attribute&nbsp;cannot&nbsp;be&nbsp;used</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_44">44</td><td nowrap="nowrap">&nbsp;&nbsp;simultaneously&nbsp;with&nbsp;auto_pad&nbsp;attribute.&nbsp;If&nbsp;not&nbsp;present,&nbsp;the&nbsp;padding</td><td class="diff_next"></td><td class="diff_header" id="to122_44">44</td><td nowrap="nowrap">&nbsp;&nbsp;simultaneously&nbsp;with&nbsp;auto_pad&nbsp;attribute.&nbsp;If&nbsp;not&nbsp;present,&nbsp;the&nbsp;padding</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_45">45</td><td nowrap="nowrap">&nbsp;&nbsp;defaults&nbsp;to&nbsp;0&nbsp;along&nbsp;start&nbsp;and&nbsp;end&nbsp;of&nbsp;each&nbsp;spatial&nbsp;axis.</td><td class="diff_next"></td><td class="diff_header" id="to122_45">45</td><td nowrap="nowrap">&nbsp;&nbsp;defaults&nbsp;to&nbsp;0&nbsp;along&nbsp;start&nbsp;and&nbsp;end&nbsp;of&nbsp;each&nbsp;spatial&nbsp;axis.</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to122__1">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to122__1">n</a></td><td class="diff_header" id="to122_46">46</td><td nowrap="nowrap"><span class="diff_add">*&nbsp;**storage_order**:</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_47">47</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;The&nbsp;storage&nbsp;order&nbsp;of&nbsp;the&nbsp;tensor.&nbsp;0&nbsp;is&nbsp;row&nbsp;major,&nbsp;and&nbsp;1&nbsp;is&nbsp;column</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_48">48</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;major.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_46">46</td><td nowrap="nowrap">*&nbsp;**strides**:</td><td class="diff_next"></td><td class="diff_header" id="to122_49">49</td><td nowrap="nowrap">*&nbsp;**strides**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_47">47</td><td nowrap="nowrap">&nbsp;&nbsp;Stride&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis.</td><td class="diff_next"></td><td class="diff_header" id="to122_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;Stride&nbsp;along&nbsp;each&nbsp;spatial&nbsp;axis.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_48">48</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_51">51</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_49">49</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to122_52">52</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_50">50</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_53">53</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_51">51</td><td nowrap="nowrap">*&nbsp;**X**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to122_54">54</td><td nowrap="nowrap">*&nbsp;**X**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;data&nbsp;tensor&nbsp;from&nbsp;the&nbsp;previous&nbsp;operator;&nbsp;dimensions&nbsp;for&nbsp;image</td><td class="diff_next"></td><td class="diff_header" id="to122_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;data&nbsp;tensor&nbsp;from&nbsp;the&nbsp;previous&nbsp;operator;&nbsp;dimensions&nbsp;for&nbsp;image</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;case&nbsp;are&nbsp;(N&nbsp;x&nbsp;C&nbsp;x&nbsp;H&nbsp;x&nbsp;W),&nbsp;where&nbsp;N&nbsp;is&nbsp;the&nbsp;batch&nbsp;size,&nbsp;C&nbsp;is&nbsp;the&nbsp;number</td><td class="diff_next"></td><td class="diff_header" id="to122_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;case&nbsp;are&nbsp;(N&nbsp;x&nbsp;C&nbsp;x&nbsp;H&nbsp;x&nbsp;W),&nbsp;where&nbsp;N&nbsp;is&nbsp;the&nbsp;batch&nbsp;size,&nbsp;C&nbsp;is&nbsp;the&nbsp;number</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;of&nbsp;channels,&nbsp;and&nbsp;H&nbsp;and&nbsp;W&nbsp;are&nbsp;the&nbsp;height&nbsp;and&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;data.</td><td class="diff_next"></td><td class="diff_header" id="to122_57">57</td><td nowrap="nowrap">&nbsp;&nbsp;of&nbsp;channels,&nbsp;and&nbsp;H&nbsp;and&nbsp;W&nbsp;are&nbsp;the&nbsp;height&nbsp;and&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;data.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;For&nbsp;non&nbsp;image&nbsp;case,&nbsp;the&nbsp;dimensions&nbsp;are&nbsp;in&nbsp;the&nbsp;form&nbsp;of&nbsp;(N&nbsp;x&nbsp;C&nbsp;x&nbsp;D1&nbsp;x</td><td class="diff_next"></td><td class="diff_header" id="to122_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;For&nbsp;non&nbsp;image&nbsp;case,&nbsp;the&nbsp;dimensions&nbsp;are&nbsp;in&nbsp;the&nbsp;form&nbsp;of&nbsp;(N&nbsp;x&nbsp;C&nbsp;x&nbsp;D1&nbsp;x</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;D2&nbsp;...&nbsp;Dn),&nbsp;where&nbsp;N&nbsp;is&nbsp;the&nbsp;batch&nbsp;size.&nbsp;Optionally,&nbsp;if&nbsp;dimension</td><td class="diff_next"></td><td class="diff_header" id="to122_59">59</td><td nowrap="nowrap">&nbsp;&nbsp;D2&nbsp;...&nbsp;Dn),&nbsp;where&nbsp;N&nbsp;is&nbsp;the&nbsp;batch&nbsp;size.&nbsp;Optionally,&nbsp;if&nbsp;dimension</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_57">57</td><td nowrap="nowrap">&nbsp;&nbsp;denotation&nbsp;is&nbsp;in&nbsp;effect,&nbsp;the&nbsp;operation&nbsp;expects&nbsp;the&nbsp;input&nbsp;data&nbsp;tensor</td><td class="diff_next"></td><td class="diff_header" id="to122_60">60</td><td nowrap="nowrap">&nbsp;&nbsp;denotation&nbsp;is&nbsp;in&nbsp;effect,&nbsp;the&nbsp;operation&nbsp;expects&nbsp;the&nbsp;input&nbsp;data&nbsp;tensor</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to122__1"></td><td class="diff_header" id="from122_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;to&nbsp;arrive&nbsp;with&nbsp;the&nbsp;dimension&nbsp;denotation&nbsp;of&nbsp;[DATA_BATCH,</td><td class="diff_next"></td><td class="diff_header" id="to122_61">61</td><td nowrap="nowrap">&nbsp;&nbsp;to&nbsp;arrive&nbsp;with&nbsp;the&nbsp;dimension&nbsp;denotation&nbsp;of&nbsp;[DATA_BATCH,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_59">59</td><td nowrap="nowrap">&nbsp;&nbsp;DATA_CHANNEL,&nbsp;DATA_FEATURE,&nbsp;DATA_FEATURE&nbsp;...].</td><td class="diff_next"></td><td class="diff_header" id="to122_62">62</td><td nowrap="nowrap">&nbsp;&nbsp;DATA_CHANNEL,&nbsp;DATA_FEATURE,&nbsp;DATA_FEATURE&nbsp;...].</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_60">60</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_63">63</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_61">61</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to122_64">64</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_62">62</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_65">65</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to122__2">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to122__2">n</a></td><td class="diff_header" id="to122_66">66</td><td nowrap="nowrap"><span class="diff_add">Between&nbsp;1&nbsp;and&nbsp;2&nbsp;outputs.</span></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to122__2"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_67">67</td><td nowrap="nowrap"><span class="diff_add">&nbsp;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_63">63</td><td nowrap="nowrap">*&nbsp;**Y**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to122_68">68</td><td nowrap="nowrap">*&nbsp;**Y**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_64">64</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;data&nbsp;tensor&nbsp;from&nbsp;average&nbsp;or&nbsp;max&nbsp;pooling&nbsp;across&nbsp;the&nbsp;input</td><td class="diff_next"></td><td class="diff_header" id="to122_69">69</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;data&nbsp;tensor&nbsp;from&nbsp;average&nbsp;or&nbsp;max&nbsp;pooling&nbsp;across&nbsp;the&nbsp;input</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_65">65</td><td nowrap="nowrap">&nbsp;&nbsp;tensor.&nbsp;Dimensions&nbsp;will&nbsp;vary&nbsp;based&nbsp;on&nbsp;various&nbsp;kernel,&nbsp;stride,&nbsp;and</td><td class="diff_next"></td><td class="diff_header" id="to122_70">70</td><td nowrap="nowrap">&nbsp;&nbsp;tensor.&nbsp;Dimensions&nbsp;will&nbsp;vary&nbsp;based&nbsp;on&nbsp;various&nbsp;kernel,&nbsp;stride,&nbsp;and</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_66">66</td><td nowrap="nowrap">&nbsp;&nbsp;pad&nbsp;sizes.&nbsp;Floor&nbsp;value&nbsp;of&nbsp;the&nbsp;dimension&nbsp;is&nbsp;used</td><td class="diff_next"></td><td class="diff_header" id="to122_71">71</td><td nowrap="nowrap">&nbsp;&nbsp;pad&nbsp;sizes.&nbsp;Floor&nbsp;value&nbsp;of&nbsp;the&nbsp;dimension&nbsp;is&nbsp;used</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to122__3">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to122__3">n</a></td><td class="diff_header" id="to122_72">72</td><td nowrap="nowrap"><span class="diff_add">*&nbsp;**Indices**&nbsp;(optional,&nbsp;heterogeneous)&nbsp;-&nbsp;**I**:</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_73">73</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;Indices&nbsp;tensor&nbsp;from&nbsp;max&nbsp;pooling&nbsp;across&nbsp;the&nbsp;input&nbsp;tensor.&nbsp;The</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_74">74</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;dimensions&nbsp;of&nbsp;indices&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;output&nbsp;tensor.&nbsp;The&nbsp;values&nbsp;in</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_75">75</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;indices&nbsp;of&nbsp;are&nbsp;the&nbsp;indices&nbsp;of&nbsp;the&nbsp;selected&nbsp;values&nbsp;during&nbsp;pooling.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_76">76</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;The&nbsp;indices&nbsp;are&nbsp;computed&nbsp;as&nbsp;flatten&nbsp;1-D&nbsp;tensor,&nbsp;and&nbsp;the&nbsp;indices&nbsp;do</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_77">77</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;not&nbsp;consider&nbsp;padding.&nbsp;So&nbsp;the&nbsp;values&nbsp;in&nbsp;indices&nbsp;are&nbsp;in&nbsp;[0,&nbsp;N&nbsp;x&nbsp;C&nbsp;x&nbsp;D1</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_78">78</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;x&nbsp;...&nbsp;x&nbsp;Dn).</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_67">67</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_79">79</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_68">68</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to122_80">80</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_69">69</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_81">81</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_70">70</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to122_82">82</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to122__3"></td><td class="diff_header" id="from122_71">71</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to122_83">83</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_72">72</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to122_84">84</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_73">73</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16)</td><td class="diff_next"></td><td class="diff_header" id="to122_85">85</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_74">74</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to122_86">86</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from122_75">75</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;and&nbsp;output&nbsp;types&nbsp;to&nbsp;float&nbsp;tensors.</td><td class="diff_next"></td><td class="diff_header" id="to122_87">87</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;and&nbsp;output&nbsp;types&nbsp;to&nbsp;float&nbsp;tensors.</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to122__top">t</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to122__top">t</a></td><td class="diff_header" id="to122_88">88</td><td nowrap="nowrap"><span class="diff_add">*&nbsp;**I**&nbsp;in&nbsp;(</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_89">89</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;tensor(int64)</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_90">90</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;):</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to122_91">91</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;Constrain&nbsp;index&nbsp;tensor&nbsp;to&nbsp;int64</span></td></tr>
            </tbody>
        </table>

.. _l-onnx-op-maxpool-1:

MaxPool - 1
===========

**Version**

* **name**: `MaxPool (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#MaxPool>`_
* **domain**: **main**
* **since_version**: **1**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 1**.

**Summary**

MaxPool consumes an input tensor X and applies max pooling across
the tensor according to kernel sizes, stride sizes, and pad lengths.
max pooling consisting of computing the max on all values of a
subset of the input tensor according to the kernel size and downsampling the
data into the output tensor Y for further processing. The output spatial shape will be following:
::

    output_spatial_shape[i] = floor((input_spatial_shape[i] + pad_shape[i] - kernel_spatial_shape[i]) / strides_spatial_shape[i] + 1)

    * pad_shape[i] is sum of pads along axis i

`auto_pad` is a DEPRECATED attribute. If you are using them currently, the output spatial shape will be following:
::

    VALID: output_spatial_shape[i] = ceil((input_spatial_shape[i] - kernel_spatial_shape[i] + 1) / strides_spatial_shape[i])
    SAME_UPPER or SAME_LOWER: output_spatial_shape[i] = ceil(input_spatial_shape[i] / strides_spatial_shape[i])

And pad shape will be following if `SAME_UPPER` or `SAME_LOWER`:
::

    pad_shape[i] = (output_spatial_shape[i] - 1) * strides_spatial_shape[i] + kernel_spatial_shape[i] - input_spatial_shape[i]

The output of each pooling window is maximum number of elements exclude pad.

**Attributes**

* **auto_pad**:
  auto_pad must be either NOTSET, SAME_UPPER, SAME_LOWER or VALID.
  Where default value is NOTSET, which means explicit padding is used.
  SAME_UPPER or SAME_LOWER mean pad the input so that the output
  spatial size match the input.In case of odd number add the extra
  padding at the end for SAME_UPPER and at the beginning for
  SAME_LOWER. VALID mean no padding.
* **kernel_shape** (required):
  The size of the kernel along each axis.
* **pads**:
  Padding for the beginning and ending along each spatial axis, it can
  take any value greater than or equal to 0. The value represent the
  number of pixels added to the beginning and end part of the
  corresponding axis. `pads` format should be as follow [x1_begin,
  x2_begin...x1_end, x2_end,...], where xi_begin the number of pixels
  added at the beginning of axis `i` and xi_end, the number of pixels
  added at the end of axis `i`. This attribute cannot be used
  simultaneously with auto_pad attribute. If not present, the padding
  defaults to 0 along start and end of each spatial axis.
* **strides**:
  Stride along each spatial axis.

**Inputs**

* **X** (heterogeneous) - **T**:
  Input data tensor from the previous operator; dimensions for image
  case are (N x C x H x W), where N is the batch size, C is the number
  of channels, and H and W are the height and the width of the data.
  For non image case, the dimensions are in the form of (N x C x D1 x
  D2 ... Dn), where N is the batch size. Optionally, if dimension
  denotation is in effect, the operation expects the input data tensor
  to arrive with the dimension denotation of [DATA_BATCH,
  DATA_CHANNEL, DATA_FEATURE, DATA_FEATURE ...].

**Outputs**

* **Y** (heterogeneous) - **T**:
  Output data tensor from average or max pooling across the input
  tensor. Dimensions will vary based on various kernel, stride, and
  pad sizes. Floor value of the dimension is used

**Type Constraints**

* **T** in (
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain input and output types to float tensors.
