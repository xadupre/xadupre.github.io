
.. _l-onnx-doc-Cast:

====
Cast
====

.. contents::
    :local:


.. _l-onnx-op-cast-13:

Cast - 13
=========

**Version**

* **name**: `Cast (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Cast>`_
* **domain**: **main**
* **since_version**: **13**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 13**.

**Summary**

The operator casts the elements of a given input tensor to a data type
specified by the 'to' argument and returns an output tensor of the same size in
the converted type. The 'to' argument must be one of the data types specified
in the 'DataType' enum field in the TensorProto message.

Casting from string tensor in plain (e.g., "3.14" and "1000") and scientific numeric representations
(e.g., "1e-5" and "1E8") to float types is supported. For example, converting string "100.5" to an integer may
result 100. There are some string literals reserved for special floating-point values;
"+INF" (and "INF"), "-INF", and "NaN" are positive infinity, negative infinity, and not-a-number, respectively.
Any string which can exactly match "+INF" in a case-insensitive way would be mapped to positive infinite. Similarly,
this case-insensitive rule is applied to "INF" and "NaN". When casting from numeric tensors
to string tensors, plain floating-point representation (such as "314.15926") would be used.
Converting non-numerical-literal string such as "Hello World!" is an undefined behavior. Cases
of converting string representing floating-point arithmetic value, such as "2.718", to INT is an undefined behavior.

Conversion from a numerical type to any numerical type is always allowed.
User must be aware of precision loss and value change caused by range difference between two types.
For example, a 64-bit float 3.1415926459 may be round to a 32-bit float 3.141592. Similarly, converting
an integer 36 to Boolean may produce 1 because we truncate bits which can't be stored in the targeted type.

In more detail, the conversion among numerical types should follow these rules:

* Casting from floating point to:
  * floating point: +/- infinity if OOR (out of range).
  * fixed point: undefined if OOR.
  * bool: +/- 0.0 to False; all else to True.
* Casting from fixed point to:
  * floating point: +/- infinity if OOR. (+ infinity in the case of uint)
  * fixed point: when OOR, discard higher bits and reinterpret (with respect to two's complement representation for
signed types). For example, 200 (int16) -> -56 (int8).
  * bool: zero to False; nonzero to True.
* Casting from bool to:
  * floating point: `{1.0, 0.0}`.
  * fixed point: `{1, 0}`.
  * bool: no change.

**Attributes**

* **to** (required):
  The data type to which the elements of the input tensor are cast.
  Strictly must be one of the types from DataType enum in TensorProto

**Inputs**

* **input** (heterogeneous) - **T1**:
  Input tensor to be cast.

**Outputs**

* **output** (heterogeneous) - **T2**:
  Output tensor with the same shape as input with type specified by
  the 'to' argument

**Type Constraints**

* **T1** in (
  tensor(bfloat16),
  tensor(bool),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain input types. Casting from complex is not supported.
* **T2** in (
  tensor(bfloat16),
  tensor(bool),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain output types. Casting to complex is not supported.

**Examples**

**default**

::

    shape = (3, 4)
    test_cases = [
        ("FLOAT", "FLOAT16"),
        ("FLOAT", "DOUBLE"),
        ("FLOAT16", "FLOAT"),
        ("FLOAT16", "DOUBLE"),
        ("DOUBLE", "FLOAT"),
        ("DOUBLE", "FLOAT16"),
        ("FLOAT", "STRING"),
        ("STRING", "FLOAT"),
        ("FLOAT", "BFLOAT16"),
        ("BFLOAT16", "FLOAT"),
    ]

    for from_type, to_type in test_cases:
        input_type_proto = None
        output_type_proto = None
        if "BFLOAT16" == from_type or "BFLOAT16" == to_type:
            np_fp32 = np.array(
                [
                    "0.47892547",
                    "0.48033667",
                    "0.49968487",
                    "0.81910545",
                    "0.47031248",
                    "0.816468",
                    "0.21087195",
                    "0.7229038",
                    "NaN",
                    "INF",
                    "+INF",
                    "-INF",
                ],
                dtype=np.float32,
            )
            little_endisan = sys.byteorder == "little"
            np_uint16_view = np_fp32.view(dtype=np.uint16)
            np_bfp16 = (
                np_uint16_view[1::2] if little_endisan else np_uint16_view[0::2]
            )
            if "BFLOAT16" == to_type:
                assert from_type == "FLOAT"
                input = np_fp32.reshape([3, 4])
                output = np_bfp16.reshape([3, 4])
                input_type_proto = onnx.helper.make_tensor_type_proto(
                    int(TensorProto.FLOAT), input.shape
                )
                output_type_proto = onnx.helper.make_tensor_type_proto(
                    int(TensorProto.BFLOAT16), output.shape
                )
            else:
                assert to_type == "FLOAT"
                input = np_bfp16.reshape([3, 4])
                # convert bfloat to FLOAT
                np_fp32_zeros = np.zeros((len(np_bfp16) * 2,), dtype=np.uint16)
                if little_endisan:
                    np_fp32_zeros[1::2] = np_bfp16
                else:
                    np_fp32_zeros[0::2] = np_bfp16
                np_fp32_from_bfloat = np_fp32_zeros.view(dtype=np.float32)
                output = np_fp32_from_bfloat.reshape([3, 4])
                input_type_proto = onnx.helper.make_tensor_type_proto(
                    int(TensorProto.BFLOAT16), input.shape
                )
                output_type_proto = onnx.helper.make_tensor_type_proto(
                    int(TensorProto.FLOAT), output.shape
                )
        elif "STRING" != from_type:
            input = np.random.random_sample(shape).astype(
                TENSOR_TYPE_TO_NP_TYPE[getattr(TensorProto, from_type)]
            )
            if "STRING" == to_type:
                # Converting input to str, then give it object dtype for generating script
                ss = []
                for i in input.flatten():
                    s = str(i).encode("utf-8")
                    su = s.decode("utf-8")
                    ss.append(su)

                output = np.array(ss).astype(object).reshape([3, 4])
            else:
                output = input.astype(
                    TENSOR_TYPE_TO_NP_TYPE[getattr(TensorProto, to_type)]
                )
        else:
            input = np.array(
                [
                    "0.47892547",
                    "0.48033667",
                    "0.49968487",
                    "0.81910545",
                    "0.47031248",
                    "0.816468",
                    "0.21087195",
                    "0.7229038",
                    "NaN",
                    "INF",
                    "+INF",
                    "-INF",
                ],
                dtype=np.dtype(object),
            ).reshape([3, 4])
            output = input.astype(
                TENSOR_TYPE_TO_NP_TYPE[getattr(TensorProto, to_type)]
            )
        node = onnx.helper.make_node(
            "Cast",
            inputs=["input"],
            outputs=["output"],
            to=getattr(TensorProto, to_type),
        )
        if input_type_proto and output_type_proto:
            expect(
                node,
                inputs=[input],
                outputs=[output],
                name="test_cast_" + from_type + "_to_" + to_type,
                input_type_protos=[input_type_proto],
                output_type_protos=[output_type_proto],
            )
        else:
            expect(
                node,
                inputs=[input],
                outputs=[output],
                name="test_cast_" + from_type + "_to_" + to_type,
            )

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to21__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next"><a href="#difflib_chg_to21__0">f</a></td><td class="diff_header" id="from21_1">1</td><td nowrap="nowrap">The&nbsp;operator&nbsp;casts&nbsp;the&nbsp;elements&nbsp;of&nbsp;a&nbsp;given&nbsp;input&nbsp;tensor&nbsp;to&nbsp;a&nbsp;data&nbsp;type</td><td class="diff_next"><a href="#difflib_chg_to21__0">f</a></td><td class="diff_header" id="to21_1">1</td><td nowrap="nowrap">The&nbsp;operator&nbsp;casts&nbsp;the&nbsp;elements&nbsp;of&nbsp;a&nbsp;given&nbsp;input&nbsp;tensor&nbsp;to&nbsp;a&nbsp;data&nbsp;type</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_2">2</td><td nowrap="nowrap">specified&nbsp;by&nbsp;the&nbsp;'to'&nbsp;argument&nbsp;and&nbsp;returns&nbsp;an&nbsp;output&nbsp;tensor&nbsp;of&nbsp;the&nbsp;same&nbsp;size&nbsp;in</td><td class="diff_next"></td><td class="diff_header" id="to21_2">2</td><td nowrap="nowrap">specified&nbsp;by&nbsp;the&nbsp;'to'&nbsp;argument&nbsp;and&nbsp;returns&nbsp;an&nbsp;output&nbsp;tensor&nbsp;of&nbsp;the&nbsp;same&nbsp;size&nbsp;in</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_3">3</td><td nowrap="nowrap">the&nbsp;converted&nbsp;type.&nbsp;The&nbsp;'to'&nbsp;argument&nbsp;must&nbsp;be&nbsp;one&nbsp;of&nbsp;the&nbsp;data&nbsp;types&nbsp;specified</td><td class="diff_next"></td><td class="diff_header" id="to21_3">3</td><td nowrap="nowrap">the&nbsp;converted&nbsp;type.&nbsp;The&nbsp;'to'&nbsp;argument&nbsp;must&nbsp;be&nbsp;one&nbsp;of&nbsp;the&nbsp;data&nbsp;types&nbsp;specified</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_4">4</td><td nowrap="nowrap">in&nbsp;the&nbsp;'DataType'&nbsp;enum&nbsp;field&nbsp;in&nbsp;the&nbsp;TensorProto&nbsp;message.</td><td class="diff_next"></td><td class="diff_header" id="to21_4">4</td><td nowrap="nowrap">in&nbsp;the&nbsp;'DataType'&nbsp;enum&nbsp;field&nbsp;in&nbsp;the&nbsp;TensorProto&nbsp;message.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_5">5</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_5">5</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_6">6</td><td nowrap="nowrap">Casting&nbsp;from&nbsp;string&nbsp;tensor&nbsp;in&nbsp;plain&nbsp;(e.g.,&nbsp;"3.14"&nbsp;and&nbsp;"1000")&nbsp;and&nbsp;scientific&nbsp;numeric&nbsp;representations</td><td class="diff_next"></td><td class="diff_header" id="to21_6">6</td><td nowrap="nowrap">Casting&nbsp;from&nbsp;string&nbsp;tensor&nbsp;in&nbsp;plain&nbsp;(e.g.,&nbsp;"3.14"&nbsp;and&nbsp;"1000")&nbsp;and&nbsp;scientific&nbsp;numeric&nbsp;representations</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_7">7</td><td nowrap="nowrap">(e.g.,&nbsp;"1e-5"&nbsp;and&nbsp;"1E8")&nbsp;to&nbsp;float&nbsp;types&nbsp;is&nbsp;supported.&nbsp;For&nbsp;example,&nbsp;converting&nbsp;string&nbsp;"100.5"&nbsp;to&nbsp;an&nbsp;integer&nbsp;may</td><td class="diff_next"></td><td class="diff_header" id="to21_7">7</td><td nowrap="nowrap">(e.g.,&nbsp;"1e-5"&nbsp;and&nbsp;"1E8")&nbsp;to&nbsp;float&nbsp;types&nbsp;is&nbsp;supported.&nbsp;For&nbsp;example,&nbsp;converting&nbsp;string&nbsp;"100.5"&nbsp;to&nbsp;an&nbsp;integer&nbsp;may</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_8">8</td><td nowrap="nowrap">result&nbsp;100.&nbsp;There&nbsp;are&nbsp;some&nbsp;string&nbsp;literals&nbsp;reserved&nbsp;for&nbsp;special&nbsp;floating-point&nbsp;values;</td><td class="diff_next"></td><td class="diff_header" id="to21_8">8</td><td nowrap="nowrap">result&nbsp;100.&nbsp;There&nbsp;are&nbsp;some&nbsp;string&nbsp;literals&nbsp;reserved&nbsp;for&nbsp;special&nbsp;floating-point&nbsp;values;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_9">9</td><td nowrap="nowrap">"+INF"&nbsp;(and&nbsp;"INF"),&nbsp;"-INF",&nbsp;and&nbsp;"NaN"&nbsp;are&nbsp;positive&nbsp;infinity,&nbsp;negative&nbsp;infinity,&nbsp;and&nbsp;not-a-number,&nbsp;respectively.</td><td class="diff_next"></td><td class="diff_header" id="to21_9">9</td><td nowrap="nowrap">"+INF"&nbsp;(and&nbsp;"INF"),&nbsp;"-INF",&nbsp;and&nbsp;"NaN"&nbsp;are&nbsp;positive&nbsp;infinity,&nbsp;negative&nbsp;infinity,&nbsp;and&nbsp;not-a-number,&nbsp;respectively.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_10">10</td><td nowrap="nowrap">Any&nbsp;string&nbsp;which&nbsp;can&nbsp;exactly&nbsp;match&nbsp;"+INF"&nbsp;in&nbsp;a&nbsp;case-insensitive&nbsp;way&nbsp;would&nbsp;be&nbsp;mapped&nbsp;to&nbsp;positive&nbsp;infinite.&nbsp;Similarly,</td><td class="diff_next"></td><td class="diff_header" id="to21_10">10</td><td nowrap="nowrap">Any&nbsp;string&nbsp;which&nbsp;can&nbsp;exactly&nbsp;match&nbsp;"+INF"&nbsp;in&nbsp;a&nbsp;case-insensitive&nbsp;way&nbsp;would&nbsp;be&nbsp;mapped&nbsp;to&nbsp;positive&nbsp;infinite.&nbsp;Similarly,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_11">11</td><td nowrap="nowrap">this&nbsp;case-insensitive&nbsp;rule&nbsp;is&nbsp;applied&nbsp;to&nbsp;"INF"&nbsp;and&nbsp;"NaN".&nbsp;When&nbsp;casting&nbsp;from&nbsp;numeric&nbsp;tensors</td><td class="diff_next"></td><td class="diff_header" id="to21_11">11</td><td nowrap="nowrap">this&nbsp;case-insensitive&nbsp;rule&nbsp;is&nbsp;applied&nbsp;to&nbsp;"INF"&nbsp;and&nbsp;"NaN".&nbsp;When&nbsp;casting&nbsp;from&nbsp;numeric&nbsp;tensors</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_12">12</td><td nowrap="nowrap">to&nbsp;string&nbsp;tensors,&nbsp;plain&nbsp;floating-point&nbsp;representation&nbsp;(such&nbsp;as&nbsp;"314.15926")&nbsp;would&nbsp;be&nbsp;used.</td><td class="diff_next"></td><td class="diff_header" id="to21_12">12</td><td nowrap="nowrap">to&nbsp;string&nbsp;tensors,&nbsp;plain&nbsp;floating-point&nbsp;representation&nbsp;(such&nbsp;as&nbsp;"314.15926")&nbsp;would&nbsp;be&nbsp;used.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_13">13</td><td nowrap="nowrap">Converting&nbsp;non-numerical-literal&nbsp;string&nbsp;such&nbsp;as&nbsp;"Hello&nbsp;World!"&nbsp;is&nbsp;an&nbsp;undefined&nbsp;behavior.&nbsp;Cases</td><td class="diff_next"></td><td class="diff_header" id="to21_13">13</td><td nowrap="nowrap">Converting&nbsp;non-numerical-literal&nbsp;string&nbsp;such&nbsp;as&nbsp;"Hello&nbsp;World!"&nbsp;is&nbsp;an&nbsp;undefined&nbsp;behavior.&nbsp;Cases</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_14">14</td><td nowrap="nowrap">of&nbsp;converting&nbsp;string&nbsp;representing&nbsp;floating-point&nbsp;arithmetic&nbsp;value,&nbsp;such&nbsp;as&nbsp;"2.718",&nbsp;to&nbsp;INT&nbsp;is&nbsp;an&nbsp;undefined&nbsp;behavior.</td><td class="diff_next"></td><td class="diff_header" id="to21_14">14</td><td nowrap="nowrap">of&nbsp;converting&nbsp;string&nbsp;representing&nbsp;floating-point&nbsp;arithmetic&nbsp;value,&nbsp;such&nbsp;as&nbsp;"2.718",&nbsp;to&nbsp;INT&nbsp;is&nbsp;an&nbsp;undefined&nbsp;behavior.</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to21__0"></td><td class="diff_header" id="from21_15">15</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_15">15</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_16">16</td><td nowrap="nowrap">Conversion&nbsp;from&nbsp;a&nbsp;numerical&nbsp;type&nbsp;to&nbsp;any&nbsp;numerical&nbsp;type&nbsp;is&nbsp;always&nbsp;allowed.</td><td class="diff_next"></td><td class="diff_header" id="to21_16">16</td><td nowrap="nowrap">Conversion&nbsp;from&nbsp;a&nbsp;numerical&nbsp;type&nbsp;to&nbsp;any&nbsp;numerical&nbsp;type&nbsp;is&nbsp;always&nbsp;allowed.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_17">17</td><td nowrap="nowrap">User&nbsp;must&nbsp;be&nbsp;aware&nbsp;of&nbsp;precision&nbsp;loss&nbsp;and&nbsp;value&nbsp;change&nbsp;caused&nbsp;by&nbsp;range&nbsp;difference&nbsp;between&nbsp;two&nbsp;types.</td><td class="diff_next"></td><td class="diff_header" id="to21_17">17</td><td nowrap="nowrap">User&nbsp;must&nbsp;be&nbsp;aware&nbsp;of&nbsp;precision&nbsp;loss&nbsp;and&nbsp;value&nbsp;change&nbsp;caused&nbsp;by&nbsp;range&nbsp;difference&nbsp;between&nbsp;two&nbsp;types.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_18">18</td><td nowrap="nowrap">For&nbsp;example,&nbsp;a&nbsp;64-bit&nbsp;float&nbsp;3.1415926459&nbsp;may&nbsp;be&nbsp;round&nbsp;to&nbsp;a&nbsp;32-bit&nbsp;float&nbsp;3.141592.&nbsp;Similarly,&nbsp;converting</td><td class="diff_next"></td><td class="diff_header" id="to21_18">18</td><td nowrap="nowrap">For&nbsp;example,&nbsp;a&nbsp;64-bit&nbsp;float&nbsp;3.1415926459&nbsp;may&nbsp;be&nbsp;round&nbsp;to&nbsp;a&nbsp;32-bit&nbsp;float&nbsp;3.141592.&nbsp;Similarly,&nbsp;converting</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_19">19</td><td nowrap="nowrap">an&nbsp;integer&nbsp;36&nbsp;to&nbsp;Boolean&nbsp;may&nbsp;produce&nbsp;1&nbsp;because&nbsp;we&nbsp;truncate&nbsp;bits&nbsp;which&nbsp;can't&nbsp;be&nbsp;stored&nbsp;in&nbsp;the&nbsp;targeted&nbsp;type.</td><td class="diff_next"></td><td class="diff_header" id="to21_19">19</td><td nowrap="nowrap">an&nbsp;integer&nbsp;36&nbsp;to&nbsp;Boolean&nbsp;may&nbsp;produce&nbsp;1&nbsp;because&nbsp;we&nbsp;truncate&nbsp;bits&nbsp;which&nbsp;can't&nbsp;be&nbsp;stored&nbsp;in&nbsp;the&nbsp;targeted&nbsp;type.</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to21__1">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to21__1">n</a></td><td class="diff_header" id="to21_20">20</td><td nowrap="nowrap"><span class="diff_add">&nbsp;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_21">21</td><td nowrap="nowrap"><span class="diff_add">In&nbsp;more&nbsp;detail,&nbsp;the&nbsp;conversion&nbsp;among&nbsp;numerical&nbsp;types&nbsp;should&nbsp;follow&nbsp;these&nbsp;rules:</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_22">22</td><td nowrap="nowrap"><span class="diff_add">&nbsp;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_23">23</td><td nowrap="nowrap"><span class="diff_add">*&nbsp;Casting&nbsp;from&nbsp;floating&nbsp;point&nbsp;to:</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_24">24</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;*&nbsp;floating&nbsp;point:&nbsp;+/-&nbsp;infinity&nbsp;if&nbsp;OOR&nbsp;(out&nbsp;of&nbsp;range).</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_25">25</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;*&nbsp;fixed&nbsp;point:&nbsp;undefined&nbsp;if&nbsp;OOR.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_26">26</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;*&nbsp;bool:&nbsp;+/-&nbsp;0.0&nbsp;to&nbsp;False;&nbsp;all&nbsp;else&nbsp;to&nbsp;True.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_27">27</td><td nowrap="nowrap"><span class="diff_add">*&nbsp;Casting&nbsp;from&nbsp;fixed&nbsp;point&nbsp;to:</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_28">28</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;*&nbsp;floating&nbsp;point:&nbsp;+/-&nbsp;infinity&nbsp;if&nbsp;OOR.&nbsp;(+&nbsp;infinity&nbsp;in&nbsp;the&nbsp;case&nbsp;of&nbsp;uint)</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_29">29</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;*&nbsp;fixed&nbsp;point:&nbsp;when&nbsp;OOR,&nbsp;discard&nbsp;higher&nbsp;bits&nbsp;and&nbsp;reinterpret&nbsp;(with&nbsp;respect&nbsp;to&nbsp;two's&nbsp;complement&nbsp;representation&nbsp;for</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_30">30</td><td nowrap="nowrap"><span class="diff_add">signed&nbsp;types).&nbsp;For&nbsp;example,&nbsp;200&nbsp;(int16)&nbsp;-&gt;&nbsp;-56&nbsp;(int8).</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_31">31</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;*&nbsp;bool:&nbsp;zero&nbsp;to&nbsp;False;&nbsp;nonzero&nbsp;to&nbsp;True.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_32">32</td><td nowrap="nowrap"><span class="diff_add">*&nbsp;Casting&nbsp;from&nbsp;bool&nbsp;to:</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_33">33</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;*&nbsp;floating&nbsp;point:&nbsp;{1.0,&nbsp;0.0}.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_34">34</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;*&nbsp;fixed&nbsp;point:&nbsp;{1,&nbsp;0}.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_35">35</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;*&nbsp;bool:&nbsp;no&nbsp;change.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_20">20</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_36">36</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_21">21</td><td nowrap="nowrap">**Attributes**</td><td class="diff_next"></td><td class="diff_header" id="to21_37">37</td><td nowrap="nowrap">**Attributes**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_22">22</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_38">38</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_23">23</td><td nowrap="nowrap">*&nbsp;**to**&nbsp;(required):</td><td class="diff_next"></td><td class="diff_header" id="to21_39">39</td><td nowrap="nowrap">*&nbsp;**to**&nbsp;(required):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;data&nbsp;type&nbsp;to&nbsp;which&nbsp;the&nbsp;elements&nbsp;of&nbsp;the&nbsp;input&nbsp;tensor&nbsp;are&nbsp;cast.</td><td class="diff_next"></td><td class="diff_header" id="to21_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;data&nbsp;type&nbsp;to&nbsp;which&nbsp;the&nbsp;elements&nbsp;of&nbsp;the&nbsp;input&nbsp;tensor&nbsp;are&nbsp;cast.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;Strictly&nbsp;must&nbsp;be&nbsp;one&nbsp;of&nbsp;the&nbsp;types&nbsp;from&nbsp;DataType&nbsp;enum&nbsp;in&nbsp;TensorProto</td><td class="diff_next"></td><td class="diff_header" id="to21_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;Strictly&nbsp;must&nbsp;be&nbsp;one&nbsp;of&nbsp;the&nbsp;types&nbsp;from&nbsp;DataType&nbsp;enum&nbsp;in&nbsp;TensorProto</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_26">26</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_42">42</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_27">27</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to21_43">43</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_28">28</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_44">44</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_29">29</td><td nowrap="nowrap">*&nbsp;**input**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T1**:</td><td class="diff_next"></td><td class="diff_header" id="to21_45">45</td><td nowrap="nowrap">*&nbsp;**input**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T1**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;tensor&nbsp;to&nbsp;be&nbsp;cast.</td><td class="diff_next"></td><td class="diff_header" id="to21_46">46</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;tensor&nbsp;to&nbsp;be&nbsp;cast.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_31">31</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_47">47</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_32">32</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to21_48">48</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_33">33</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_49">49</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_34">34</td><td nowrap="nowrap">*&nbsp;**output**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T2**:</td><td class="diff_next"></td><td class="diff_header" id="to21_50">50</td><td nowrap="nowrap">*&nbsp;**output**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T2**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;tensor&nbsp;with&nbsp;the&nbsp;same&nbsp;shape&nbsp;as&nbsp;input&nbsp;with&nbsp;type&nbsp;specified&nbsp;by</td><td class="diff_next"></td><td class="diff_header" id="to21_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;tensor&nbsp;with&nbsp;the&nbsp;same&nbsp;shape&nbsp;as&nbsp;input&nbsp;with&nbsp;type&nbsp;specified&nbsp;by</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to21__1"></td><td class="diff_header" id="from21_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;'to'&nbsp;argument</td><td class="diff_next"></td><td class="diff_header" id="to21_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;'to'&nbsp;argument</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_37">37</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_53">53</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_38">38</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to21_54">54</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_39">39</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to21_55">55</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_40">40</td><td nowrap="nowrap">*&nbsp;**T1**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to21_56">56</td><td nowrap="nowrap">*&nbsp;**T1**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to21__2">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to21__2">n</a></td><td class="diff_header" id="to21_57">57</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;tensor(bfloat16),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td><td class="diff_next"></td><td class="diff_header" id="to21_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_42">42</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to21_59">59</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_43">43</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to21_60">60</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_44">44</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td><td class="diff_next"></td><td class="diff_header" id="to21_61">61</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_45">45</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td><td class="diff_next"></td><td class="diff_header" id="to21_62">62</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_46">46</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td><td class="diff_next"></td><td class="diff_header" id="to21_63">63</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_47">47</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td><td class="diff_next"></td><td class="diff_header" id="to21_64">64</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_48">48</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td><td class="diff_next"></td><td class="diff_header" id="to21_65">65</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_49">49</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td><td class="diff_next"></td><td class="diff_header" id="to21_66">66</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td><td class="diff_next"></td><td class="diff_header" id="to21_67">67</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td><td class="diff_next"></td><td class="diff_header" id="to21_68">68</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to21__2"></td><td class="diff_header" id="from21_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td><td class="diff_next"></td><td class="diff_header" id="to21_69">69</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td><td class="diff_next"></td><td class="diff_header" id="to21_70">70</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to21_71">71</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;types.&nbsp;Casting&nbsp;from&nbsp;complex&nbsp;is&nbsp;not&nbsp;supported.</td><td class="diff_next"></td><td class="diff_header" id="to21_72">72</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;types.&nbsp;Casting&nbsp;from&nbsp;complex&nbsp;is&nbsp;not&nbsp;supported.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_56">56</td><td nowrap="nowrap">*&nbsp;**T2**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to21_73">73</td><td nowrap="nowrap">*&nbsp;**T2**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to21__top">t</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to21__top">t</a></td><td class="diff_header" id="to21_74">74</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;tensor(bfloat16),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_57">57</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td><td class="diff_next"></td><td class="diff_header" id="to21_75">75</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to21_76">76</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_59">59</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to21_77">77</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_60">60</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td><td class="diff_next"></td><td class="diff_header" id="to21_78">78</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_61">61</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td><td class="diff_next"></td><td class="diff_header" id="to21_79">79</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_62">62</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td><td class="diff_next"></td><td class="diff_header" id="to21_80">80</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_63">63</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td><td class="diff_next"></td><td class="diff_header" id="to21_81">81</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_64">64</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td><td class="diff_next"></td><td class="diff_header" id="to21_82">82</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_65">65</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td><td class="diff_next"></td><td class="diff_header" id="to21_83">83</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_66">66</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td><td class="diff_next"></td><td class="diff_header" id="to21_84">84</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_67">67</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td><td class="diff_next"></td><td class="diff_header" id="to21_85">85</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_68">68</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td><td class="diff_next"></td><td class="diff_header" id="to21_86">86</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_69">69</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td><td class="diff_next"></td><td class="diff_header" id="to21_87">87</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_70">70</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to21_88">88</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from21_71">71</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;output&nbsp;types.&nbsp;Casting&nbsp;to&nbsp;complex&nbsp;is&nbsp;not&nbsp;supported.</td><td class="diff_next"></td><td class="diff_header" id="to21_89">89</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;output&nbsp;types.&nbsp;Casting&nbsp;to&nbsp;complex&nbsp;is&nbsp;not&nbsp;supported.</td></tr>
            </tbody>
        </table>

.. _l-onnx-op-cast-9:

Cast - 9
========

**Version**

* **name**: `Cast (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Cast>`_
* **domain**: **main**
* **since_version**: **9**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 9**.

**Summary**

The operator casts the elements of a given input tensor to a data type
specified by the 'to' argument and returns an output tensor of the same size in
the converted type. The 'to' argument must be one of the data types specified
in the 'DataType' enum field in the TensorProto message.

Casting from string tensor in plain (e.g., "3.14" and "1000") and scientific numeric representations
(e.g., "1e-5" and "1E8") to float types is supported. For example, converting string "100.5" to an integer may
result 100. There are some string literals reserved for special floating-point values;
"+INF" (and "INF"), "-INF", and "NaN" are positive infinity, negative infinity, and not-a-number, respectively.
Any string which can exactly match "+INF" in a case-insensitive way would be mapped to positive infinite. Similarly,
this case-insensitive rule is applied to "INF" and "NaN". When casting from numeric tensors
to string tensors, plain floating-point representation (such as "314.15926") would be used.
Converting non-numerical-literal string such as "Hello World!" is an undefined behavior. Cases
of converting string representing floating-point arithmetic value, such as "2.718", to INT is an undefined behavior.

Conversion from a numerical type to any numerical type is always allowed.
User must be aware of precision loss and value change caused by range difference between two types.
For example, a 64-bit float 3.1415926459 may be round to a 32-bit float 3.141592. Similarly, converting
an integer 36 to Boolean may produce 1 because we truncate bits which can't be stored in the targeted type.

**Attributes**

* **to** (required):
  The data type to which the elements of the input tensor are cast.
  Strictly must be one of the types from DataType enum in TensorProto

**Inputs**

* **input** (heterogeneous) - **T1**:
  Input tensor to be cast.

**Outputs**

* **output** (heterogeneous) - **T2**:
  Output tensor with the same shape as input with type specified by
  the 'to' argument

**Type Constraints**

* **T1** in (
  tensor(bool),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain input types. Casting from complex is not supported.
* **T2** in (
  tensor(bool),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain output types. Casting to complex is not supported.

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to22__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next" id="difflib_chg_to22__0"><a href="#difflib_chg_to22__0">f</a></td><td class="diff_header" id="from22_1">1</td><td nowrap="nowrap">The&nbsp;operator&nbsp;casts&nbsp;the&nbsp;elements&nbsp;of&nbsp;a&nbsp;given&nbsp;input&nbsp;tensor&nbsp;to&nbsp;a&nbsp;data&nbsp;type</td><td class="diff_next"><a href="#difflib_chg_to22__0">f</a></td><td class="diff_header" id="to22_1">1</td><td nowrap="nowrap">The&nbsp;operator&nbsp;casts&nbsp;the&nbsp;elements&nbsp;of&nbsp;a&nbsp;given&nbsp;input&nbsp;tensor&nbsp;to&nbsp;a&nbsp;data&nbsp;type</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_2">2</td><td nowrap="nowrap">specified&nbsp;by&nbsp;the&nbsp;'to'&nbsp;argument&nbsp;and&nbsp;returns&nbsp;an&nbsp;output&nbsp;tensor&nbsp;of&nbsp;the&nbsp;same&nbsp;size&nbsp;in</td><td class="diff_next"></td><td class="diff_header" id="to22_2">2</td><td nowrap="nowrap">specified&nbsp;by&nbsp;the&nbsp;'to'&nbsp;argument&nbsp;and&nbsp;returns&nbsp;an&nbsp;output&nbsp;tensor&nbsp;of&nbsp;the&nbsp;same&nbsp;size&nbsp;in</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_3">3</td><td nowrap="nowrap">the&nbsp;converted&nbsp;type.&nbsp;The&nbsp;'to'&nbsp;argument&nbsp;must&nbsp;be&nbsp;one&nbsp;of&nbsp;the&nbsp;data&nbsp;types&nbsp;specified</td><td class="diff_next"></td><td class="diff_header" id="to22_3">3</td><td nowrap="nowrap">the&nbsp;converted&nbsp;type.&nbsp;The&nbsp;'to'&nbsp;argument&nbsp;must&nbsp;be&nbsp;one&nbsp;of&nbsp;the&nbsp;data&nbsp;types&nbsp;specified</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_4">4</td><td nowrap="nowrap">in&nbsp;the&nbsp;'DataType'&nbsp;enum&nbsp;field&nbsp;in&nbsp;the&nbsp;TensorProto&nbsp;message.</td><td class="diff_next"></td><td class="diff_header" id="to22_4">4</td><td nowrap="nowrap">in&nbsp;the&nbsp;'DataType'&nbsp;enum&nbsp;field&nbsp;in&nbsp;the&nbsp;TensorProto&nbsp;message.</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to22__1">n</a></td><td class="diff_header" id="from22_5">5</td><td nowrap="nowrap"><span class="diff_sub">NOTE:&nbsp;Casting&nbsp;to&nbsp;and&nbsp;from&nbsp;strings&nbsp;is&nbsp;not&nbsp;supported&nbsp;yet.</span></td><td class="diff_next"><a href="#difflib_chg_to22__1">n</a></td><td class="diff_header" id="to22_5">5</td><td nowrap="nowrap"><span class="diff_add">&nbsp;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_6">6</td><td nowrap="nowrap"><span class="diff_add">Casting&nbsp;from&nbsp;string&nbsp;tensor&nbsp;in&nbsp;plain&nbsp;(e.g.,&nbsp;"3.14"&nbsp;and&nbsp;"1000")&nbsp;and&nbsp;scientific&nbsp;numeric&nbsp;representations</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_7">7</td><td nowrap="nowrap"><span class="diff_add">(e.g.,&nbsp;"1e-5"&nbsp;and&nbsp;"1E8")&nbsp;to&nbsp;float&nbsp;types&nbsp;is&nbsp;supported.&nbsp;For&nbsp;example,&nbsp;converting&nbsp;string&nbsp;"100.5"&nbsp;to&nbsp;an&nbsp;integer&nbsp;may</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_8">8</td><td nowrap="nowrap"><span class="diff_add">result&nbsp;100.&nbsp;There&nbsp;are&nbsp;some&nbsp;string&nbsp;literals&nbsp;reserved&nbsp;for&nbsp;special&nbsp;floating-point&nbsp;values;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_9">9</td><td nowrap="nowrap"><span class="diff_add">"+INF"&nbsp;(and&nbsp;"INF"),&nbsp;"-INF",&nbsp;and&nbsp;"NaN"&nbsp;are&nbsp;positive&nbsp;infinity,&nbsp;negative&nbsp;infinity,&nbsp;and&nbsp;not-a-number,&nbsp;respectively.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_10">10</td><td nowrap="nowrap"><span class="diff_add">Any&nbsp;string&nbsp;which&nbsp;can&nbsp;exactly&nbsp;match&nbsp;"+INF"&nbsp;in&nbsp;a&nbsp;case-insensitive&nbsp;way&nbsp;would&nbsp;be&nbsp;mapped&nbsp;to&nbsp;positive&nbsp;infinite.&nbsp;Similarly,</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_11">11</td><td nowrap="nowrap"><span class="diff_add">this&nbsp;case-insensitive&nbsp;rule&nbsp;is&nbsp;applied&nbsp;to&nbsp;"INF"&nbsp;and&nbsp;"NaN".&nbsp;When&nbsp;casting&nbsp;from&nbsp;numeric&nbsp;tensors</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_12">12</td><td nowrap="nowrap"><span class="diff_add">to&nbsp;string&nbsp;tensors,&nbsp;plain&nbsp;floating-point&nbsp;representation&nbsp;(such&nbsp;as&nbsp;"314.15926")&nbsp;would&nbsp;be&nbsp;used.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_13">13</td><td nowrap="nowrap"><span class="diff_add">Converting&nbsp;non-numerical-literal&nbsp;string&nbsp;such&nbsp;as&nbsp;"Hello&nbsp;World!"&nbsp;is&nbsp;an&nbsp;undefined&nbsp;behavior.&nbsp;Cases</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_14">14</td><td nowrap="nowrap"><span class="diff_add">of&nbsp;converting&nbsp;string&nbsp;representing&nbsp;floating-point&nbsp;arithmetic&nbsp;value,&nbsp;such&nbsp;as&nbsp;"2.718",&nbsp;to&nbsp;INT&nbsp;is&nbsp;an&nbsp;undefined&nbsp;behavior.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_15">15</td><td nowrap="nowrap"><span class="diff_add">&nbsp;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_16">16</td><td nowrap="nowrap"><span class="diff_add">Conversion&nbsp;from&nbsp;a&nbsp;numerical&nbsp;type&nbsp;to&nbsp;any&nbsp;numerical&nbsp;type&nbsp;is&nbsp;always&nbsp;allowed.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_17">17</td><td nowrap="nowrap"><span class="diff_add">User&nbsp;must&nbsp;be&nbsp;aware&nbsp;of&nbsp;precision&nbsp;loss&nbsp;and&nbsp;value&nbsp;change&nbsp;caused&nbsp;by&nbsp;range&nbsp;difference&nbsp;between&nbsp;two&nbsp;types.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_18">18</td><td nowrap="nowrap"><span class="diff_add">For&nbsp;example,&nbsp;a&nbsp;64-bit&nbsp;float&nbsp;3.1415926459&nbsp;may&nbsp;be&nbsp;round&nbsp;to&nbsp;a&nbsp;32-bit&nbsp;float&nbsp;3.141592.&nbsp;Similarly,&nbsp;converting</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_19">19</td><td nowrap="nowrap"><span class="diff_add">an&nbsp;integer&nbsp;36&nbsp;to&nbsp;Boolean&nbsp;may&nbsp;produce&nbsp;1&nbsp;because&nbsp;we&nbsp;truncate&nbsp;bits&nbsp;which&nbsp;can't&nbsp;be&nbsp;stored&nbsp;in&nbsp;the&nbsp;targeted&nbsp;type.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_6">6</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_20">20</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_7">7</td><td nowrap="nowrap">**Attributes**</td><td class="diff_next"></td><td class="diff_header" id="to22_21">21</td><td nowrap="nowrap">**Attributes**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_8">8</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_22">22</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_9">9</td><td nowrap="nowrap">*&nbsp;**to**&nbsp;(required):</td><td class="diff_next"></td><td class="diff_header" id="to22_23">23</td><td nowrap="nowrap">*&nbsp;**to**&nbsp;(required):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_10">10</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;data&nbsp;type&nbsp;to&nbsp;which&nbsp;the&nbsp;elements&nbsp;of&nbsp;the&nbsp;input&nbsp;tensor&nbsp;are&nbsp;cast.</td><td class="diff_next"></td><td class="diff_header" id="to22_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;data&nbsp;type&nbsp;to&nbsp;which&nbsp;the&nbsp;elements&nbsp;of&nbsp;the&nbsp;input&nbsp;tensor&nbsp;are&nbsp;cast.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_11">11</td><td nowrap="nowrap">&nbsp;&nbsp;Strictly&nbsp;must&nbsp;be&nbsp;one&nbsp;of&nbsp;the&nbsp;types&nbsp;from&nbsp;DataType&nbsp;enum&nbsp;in&nbsp;TensorProto</td><td class="diff_next"></td><td class="diff_header" id="to22_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;Strictly&nbsp;must&nbsp;be&nbsp;one&nbsp;of&nbsp;the&nbsp;types&nbsp;from&nbsp;DataType&nbsp;enum&nbsp;in&nbsp;TensorProto</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_12">12</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_26">26</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_13">13</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to22_27">27</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_14">14</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_28">28</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_15">15</td><td nowrap="nowrap">*&nbsp;**input**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T1**:</td><td class="diff_next"></td><td class="diff_header" id="to22_29">29</td><td nowrap="nowrap">*&nbsp;**input**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T1**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_16">16</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;tensor&nbsp;to&nbsp;be&nbsp;cast.</td><td class="diff_next"></td><td class="diff_header" id="to22_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;tensor&nbsp;to&nbsp;be&nbsp;cast.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_17">17</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_31">31</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_18">18</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to22_32">32</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_19">19</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_33">33</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_20">20</td><td nowrap="nowrap">*&nbsp;**output**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T2**:</td><td class="diff_next"></td><td class="diff_header" id="to22_34">34</td><td nowrap="nowrap">*&nbsp;**output**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T2**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_21">21</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;tensor&nbsp;with&nbsp;the&nbsp;same&nbsp;shape&nbsp;as&nbsp;input&nbsp;with&nbsp;type&nbsp;specified&nbsp;by</td><td class="diff_next"></td><td class="diff_header" id="to22_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;tensor&nbsp;with&nbsp;the&nbsp;same&nbsp;shape&nbsp;as&nbsp;input&nbsp;with&nbsp;type&nbsp;specified&nbsp;by</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_22">22</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;'to'&nbsp;argument</td><td class="diff_next"></td><td class="diff_header" id="to22_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;'to'&nbsp;argument</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_23">23</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_37">37</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_24">24</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to22_38">38</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_25">25</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to22_39">39</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_26">26</td><td nowrap="nowrap">*&nbsp;**T1**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to22_40">40</td><td nowrap="nowrap">*&nbsp;**T1**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_27">27</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td><td class="diff_next"></td><td class="diff_header" id="to22_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_28">28</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to22_42">42</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_29">29</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to22_43">43</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to22__1"></td><td class="diff_header" id="from22_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td><td class="diff_next"></td><td class="diff_header" id="to22_44">44</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_31">31</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td><td class="diff_next"></td><td class="diff_header" id="to22_45">45</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_32">32</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td><td class="diff_next"></td><td class="diff_header" id="to22_46">46</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_33">33</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td><td class="diff_next"></td><td class="diff_header" id="to22_47">47</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_34">34</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td><td class="diff_next"></td><td class="diff_header" id="to22_48">48</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to22__2">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to22__2">n</a></td><td class="diff_header" id="to22_49">49</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;tensor(string),</span></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to22__2"></td><td class="diff_header" id="from22_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td><td class="diff_next"></td><td class="diff_header" id="to22_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td><td class="diff_next"></td><td class="diff_header" id="to22_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td><td class="diff_next"></td><td class="diff_header" id="to22_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td><td class="diff_next"></td><td class="diff_header" id="to22_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_39">39</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to22_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to22__3">n</a></td><td class="diff_header" id="from22_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;types.&nbsp;Casting&nbsp;from<span class="diff_sub">&nbsp;strings&nbsp;and</span>&nbsp;complex&nbsp;<span class="diff_chg">are</span>&nbsp;not</td><td class="diff_next"><a href="#difflib_chg_to22__3">n</a></td><td class="diff_header" id="to22_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;types.&nbsp;Casting&nbsp;from&nbsp;complex&nbsp;<span class="diff_chg">is</span>&nbsp;not<span class="diff_add">&nbsp;supported.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_41">41</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;supported.</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_42">42</td><td nowrap="nowrap">*&nbsp;**T2**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to22_56">56</td><td nowrap="nowrap">*&nbsp;**T2**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_43">43</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td><td class="diff_next"></td><td class="diff_header" id="to22_57">57</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_44">44</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to22_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_45">45</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to22_59">59</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to22__3"></td><td class="diff_header" id="from22_46">46</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td><td class="diff_next"></td><td class="diff_header" id="to22_60">60</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_47">47</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td><td class="diff_next"></td><td class="diff_header" id="to22_61">61</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_48">48</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td><td class="diff_next"></td><td class="diff_header" id="to22_62">62</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_49">49</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td><td class="diff_next"></td><td class="diff_header" id="to22_63">63</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td><td class="diff_next"></td><td class="diff_header" id="to22_64">64</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to22__4">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to22__4">n</a></td><td class="diff_header" id="to22_65">65</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;tensor(string),</span></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to22__4"></td><td class="diff_header" id="from22_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td><td class="diff_next"></td><td class="diff_header" id="to22_66">66</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td><td class="diff_next"></td><td class="diff_header" id="to22_67">67</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td><td class="diff_next"></td><td class="diff_header" id="to22_68">68</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td><td class="diff_next"></td><td class="diff_header" id="to22_69">69</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to22_70">70</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to22__top">t</a></td><td class="diff_header" id="from22_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;output&nbsp;types.&nbsp;Casting&nbsp;to<span class="diff_sub">&nbsp;strings&nbsp;and</span>&nbsp;complex&nbsp;<span class="diff_chg">are</span>&nbsp;not</td><td class="diff_next"><a href="#difflib_chg_to22__top">t</a></td><td class="diff_header" id="to22_71">71</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;output&nbsp;types.&nbsp;Casting&nbsp;to&nbsp;complex&nbsp;<span class="diff_chg">is</span>&nbsp;not<span class="diff_add">&nbsp;supported.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from22_57">57</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;supported.</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
            </tbody>
        </table>

.. _l-onnx-op-cast-6:

Cast - 6
========

**Version**

* **name**: `Cast (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Cast>`_
* **domain**: **main**
* **since_version**: **6**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 6**.

**Summary**

The operator casts the elements of a given input tensor to a data type
specified by the 'to' argument and returns an output tensor of the same size in
the converted type. The 'to' argument must be one of the data types specified
in the 'DataType' enum field in the TensorProto message.
NOTE: Casting to and from strings is not supported yet.

**Attributes**

* **to** (required):
  The data type to which the elements of the input tensor are cast.
  Strictly must be one of the types from DataType enum in TensorProto

**Inputs**

* **input** (heterogeneous) - **T1**:
  Input tensor to be cast.

**Outputs**

* **output** (heterogeneous) - **T2**:
  Output tensor with the same shape as input with type specified by
  the 'to' argument

**Type Constraints**

* **T1** in (
  tensor(bool),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain input types. Casting from strings and complex are not
  supported.
* **T2** in (
  tensor(bool),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain output types. Casting to strings and complex are not
  supported.

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to23__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next"><a href="#difflib_chg_to23__top">t</a></td><td class="diff_header" id="from23_1">1</td><td nowrap="nowrap">The&nbsp;operator&nbsp;casts&nbsp;the&nbsp;elements&nbsp;of&nbsp;a&nbsp;given&nbsp;input&nbsp;tensor&nbsp;to&nbsp;a&nbsp;data&nbsp;type</td><td class="diff_next"><a href="#difflib_chg_to23__top">t</a></td><td class="diff_header" id="to23_1">1</td><td nowrap="nowrap">The&nbsp;operator&nbsp;casts&nbsp;the&nbsp;elements&nbsp;of&nbsp;a&nbsp;given&nbsp;input&nbsp;tensor&nbsp;to&nbsp;a&nbsp;data&nbsp;type</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_2">2</td><td nowrap="nowrap">specified&nbsp;by&nbsp;the&nbsp;'to'&nbsp;argument&nbsp;and&nbsp;returns&nbsp;an&nbsp;output&nbsp;tensor&nbsp;of&nbsp;the&nbsp;same&nbsp;size&nbsp;in</td><td class="diff_next"></td><td class="diff_header" id="to23_2">2</td><td nowrap="nowrap">specified&nbsp;by&nbsp;the&nbsp;'to'&nbsp;argument&nbsp;and&nbsp;returns&nbsp;an&nbsp;output&nbsp;tensor&nbsp;of&nbsp;the&nbsp;same&nbsp;size&nbsp;in</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_3">3</td><td nowrap="nowrap">the&nbsp;converted&nbsp;type.&nbsp;The&nbsp;'to'&nbsp;argument&nbsp;must&nbsp;be&nbsp;one&nbsp;of&nbsp;the&nbsp;data&nbsp;types&nbsp;specified</td><td class="diff_next"></td><td class="diff_header" id="to23_3">3</td><td nowrap="nowrap">the&nbsp;converted&nbsp;type.&nbsp;The&nbsp;'to'&nbsp;argument&nbsp;must&nbsp;be&nbsp;one&nbsp;of&nbsp;the&nbsp;data&nbsp;types&nbsp;specified</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_4">4</td><td nowrap="nowrap">in&nbsp;the&nbsp;'DataType'&nbsp;enum&nbsp;field&nbsp;in&nbsp;the&nbsp;TensorProto&nbsp;message.</td><td class="diff_next"></td><td class="diff_header" id="to23_4">4</td><td nowrap="nowrap">in&nbsp;the&nbsp;'DataType'&nbsp;enum&nbsp;field&nbsp;in&nbsp;the&nbsp;TensorProto&nbsp;message.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_5">5</td><td nowrap="nowrap">NOTE:&nbsp;Casting&nbsp;to&nbsp;and&nbsp;from&nbsp;strings&nbsp;is&nbsp;not&nbsp;supported&nbsp;yet.</td><td class="diff_next"></td><td class="diff_header" id="to23_5">5</td><td nowrap="nowrap">NOTE:&nbsp;Casting&nbsp;to&nbsp;and&nbsp;from&nbsp;strings&nbsp;is&nbsp;not&nbsp;supported&nbsp;yet.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_6">6</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to23_6">6</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_7">7</td><td nowrap="nowrap">**Attributes**</td><td class="diff_next"></td><td class="diff_header" id="to23_7">7</td><td nowrap="nowrap">**Attributes**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_8">8</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to23_8">8</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_9">9</td><td nowrap="nowrap">*&nbsp;**to**&nbsp;(required):</td><td class="diff_next"></td><td class="diff_header" id="to23_9">9</td><td nowrap="nowrap">*&nbsp;**to**&nbsp;(required):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_10">10</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;data&nbsp;type&nbsp;to&nbsp;which&nbsp;the&nbsp;elements&nbsp;of&nbsp;the&nbsp;input&nbsp;tensor&nbsp;are&nbsp;cast.</td><td class="diff_next"></td><td class="diff_header" id="to23_10">10</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;data&nbsp;type&nbsp;to&nbsp;which&nbsp;the&nbsp;elements&nbsp;of&nbsp;the&nbsp;input&nbsp;tensor&nbsp;are&nbsp;cast.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_11">11</td><td nowrap="nowrap">&nbsp;&nbsp;Strictly&nbsp;must&nbsp;be&nbsp;one&nbsp;of&nbsp;the&nbsp;types&nbsp;from&nbsp;DataType&nbsp;enum&nbsp;in&nbsp;TensorProto</td><td class="diff_next"></td><td class="diff_header" id="to23_11">11</td><td nowrap="nowrap">&nbsp;&nbsp;Strictly&nbsp;must&nbsp;be&nbsp;one&nbsp;of&nbsp;the&nbsp;types&nbsp;from&nbsp;DataType&nbsp;enum&nbsp;in&nbsp;TensorProto</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_12">12</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to23_12">12</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_13">13</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to23_13">13</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_14">14</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to23_14">14</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_15">15</td><td nowrap="nowrap">*&nbsp;**input**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T1**:</td><td class="diff_next"></td><td class="diff_header" id="to23_15">15</td><td nowrap="nowrap">*&nbsp;**input**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T1**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_16">16</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;tensor&nbsp;to&nbsp;be&nbsp;cast.</td><td class="diff_next"></td><td class="diff_header" id="to23_16">16</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;tensor&nbsp;to&nbsp;be&nbsp;cast.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_17">17</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to23_17">17</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_18">18</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to23_18">18</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_19">19</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to23_19">19</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_20">20</td><td nowrap="nowrap">*&nbsp;**output**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T2**:</td><td class="diff_next"></td><td class="diff_header" id="to23_20">20</td><td nowrap="nowrap">*&nbsp;**output**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T2**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_21">21</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;tensor&nbsp;with&nbsp;the&nbsp;same&nbsp;shape&nbsp;as&nbsp;input&nbsp;with&nbsp;type&nbsp;specified&nbsp;by</td><td class="diff_next"></td><td class="diff_header" id="to23_21">21</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;tensor&nbsp;with&nbsp;the&nbsp;same&nbsp;shape&nbsp;as&nbsp;input&nbsp;with&nbsp;type&nbsp;specified&nbsp;by</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_22">22</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;'to'&nbsp;argument</td><td class="diff_next"></td><td class="diff_header" id="to23_22">22</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;'to'&nbsp;argument</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_23">23</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to23_23">23</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_24">24</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to23_24">24</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_25">25</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to23_25">25</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_26">26</td><td nowrap="nowrap">*&nbsp;**T1**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to23_26">26</td><td nowrap="nowrap">*&nbsp;**T1**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_27">27</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td><td class="diff_next"></td><td class="diff_header" id="to23_27">27</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_28">28</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to23_28">28</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_29">29</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to23_29">29</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td><td class="diff_next"></td><td class="diff_header" id="to23_30">30</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_31">31</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td><td class="diff_next"></td><td class="diff_header" id="to23_31">31</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_32">32</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td><td class="diff_next"></td><td class="diff_header" id="to23_32">32</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_33">33</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td><td class="diff_next"></td><td class="diff_header" id="to23_33">33</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_34">34</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td><td class="diff_next"></td><td class="diff_header" id="to23_34">34</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td><td class="diff_next"></td><td class="diff_header" id="to23_35">35</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td><td class="diff_next"></td><td class="diff_header" id="to23_36">36</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td><td class="diff_next"></td><td class="diff_header" id="to23_37">37</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td><td class="diff_next"></td><td class="diff_header" id="to23_38">38</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_39">39</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to23_39">39</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;types.&nbsp;Casting&nbsp;from&nbsp;strings&nbsp;and&nbsp;complex&nbsp;are&nbsp;not</td><td class="diff_next"></td><td class="diff_header" id="to23_40">40</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;types.&nbsp;Casting&nbsp;from&nbsp;strings&nbsp;and&nbsp;complex&nbsp;are&nbsp;not</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;supported.</td><td class="diff_next"></td><td class="diff_header" id="to23_41">41</td><td nowrap="nowrap">&nbsp;&nbsp;supported.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_42">42</td><td nowrap="nowrap">*&nbsp;**T2**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to23_42">42</td><td nowrap="nowrap">*&nbsp;**T2**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_43">43</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td><td class="diff_next"></td><td class="diff_header" id="to23_43">43</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_44">44</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to23_44">44</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_45">45</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to23_45">45</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_46">46</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td><td class="diff_next"></td><td class="diff_header" id="to23_46">46</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_47">47</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td><td class="diff_next"></td><td class="diff_header" id="to23_47">47</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_48">48</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td><td class="diff_next"></td><td class="diff_header" id="to23_48">48</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_49">49</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td><td class="diff_next"></td><td class="diff_header" id="to23_49">49</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td><td class="diff_next"></td><td class="diff_header" id="to23_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td><td class="diff_next"></td><td class="diff_header" id="to23_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td><td class="diff_next"></td><td class="diff_header" id="to23_52">52</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td><td class="diff_next"></td><td class="diff_header" id="to23_53">53</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td><td class="diff_next"></td><td class="diff_header" id="to23_54">54</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to23_55">55</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;output&nbsp;types.&nbsp;Casting&nbsp;to&nbsp;strings&nbsp;and&nbsp;complex&nbsp;are&nbsp;not</td><td class="diff_next"></td><td class="diff_header" id="to23_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;output&nbsp;types.&nbsp;Casting&nbsp;to&nbsp;strings&nbsp;and&nbsp;complex&nbsp;are&nbsp;not</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from23_57">57</td><td nowrap="nowrap">&nbsp;&nbsp;supported.</td><td class="diff_next"></td><td class="diff_header" id="to23_57">57</td><td nowrap="nowrap">&nbsp;&nbsp;supported.</td></tr>
            </tbody>
        </table>

.. _l-onnx-op-cast-1:

Cast - 1
========

**Version**

* **name**: `Cast (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Cast>`_
* **domain**: **main**
* **since_version**: **1**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: False

This version of the operator has been available
**since version 1**.

**Summary**

The operator casts the elements of a given input tensor to a data type
specified by the 'to' argument and returns an output tensor of the same size in
the converted type. The 'to' argument must be one of the data types specified
in the 'DataType' enum field in the TensorProto message.
NOTE: Casting to and from strings is not supported yet.

**Attributes**

* **to** (required):
  The data type to which the elements of the input tensor are cast.
  Strictly must be one of the types from DataType enum in TensorProto

**Inputs**

* **input** (heterogeneous) - **T1**:
  Input tensor to be cast.

**Outputs**

* **output** (heterogeneous) - **T2**:
  Output tensor with the same shape as input with type specified by
  the 'to' argument

**Type Constraints**

* **T1** in (
  tensor(bool),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain input types. Casting from strings and complex are not
  supported.
* **T2** in (
  tensor(bool),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain output types. Casting to strings and complex are not
  supported.
