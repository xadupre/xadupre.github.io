Tile - 6 vs 13
==============

.. raw:: html


    <div id="div_Tile_2"></div>
    <link rel="stylesheet" type="text/css" href="../_static/diff2html.min.css" />
    <script type="text/javascript" src="../_static/diff2html-ui.min.js"></script>
    <script>
    const diffString = `
    --- a/Tile6
    +++ b/Tile13
    @@ -1 +1 @@
      Constructs a tensor by tiling a given tensor.
      This is the same as function tile in Numpy, but no broadcast.
      For example A = [[1, 2], [3, 4]], B = [1, 2], tile(A, B) = [[1, 2, 1, 2], [3, 4, 3, 4]]
  
      **Inputs**
  
      * **input** (heterogeneous) - **T**:
        Input tensor of any shape.
      * **repeats** (heterogeneous) - **T1**:
        1D int64 tensor of the same length as input's dimension number,
        includes numbers of repeated copies along input's dimensions.
  
      **Outputs**
  
      * **output** (heterogeneous) - **T**:
        Output tensor of the same dimensions and type as tensor input.
        output_dim[i] = input_dim[i] * repeats[i]
  
      **Type Constraints**
  
      * **T** in (
    +   tensor(bfloat16),
        tensor(bool),
        tensor(complex128),
        tensor(complex64),
        tensor(double),
        tensor(float),
        tensor(float16),
        tensor(int16),
        tensor(int32),
        tensor(int64),
        tensor(int8),
        tensor(string),
        tensor(uint16),
        tensor(uint32),
        tensor(uint64),
        tensor(uint8)
        ):
        Constrain input and output types to all tensor types.
      * **T1** in (
        tensor(int64)
        ):
        Constrain repeat's type to int64 tensors.
    `;

    document.addEventListener('DOMContentLoaded', function () {
    var targetElement = document.getElementById('div_Tile_2');
    var configuration = {
        drawFileList: true,
        fileListToggle: false,
        fileListStartVisible: false,
        fileContentToggle: false,
        matching: 'lines',
        outputFormat: 'line-by-line',
        synchronisedScroll: true,
        highlight: true,
        renderNothingWhenEmpty: false,
    };
    var diff2htmlUi = new Diff2HtmlUI(targetElement, diffString, configuration);
    diff2htmlUi.draw();
    diff2htmlUi.highlightCode();
    });
    </script>