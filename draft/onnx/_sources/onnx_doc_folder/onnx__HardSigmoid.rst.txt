
.. _l-onnx-doc-HardSigmoid:

===========
HardSigmoid
===========

.. contents::
    :local:


.. _l-onnx-op-hardsigmoid-6:
HardSigmoid - 6
===============
**Version**
* **name**: `HardSigmoid (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#HardSigmoid>`_
* **domain**: **main**
* **since_version**: **6**
* **function**: True
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 6**.

**Summary**

HardSigmoid takes one input data (Tensor<T>) and produces one output data
(Tensor<T>) where the HardSigmoid function, y = max(0, min(1, alpha * x + beta)),
is applied to the tensor elementwise.

**Attributes**
* **alpha**:
  Value of alpha.
* **beta**:
  Value of beta.

**Inputs**

* **X** (heterogeneous) - **T**:
  Input tensor

**Outputs**

* **Y** (heterogeneous) - **T**:
  Output tensor

**Type Constraints**
* **T** in (
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain input and output types to float tensors.

**Examples**

**default**
::
    node = onnx.helper.make_node(
        "HardSigmoid", inputs=["x"], outputs=["y"], alpha=0.5, beta=0.6
    )

    x = np.array([-1, 0, 1]).astype(np.float32)
    y = np.clip(x * 0.5 + 0.6, 0, 1)  # expected output [0.1, 0.6, 1.]
    expect(node, inputs=[x], outputs=[y], name="test_hardsigmoid_example")

    x = np.random.randn(3, 4, 5).astype(np.float32)
    y = np.clip(x * 0.5 + 0.6, 0, 1)
    expect(node, inputs=[x], outputs=[y], name="test_hardsigmoid")

**_hardsigmoid_default**
::
    default_alpha = 0.2
    default_beta = 0.5
    node = onnx.helper.make_node(
        "HardSigmoid",
        inputs=["x"],
        outputs=["y"],
    )
    x = np.random.randn(3, 4, 5).astype(np.float32)
    y = np.clip(x * default_alpha + default_beta, 0, 1)
    expect(node, inputs=[x], outputs=[y], name="test_hardsigmoid_default")

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to84__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next"><a href="#difflib_chg_to84__0">f</a></td><td class="diff_header" id="from84_1">1</td><td nowrap="nowrap">HardSigmoid&nbsp;takes&nbsp;one&nbsp;input&nbsp;data&nbsp;(Tensor&lt;T&gt;)&nbsp;and&nbsp;produces&nbsp;one&nbsp;output&nbsp;data</td><td class="diff_next"><a href="#difflib_chg_to84__0">f</a></td><td class="diff_header" id="to84_1">1</td><td nowrap="nowrap">HardSigmoid&nbsp;takes&nbsp;one&nbsp;input&nbsp;data&nbsp;(Tensor&lt;T&gt;)&nbsp;and&nbsp;produces&nbsp;one&nbsp;output&nbsp;data</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to84__0"></td><td class="diff_header" id="from84_2">2</td><td nowrap="nowrap">(Tensor&lt;T&gt;)&nbsp;where&nbsp;the&nbsp;HardSigmoid&nbsp;function,&nbsp;y&nbsp;=&nbsp;max(0,&nbsp;min(1,&nbsp;alpha&nbsp;*&nbsp;x&nbsp;+&nbsp;beta)),</td><td class="diff_next"></td><td class="diff_header" id="to84_2">2</td><td nowrap="nowrap">(Tensor&lt;T&gt;)&nbsp;where&nbsp;the&nbsp;HardSigmoid&nbsp;function,&nbsp;y&nbsp;=&nbsp;max(0,&nbsp;min(1,&nbsp;alpha&nbsp;*&nbsp;x&nbsp;+&nbsp;beta)),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_3">3</td><td nowrap="nowrap">is&nbsp;applied&nbsp;to&nbsp;the&nbsp;tensor&nbsp;elementwise.</td><td class="diff_next"></td><td class="diff_header" id="to84_3">3</td><td nowrap="nowrap">is&nbsp;applied&nbsp;to&nbsp;the&nbsp;tensor&nbsp;elementwise.</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to84__1"></td><td class="diff_header" id="from84_4">4</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to84_4">4</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_5">5</td><td nowrap="nowrap">**Attributes**</td><td class="diff_next"></td><td class="diff_header" id="to84_5">5</td><td nowrap="nowrap">**Attributes**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_6">6</td><td nowrap="nowrap">*&nbsp;**alpha**:</td><td class="diff_next"></td><td class="diff_header" id="to84_6">6</td><td nowrap="nowrap">*&nbsp;**alpha**:</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to84__1">n</a></td><td class="diff_header" id="from84_7">7</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;Value&nbsp;of&nbsp;alpha&nbsp;default&nbsp;to&nbsp;0.2</span></td><td class="diff_next"><a href="#difflib_chg_to84__1">n</a></td><td class="diff_header" id="to84_7">7</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;Value&nbsp;of&nbsp;alpha.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_8">8</td><td nowrap="nowrap">*&nbsp;**beta**:</td><td class="diff_next"></td><td class="diff_header" id="to84_8">8</td><td nowrap="nowrap">*&nbsp;**beta**:</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to84__top">t</a></td><td class="diff_header" id="from84_9">9</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;Value&nbsp;of&nbsp;beta&nbsp;default&nbsp;to&nbsp;0.5</span></td><td class="diff_next"><a href="#difflib_chg_to84__top">t</a></td><td class="diff_header" id="to84_9">9</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;Value&nbsp;of&nbsp;beta.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_10">10</td><td nowrap="nowrap"><span class="diff_sub">*&nbsp;**consumed_inputs**:</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_11">11</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;legacy&nbsp;optimization&nbsp;attribute.</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_12">12</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to84_10">10</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_13">13</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to84_11">11</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_14">14</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to84_12">12</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_15">15</td><td nowrap="nowrap">*&nbsp;**X**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to84_13">13</td><td nowrap="nowrap">*&nbsp;**X**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_16">16</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;tensor</td><td class="diff_next"></td><td class="diff_header" id="to84_14">14</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;tensor</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_17">17</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to84_15">15</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_18">18</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to84_16">16</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_19">19</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to84_17">17</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_20">20</td><td nowrap="nowrap">*&nbsp;**Y**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to84_18">18</td><td nowrap="nowrap">*&nbsp;**Y**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_21">21</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;tensor</td><td class="diff_next"></td><td class="diff_header" id="to84_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;tensor</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_22">22</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to84_20">20</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_23">23</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to84_21">21</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_24">24</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to84_22">22</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to84_23">23</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_26">26</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to84_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_27">27</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16)</td><td class="diff_next"></td><td class="diff_header" id="to84_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_28">28</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to84_26">26</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from84_29">29</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;and&nbsp;output&nbsp;types&nbsp;to&nbsp;float&nbsp;tensors.</td><td class="diff_next"></td><td class="diff_header" id="to84_27">27</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;and&nbsp;output&nbsp;types&nbsp;to&nbsp;float&nbsp;tensors.</td></tr>
            </tbody>
        </table>

.. _l-onnx-op-hardsigmoid-1:
HardSigmoid - 1
===============
**Version**
* **name**: `HardSigmoid (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#HardSigmoid>`_
* **domain**: **main**
* **since_version**: **1**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: False

This version of the operator has been available
**since version 1**.

**Summary**

HardSigmoid takes one input data (Tensor<T>) and produces one output data
(Tensor<T>) where the HardSigmoid function, y = max(0, min(1, alpha * x + beta)),
is applied to the tensor elementwise.

**Attributes**
* **alpha**:
  Value of alpha default to 0.2
* **beta**:
  Value of beta default to 0.5
* **consumed_inputs**:
  legacy optimization attribute.

**Inputs**

* **X** (heterogeneous) - **T**:
  Input tensor

**Outputs**

* **Y** (heterogeneous) - **T**:
  Output tensor

**Type Constraints**
* **T** in (
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain input and output types to float tensors.
