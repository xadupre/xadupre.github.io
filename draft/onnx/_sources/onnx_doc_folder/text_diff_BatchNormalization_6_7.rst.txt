BatchNormalization - 6 vs 7
===========================

Next section compares an older to a newer version of the same operator 
after both definition are converted into markdown text.
Green means an addition to the newer version, red means a deletion.
Anything else is unchanged.

.. raw:: html


    <div id="div_BatchNormalization_5"></div>
    <link rel="stylesheet" type="text/css" href="../_static/diff2html.min.css" />
    <script type="text/javascript" src="../_static/diff2html-ui.min.js"></script>
    <script>
    const diffString = `
    --- a/BatchNormalization6
    +++ b/BatchNormalization7
    @@ -1 +1 @@
      Carries out batch normalization as described in the paper
      https://arxiv.org/abs/1502.03167. Depending on the mode it is being run,
      there are multiple cases for the number of outputs, which we list below:
  
      Output case #1: Y, mean, var, saved_mean, saved_var (training mode)
      Output case #2: Y (test mode)
    +     This operator has **optional** inputs/outputs. See ONNX &amp;lt;https://github.com/onnx/onnx/blob/master/docs/IR.md&amp;gt;_ for more details about the representation of optional arguments. An empty string may be used in the place of an actual argument's name to indicate a missing argument. Trailing optional arguments (those not followed by an argument that is present) may also be simply omitted.
  
      **Attributes**
  
      * **epsilon**:
    -   The epsilon value to use to avoid division by zero, default is
    ?                                                     ^^^^^^^^^^^^
    +   The epsilon value to use to avoid division by zero.
    ?                                                     ^
    -   1e-5f.
    - * **is_test**:
    -   If set to nonzero, run spatial batch normalization in test mode,
    -   default is 0.
      * **momentum**:
        Factor used in computing the running mean and variance.e.g.,
    -   running_mean = running_mean * momentum + mean * (1 - momentum),
    ?                                                                 ^
    +   running_mean = running_mean * momentum + mean * (1 - momentum).
    ?                                                                 ^
    -   default is 0.9f.
      * **spatial**:
    -   If true, compute the mean and variance across all spatial elements
    ?                                                  ^^^^^   ^^ ^^^^^^^^
    +   If true, compute the mean and variance across per activation. If
    ?                                                 ++++ ^^^^   ^^^ ^^
    -   If false, compute the mean and variance across per feature.Default
    ?  ---                                                        ^^ ^ ^^^
    +   false, compute the mean and variance across per feature over each
    ?                                                          ^^^ ^^^ ^^
    -   is 1.
    +   mini-batch.
  
      **Inputs**
  
      * **X** (heterogeneous) - **T**:
        Input data tensor from the previous operator; dimensions for image
        case are (N x C x H x W), where N is the batch size, C is the number
        of channels, and H and W are the height and the width of the data.
        For non image case, the dimensions are in the form of (N x C x D1 x
        D2 ... Dn), where N is the batch size.
      * **scale** (heterogeneous) - **T**:
    -   The scale as a 1-dimensional tensor of size C to be applied to the
    -   output.
    +   If spatial is true, the dimension of scale is (C). If spatial is
    +   false, the dimensions of scale are (C x D1 x ... x Dn)
      * **B** (heterogeneous) - **T**:
    -   The bias as a 1-dimensional tensor of size C to be applied to the
    -   output.
    +   If spatial is true, the dimension of bias is (C). If spatial is
    +   false, the dimensions of bias are (C x D1 x ... x Dn)
      * **mean** (heterogeneous) - **T**:
    +   If spatial is true, the dimension of the running mean (training) or
    +   the estimated mean (testing) is (C). If spatial is false, the
    -   The running mean (training) or the estimated mean (testing) as a
    ?   ^                                                ---------------
    +   dimensions of the running mean (training) or the estimated mean
    ?   ^^^^^^^^^^^^^^^
    -   1-dimensional tensor of size C.
    +   (testing) are (C x D1 x ... x Dn).
      * **var** (heterogeneous) - **T**:
    -   The running variance (training) or the estimated variance (testing)
    -   as a 1-dimensional tensor of size C.
    +   If spatial is true, the dimension of the running variance(training)
    +   or the estimated variance (testing) is (C). If spatial is false, the
    +   dimensions of the running variance(training) or the estimated
    +   variance (testing) are (C x D1 x ... x Dn).
  
      **Outputs**
  
      Between 1 and 5 outputs.
  
      * **Y** (heterogeneous) - **T**:
    -   The output tensor of the same shape as X.
    ?                                           -
    +   The output tensor of the same shape as X
      * **mean** (optional, heterogeneous) - **T**:
    -   The running mean after the BatchNormalization operator. Must be in-
    ?                                                          ------------
    +   The running mean after the BatchNormalization operator.
    -   place with the input mean. Should not be used for testing.
      * **var** (optional, heterogeneous) - **T**:
    -   The running variance after the BatchNormalization operator. Must be
    ?                                                              --------
    +   The running variance after the BatchNormalization operator.
    -   in-place with the input var. Should not be used for testing.
      * **saved_mean** (optional, heterogeneous) - **T**:
        Saved mean used during training to speed up gradient computation.
    -   Should not be used for testing.
      * **saved_var** (optional, heterogeneous) - **T**:
        Saved variance used during training to speed up gradient
    -   computation. Should not be used for testing.
    +   computation.
  
      **Type Constraints**
  
      * **T** in (
        tensor(double),
        tensor(float),
        tensor(float16)
        ):
        Constrain input and output types to float tensors.
    `;

    document.addEventListener('DOMContentLoaded', function () {
    var targetElement = document.getElementById('div_BatchNormalization_5');
    var configuration = {
        drawFileList: true,
        fileListToggle: false,
        fileListStartVisible: false,
        fileContentToggle: false,
        matching: 'lines',
        outputFormat: 'line-by-line',
        synchronisedScroll: true,
        highlight: true,
        renderNothingWhenEmpty: false,
    };
    var diff2htmlUi = new Diff2HtmlUI(targetElement, diffString, configuration);
    diff2htmlUi.draw();
    diff2htmlUi.highlightCode();
    });
    </script>