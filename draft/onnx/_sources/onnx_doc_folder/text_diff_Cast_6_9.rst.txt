
.. _l-onnx-op-cast-d6-9:

Cast - 6 vs 9
=============

Next section compares an older to a newer version of the same operator 
after both definition are converted into markdown text.
Green means an addition to the newer version, red means a deletion.
Anything else is unchanged.

.. raw:: html


    <div id="div_Cast_3"></div>
    <link rel="stylesheet" type="text/css" href="../_static/diff2html.min.css" />
    <script type="text/javascript" src="../_static/diff2html-ui.min.js"></script>
    <script>
    const diffString = `
    --- a/Cast6
    +++ b/Cast9
    @@ -1 +1 @@
      The operator casts the elements of a given input tensor to a data type
      specified by the 'to' argument and returns an output tensor of the same size in
      the converted type. The 'to' argument must be one of the data types specified
      in the 'DataType' enum field in the TensorProto message.
    + NOTE: Casting to and from strings is not supported yet.
    - 
    - Casting from string tensor in plain (e.g., "3.14" and "1000") and scientific numeric representations
    - (e.g., "1e-5" and "1E8") to float types is supported. For example, converting string "100.5" to an integer may
    - result 100. There are some string literals reserved for special floating-point values;
    - "+INF" (and "INF"), "-INF", and "NaN" are positive infinity, negative infinity, and not-a-number, respectively.
    - Any string which can exactly match "+INF" in a case-insensitive way would be mapped to positive infinite. Similarly,
    - this case-insensitive rule is applied to "INF" and "NaN". When casting from numeric tensors
    - to string tensors, plain floating-point representation (such as "314.15926") would be used.
    - Converting non-numerical-literal string such as "Hello World!" is an undefined behavior. Cases
    - of converting string representing floating-point arithmetic value, such as "2.718", to INT is an undefined behavior.
    - 
    - Conversion from a numerical type to any numerical type is always allowed.
    - User must be aware of precision loss and value change caused by range difference between two types.
    - For example, a 64-bit float 3.1415926459 may be round to a 32-bit float 3.141592. Similarly, converting
    - an integer 36 to Boolean may produce 1 because we truncate bits which can't be stored in the targeted type.
  
      **Attributes**
  
      * **to** (required):
        The data type to which the elements of the input tensor are cast.
        Strictly must be one of the types from DataType enum in TensorProto
  
      **Inputs**
  
      * **input** (heterogeneous) - **T1**:
        Input tensor to be cast.
  
      **Outputs**
  
      * **output** (heterogeneous) - **T2**:
        Output tensor with the same shape as input with type specified by
        the 'to' argument
  
      **Type Constraints**
  
      * **T1** in (
        tensor(bool),
        tensor(double),
        tensor(float),
        tensor(float16),
        tensor(int16),
        tensor(int32),
        tensor(int64),
        tensor(int8),
    -   tensor(string),
        tensor(uint16),
        tensor(uint32),
        tensor(uint64),
        tensor(uint8)
        ):
    -   Constrain input types. Casting from complex is not supported.
    ?                                               ^^    -----------
    +   Constrain input types. Casting from strings and complex are not
    ?                                       ++++++++++++        ^^^
    +   supported.
      * **T2** in (
        tensor(bool),
        tensor(double),
        tensor(float),
        tensor(float16),
        tensor(int16),
        tensor(int32),
        tensor(int64),
        tensor(int8),
    -   tensor(string),
        tensor(uint16),
        tensor(uint32),
        tensor(uint64),
        tensor(uint8)
        ):
    -   Constrain output types. Casting to complex is not supported.?                                              ^^    ^^^^^^^^^^^
    +   Constrain output types. Casting to strings and complex are not
    ?                                      ++++++++++++        ^^^    ^
    +   supported.
    `;

    document.addEventListener('DOMContentLoaded', function () {
    var targetElement = document.getElementById('div_Cast_3');
    var configuration = {
        drawFileList: true,
        fileListToggle: false,
        fileListStartVisible: false,
        fileContentToggle: false,
        matching: 'lines',
        outputFormat: 'line-by-line',
        synchronisedScroll: true,
        highlight: true,
        renderNothingWhenEmpty: false,
    };
    var diff2htmlUi = new Diff2HtmlUI(targetElement, diffString, configuration);
    diff2htmlUi.draw();
    diff2htmlUi.highlightCode();
    });
    </script>