
.. _l-onnx-doc-LessOrEqual:

===========
LessOrEqual
===========

.. contents::
    :local:


.. _l-onnx-op-lessorequal-16:

LessOrEqual - 16
================

**Version**

* **name**: `LessOrEqual (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#LessOrEqual>`_
* **domain**: **main**
* **since_version**: **16**
* **function**: True
* **support_level**: SupportType.COMMON
* **shape inference**: False

This version of the operator has been available
**since version 16**.

**Summary**

Returns the tensor resulted from performing the `less_equal` logical operation
elementwise on the input tensors `A` and `B` (with Numpy-style broadcasting support).

This operator supports **multidirectional (i.e., Numpy-style) broadcasting**; for more details please check `Broadcasting in ONNX <https://github.com/onnx/onnx/blob/master/docs/Broadcasting.md>`_.

**Inputs**

* **A** (heterogeneous) - **T**:
  First input operand for the logical operator.
* **B** (heterogeneous) - **T**:
  Second input operand for the logical operator.

**Outputs**

* **C** (heterogeneous) - **T1**:
  Result tensor.

**Type Constraints**

* **T** in (
  tensor(bfloat16),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain input types to all numeric tensors.
* **T1** in (
  tensor(bool)
  ):
  Constrain output to boolean tensor.

**Examples**

.. toctree::
    text_diff_LessOrEqual_12_16

.. _l-onnx-op-lessorequal-12:

LessOrEqual - 12
================

**Version**

* **name**: `LessOrEqual (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#LessOrEqual>`_
* **domain**: **main**
* **since_version**: **12**
* **function**: True
* **support_level**: SupportType.COMMON
* **shape inference**: False

This version of the operator has been available
**since version 12**.

**Summary**

Returns the tensor resulted from performing the `less_equal` logical operation
elementwise on the input tensors `A` and `B` (with Numpy-style broadcasting support).

This operator supports **multidirectional (i.e., Numpy-style) broadcasting**; for more details please check `Broadcasting in ONNX <https://github.com/onnx/onnx/blob/master/docs/Broadcasting.md>`_.

**Inputs**

* **A** (heterogeneous) - **T**:
  First input operand for the logical operator.
* **B** (heterogeneous) - **T**:
  Second input operand for the logical operator.

**Outputs**

* **C** (heterogeneous) - **T1**:
  Result tensor.

**Type Constraints**

* **T** in (
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  Constrain input types to all numeric tensors.
* **T1** in (
  tensor(bool)
  ):
  Constrain output to boolean tensor.
