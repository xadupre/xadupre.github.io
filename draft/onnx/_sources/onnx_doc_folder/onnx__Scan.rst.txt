
.. _l-onnx-doc-Scan:

====
Scan
====

.. contents::
    :local:


.. _l-onnx-op-scan-16:
Scan - 16
=========
**Version**
* **name**: `Scan (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Scan>`_
* **domain**: **main**
* **since_version**: **16**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 16**.

**Summary**

Scan can be used to iterate over one or more scan_input tensors,
constructing zero or more scan_output tensors. It combines ideas from general recurrences,
functional programming constructs such as scan, fold, map, and zip, and is intended to enable
generalizations of RNN-like constructs for sequence-to-sequence processing.
Other tensors (referred to as state_variables here) can be used to carry a state
when iterating from one element to another (similar to hidden-state in RNNs, also referred
to as loop-carried dependences in the context of loops).
Many common usages involve a single scan_input tensor (where functionality
similar to scan, fold and map can be obtained). When more than one scan_input is used,
a behavior similar to zip is obtained.

The attribute body must be a graph, specifying the computation to be performed in
every iteration. It takes as input the current values of the state_variables and
the current iterated element of the scan_inputs. It must return the (updated) values
of the state_variables and zero or more scan_output_element tensors. The values of the
scan_output_element tensors are concatenated over all the iterations to produce the
scan_output values of the scan construct (similar to the concatenated intermediate
hidden-state values of RNN-like constructs). All the output tensors (state_variables as
well as scan_output_element tensors) are required to have the same shape in each iteration
of the loop (a restriction imposed to enable efficient memory allocation).

Note that the iterated element passed to the body subgraph does not have a sequence
axis. It will have a rank one less than the rank of the corresponding scan_input.

The scan operation returns the final values of the state_variables as well as the
scan_outputs.

The optional attribute scan_input_directions specifies the direction (forward or backward)
for each scan input. If this attribute is omitted, all sequences are scanned in the forward
direction. A bidirectional scan may be performed by specifying the same tensor input twice
in the scan_inputs, once with a forward direction, and once with a backward direction.

The scan_output of the operation is produced by concatenating the scan_output_element
values produced by the body in each iteration.  The optional attribute scan_output_directions
specifies the direction in which scan_output is constructed (by appending or prepending the
scan_output_element to scan_output in each iteration) for each scan_output. If this attribute
is omitted, the scan_output_element is appended to the scan_output in each iteration.

The optional attribute scan_input_axes specifies the axis to be scanned for each scan_input.
If omitted, every scan_input will be scanned in axis 0. For example, if axis 0 is the
batch axis and axis 1 is the time axis (to be scanned), specify an axis value of 1.
Note that scanning a non-zero axis may be less efficient than scanning axis zero.

The optional attribute scan_output_axes specifies the axis along which the scan_outputs
are accumulated for each scan_output. For example, if axis 1 is the time axis (to be
scanned) for both inputs and outputs, specify a scan_input axis and scan_output axis
value of 1.

Note that because of the ONNX restriction that only the last parameter of an operator can
be variadic, the initial-states and scan-inputs are listed together as one input parameter.
Similarly, the final-states and scan-outputs are listed together as one output parameter.
The attribute num_scan_inputs indicates the number M of scan-inputs.

The behavior of

    Scan <
        num_scan_inputs = m,
        body = loop-body,
        scan_input_axes = [axis_1, ..., axis_m]
    > (init_1, ..., init_n, scan_1, ..., scan_m)

is equivalent to the following pseudo-code:

    // scan_i.shape[axis_i] denotes the (max) sequence-length of scan_i
    // scan_i.shape[axis_i] is required to be equal to scan_j.shape[axis_j] for all i,j.
    sequence_length = scan_1.shape[axis_1];

    // initialize state-variables
    st_1 = init_1; ... st_n = init_n;
    // initialize scan-output variables: [] denotes an empty tensor
    scan_out_1 = []; ...; scan_out_k = [];
    // identify number of iterations:

    // execute loop
    for (int t = 0; t < sequence_length; ++t) {
        // generate the scan-input elements: the notation T<axis=k>[t] indicates the sub-tensor
        // of rank one less than T obtained by indexing T at position t along axis k.
        si_1 = scan_1<axis=axis_1>[t];
        ... ;
        si_m = scan_m<axis=axis_m>[t];
        // execute loop-body
        st_1, ..., st_n, so_1, ..., so_k = loop-body(st_1, ..., st_n, si_1, ..., si_m)
        // accumulate the scan-output elements
        scan_out_1 = Concat<axis=0>(scan_out_1, so_1); ... ; scan_out_k = Concat<axis=0>(scan_out_k, so_k);
    }

    return st_1, ..., st_n, scan_out_1, ..., scan_out_k;

*Sample usage: Encoding RNN using a Scan*

The following example shows how a simple RNN over an input tensor %X, with weight tensor %Wi,
recurrence weight tensor %Ri, bias tensors %Wbi and %Rbi, and initial hidden-state %H_0 can
be encoded as a ScanLoop. Note that the loop-body is a nested graph, and it directly computes
%Wi, %Ri, %Wbi, and %Rbi (typically constants or initializers in the body graph). If these
values are computed in the outer graph, they need to be passed in as extra state_variables.

    graph rnn-encoding {
      %H_0 = ...
      %X = ...
      %Y_h, %Y = Scan[body = <graph rnn-cell-1>, num_scan_inputs=1](%H_0, %X)
      return %Y, %Y_h
    }

    graph rnn-cell-1 (
      %H_tminus1[FLOAT, tensor]
      %X_t[FLOAT, tensor]
    ) {
      %Wi = ...
      %Ri = ...
      %Wbi = ...
      %Rbi = ...
      %t1 = X_t * (Wi^T)
      %t2 = H_tminus1*(Ri^T)
      %t3 = Add(%t1, %t2)
      %t4 = Add(%t3, %Wbi)
      %t5 = Add(%t4, %Rbi)
      %Ht = Tanh(%t5)
      %Accumulate = Identity(%Ht)
      return %Ht, %Accumulate
    }

**Attributes**
* **body** (required):
  The graph run each iteration. It has N+M inputs: (loop state
  variables..., scan_input_elts...). It has N+K outputs: (loop state
  variables..., scan_output_elts...). Each scan_output is created by
  concatenating the value of the specified scan_output_elt value at
  the end of each iteration of the loop. It is an error if the
  dimensions of these values change across loop iterations.
* **num_scan_inputs** (required):
  An attribute specifying the number of scan_inputs M.
* **scan_input_axes**:
  An optional list of M flags. The i-th element of the list specifies
  the axis to be scanned (the sequence axis) for the i-th scan_input.
  If omitted, 0 will be used as the scan axis for every scan_input.
  Negative value for an axis means counting dimensions from the back.
  Accepted range is [-r, r-1] where r = rank(input).
* **scan_input_directions**:
  An optional list of M flags. The i-th element of the list specifies
  the direction to be scanned for the i-th scan_input tensor: 0
  indicates forward direction and 1 indicates reverse direction. If
  omitted, all scan_input tensors will be scanned in the forward
  direction.
* **scan_output_axes**:
  An optional list of K flags. The i-th element of the list specifies
  the axis for the i-th scan_output. The scan outputs are accumulated
  along the specified axis. If omitted, 0 will be used as the scan
  axis for every scan_output. Negative value for an axis means
  counting dimensions from the back. Accepted range is [-r, r-1].
* **scan_output_directions**:
  An optional list of K flags, one for each scan_output. The i-th
  element of the list specifies whether the i-th scan_output should be
  constructed by appending or prepending a new value in each
  iteration: 0 indicates appending and 1 indicates prepending. If
  omitted, all scan_output tensors will be produced by appending a
  value in each iteration.

**Inputs**
Between 1 and 2147483647 inputs.

* **initial_state_and_scan_inputs** (variadic) - **V**:
  Initial values of the loop's N state variables followed by M
  scan_inputs

**Outputs**
Between 1 and 2147483647 outputs.

* **final_state_and_scan_outputs** (variadic) - **V**:
  Final values of the loop's N state variables followed by K
  scan_outputs

**Type Constraints**
* **V** in (
  tensor(bfloat16),
  tensor(bool),
  tensor(complex128),
  tensor(complex64),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  All Tensor types

**Examples**

**_scan_8**
::
    # Given an input sequence [x1, ..., xN], sum up its elements using a scan
    # returning the final state (x1+x2+...+xN) as well the scan_output
    # [x1, x1+x2, ..., x1+x2+...+xN]
    #
    # create graph to represent scan body
    sum_in = onnx.helper.make_tensor_value_info(
        "sum_in", onnx.TensorProto.FLOAT, [2]
    )
    next = onnx.helper.make_tensor_value_info("next", onnx.TensorProto.FLOAT, [2])
    sum_out = onnx.helper.make_tensor_value_info(
        "sum_out", onnx.TensorProto.FLOAT, [2]
    )
    scan_out = onnx.helper.make_tensor_value_info(
        "scan_out", onnx.TensorProto.FLOAT, [2]
    )
    add_node = onnx.helper.make_node(
        "Add", inputs=["sum_in", "next"], outputs=["sum_out"]
    )
    id_node = onnx.helper.make_node(
        "Identity", inputs=["sum_out"], outputs=["scan_out"]
    )
    scan_body = onnx.helper.make_graph(
        [add_node, id_node], "scan_body", [sum_in, next], [sum_out, scan_out]
    )
    # create scan op node
    no_sequence_lens = ""  # optional input, not supplied
    node = onnx.helper.make_node(
        "Scan",
        inputs=[no_sequence_lens, "initial", "x"],
        outputs=["y", "z"],
        num_scan_inputs=1,
        body=scan_body,
    )
    # create inputs for batch-size 1, sequence-length 3, inner dimension 2
    initial = np.array([0, 0]).astype(np.float32).reshape((1, 2))
    x = np.array([1, 2, 3, 4, 5, 6]).astype(np.float32).reshape((1, 3, 2))
    # final state computed = [1 + 3 + 5, 2 + 4 + 6]
    y = np.array([9, 12]).astype(np.float32).reshape((1, 2))
    # scan-output computed
    z = np.array([1, 2, 4, 6, 9, 12]).astype(np.float32).reshape((1, 3, 2))

    expect(
        node,
        inputs=[initial, x],
        outputs=[y, z],
        name="test_scan_sum",
        opset_imports=[onnx.helper.make_opsetid("", 8)],
    )

**_scan_9**
::
    # Given an input sequence [x1, ..., xN], sum up its elements using a scan
    # returning the final state (x1+x2+...+xN) as well the scan_output
    # [x1, x1+x2, ..., x1+x2+...+xN]
    #
    # create graph to represent scan body
    sum_in = onnx.helper.make_tensor_value_info(
        "sum_in", onnx.TensorProto.FLOAT, [2]
    )
    next = onnx.helper.make_tensor_value_info("next", onnx.TensorProto.FLOAT, [2])
    sum_out = onnx.helper.make_tensor_value_info(
        "sum_out", onnx.TensorProto.FLOAT, [2]
    )
    scan_out = onnx.helper.make_tensor_value_info(
        "scan_out", onnx.TensorProto.FLOAT, [2]
    )
    add_node = onnx.helper.make_node(
        "Add", inputs=["sum_in", "next"], outputs=["sum_out"]
    )
    id_node = onnx.helper.make_node(
        "Identity", inputs=["sum_out"], outputs=["scan_out"]
    )
    scan_body = onnx.helper.make_graph(
        [add_node, id_node], "scan_body", [sum_in, next], [sum_out, scan_out]
    )
    # create scan op node
    node = onnx.helper.make_node(
        "Scan",
        inputs=["initial", "x"],
        outputs=["y", "z"],
        num_scan_inputs=1,
        body=scan_body,
    )
    # create inputs for sequence-length 3, inner dimension 2
    initial = np.array([0, 0]).astype(np.float32).reshape((2,))
    x = np.array([1, 2, 3, 4, 5, 6]).astype(np.float32).reshape((3, 2))
    # final state computed = [1 + 3 + 5, 2 + 4 + 6]
    y = np.array([9, 12]).astype(np.float32).reshape((2,))
    # scan-output computed
    z = np.array([1, 2, 4, 6, 9, 12]).astype(np.float32).reshape((3, 2))

    expect(
        node,
        inputs=[initial, x],
        outputs=[y, z],
        name="test_scan9_sum",
        opset_imports=[onnx.helper.make_opsetid("", 9)],
    )

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to195__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next"><a href="#difflib_chg_to195__0">f</a></td><td class="diff_header" id="from195_1">1</td><td nowrap="nowrap">Scan&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;iterate&nbsp;over&nbsp;one&nbsp;or&nbsp;more&nbsp;scan_input&nbsp;tensors,</td><td class="diff_next"><a href="#difflib_chg_to195__0">f</a></td><td class="diff_header" id="to195_1">1</td><td nowrap="nowrap">Scan&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;iterate&nbsp;over&nbsp;one&nbsp;or&nbsp;more&nbsp;scan_input&nbsp;tensors,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_2">2</td><td nowrap="nowrap">constructing&nbsp;zero&nbsp;or&nbsp;more&nbsp;scan_output&nbsp;tensors.&nbsp;It&nbsp;combines&nbsp;ideas&nbsp;from&nbsp;general&nbsp;recurrences,</td><td class="diff_next"></td><td class="diff_header" id="to195_2">2</td><td nowrap="nowrap">constructing&nbsp;zero&nbsp;or&nbsp;more&nbsp;scan_output&nbsp;tensors.&nbsp;It&nbsp;combines&nbsp;ideas&nbsp;from&nbsp;general&nbsp;recurrences,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_3">3</td><td nowrap="nowrap">functional&nbsp;programming&nbsp;constructs&nbsp;such&nbsp;as&nbsp;scan,&nbsp;fold,&nbsp;map,&nbsp;and&nbsp;zip,&nbsp;and&nbsp;is&nbsp;intended&nbsp;to&nbsp;enable</td><td class="diff_next"></td><td class="diff_header" id="to195_3">3</td><td nowrap="nowrap">functional&nbsp;programming&nbsp;constructs&nbsp;such&nbsp;as&nbsp;scan,&nbsp;fold,&nbsp;map,&nbsp;and&nbsp;zip,&nbsp;and&nbsp;is&nbsp;intended&nbsp;to&nbsp;enable</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_4">4</td><td nowrap="nowrap">generalizations&nbsp;of&nbsp;RNN-like&nbsp;constructs&nbsp;for&nbsp;sequence-to-sequence&nbsp;processing.</td><td class="diff_next"></td><td class="diff_header" id="to195_4">4</td><td nowrap="nowrap">generalizations&nbsp;of&nbsp;RNN-like&nbsp;constructs&nbsp;for&nbsp;sequence-to-sequence&nbsp;processing.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_5">5</td><td nowrap="nowrap">Other&nbsp;tensors&nbsp;(referred&nbsp;to&nbsp;as&nbsp;state_variables&nbsp;here)&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;carry&nbsp;a&nbsp;state</td><td class="diff_next"></td><td class="diff_header" id="to195_5">5</td><td nowrap="nowrap">Other&nbsp;tensors&nbsp;(referred&nbsp;to&nbsp;as&nbsp;state_variables&nbsp;here)&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;carry&nbsp;a&nbsp;state</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_6">6</td><td nowrap="nowrap">when&nbsp;iterating&nbsp;from&nbsp;one&nbsp;element&nbsp;to&nbsp;another&nbsp;(similar&nbsp;to&nbsp;hidden-state&nbsp;in&nbsp;RNNs,&nbsp;also&nbsp;referred</td><td class="diff_next"></td><td class="diff_header" id="to195_6">6</td><td nowrap="nowrap">when&nbsp;iterating&nbsp;from&nbsp;one&nbsp;element&nbsp;to&nbsp;another&nbsp;(similar&nbsp;to&nbsp;hidden-state&nbsp;in&nbsp;RNNs,&nbsp;also&nbsp;referred</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_7">7</td><td nowrap="nowrap">to&nbsp;as&nbsp;loop-carried&nbsp;dependences&nbsp;in&nbsp;the&nbsp;context&nbsp;of&nbsp;loops).</td><td class="diff_next"></td><td class="diff_header" id="to195_7">7</td><td nowrap="nowrap">to&nbsp;as&nbsp;loop-carried&nbsp;dependences&nbsp;in&nbsp;the&nbsp;context&nbsp;of&nbsp;loops).</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_8">8</td><td nowrap="nowrap">Many&nbsp;common&nbsp;usages&nbsp;involve&nbsp;a&nbsp;single&nbsp;scan_input&nbsp;tensor&nbsp;(where&nbsp;functionality</td><td class="diff_next"></td><td class="diff_header" id="to195_8">8</td><td nowrap="nowrap">Many&nbsp;common&nbsp;usages&nbsp;involve&nbsp;a&nbsp;single&nbsp;scan_input&nbsp;tensor&nbsp;(where&nbsp;functionality</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_9">9</td><td nowrap="nowrap">similar&nbsp;to&nbsp;scan,&nbsp;fold&nbsp;and&nbsp;map&nbsp;can&nbsp;be&nbsp;obtained).&nbsp;When&nbsp;more&nbsp;than&nbsp;one&nbsp;scan_input&nbsp;is&nbsp;used,</td><td class="diff_next"></td><td class="diff_header" id="to195_9">9</td><td nowrap="nowrap">similar&nbsp;to&nbsp;scan,&nbsp;fold&nbsp;and&nbsp;map&nbsp;can&nbsp;be&nbsp;obtained).&nbsp;When&nbsp;more&nbsp;than&nbsp;one&nbsp;scan_input&nbsp;is&nbsp;used,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_10">10</td><td nowrap="nowrap">a&nbsp;behavior&nbsp;similar&nbsp;to&nbsp;zip&nbsp;is&nbsp;obtained.</td><td class="diff_next"></td><td class="diff_header" id="to195_10">10</td><td nowrap="nowrap">a&nbsp;behavior&nbsp;similar&nbsp;to&nbsp;zip&nbsp;is&nbsp;obtained.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_11">11</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_11">11</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_12">12</td><td nowrap="nowrap">The&nbsp;attribute&nbsp;body&nbsp;must&nbsp;be&nbsp;a&nbsp;graph,&nbsp;specifying&nbsp;the&nbsp;computation&nbsp;to&nbsp;be&nbsp;performed&nbsp;in</td><td class="diff_next"></td><td class="diff_header" id="to195_12">12</td><td nowrap="nowrap">The&nbsp;attribute&nbsp;body&nbsp;must&nbsp;be&nbsp;a&nbsp;graph,&nbsp;specifying&nbsp;the&nbsp;computation&nbsp;to&nbsp;be&nbsp;performed&nbsp;in</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_13">13</td><td nowrap="nowrap">every&nbsp;iteration.&nbsp;It&nbsp;takes&nbsp;as&nbsp;input&nbsp;the&nbsp;current&nbsp;values&nbsp;of&nbsp;the&nbsp;state_variables&nbsp;and</td><td class="diff_next"></td><td class="diff_header" id="to195_13">13</td><td nowrap="nowrap">every&nbsp;iteration.&nbsp;It&nbsp;takes&nbsp;as&nbsp;input&nbsp;the&nbsp;current&nbsp;values&nbsp;of&nbsp;the&nbsp;state_variables&nbsp;and</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_14">14</td><td nowrap="nowrap">the&nbsp;current&nbsp;iterated&nbsp;element&nbsp;of&nbsp;the&nbsp;scan_inputs.&nbsp;It&nbsp;must&nbsp;return&nbsp;the&nbsp;(updated)&nbsp;values</td><td class="diff_next"></td><td class="diff_header" id="to195_14">14</td><td nowrap="nowrap">the&nbsp;current&nbsp;iterated&nbsp;element&nbsp;of&nbsp;the&nbsp;scan_inputs.&nbsp;It&nbsp;must&nbsp;return&nbsp;the&nbsp;(updated)&nbsp;values</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_15">15</td><td nowrap="nowrap">of&nbsp;the&nbsp;state_variables&nbsp;and&nbsp;zero&nbsp;or&nbsp;more&nbsp;scan_output_element&nbsp;tensors.&nbsp;The&nbsp;values&nbsp;of&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to195_15">15</td><td nowrap="nowrap">of&nbsp;the&nbsp;state_variables&nbsp;and&nbsp;zero&nbsp;or&nbsp;more&nbsp;scan_output_element&nbsp;tensors.&nbsp;The&nbsp;values&nbsp;of&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_16">16</td><td nowrap="nowrap">scan_output_element&nbsp;tensors&nbsp;are&nbsp;concatenated&nbsp;over&nbsp;all&nbsp;the&nbsp;iterations&nbsp;to&nbsp;produce&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to195_16">16</td><td nowrap="nowrap">scan_output_element&nbsp;tensors&nbsp;are&nbsp;concatenated&nbsp;over&nbsp;all&nbsp;the&nbsp;iterations&nbsp;to&nbsp;produce&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_17">17</td><td nowrap="nowrap">scan_output&nbsp;values&nbsp;of&nbsp;the&nbsp;scan&nbsp;construct&nbsp;(similar&nbsp;to&nbsp;the&nbsp;concatenated&nbsp;intermediate</td><td class="diff_next"></td><td class="diff_header" id="to195_17">17</td><td nowrap="nowrap">scan_output&nbsp;values&nbsp;of&nbsp;the&nbsp;scan&nbsp;construct&nbsp;(similar&nbsp;to&nbsp;the&nbsp;concatenated&nbsp;intermediate</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_18">18</td><td nowrap="nowrap">hidden-state&nbsp;values&nbsp;of&nbsp;RNN-like&nbsp;constructs).&nbsp;All&nbsp;the&nbsp;output&nbsp;tensors&nbsp;(state_variables&nbsp;as</td><td class="diff_next"></td><td class="diff_header" id="to195_18">18</td><td nowrap="nowrap">hidden-state&nbsp;values&nbsp;of&nbsp;RNN-like&nbsp;constructs).&nbsp;All&nbsp;the&nbsp;output&nbsp;tensors&nbsp;(state_variables&nbsp;as</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_19">19</td><td nowrap="nowrap">well&nbsp;as&nbsp;scan_output_element&nbsp;tensors)&nbsp;are&nbsp;required&nbsp;to&nbsp;have&nbsp;the&nbsp;same&nbsp;shape&nbsp;in&nbsp;each&nbsp;iteration</td><td class="diff_next"></td><td class="diff_header" id="to195_19">19</td><td nowrap="nowrap">well&nbsp;as&nbsp;scan_output_element&nbsp;tensors)&nbsp;are&nbsp;required&nbsp;to&nbsp;have&nbsp;the&nbsp;same&nbsp;shape&nbsp;in&nbsp;each&nbsp;iteration</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_20">20</td><td nowrap="nowrap">of&nbsp;the&nbsp;loop&nbsp;(a&nbsp;restriction&nbsp;imposed&nbsp;to&nbsp;enable&nbsp;efficient&nbsp;memory&nbsp;allocation).</td><td class="diff_next"></td><td class="diff_header" id="to195_20">20</td><td nowrap="nowrap">of&nbsp;the&nbsp;loop&nbsp;(a&nbsp;restriction&nbsp;imposed&nbsp;to&nbsp;enable&nbsp;efficient&nbsp;memory&nbsp;allocation).</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_21">21</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_21">21</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_22">22</td><td nowrap="nowrap">Note&nbsp;that&nbsp;the&nbsp;iterated&nbsp;element&nbsp;passed&nbsp;to&nbsp;the&nbsp;body&nbsp;subgraph&nbsp;does&nbsp;not&nbsp;have&nbsp;a&nbsp;sequence</td><td class="diff_next"></td><td class="diff_header" id="to195_22">22</td><td nowrap="nowrap">Note&nbsp;that&nbsp;the&nbsp;iterated&nbsp;element&nbsp;passed&nbsp;to&nbsp;the&nbsp;body&nbsp;subgraph&nbsp;does&nbsp;not&nbsp;have&nbsp;a&nbsp;sequence</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_23">23</td><td nowrap="nowrap">axis.&nbsp;It&nbsp;will&nbsp;have&nbsp;a&nbsp;rank&nbsp;one&nbsp;less&nbsp;than&nbsp;the&nbsp;rank&nbsp;of&nbsp;the&nbsp;corresponding&nbsp;scan_input.</td><td class="diff_next"></td><td class="diff_header" id="to195_23">23</td><td nowrap="nowrap">axis.&nbsp;It&nbsp;will&nbsp;have&nbsp;a&nbsp;rank&nbsp;one&nbsp;less&nbsp;than&nbsp;the&nbsp;rank&nbsp;of&nbsp;the&nbsp;corresponding&nbsp;scan_input.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_24">24</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_24">24</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_25">25</td><td nowrap="nowrap">The&nbsp;scan&nbsp;operation&nbsp;returns&nbsp;the&nbsp;final&nbsp;values&nbsp;of&nbsp;the&nbsp;state_variables&nbsp;as&nbsp;well&nbsp;as&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to195_25">25</td><td nowrap="nowrap">The&nbsp;scan&nbsp;operation&nbsp;returns&nbsp;the&nbsp;final&nbsp;values&nbsp;of&nbsp;the&nbsp;state_variables&nbsp;as&nbsp;well&nbsp;as&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_26">26</td><td nowrap="nowrap">scan_outputs.</td><td class="diff_next"></td><td class="diff_header" id="to195_26">26</td><td nowrap="nowrap">scan_outputs.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_27">27</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_27">27</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_28">28</td><td nowrap="nowrap">The&nbsp;optional&nbsp;attribute&nbsp;scan_input_directions&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;(forward&nbsp;or&nbsp;backward)</td><td class="diff_next"></td><td class="diff_header" id="to195_28">28</td><td nowrap="nowrap">The&nbsp;optional&nbsp;attribute&nbsp;scan_input_directions&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;(forward&nbsp;or&nbsp;backward)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_29">29</td><td nowrap="nowrap">for&nbsp;each&nbsp;scan&nbsp;input.&nbsp;If&nbsp;this&nbsp;attribute&nbsp;is&nbsp;omitted,&nbsp;all&nbsp;sequences&nbsp;are&nbsp;scanned&nbsp;in&nbsp;the&nbsp;forward</td><td class="diff_next"></td><td class="diff_header" id="to195_29">29</td><td nowrap="nowrap">for&nbsp;each&nbsp;scan&nbsp;input.&nbsp;If&nbsp;this&nbsp;attribute&nbsp;is&nbsp;omitted,&nbsp;all&nbsp;sequences&nbsp;are&nbsp;scanned&nbsp;in&nbsp;the&nbsp;forward</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_30">30</td><td nowrap="nowrap">direction.&nbsp;A&nbsp;bidirectional&nbsp;scan&nbsp;may&nbsp;be&nbsp;performed&nbsp;by&nbsp;specifying&nbsp;the&nbsp;same&nbsp;tensor&nbsp;input&nbsp;twice</td><td class="diff_next"></td><td class="diff_header" id="to195_30">30</td><td nowrap="nowrap">direction.&nbsp;A&nbsp;bidirectional&nbsp;scan&nbsp;may&nbsp;be&nbsp;performed&nbsp;by&nbsp;specifying&nbsp;the&nbsp;same&nbsp;tensor&nbsp;input&nbsp;twice</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_31">31</td><td nowrap="nowrap">in&nbsp;the&nbsp;scan_inputs,&nbsp;once&nbsp;with&nbsp;a&nbsp;forward&nbsp;direction,&nbsp;and&nbsp;once&nbsp;with&nbsp;a&nbsp;backward&nbsp;direction.</td><td class="diff_next"></td><td class="diff_header" id="to195_31">31</td><td nowrap="nowrap">in&nbsp;the&nbsp;scan_inputs,&nbsp;once&nbsp;with&nbsp;a&nbsp;forward&nbsp;direction,&nbsp;and&nbsp;once&nbsp;with&nbsp;a&nbsp;backward&nbsp;direction.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_32">32</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_32">32</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_33">33</td><td nowrap="nowrap">The&nbsp;scan_output&nbsp;of&nbsp;the&nbsp;operation&nbsp;is&nbsp;produced&nbsp;by&nbsp;concatenating&nbsp;the&nbsp;scan_output_element</td><td class="diff_next"></td><td class="diff_header" id="to195_33">33</td><td nowrap="nowrap">The&nbsp;scan_output&nbsp;of&nbsp;the&nbsp;operation&nbsp;is&nbsp;produced&nbsp;by&nbsp;concatenating&nbsp;the&nbsp;scan_output_element</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_34">34</td><td nowrap="nowrap">values&nbsp;produced&nbsp;by&nbsp;the&nbsp;body&nbsp;in&nbsp;each&nbsp;iteration.&nbsp;&nbsp;The&nbsp;optional&nbsp;attribute&nbsp;scan_output_directions</td><td class="diff_next"></td><td class="diff_header" id="to195_34">34</td><td nowrap="nowrap">values&nbsp;produced&nbsp;by&nbsp;the&nbsp;body&nbsp;in&nbsp;each&nbsp;iteration.&nbsp;&nbsp;The&nbsp;optional&nbsp;attribute&nbsp;scan_output_directions</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_35">35</td><td nowrap="nowrap">specifies&nbsp;the&nbsp;direction&nbsp;in&nbsp;which&nbsp;scan_output&nbsp;is&nbsp;constructed&nbsp;(by&nbsp;appending&nbsp;or&nbsp;prepending&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to195_35">35</td><td nowrap="nowrap">specifies&nbsp;the&nbsp;direction&nbsp;in&nbsp;which&nbsp;scan_output&nbsp;is&nbsp;constructed&nbsp;(by&nbsp;appending&nbsp;or&nbsp;prepending&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_36">36</td><td nowrap="nowrap">scan_output_element&nbsp;to&nbsp;scan_output&nbsp;in&nbsp;each&nbsp;iteration)&nbsp;for&nbsp;each&nbsp;scan_output.&nbsp;If&nbsp;this&nbsp;attribute</td><td class="diff_next"></td><td class="diff_header" id="to195_36">36</td><td nowrap="nowrap">scan_output_element&nbsp;to&nbsp;scan_output&nbsp;in&nbsp;each&nbsp;iteration)&nbsp;for&nbsp;each&nbsp;scan_output.&nbsp;If&nbsp;this&nbsp;attribute</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_37">37</td><td nowrap="nowrap">is&nbsp;omitted,&nbsp;the&nbsp;scan_output_element&nbsp;is&nbsp;appended&nbsp;to&nbsp;the&nbsp;scan_output&nbsp;in&nbsp;each&nbsp;iteration.</td><td class="diff_next"></td><td class="diff_header" id="to195_37">37</td><td nowrap="nowrap">is&nbsp;omitted,&nbsp;the&nbsp;scan_output_element&nbsp;is&nbsp;appended&nbsp;to&nbsp;the&nbsp;scan_output&nbsp;in&nbsp;each&nbsp;iteration.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_38">38</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_38">38</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_39">39</td><td nowrap="nowrap">The&nbsp;optional&nbsp;attribute&nbsp;scan_input_axes&nbsp;specifies&nbsp;the&nbsp;axis&nbsp;to&nbsp;be&nbsp;scanned&nbsp;for&nbsp;each&nbsp;scan_input.</td><td class="diff_next"></td><td class="diff_header" id="to195_39">39</td><td nowrap="nowrap">The&nbsp;optional&nbsp;attribute&nbsp;scan_input_axes&nbsp;specifies&nbsp;the&nbsp;axis&nbsp;to&nbsp;be&nbsp;scanned&nbsp;for&nbsp;each&nbsp;scan_input.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_40">40</td><td nowrap="nowrap">If&nbsp;omitted,&nbsp;every&nbsp;scan_input&nbsp;will&nbsp;be&nbsp;scanned&nbsp;in&nbsp;axis&nbsp;0.&nbsp;For&nbsp;example,&nbsp;if&nbsp;axis&nbsp;0&nbsp;is&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to195_40">40</td><td nowrap="nowrap">If&nbsp;omitted,&nbsp;every&nbsp;scan_input&nbsp;will&nbsp;be&nbsp;scanned&nbsp;in&nbsp;axis&nbsp;0.&nbsp;For&nbsp;example,&nbsp;if&nbsp;axis&nbsp;0&nbsp;is&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_41">41</td><td nowrap="nowrap">batch&nbsp;axis&nbsp;and&nbsp;axis&nbsp;1&nbsp;is&nbsp;the&nbsp;time&nbsp;axis&nbsp;(to&nbsp;be&nbsp;scanned),&nbsp;specify&nbsp;an&nbsp;axis&nbsp;value&nbsp;of&nbsp;1.</td><td class="diff_next"></td><td class="diff_header" id="to195_41">41</td><td nowrap="nowrap">batch&nbsp;axis&nbsp;and&nbsp;axis&nbsp;1&nbsp;is&nbsp;the&nbsp;time&nbsp;axis&nbsp;(to&nbsp;be&nbsp;scanned),&nbsp;specify&nbsp;an&nbsp;axis&nbsp;value&nbsp;of&nbsp;1.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_42">42</td><td nowrap="nowrap">Note&nbsp;that&nbsp;scanning&nbsp;a&nbsp;non-zero&nbsp;axis&nbsp;may&nbsp;be&nbsp;less&nbsp;efficient&nbsp;than&nbsp;scanning&nbsp;axis&nbsp;zero.</td><td class="diff_next"></td><td class="diff_header" id="to195_42">42</td><td nowrap="nowrap">Note&nbsp;that&nbsp;scanning&nbsp;a&nbsp;non-zero&nbsp;axis&nbsp;may&nbsp;be&nbsp;less&nbsp;efficient&nbsp;than&nbsp;scanning&nbsp;axis&nbsp;zero.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_43">43</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_43">43</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_44">44</td><td nowrap="nowrap">The&nbsp;optional&nbsp;attribute&nbsp;scan_output_axes&nbsp;specifies&nbsp;the&nbsp;axis&nbsp;along&nbsp;which&nbsp;the&nbsp;scan_outputs</td><td class="diff_next"></td><td class="diff_header" id="to195_44">44</td><td nowrap="nowrap">The&nbsp;optional&nbsp;attribute&nbsp;scan_output_axes&nbsp;specifies&nbsp;the&nbsp;axis&nbsp;along&nbsp;which&nbsp;the&nbsp;scan_outputs</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_45">45</td><td nowrap="nowrap">are&nbsp;accumulated&nbsp;for&nbsp;each&nbsp;scan_output.&nbsp;For&nbsp;example,&nbsp;if&nbsp;axis&nbsp;1&nbsp;is&nbsp;the&nbsp;time&nbsp;axis&nbsp;(to&nbsp;be</td><td class="diff_next"></td><td class="diff_header" id="to195_45">45</td><td nowrap="nowrap">are&nbsp;accumulated&nbsp;for&nbsp;each&nbsp;scan_output.&nbsp;For&nbsp;example,&nbsp;if&nbsp;axis&nbsp;1&nbsp;is&nbsp;the&nbsp;time&nbsp;axis&nbsp;(to&nbsp;be</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_46">46</td><td nowrap="nowrap">scanned)&nbsp;for&nbsp;both&nbsp;inputs&nbsp;and&nbsp;outputs,&nbsp;specify&nbsp;a&nbsp;scan_input&nbsp;axis&nbsp;and&nbsp;scan_output&nbsp;axis</td><td class="diff_next"></td><td class="diff_header" id="to195_46">46</td><td nowrap="nowrap">scanned)&nbsp;for&nbsp;both&nbsp;inputs&nbsp;and&nbsp;outputs,&nbsp;specify&nbsp;a&nbsp;scan_input&nbsp;axis&nbsp;and&nbsp;scan_output&nbsp;axis</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_47">47</td><td nowrap="nowrap">value&nbsp;of&nbsp;1.</td><td class="diff_next"></td><td class="diff_header" id="to195_47">47</td><td nowrap="nowrap">value&nbsp;of&nbsp;1.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_48">48</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_48">48</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_49">49</td><td nowrap="nowrap">Note&nbsp;that&nbsp;because&nbsp;of&nbsp;the&nbsp;ONNX&nbsp;restriction&nbsp;that&nbsp;only&nbsp;the&nbsp;last&nbsp;parameter&nbsp;of&nbsp;an&nbsp;operator&nbsp;can</td><td class="diff_next"></td><td class="diff_header" id="to195_49">49</td><td nowrap="nowrap">Note&nbsp;that&nbsp;because&nbsp;of&nbsp;the&nbsp;ONNX&nbsp;restriction&nbsp;that&nbsp;only&nbsp;the&nbsp;last&nbsp;parameter&nbsp;of&nbsp;an&nbsp;operator&nbsp;can</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_50">50</td><td nowrap="nowrap">be&nbsp;variadic,&nbsp;the&nbsp;initial-states&nbsp;and&nbsp;scan-inputs&nbsp;are&nbsp;listed&nbsp;together&nbsp;as&nbsp;one&nbsp;input&nbsp;parameter.</td><td class="diff_next"></td><td class="diff_header" id="to195_50">50</td><td nowrap="nowrap">be&nbsp;variadic,&nbsp;the&nbsp;initial-states&nbsp;and&nbsp;scan-inputs&nbsp;are&nbsp;listed&nbsp;together&nbsp;as&nbsp;one&nbsp;input&nbsp;parameter.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_51">51</td><td nowrap="nowrap">Similarly,&nbsp;the&nbsp;final-states&nbsp;and&nbsp;scan-outputs&nbsp;are&nbsp;listed&nbsp;together&nbsp;as&nbsp;one&nbsp;output&nbsp;parameter.</td><td class="diff_next"></td><td class="diff_header" id="to195_51">51</td><td nowrap="nowrap">Similarly,&nbsp;the&nbsp;final-states&nbsp;and&nbsp;scan-outputs&nbsp;are&nbsp;listed&nbsp;together&nbsp;as&nbsp;one&nbsp;output&nbsp;parameter.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_52">52</td><td nowrap="nowrap">The&nbsp;attribute&nbsp;num_scan_inputs&nbsp;indicates&nbsp;the&nbsp;number&nbsp;M&nbsp;of&nbsp;scan-inputs.</td><td class="diff_next"></td><td class="diff_header" id="to195_52">52</td><td nowrap="nowrap">The&nbsp;attribute&nbsp;num_scan_inputs&nbsp;indicates&nbsp;the&nbsp;number&nbsp;M&nbsp;of&nbsp;scan-inputs.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_53">53</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_53">53</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_54">54</td><td nowrap="nowrap">The&nbsp;behavior&nbsp;of</td><td class="diff_next"></td><td class="diff_header" id="to195_54">54</td><td nowrap="nowrap">The&nbsp;behavior&nbsp;of</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_55">55</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_55">55</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;Scan&nbsp;&lt;</td><td class="diff_next"></td><td class="diff_header" id="to195_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;Scan&nbsp;&lt;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_57">57</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num_scan_inputs&nbsp;=&nbsp;m,</td><td class="diff_next"></td><td class="diff_header" id="to195_57">57</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num_scan_inputs&nbsp;=&nbsp;m,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;body&nbsp;=&nbsp;loop-body,</td><td class="diff_next"></td><td class="diff_header" id="to195_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;body&nbsp;=&nbsp;loop-body,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_59">59</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scan_input_axes&nbsp;=&nbsp;[axis_1,&nbsp;...,&nbsp;axis_m]</td><td class="diff_next"></td><td class="diff_header" id="to195_59">59</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scan_input_axes&nbsp;=&nbsp;[axis_1,&nbsp;...,&nbsp;axis_m]</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_60">60</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;(init_1,&nbsp;...,&nbsp;init_n,&nbsp;scan_1,&nbsp;...,&nbsp;scan_m)</td><td class="diff_next"></td><td class="diff_header" id="to195_60">60</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;(init_1,&nbsp;...,&nbsp;init_n,&nbsp;scan_1,&nbsp;...,&nbsp;scan_m)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_61">61</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_61">61</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_62">62</td><td nowrap="nowrap">is&nbsp;equivalent&nbsp;to&nbsp;the&nbsp;following&nbsp;pseudo-code:</td><td class="diff_next"></td><td class="diff_header" id="to195_62">62</td><td nowrap="nowrap">is&nbsp;equivalent&nbsp;to&nbsp;the&nbsp;following&nbsp;pseudo-code:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_63">63</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_63">63</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_64">64</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;scan_i.shape[axis_i]&nbsp;denotes&nbsp;the&nbsp;(max)&nbsp;sequence-length&nbsp;of&nbsp;scan_i</td><td class="diff_next"></td><td class="diff_header" id="to195_64">64</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;scan_i.shape[axis_i]&nbsp;denotes&nbsp;the&nbsp;(max)&nbsp;sequence-length&nbsp;of&nbsp;scan_i</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_65">65</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;scan_i.shape[axis_i]&nbsp;is&nbsp;required&nbsp;to&nbsp;be&nbsp;equal&nbsp;to&nbsp;scan_j.shape[axis_j]&nbsp;for&nbsp;all&nbsp;i,j.</td><td class="diff_next"></td><td class="diff_header" id="to195_65">65</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;scan_i.shape[axis_i]&nbsp;is&nbsp;required&nbsp;to&nbsp;be&nbsp;equal&nbsp;to&nbsp;scan_j.shape[axis_j]&nbsp;for&nbsp;all&nbsp;i,j.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_66">66</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;sequence_length&nbsp;=&nbsp;scan_1.shape[axis_1];</td><td class="diff_next"></td><td class="diff_header" id="to195_66">66</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;sequence_length&nbsp;=&nbsp;scan_1.shape[axis_1];</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_67">67</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_67">67</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_68">68</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;initialize&nbsp;state-variables</td><td class="diff_next"></td><td class="diff_header" id="to195_68">68</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;initialize&nbsp;state-variables</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_69">69</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;st_1&nbsp;=&nbsp;init_1;&nbsp;...&nbsp;st_n&nbsp;=&nbsp;init_n;</td><td class="diff_next"></td><td class="diff_header" id="to195_69">69</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;st_1&nbsp;=&nbsp;init_1;&nbsp;...&nbsp;st_n&nbsp;=&nbsp;init_n;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_70">70</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;initialize&nbsp;scan-output&nbsp;variables:&nbsp;[]&nbsp;denotes&nbsp;an&nbsp;empty&nbsp;tensor</td><td class="diff_next"></td><td class="diff_header" id="to195_70">70</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;initialize&nbsp;scan-output&nbsp;variables:&nbsp;[]&nbsp;denotes&nbsp;an&nbsp;empty&nbsp;tensor</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_71">71</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;scan_out_1&nbsp;=&nbsp;[];&nbsp;...;&nbsp;scan_out_k&nbsp;=&nbsp;[];</td><td class="diff_next"></td><td class="diff_header" id="to195_71">71</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;scan_out_1&nbsp;=&nbsp;[];&nbsp;...;&nbsp;scan_out_k&nbsp;=&nbsp;[];</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_72">72</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;identify&nbsp;number&nbsp;of&nbsp;iterations:</td><td class="diff_next"></td><td class="diff_header" id="to195_72">72</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;identify&nbsp;number&nbsp;of&nbsp;iterations:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_73">73</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_73">73</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_74">74</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;execute&nbsp;loop</td><td class="diff_next"></td><td class="diff_header" id="to195_74">74</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;execute&nbsp;loop</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_75">75</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;t&nbsp;=&nbsp;0;&nbsp;t&nbsp;&lt;&nbsp;sequence_length;&nbsp;++t)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to195_75">75</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;t&nbsp;=&nbsp;0;&nbsp;t&nbsp;&lt;&nbsp;sequence_length;&nbsp;++t)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_76">76</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;generate&nbsp;the&nbsp;scan-input&nbsp;elements:&nbsp;the&nbsp;notation&nbsp;T&lt;axis=k&gt;[t]&nbsp;indicates&nbsp;the&nbsp;sub-tensor</td><td class="diff_next"></td><td class="diff_header" id="to195_76">76</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;generate&nbsp;the&nbsp;scan-input&nbsp;elements:&nbsp;the&nbsp;notation&nbsp;T&lt;axis=k&gt;[t]&nbsp;indicates&nbsp;the&nbsp;sub-tensor</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_77">77</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;of&nbsp;rank&nbsp;one&nbsp;less&nbsp;than&nbsp;T&nbsp;obtained&nbsp;by&nbsp;indexing&nbsp;T&nbsp;at&nbsp;position&nbsp;t&nbsp;along&nbsp;axis&nbsp;k.</td><td class="diff_next"></td><td class="diff_header" id="to195_77">77</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;of&nbsp;rank&nbsp;one&nbsp;less&nbsp;than&nbsp;T&nbsp;obtained&nbsp;by&nbsp;indexing&nbsp;T&nbsp;at&nbsp;position&nbsp;t&nbsp;along&nbsp;axis&nbsp;k.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_78">78</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;si_1&nbsp;=&nbsp;scan_1&lt;axis=axis_1&gt;[t];</td><td class="diff_next"></td><td class="diff_header" id="to195_78">78</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;si_1&nbsp;=&nbsp;scan_1&lt;axis=axis_1&gt;[t];</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_79">79</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...&nbsp;;</td><td class="diff_next"></td><td class="diff_header" id="to195_79">79</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...&nbsp;;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_80">80</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;si_m&nbsp;=&nbsp;scan_m&lt;axis=axis_m&gt;[t];</td><td class="diff_next"></td><td class="diff_header" id="to195_80">80</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;si_m&nbsp;=&nbsp;scan_m&lt;axis=axis_m&gt;[t];</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_81">81</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;execute&nbsp;loop-body</td><td class="diff_next"></td><td class="diff_header" id="to195_81">81</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;execute&nbsp;loop-body</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_82">82</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;st_1,&nbsp;...,&nbsp;st_n,&nbsp;so_1,&nbsp;...,&nbsp;so_k&nbsp;=&nbsp;loop-body(st_1,&nbsp;...,&nbsp;st_n,&nbsp;si_1,&nbsp;...,&nbsp;si_m)</td><td class="diff_next"></td><td class="diff_header" id="to195_82">82</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;st_1,&nbsp;...,&nbsp;st_n,&nbsp;so_1,&nbsp;...,&nbsp;so_k&nbsp;=&nbsp;loop-body(st_1,&nbsp;...,&nbsp;st_n,&nbsp;si_1,&nbsp;...,&nbsp;si_m)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_83">83</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;accumulate&nbsp;the&nbsp;scan-output&nbsp;elements</td><td class="diff_next"></td><td class="diff_header" id="to195_83">83</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;accumulate&nbsp;the&nbsp;scan-output&nbsp;elements</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_84">84</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scan_out_1&nbsp;=&nbsp;Concat&lt;axis=0&gt;(scan_out_1,&nbsp;so_1);&nbsp;...&nbsp;;&nbsp;scan_out_k&nbsp;=&nbsp;Concat&lt;axis=0&gt;(scan_out_k,&nbsp;so_k);</td><td class="diff_next"></td><td class="diff_header" id="to195_84">84</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scan_out_1&nbsp;=&nbsp;Concat&lt;axis=0&gt;(scan_out_1,&nbsp;so_1);&nbsp;...&nbsp;;&nbsp;scan_out_k&nbsp;=&nbsp;Concat&lt;axis=0&gt;(scan_out_k,&nbsp;so_k);</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_85">85</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to195_85">85</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_86">86</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_86">86</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_87">87</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;st_1,&nbsp;...,&nbsp;st_n,&nbsp;scan_out_1,&nbsp;...,&nbsp;scan_out_k;</td><td class="diff_next"></td><td class="diff_header" id="to195_87">87</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;st_1,&nbsp;...,&nbsp;st_n,&nbsp;scan_out_1,&nbsp;...,&nbsp;scan_out_k;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_88">88</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_88">88</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_89">89</td><td nowrap="nowrap">*Sample&nbsp;usage:&nbsp;Encoding&nbsp;RNN&nbsp;using&nbsp;a&nbsp;Scan*</td><td class="diff_next"></td><td class="diff_header" id="to195_89">89</td><td nowrap="nowrap">*Sample&nbsp;usage:&nbsp;Encoding&nbsp;RNN&nbsp;using&nbsp;a&nbsp;Scan*</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_90">90</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_90">90</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_91">91</td><td nowrap="nowrap">The&nbsp;following&nbsp;example&nbsp;shows&nbsp;how&nbsp;a&nbsp;simple&nbsp;RNN&nbsp;over&nbsp;an&nbsp;input&nbsp;tensor&nbsp;%X,&nbsp;with&nbsp;weight&nbsp;tensor&nbsp;%Wi,</td><td class="diff_next"></td><td class="diff_header" id="to195_91">91</td><td nowrap="nowrap">The&nbsp;following&nbsp;example&nbsp;shows&nbsp;how&nbsp;a&nbsp;simple&nbsp;RNN&nbsp;over&nbsp;an&nbsp;input&nbsp;tensor&nbsp;%X,&nbsp;with&nbsp;weight&nbsp;tensor&nbsp;%Wi,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_92">92</td><td nowrap="nowrap">recurrence&nbsp;weight&nbsp;tensor&nbsp;%Ri,&nbsp;bias&nbsp;tensors&nbsp;%Wbi&nbsp;and&nbsp;%Rbi,&nbsp;and&nbsp;initial&nbsp;hidden-state&nbsp;%H_0&nbsp;can</td><td class="diff_next"></td><td class="diff_header" id="to195_92">92</td><td nowrap="nowrap">recurrence&nbsp;weight&nbsp;tensor&nbsp;%Ri,&nbsp;bias&nbsp;tensors&nbsp;%Wbi&nbsp;and&nbsp;%Rbi,&nbsp;and&nbsp;initial&nbsp;hidden-state&nbsp;%H_0&nbsp;can</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_93">93</td><td nowrap="nowrap">be&nbsp;encoded&nbsp;as&nbsp;a&nbsp;ScanLoop.&nbsp;Note&nbsp;that&nbsp;the&nbsp;loop-body&nbsp;is&nbsp;a&nbsp;nested&nbsp;graph,&nbsp;and&nbsp;it&nbsp;directly&nbsp;computes</td><td class="diff_next"></td><td class="diff_header" id="to195_93">93</td><td nowrap="nowrap">be&nbsp;encoded&nbsp;as&nbsp;a&nbsp;ScanLoop.&nbsp;Note&nbsp;that&nbsp;the&nbsp;loop-body&nbsp;is&nbsp;a&nbsp;nested&nbsp;graph,&nbsp;and&nbsp;it&nbsp;directly&nbsp;computes</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_94">94</td><td nowrap="nowrap">%Wi,&nbsp;%Ri,&nbsp;%Wbi,&nbsp;and&nbsp;%Rbi&nbsp;(typically&nbsp;constants&nbsp;or&nbsp;initializers&nbsp;in&nbsp;the&nbsp;body&nbsp;graph).&nbsp;If&nbsp;these</td><td class="diff_next"></td><td class="diff_header" id="to195_94">94</td><td nowrap="nowrap">%Wi,&nbsp;%Ri,&nbsp;%Wbi,&nbsp;and&nbsp;%Rbi&nbsp;(typically&nbsp;constants&nbsp;or&nbsp;initializers&nbsp;in&nbsp;the&nbsp;body&nbsp;graph).&nbsp;If&nbsp;these</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_95">95</td><td nowrap="nowrap">values&nbsp;are&nbsp;computed&nbsp;in&nbsp;the&nbsp;outer&nbsp;graph,&nbsp;they&nbsp;need&nbsp;to&nbsp;be&nbsp;passed&nbsp;in&nbsp;as&nbsp;extra&nbsp;state_variables.</td><td class="diff_next"></td><td class="diff_header" id="to195_95">95</td><td nowrap="nowrap">values&nbsp;are&nbsp;computed&nbsp;in&nbsp;the&nbsp;outer&nbsp;graph,&nbsp;they&nbsp;need&nbsp;to&nbsp;be&nbsp;passed&nbsp;in&nbsp;as&nbsp;extra&nbsp;state_variables.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_96">96</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_96">96</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_97">97</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;rnn-encoding&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to195_97">97</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;rnn-encoding&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_98">98</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%H_0&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to195_98">98</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%H_0&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_99">99</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%X&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to195_99">99</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%X&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_100">100</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Y_h,&nbsp;%Y&nbsp;=&nbsp;Scan[body&nbsp;=&nbsp;&lt;graph&nbsp;rnn-cell-1&gt;,&nbsp;num_scan_inputs=1](%H_0,&nbsp;%X)</td><td class="diff_next"></td><td class="diff_header" id="to195_100">100</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Y_h,&nbsp;%Y&nbsp;=&nbsp;Scan[body&nbsp;=&nbsp;&lt;graph&nbsp;rnn-cell-1&gt;,&nbsp;num_scan_inputs=1](%H_0,&nbsp;%X)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_101">101</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;%Y,&nbsp;%Y_h</td><td class="diff_next"></td><td class="diff_header" id="to195_101">101</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;%Y,&nbsp;%Y_h</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_102">102</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to195_102">102</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_103">103</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_103">103</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_104">104</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;rnn-cell-1&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to195_104">104</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;rnn-cell-1&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_105">105</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%H_tminus1[FLOAT,&nbsp;tensor]</td><td class="diff_next"></td><td class="diff_header" id="to195_105">105</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%H_tminus1[FLOAT,&nbsp;tensor]</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_106">106</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%X_t[FLOAT,&nbsp;tensor]</td><td class="diff_next"></td><td class="diff_header" id="to195_106">106</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%X_t[FLOAT,&nbsp;tensor]</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_107">107</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to195_107">107</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_108">108</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Wi&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to195_108">108</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Wi&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_109">109</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Ri&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to195_109">109</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Ri&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_110">110</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Wbi&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to195_110">110</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Wbi&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_111">111</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Rbi&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to195_111">111</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Rbi&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_112">112</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t1&nbsp;=&nbsp;X_t&nbsp;*&nbsp;(Wi^T)</td><td class="diff_next"></td><td class="diff_header" id="to195_112">112</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t1&nbsp;=&nbsp;X_t&nbsp;*&nbsp;(Wi^T)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_113">113</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t2&nbsp;=&nbsp;H_tminus1*(Ri^T)</td><td class="diff_next"></td><td class="diff_header" id="to195_113">113</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t2&nbsp;=&nbsp;H_tminus1*(Ri^T)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_114">114</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t3&nbsp;=&nbsp;Add(%t1,&nbsp;%t2)</td><td class="diff_next"></td><td class="diff_header" id="to195_114">114</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t3&nbsp;=&nbsp;Add(%t1,&nbsp;%t2)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_115">115</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t4&nbsp;=&nbsp;Add(%t3,&nbsp;%Wbi)</td><td class="diff_next"></td><td class="diff_header" id="to195_115">115</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t4&nbsp;=&nbsp;Add(%t3,&nbsp;%Wbi)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_116">116</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t5&nbsp;=&nbsp;Add(%t4,&nbsp;%Rbi)</td><td class="diff_next"></td><td class="diff_header" id="to195_116">116</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t5&nbsp;=&nbsp;Add(%t4,&nbsp;%Rbi)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_117">117</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Ht&nbsp;=&nbsp;Tanh(%t5)</td><td class="diff_next"></td><td class="diff_header" id="to195_117">117</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Ht&nbsp;=&nbsp;Tanh(%t5)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_118">118</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Accumulate&nbsp;=&nbsp;Identity(%Ht)</td><td class="diff_next"></td><td class="diff_header" id="to195_118">118</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Accumulate&nbsp;=&nbsp;Identity(%Ht)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_119">119</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;%Ht,&nbsp;%Accumulate</td><td class="diff_next"></td><td class="diff_header" id="to195_119">119</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;%Ht,&nbsp;%Accumulate</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_120">120</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to195_120">120</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_121">121</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_121">121</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_122">122</td><td nowrap="nowrap">**Attributes**</td><td class="diff_next"></td><td class="diff_header" id="to195_122">122</td><td nowrap="nowrap">**Attributes**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_123">123</td><td nowrap="nowrap">*&nbsp;**body**&nbsp;(required):</td><td class="diff_next"></td><td class="diff_header" id="to195_123">123</td><td nowrap="nowrap">*&nbsp;**body**&nbsp;(required):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_124">124</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;graph&nbsp;run&nbsp;each&nbsp;iteration.&nbsp;It&nbsp;has&nbsp;N+M&nbsp;inputs:&nbsp;(loop&nbsp;state</td><td class="diff_next"></td><td class="diff_header" id="to195_124">124</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;graph&nbsp;run&nbsp;each&nbsp;iteration.&nbsp;It&nbsp;has&nbsp;N+M&nbsp;inputs:&nbsp;(loop&nbsp;state</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_125">125</td><td nowrap="nowrap">&nbsp;&nbsp;variables...,&nbsp;scan_input_elts...).&nbsp;It&nbsp;has&nbsp;N+K&nbsp;outputs:&nbsp;(loop&nbsp;state</td><td class="diff_next"></td><td class="diff_header" id="to195_125">125</td><td nowrap="nowrap">&nbsp;&nbsp;variables...,&nbsp;scan_input_elts...).&nbsp;It&nbsp;has&nbsp;N+K&nbsp;outputs:&nbsp;(loop&nbsp;state</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_126">126</td><td nowrap="nowrap">&nbsp;&nbsp;variables...,&nbsp;scan_output_elts...).&nbsp;Each&nbsp;scan_output&nbsp;is&nbsp;created&nbsp;by</td><td class="diff_next"></td><td class="diff_header" id="to195_126">126</td><td nowrap="nowrap">&nbsp;&nbsp;variables...,&nbsp;scan_output_elts...).&nbsp;Each&nbsp;scan_output&nbsp;is&nbsp;created&nbsp;by</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_127">127</td><td nowrap="nowrap">&nbsp;&nbsp;concatenating&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;specified&nbsp;scan_output_elt&nbsp;value&nbsp;at</td><td class="diff_next"></td><td class="diff_header" id="to195_127">127</td><td nowrap="nowrap">&nbsp;&nbsp;concatenating&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;specified&nbsp;scan_output_elt&nbsp;value&nbsp;at</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_128">128</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;end&nbsp;of&nbsp;each&nbsp;iteration&nbsp;of&nbsp;the&nbsp;loop.&nbsp;It&nbsp;is&nbsp;an&nbsp;error&nbsp;if&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to195_128">128</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;end&nbsp;of&nbsp;each&nbsp;iteration&nbsp;of&nbsp;the&nbsp;loop.&nbsp;It&nbsp;is&nbsp;an&nbsp;error&nbsp;if&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_129">129</td><td nowrap="nowrap">&nbsp;&nbsp;dimensions&nbsp;of&nbsp;these&nbsp;values&nbsp;change&nbsp;across&nbsp;loop&nbsp;iterations.</td><td class="diff_next"></td><td class="diff_header" id="to195_129">129</td><td nowrap="nowrap">&nbsp;&nbsp;dimensions&nbsp;of&nbsp;these&nbsp;values&nbsp;change&nbsp;across&nbsp;loop&nbsp;iterations.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_130">130</td><td nowrap="nowrap">*&nbsp;**num_scan_inputs**&nbsp;(required):</td><td class="diff_next"></td><td class="diff_header" id="to195_130">130</td><td nowrap="nowrap">*&nbsp;**num_scan_inputs**&nbsp;(required):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_131">131</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;attribute&nbsp;specifying&nbsp;the&nbsp;number&nbsp;of&nbsp;scan_inputs&nbsp;M.</td><td class="diff_next"></td><td class="diff_header" id="to195_131">131</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;attribute&nbsp;specifying&nbsp;the&nbsp;number&nbsp;of&nbsp;scan_inputs&nbsp;M.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_132">132</td><td nowrap="nowrap">*&nbsp;**scan_input_axes**:</td><td class="diff_next"></td><td class="diff_header" id="to195_132">132</td><td nowrap="nowrap">*&nbsp;**scan_input_axes**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_133">133</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;M&nbsp;flags.&nbsp;The&nbsp;i-th&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies</td><td class="diff_next"></td><td class="diff_header" id="to195_133">133</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;M&nbsp;flags.&nbsp;The&nbsp;i-th&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_134">134</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;axis&nbsp;to&nbsp;be&nbsp;scanned&nbsp;(the&nbsp;sequence&nbsp;axis)&nbsp;for&nbsp;the&nbsp;i-th&nbsp;scan_input.</td><td class="diff_next"></td><td class="diff_header" id="to195_134">134</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;axis&nbsp;to&nbsp;be&nbsp;scanned&nbsp;(the&nbsp;sequence&nbsp;axis)&nbsp;for&nbsp;the&nbsp;i-th&nbsp;scan_input.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_135">135</td><td nowrap="nowrap">&nbsp;&nbsp;If&nbsp;omitted,&nbsp;0&nbsp;will&nbsp;be&nbsp;used&nbsp;as&nbsp;the&nbsp;scan&nbsp;axis&nbsp;for&nbsp;every&nbsp;scan_input.</td><td class="diff_next"></td><td class="diff_header" id="to195_135">135</td><td nowrap="nowrap">&nbsp;&nbsp;If&nbsp;omitted,&nbsp;0&nbsp;will&nbsp;be&nbsp;used&nbsp;as&nbsp;the&nbsp;scan&nbsp;axis&nbsp;for&nbsp;every&nbsp;scan_input.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_136">136</td><td nowrap="nowrap">&nbsp;&nbsp;Negative&nbsp;value&nbsp;for&nbsp;an&nbsp;axis&nbsp;means&nbsp;counting&nbsp;dimensions&nbsp;from&nbsp;the&nbsp;back.</td><td class="diff_next"></td><td class="diff_header" id="to195_136">136</td><td nowrap="nowrap">&nbsp;&nbsp;Negative&nbsp;value&nbsp;for&nbsp;an&nbsp;axis&nbsp;means&nbsp;counting&nbsp;dimensions&nbsp;from&nbsp;the&nbsp;back.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_137">137</td><td nowrap="nowrap">&nbsp;&nbsp;Accepted&nbsp;range&nbsp;is&nbsp;[-r,&nbsp;r-1]&nbsp;where&nbsp;r&nbsp;=&nbsp;rank(input).</td><td class="diff_next"></td><td class="diff_header" id="to195_137">137</td><td nowrap="nowrap">&nbsp;&nbsp;Accepted&nbsp;range&nbsp;is&nbsp;[-r,&nbsp;r-1]&nbsp;where&nbsp;r&nbsp;=&nbsp;rank(input).</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_138">138</td><td nowrap="nowrap">*&nbsp;**scan_input_directions**:</td><td class="diff_next"></td><td class="diff_header" id="to195_138">138</td><td nowrap="nowrap">*&nbsp;**scan_input_directions**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_139">139</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;M&nbsp;flags.&nbsp;The&nbsp;i-th&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies</td><td class="diff_next"></td><td class="diff_header" id="to195_139">139</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;M&nbsp;flags.&nbsp;The&nbsp;i-th&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_140">140</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;direction&nbsp;to&nbsp;be&nbsp;scanned&nbsp;for&nbsp;the&nbsp;i-th&nbsp;scan_input&nbsp;tensor:&nbsp;0</td><td class="diff_next"></td><td class="diff_header" id="to195_140">140</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;direction&nbsp;to&nbsp;be&nbsp;scanned&nbsp;for&nbsp;the&nbsp;i-th&nbsp;scan_input&nbsp;tensor:&nbsp;0</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_141">141</td><td nowrap="nowrap">&nbsp;&nbsp;indicates&nbsp;forward&nbsp;direction&nbsp;and&nbsp;1&nbsp;indicates&nbsp;reverse&nbsp;direction.&nbsp;If</td><td class="diff_next"></td><td class="diff_header" id="to195_141">141</td><td nowrap="nowrap">&nbsp;&nbsp;indicates&nbsp;forward&nbsp;direction&nbsp;and&nbsp;1&nbsp;indicates&nbsp;reverse&nbsp;direction.&nbsp;If</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_142">142</td><td nowrap="nowrap">&nbsp;&nbsp;omitted,&nbsp;all&nbsp;scan_input&nbsp;tensors&nbsp;will&nbsp;be&nbsp;scanned&nbsp;in&nbsp;the&nbsp;forward</td><td class="diff_next"></td><td class="diff_header" id="to195_142">142</td><td nowrap="nowrap">&nbsp;&nbsp;omitted,&nbsp;all&nbsp;scan_input&nbsp;tensors&nbsp;will&nbsp;be&nbsp;scanned&nbsp;in&nbsp;the&nbsp;forward</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_143">143</td><td nowrap="nowrap">&nbsp;&nbsp;direction.</td><td class="diff_next"></td><td class="diff_header" id="to195_143">143</td><td nowrap="nowrap">&nbsp;&nbsp;direction.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_144">144</td><td nowrap="nowrap">*&nbsp;**scan_output_axes**:</td><td class="diff_next"></td><td class="diff_header" id="to195_144">144</td><td nowrap="nowrap">*&nbsp;**scan_output_axes**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_145">145</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;K&nbsp;flags.&nbsp;The&nbsp;i-th&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies</td><td class="diff_next"></td><td class="diff_header" id="to195_145">145</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;K&nbsp;flags.&nbsp;The&nbsp;i-th&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_146">146</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;axis&nbsp;for&nbsp;the&nbsp;i-th&nbsp;scan_output.&nbsp;The&nbsp;scan&nbsp;outputs&nbsp;are&nbsp;accumulated</td><td class="diff_next"></td><td class="diff_header" id="to195_146">146</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;axis&nbsp;for&nbsp;the&nbsp;i-th&nbsp;scan_output.&nbsp;The&nbsp;scan&nbsp;outputs&nbsp;are&nbsp;accumulated</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_147">147</td><td nowrap="nowrap">&nbsp;&nbsp;along&nbsp;the&nbsp;specified&nbsp;axis.&nbsp;If&nbsp;omitted,&nbsp;0&nbsp;will&nbsp;be&nbsp;used&nbsp;as&nbsp;the&nbsp;scan</td><td class="diff_next"></td><td class="diff_header" id="to195_147">147</td><td nowrap="nowrap">&nbsp;&nbsp;along&nbsp;the&nbsp;specified&nbsp;axis.&nbsp;If&nbsp;omitted,&nbsp;0&nbsp;will&nbsp;be&nbsp;used&nbsp;as&nbsp;the&nbsp;scan</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_148">148</td><td nowrap="nowrap">&nbsp;&nbsp;axis&nbsp;for&nbsp;every&nbsp;scan_output.&nbsp;Negative&nbsp;value&nbsp;for&nbsp;an&nbsp;axis&nbsp;means</td><td class="diff_next"></td><td class="diff_header" id="to195_148">148</td><td nowrap="nowrap">&nbsp;&nbsp;axis&nbsp;for&nbsp;every&nbsp;scan_output.&nbsp;Negative&nbsp;value&nbsp;for&nbsp;an&nbsp;axis&nbsp;means</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_149">149</td><td nowrap="nowrap">&nbsp;&nbsp;counting&nbsp;dimensions&nbsp;from&nbsp;the&nbsp;back.&nbsp;Accepted&nbsp;range&nbsp;is&nbsp;[-r,&nbsp;r-1].</td><td class="diff_next"></td><td class="diff_header" id="to195_149">149</td><td nowrap="nowrap">&nbsp;&nbsp;counting&nbsp;dimensions&nbsp;from&nbsp;the&nbsp;back.&nbsp;Accepted&nbsp;range&nbsp;is&nbsp;[-r,&nbsp;r-1].</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_150">150</td><td nowrap="nowrap">*&nbsp;**scan_output_directions**:</td><td class="diff_next"></td><td class="diff_header" id="to195_150">150</td><td nowrap="nowrap">*&nbsp;**scan_output_directions**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_151">151</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;K&nbsp;flags,&nbsp;one&nbsp;for&nbsp;each&nbsp;scan_output.&nbsp;The&nbsp;i-th</td><td class="diff_next"></td><td class="diff_header" id="to195_151">151</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;K&nbsp;flags,&nbsp;one&nbsp;for&nbsp;each&nbsp;scan_output.&nbsp;The&nbsp;i-th</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_152">152</td><td nowrap="nowrap">&nbsp;&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies&nbsp;whether&nbsp;the&nbsp;i-th&nbsp;scan_output&nbsp;should&nbsp;be</td><td class="diff_next"></td><td class="diff_header" id="to195_152">152</td><td nowrap="nowrap">&nbsp;&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies&nbsp;whether&nbsp;the&nbsp;i-th&nbsp;scan_output&nbsp;should&nbsp;be</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_153">153</td><td nowrap="nowrap">&nbsp;&nbsp;constructed&nbsp;by&nbsp;appending&nbsp;or&nbsp;prepending&nbsp;a&nbsp;new&nbsp;value&nbsp;in&nbsp;each</td><td class="diff_next"></td><td class="diff_header" id="to195_153">153</td><td nowrap="nowrap">&nbsp;&nbsp;constructed&nbsp;by&nbsp;appending&nbsp;or&nbsp;prepending&nbsp;a&nbsp;new&nbsp;value&nbsp;in&nbsp;each</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_154">154</td><td nowrap="nowrap">&nbsp;&nbsp;iteration:&nbsp;0&nbsp;indicates&nbsp;appending&nbsp;and&nbsp;1&nbsp;indicates&nbsp;prepending.&nbsp;If</td><td class="diff_next"></td><td class="diff_header" id="to195_154">154</td><td nowrap="nowrap">&nbsp;&nbsp;iteration:&nbsp;0&nbsp;indicates&nbsp;appending&nbsp;and&nbsp;1&nbsp;indicates&nbsp;prepending.&nbsp;If</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_155">155</td><td nowrap="nowrap">&nbsp;&nbsp;omitted,&nbsp;all&nbsp;scan_output&nbsp;tensors&nbsp;will&nbsp;be&nbsp;produced&nbsp;by&nbsp;appending&nbsp;a</td><td class="diff_next"></td><td class="diff_header" id="to195_155">155</td><td nowrap="nowrap">&nbsp;&nbsp;omitted,&nbsp;all&nbsp;scan_output&nbsp;tensors&nbsp;will&nbsp;be&nbsp;produced&nbsp;by&nbsp;appending&nbsp;a</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_156">156</td><td nowrap="nowrap">&nbsp;&nbsp;value&nbsp;in&nbsp;each&nbsp;iteration.</td><td class="diff_next"></td><td class="diff_header" id="to195_156">156</td><td nowrap="nowrap">&nbsp;&nbsp;value&nbsp;in&nbsp;each&nbsp;iteration.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_157">157</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_157">157</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_158">158</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to195_158">158</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_159">159</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2147483647&nbsp;inputs.</td><td class="diff_next"></td><td class="diff_header" id="to195_159">159</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2147483647&nbsp;inputs.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_160">160</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_160">160</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_161">161</td><td nowrap="nowrap">*&nbsp;**initial_state_and_scan_inputs**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td><td class="diff_next"></td><td class="diff_header" id="to195_161">161</td><td nowrap="nowrap">*&nbsp;**initial_state_and_scan_inputs**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_162">162</td><td nowrap="nowrap">&nbsp;&nbsp;Initial&nbsp;values&nbsp;of&nbsp;the&nbsp;loop's&nbsp;N&nbsp;state&nbsp;variables&nbsp;followed&nbsp;by&nbsp;M</td><td class="diff_next"></td><td class="diff_header" id="to195_162">162</td><td nowrap="nowrap">&nbsp;&nbsp;Initial&nbsp;values&nbsp;of&nbsp;the&nbsp;loop's&nbsp;N&nbsp;state&nbsp;variables&nbsp;followed&nbsp;by&nbsp;M</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_163">163</td><td nowrap="nowrap">&nbsp;&nbsp;scan_inputs</td><td class="diff_next"></td><td class="diff_header" id="to195_163">163</td><td nowrap="nowrap">&nbsp;&nbsp;scan_inputs</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_164">164</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_164">164</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_165">165</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to195_165">165</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_166">166</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2147483647&nbsp;outputs.</td><td class="diff_next"></td><td class="diff_header" id="to195_166">166</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2147483647&nbsp;outputs.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_167">167</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_167">167</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_168">168</td><td nowrap="nowrap">*&nbsp;**final_state_and_scan_outputs**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td><td class="diff_next"></td><td class="diff_header" id="to195_168">168</td><td nowrap="nowrap">*&nbsp;**final_state_and_scan_outputs**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to195__0"></td><td class="diff_header" id="from195_169">169</td><td nowrap="nowrap">&nbsp;&nbsp;Final&nbsp;values&nbsp;of&nbsp;the&nbsp;loop's&nbsp;N&nbsp;state&nbsp;variables&nbsp;followed&nbsp;by&nbsp;K</td><td class="diff_next"></td><td class="diff_header" id="to195_169">169</td><td nowrap="nowrap">&nbsp;&nbsp;Final&nbsp;values&nbsp;of&nbsp;the&nbsp;loop's&nbsp;N&nbsp;state&nbsp;variables&nbsp;followed&nbsp;by&nbsp;K</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_170">170</td><td nowrap="nowrap">&nbsp;&nbsp;scan_outputs</td><td class="diff_next"></td><td class="diff_header" id="to195_170">170</td><td nowrap="nowrap">&nbsp;&nbsp;scan_outputs</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_171">171</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to195_171">171</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_172">172</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to195_172">172</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_173">173</td><td nowrap="nowrap">*&nbsp;**V**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to195_173">173</td><td nowrap="nowrap">*&nbsp;**V**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to195__top">t</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to195__top">t</a></td><td class="diff_header" id="to195_174">174</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;tensor(bfloat16),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_174">174</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td><td class="diff_next"></td><td class="diff_header" id="to195_175">175</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_175">175</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex128),</td><td class="diff_next"></td><td class="diff_header" id="to195_176">176</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex128),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_176">176</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex64),</td><td class="diff_next"></td><td class="diff_header" id="to195_177">177</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_177">177</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to195_178">178</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_178">178</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to195_179">179</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_179">179</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td><td class="diff_next"></td><td class="diff_header" id="to195_180">180</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_180">180</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td><td class="diff_next"></td><td class="diff_header" id="to195_181">181</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_181">181</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td><td class="diff_next"></td><td class="diff_header" id="to195_182">182</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_182">182</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td><td class="diff_next"></td><td class="diff_header" id="to195_183">183</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_183">183</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td><td class="diff_next"></td><td class="diff_header" id="to195_184">184</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_184">184</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td><td class="diff_next"></td><td class="diff_header" id="to195_185">185</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_185">185</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td><td class="diff_next"></td><td class="diff_header" id="to195_186">186</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_186">186</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td><td class="diff_next"></td><td class="diff_header" id="to195_187">187</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_187">187</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td><td class="diff_next"></td><td class="diff_header" id="to195_188">188</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_188">188</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td><td class="diff_next"></td><td class="diff_header" id="to195_189">189</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_189">189</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to195_190">190</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from195_190">190</td><td nowrap="nowrap">&nbsp;&nbsp;All&nbsp;Tensor&nbsp;types</td><td class="diff_next"></td><td class="diff_header" id="to195_191">191</td><td nowrap="nowrap">&nbsp;&nbsp;All&nbsp;Tensor&nbsp;types</td></tr>
            </tbody>
        </table>

.. _l-onnx-op-scan-11:
Scan - 11
=========
**Version**
* **name**: `Scan (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Scan>`_
* **domain**: **main**
* **since_version**: **11**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 11**.

**Summary**

Scan can be used to iterate over one or more scan_input tensors,
constructing zero or more scan_output tensors. It combines ideas from general recurrences,
functional programming constructs such as scan, fold, map, and zip, and is intended to enable
generalizations of RNN-like constructs for sequence-to-sequence processing.
Other tensors (referred to as state_variables here) can be used to carry a state
when iterating from one element to another (similar to hidden-state in RNNs, also referred
to as loop-carried dependences in the context of loops).
Many common usages involve a single scan_input tensor (where functionality
similar to scan, fold and map can be obtained). When more than one scan_input is used,
a behavior similar to zip is obtained.

The attribute body must be a graph, specifying the computation to be performed in
every iteration. It takes as input the current values of the state_variables and
the current iterated element of the scan_inputs. It must return the (updated) values
of the state_variables and zero or more scan_output_element tensors. The values of the
scan_output_element tensors are concatenated over all the iterations to produce the
scan_output values of the scan construct (similar to the concatenated intermediate
hidden-state values of RNN-like constructs). All the output tensors (state_variables as
well as scan_output_element tensors) are required to have the same shape in each iteration
of the loop (a restriction imposed to enable efficient memory allocation).

Note that the iterated element passed to the body subgraph does not have a sequence
axis. It will have a rank one less than the rank of the corresponding scan_input.

The scan operation returns the final values of the state_variables as well as the
scan_outputs.

The optional attribute scan_input_directions specifies the direction (forward or backward)
for each scan input. If this attribute is omitted, all sequences are scanned in the forward
direction. A bidirectional scan may be performed by specifying the same tensor input twice
in the scan_inputs, once with a forward direction, and once with a backward direction.

The scan_output of the operation is produced by concatenating the scan_output_element
values produced by the body in each iteration.  The optional attribute scan_output_directions
specifies the direction in which scan_output is constructed (by appending or prepending the
scan_output_element to scan_output in each iteration) for each scan_output. If this attribute
is omitted, the scan_output_element is appended to the scan_output in each iteration.

The optional attribute scan_input_axes specifies the axis to be scanned for each scan_input.
If omitted, every scan_input will be scanned in axis 0. For example, if axis 0 is the
batch axis and axis 1 is the time axis (to be scanned), specify an axis value of 1.
Note that scanning a non-zero axis may be less efficient than scanning axis zero.

The optional attribute scan_output_axes specifies the axis along which the scan_outputs
are accumulated for each scan_output. For example, if axis 1 is the time axis (to be
scanned) for both inputs and outputs, specify a scan_input axis and scan_output axis
value of 1.

Note that because of the ONNX restriction that only the last parameter of an operator can
be variadic, the initial-states and scan-inputs are listed together as one input parameter.
Similarly, the final-states and scan-outputs are listed together as one output parameter.
The attribute num_scan_inputs indicates the number M of scan-inputs.

The behavior of

    Scan <
        num_scan_inputs = m,
        body = loop-body,
        scan_input_axes = [axis_1, ..., axis_m]
    > (init_1, ..., init_n, scan_1, ..., scan_m)

is equivalent to the following pseudo-code:

    // scan_i.shape[axis_i] denotes the (max) sequence-length of scan_i
    // scan_i.shape[axis_i] is required to be equal to scan_j.shape[axis_j] for all i,j.
    sequence_length = scan_1.shape[axis_1];

    // initialize state-variables
    st_1 = init_1; ... st_n = init_n;
    // initialize scan-output variables: [] denotes an empty tensor
    scan_out_1 = []; ...; scan_out_k = [];
    // identify number of iterations:

    // execute loop
    for (int t = 0; t < sequence_length; ++t) {
        // generate the scan-input elements: the notation T<axis=k>[t] indicates the sub-tensor
        // of rank one less than T obtained by indexing T at position t along axis k.
        si_1 = scan_1<axis=axis_1>[t];
        ... ;
        si_m = scan_m<axis=axis_m>[t];
        // execute loop-body
        st_1, ..., st_n, so_1, ..., so_k = loop-body(st_1, ..., st_n, si_1, ..., si_m)
        // accumulate the scan-output elements
        scan_out_1 = Concat<axis=0>(scan_out_1, so_1); ... ; scan_out_k = Concat<axis=0>(scan_out_k, so_k);
    }

    return st_1, ..., st_n, scan_out_1, ..., scan_out_k;

*Sample usage: Encoding RNN using a Scan*

The following example shows how a simple RNN over an input tensor %X, with weight tensor %Wi,
recurrence weight tensor %Ri, bias tensors %Wbi and %Rbi, and initial hidden-state %H_0 can
be encoded as a ScanLoop. Note that the loop-body is a nested graph, and it directly computes
%Wi, %Ri, %Wbi, and %Rbi (typically constants or initializers in the body graph). If these
values are computed in the outer graph, they need to be passed in as extra state_variables.

    graph rnn-encoding {
      %H_0 = ...
      %X = ...
      %Y_h, %Y = Scan[body = <graph rnn-cell-1>, num_scan_inputs=1](%H_0, %X)
      return %Y, %Y_h
    }

    graph rnn-cell-1 (
      %H_tminus1[FLOAT, tensor]
      %X_t[FLOAT, tensor]
    ) {
      %Wi = ...
      %Ri = ...
      %Wbi = ...
      %Rbi = ...
      %t1 = X_t * (Wi^T)
      %t2 = H_tminus1*(Ri^T)
      %t3 = Add(%t1, %t2)
      %t4 = Add(%t3, %Wbi)
      %t5 = Add(%t4, %Rbi)
      %Ht = Tanh(%t5)
      %Accumulate = Identity(%Ht)
      return %Ht, %Accumulate
    }

**Attributes**
* **body** (required):
  The graph run each iteration. It has N+M inputs: (loop state
  variables..., scan_input_elts...). It has N+K outputs: (loop state
  variables..., scan_output_elts...). Each scan_output is created by
  concatenating the value of the specified scan_output_elt value at
  the end of each iteration of the loop. It is an error if the
  dimensions of these values change across loop iterations.
* **num_scan_inputs** (required):
  An attribute specifying the number of scan_inputs M.
* **scan_input_axes**:
  An optional list of M flags. The i-th element of the list specifies
  the axis to be scanned (the sequence axis) for the i-th scan_input.
  If omitted, 0 will be used as the scan axis for every scan_input.
  Negative value for an axis means counting dimensions from the back.
  Accepted range is [-r, r-1] where r = rank(input).
* **scan_input_directions**:
  An optional list of M flags. The i-th element of the list specifies
  the direction to be scanned for the i-th scan_input tensor: 0
  indicates forward direction and 1 indicates reverse direction. If
  omitted, all scan_input tensors will be scanned in the forward
  direction.
* **scan_output_axes**:
  An optional list of K flags. The i-th element of the list specifies
  the axis for the i-th scan_output. The scan outputs are accumulated
  along the specified axis. If omitted, 0 will be used as the scan
  axis for every scan_output. Negative value for an axis means
  counting dimensions from the back. Accepted range is [-r, r-1].
* **scan_output_directions**:
  An optional list of K flags, one for each scan_output. The i-th
  element of the list specifies whether the i-th scan_output should be
  constructed by appending or prepending a new value in each
  iteration: 0 indicates appending and 1 indicates prepending. If
  omitted, all scan_output tensors will be produced by appending a
  value in each iteration.

**Inputs**
Between 1 and 2147483647 inputs.

* **initial_state_and_scan_inputs** (variadic) - **V**:
  Initial values of the loop's N state variables followed by M
  scan_inputs

**Outputs**
Between 1 and 2147483647 outputs.

* **final_state_and_scan_outputs** (variadic) - **V**:
  Final values of the loop's N state variables followed by K
  scan_outputs

**Type Constraints**
* **V** in (
  tensor(bool),
  tensor(complex128),
  tensor(complex64),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  All Tensor types

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to196__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next"><a href="#difflib_chg_to196__0">f</a></td><td class="diff_header" id="from196_1">1</td><td nowrap="nowrap">Scan&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;iterate&nbsp;over&nbsp;one&nbsp;or&nbsp;more&nbsp;scan_input&nbsp;tensors,</td><td class="diff_next"><a href="#difflib_chg_to196__0">f</a></td><td class="diff_header" id="to196_1">1</td><td nowrap="nowrap">Scan&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;iterate&nbsp;over&nbsp;one&nbsp;or&nbsp;more&nbsp;scan_input&nbsp;tensors,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_2">2</td><td nowrap="nowrap">constructing&nbsp;zero&nbsp;or&nbsp;more&nbsp;scan_output&nbsp;tensors.&nbsp;It&nbsp;combines&nbsp;ideas&nbsp;from&nbsp;general&nbsp;recurrences,</td><td class="diff_next"></td><td class="diff_header" id="to196_2">2</td><td nowrap="nowrap">constructing&nbsp;zero&nbsp;or&nbsp;more&nbsp;scan_output&nbsp;tensors.&nbsp;It&nbsp;combines&nbsp;ideas&nbsp;from&nbsp;general&nbsp;recurrences,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_3">3</td><td nowrap="nowrap">functional&nbsp;programming&nbsp;constructs&nbsp;such&nbsp;as&nbsp;scan,&nbsp;fold,&nbsp;map,&nbsp;and&nbsp;zip,&nbsp;and&nbsp;is&nbsp;intended&nbsp;to&nbsp;enable</td><td class="diff_next"></td><td class="diff_header" id="to196_3">3</td><td nowrap="nowrap">functional&nbsp;programming&nbsp;constructs&nbsp;such&nbsp;as&nbsp;scan,&nbsp;fold,&nbsp;map,&nbsp;and&nbsp;zip,&nbsp;and&nbsp;is&nbsp;intended&nbsp;to&nbsp;enable</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_4">4</td><td nowrap="nowrap">generalizations&nbsp;of&nbsp;RNN-like&nbsp;constructs&nbsp;for&nbsp;sequence-to-sequence&nbsp;processing.</td><td class="diff_next"></td><td class="diff_header" id="to196_4">4</td><td nowrap="nowrap">generalizations&nbsp;of&nbsp;RNN-like&nbsp;constructs&nbsp;for&nbsp;sequence-to-sequence&nbsp;processing.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_5">5</td><td nowrap="nowrap">Other&nbsp;tensors&nbsp;(referred&nbsp;to&nbsp;as&nbsp;state_variables&nbsp;here)&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;carry&nbsp;a&nbsp;state</td><td class="diff_next"></td><td class="diff_header" id="to196_5">5</td><td nowrap="nowrap">Other&nbsp;tensors&nbsp;(referred&nbsp;to&nbsp;as&nbsp;state_variables&nbsp;here)&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;carry&nbsp;a&nbsp;state</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_6">6</td><td nowrap="nowrap">when&nbsp;iterating&nbsp;from&nbsp;one&nbsp;element&nbsp;to&nbsp;another&nbsp;(similar&nbsp;to&nbsp;hidden-state&nbsp;in&nbsp;RNNs,&nbsp;also&nbsp;referred</td><td class="diff_next"></td><td class="diff_header" id="to196_6">6</td><td nowrap="nowrap">when&nbsp;iterating&nbsp;from&nbsp;one&nbsp;element&nbsp;to&nbsp;another&nbsp;(similar&nbsp;to&nbsp;hidden-state&nbsp;in&nbsp;RNNs,&nbsp;also&nbsp;referred</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_7">7</td><td nowrap="nowrap">to&nbsp;as&nbsp;loop-carried&nbsp;dependences&nbsp;in&nbsp;the&nbsp;context&nbsp;of&nbsp;loops).</td><td class="diff_next"></td><td class="diff_header" id="to196_7">7</td><td nowrap="nowrap">to&nbsp;as&nbsp;loop-carried&nbsp;dependences&nbsp;in&nbsp;the&nbsp;context&nbsp;of&nbsp;loops).</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_8">8</td><td nowrap="nowrap">Many&nbsp;common&nbsp;usages&nbsp;involve&nbsp;a&nbsp;single&nbsp;scan_input&nbsp;tensor&nbsp;(where&nbsp;functionality</td><td class="diff_next"></td><td class="diff_header" id="to196_8">8</td><td nowrap="nowrap">Many&nbsp;common&nbsp;usages&nbsp;involve&nbsp;a&nbsp;single&nbsp;scan_input&nbsp;tensor&nbsp;(where&nbsp;functionality</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_9">9</td><td nowrap="nowrap">similar&nbsp;to&nbsp;scan,&nbsp;fold&nbsp;and&nbsp;map&nbsp;can&nbsp;be&nbsp;obtained).&nbsp;When&nbsp;more&nbsp;than&nbsp;one&nbsp;scan_input&nbsp;is&nbsp;used,</td><td class="diff_next"></td><td class="diff_header" id="to196_9">9</td><td nowrap="nowrap">similar&nbsp;to&nbsp;scan,&nbsp;fold&nbsp;and&nbsp;map&nbsp;can&nbsp;be&nbsp;obtained).&nbsp;When&nbsp;more&nbsp;than&nbsp;one&nbsp;scan_input&nbsp;is&nbsp;used,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_10">10</td><td nowrap="nowrap">a&nbsp;behavior&nbsp;similar&nbsp;to&nbsp;zip&nbsp;is&nbsp;obtained.</td><td class="diff_next"></td><td class="diff_header" id="to196_10">10</td><td nowrap="nowrap">a&nbsp;behavior&nbsp;similar&nbsp;to&nbsp;zip&nbsp;is&nbsp;obtained.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_11">11</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_11">11</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_12">12</td><td nowrap="nowrap">The&nbsp;attribute&nbsp;body&nbsp;must&nbsp;be&nbsp;a&nbsp;graph,&nbsp;specifying&nbsp;the&nbsp;computation&nbsp;to&nbsp;be&nbsp;performed&nbsp;in</td><td class="diff_next"></td><td class="diff_header" id="to196_12">12</td><td nowrap="nowrap">The&nbsp;attribute&nbsp;body&nbsp;must&nbsp;be&nbsp;a&nbsp;graph,&nbsp;specifying&nbsp;the&nbsp;computation&nbsp;to&nbsp;be&nbsp;performed&nbsp;in</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_13">13</td><td nowrap="nowrap">every&nbsp;iteration.&nbsp;It&nbsp;takes&nbsp;as&nbsp;input&nbsp;the&nbsp;current&nbsp;values&nbsp;of&nbsp;the&nbsp;state_variables&nbsp;and</td><td class="diff_next"></td><td class="diff_header" id="to196_13">13</td><td nowrap="nowrap">every&nbsp;iteration.&nbsp;It&nbsp;takes&nbsp;as&nbsp;input&nbsp;the&nbsp;current&nbsp;values&nbsp;of&nbsp;the&nbsp;state_variables&nbsp;and</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_14">14</td><td nowrap="nowrap">the&nbsp;current&nbsp;iterated&nbsp;element&nbsp;of&nbsp;the&nbsp;scan_inputs.&nbsp;It&nbsp;must&nbsp;return&nbsp;the&nbsp;(updated)&nbsp;values</td><td class="diff_next"></td><td class="diff_header" id="to196_14">14</td><td nowrap="nowrap">the&nbsp;current&nbsp;iterated&nbsp;element&nbsp;of&nbsp;the&nbsp;scan_inputs.&nbsp;It&nbsp;must&nbsp;return&nbsp;the&nbsp;(updated)&nbsp;values</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_15">15</td><td nowrap="nowrap">of&nbsp;the&nbsp;state_variables&nbsp;and&nbsp;zero&nbsp;or&nbsp;more&nbsp;scan_output_element&nbsp;tensors.&nbsp;The&nbsp;values&nbsp;of&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to196_15">15</td><td nowrap="nowrap">of&nbsp;the&nbsp;state_variables&nbsp;and&nbsp;zero&nbsp;or&nbsp;more&nbsp;scan_output_element&nbsp;tensors.&nbsp;The&nbsp;values&nbsp;of&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_16">16</td><td nowrap="nowrap">scan_output_element&nbsp;tensors&nbsp;are&nbsp;concatenated&nbsp;over&nbsp;all&nbsp;the&nbsp;iterations&nbsp;to&nbsp;produce&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to196_16">16</td><td nowrap="nowrap">scan_output_element&nbsp;tensors&nbsp;are&nbsp;concatenated&nbsp;over&nbsp;all&nbsp;the&nbsp;iterations&nbsp;to&nbsp;produce&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_17">17</td><td nowrap="nowrap">scan_output&nbsp;values&nbsp;of&nbsp;the&nbsp;scan&nbsp;construct&nbsp;(similar&nbsp;to&nbsp;the&nbsp;concatenated&nbsp;intermediate</td><td class="diff_next"></td><td class="diff_header" id="to196_17">17</td><td nowrap="nowrap">scan_output&nbsp;values&nbsp;of&nbsp;the&nbsp;scan&nbsp;construct&nbsp;(similar&nbsp;to&nbsp;the&nbsp;concatenated&nbsp;intermediate</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_18">18</td><td nowrap="nowrap">hidden-state&nbsp;values&nbsp;of&nbsp;RNN-like&nbsp;constructs).&nbsp;All&nbsp;the&nbsp;output&nbsp;tensors&nbsp;(state_variables&nbsp;as</td><td class="diff_next"></td><td class="diff_header" id="to196_18">18</td><td nowrap="nowrap">hidden-state&nbsp;values&nbsp;of&nbsp;RNN-like&nbsp;constructs).&nbsp;All&nbsp;the&nbsp;output&nbsp;tensors&nbsp;(state_variables&nbsp;as</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_19">19</td><td nowrap="nowrap">well&nbsp;as&nbsp;scan_output_element&nbsp;tensors)&nbsp;are&nbsp;required&nbsp;to&nbsp;have&nbsp;the&nbsp;same&nbsp;shape&nbsp;in&nbsp;each&nbsp;iteration</td><td class="diff_next"></td><td class="diff_header" id="to196_19">19</td><td nowrap="nowrap">well&nbsp;as&nbsp;scan_output_element&nbsp;tensors)&nbsp;are&nbsp;required&nbsp;to&nbsp;have&nbsp;the&nbsp;same&nbsp;shape&nbsp;in&nbsp;each&nbsp;iteration</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_20">20</td><td nowrap="nowrap">of&nbsp;the&nbsp;loop&nbsp;(a&nbsp;restriction&nbsp;imposed&nbsp;to&nbsp;enable&nbsp;efficient&nbsp;memory&nbsp;allocation).</td><td class="diff_next"></td><td class="diff_header" id="to196_20">20</td><td nowrap="nowrap">of&nbsp;the&nbsp;loop&nbsp;(a&nbsp;restriction&nbsp;imposed&nbsp;to&nbsp;enable&nbsp;efficient&nbsp;memory&nbsp;allocation).</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_21">21</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_21">21</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_22">22</td><td nowrap="nowrap">Note&nbsp;that&nbsp;the&nbsp;iterated&nbsp;element&nbsp;passed&nbsp;to&nbsp;the&nbsp;body&nbsp;subgraph&nbsp;does&nbsp;not&nbsp;have&nbsp;a&nbsp;sequence</td><td class="diff_next"></td><td class="diff_header" id="to196_22">22</td><td nowrap="nowrap">Note&nbsp;that&nbsp;the&nbsp;iterated&nbsp;element&nbsp;passed&nbsp;to&nbsp;the&nbsp;body&nbsp;subgraph&nbsp;does&nbsp;not&nbsp;have&nbsp;a&nbsp;sequence</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_23">23</td><td nowrap="nowrap">axis.&nbsp;It&nbsp;will&nbsp;have&nbsp;a&nbsp;rank&nbsp;one&nbsp;less&nbsp;than&nbsp;the&nbsp;rank&nbsp;of&nbsp;the&nbsp;corresponding&nbsp;scan_input.</td><td class="diff_next"></td><td class="diff_header" id="to196_23">23</td><td nowrap="nowrap">axis.&nbsp;It&nbsp;will&nbsp;have&nbsp;a&nbsp;rank&nbsp;one&nbsp;less&nbsp;than&nbsp;the&nbsp;rank&nbsp;of&nbsp;the&nbsp;corresponding&nbsp;scan_input.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_24">24</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_24">24</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_25">25</td><td nowrap="nowrap">The&nbsp;scan&nbsp;operation&nbsp;returns&nbsp;the&nbsp;final&nbsp;values&nbsp;of&nbsp;the&nbsp;state_variables&nbsp;as&nbsp;well&nbsp;as&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to196_25">25</td><td nowrap="nowrap">The&nbsp;scan&nbsp;operation&nbsp;returns&nbsp;the&nbsp;final&nbsp;values&nbsp;of&nbsp;the&nbsp;state_variables&nbsp;as&nbsp;well&nbsp;as&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_26">26</td><td nowrap="nowrap">scan_outputs.</td><td class="diff_next"></td><td class="diff_header" id="to196_26">26</td><td nowrap="nowrap">scan_outputs.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_27">27</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_27">27</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_28">28</td><td nowrap="nowrap">The&nbsp;optional&nbsp;attribute&nbsp;scan_input_directions&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;(forward&nbsp;or&nbsp;backward)</td><td class="diff_next"></td><td class="diff_header" id="to196_28">28</td><td nowrap="nowrap">The&nbsp;optional&nbsp;attribute&nbsp;scan_input_directions&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;(forward&nbsp;or&nbsp;backward)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_29">29</td><td nowrap="nowrap">for&nbsp;each&nbsp;scan&nbsp;input.&nbsp;If&nbsp;this&nbsp;attribute&nbsp;is&nbsp;omitted,&nbsp;all&nbsp;sequences&nbsp;are&nbsp;scanned&nbsp;in&nbsp;the&nbsp;forward</td><td class="diff_next"></td><td class="diff_header" id="to196_29">29</td><td nowrap="nowrap">for&nbsp;each&nbsp;scan&nbsp;input.&nbsp;If&nbsp;this&nbsp;attribute&nbsp;is&nbsp;omitted,&nbsp;all&nbsp;sequences&nbsp;are&nbsp;scanned&nbsp;in&nbsp;the&nbsp;forward</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_30">30</td><td nowrap="nowrap">direction.&nbsp;A&nbsp;bidirectional&nbsp;scan&nbsp;may&nbsp;be&nbsp;performed&nbsp;by&nbsp;specifying&nbsp;the&nbsp;same&nbsp;tensor&nbsp;input&nbsp;twice</td><td class="diff_next"></td><td class="diff_header" id="to196_30">30</td><td nowrap="nowrap">direction.&nbsp;A&nbsp;bidirectional&nbsp;scan&nbsp;may&nbsp;be&nbsp;performed&nbsp;by&nbsp;specifying&nbsp;the&nbsp;same&nbsp;tensor&nbsp;input&nbsp;twice</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_31">31</td><td nowrap="nowrap">in&nbsp;the&nbsp;scan_inputs,&nbsp;once&nbsp;with&nbsp;a&nbsp;forward&nbsp;direction,&nbsp;and&nbsp;once&nbsp;with&nbsp;a&nbsp;backward&nbsp;direction.</td><td class="diff_next"></td><td class="diff_header" id="to196_31">31</td><td nowrap="nowrap">in&nbsp;the&nbsp;scan_inputs,&nbsp;once&nbsp;with&nbsp;a&nbsp;forward&nbsp;direction,&nbsp;and&nbsp;once&nbsp;with&nbsp;a&nbsp;backward&nbsp;direction.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_32">32</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_32">32</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_33">33</td><td nowrap="nowrap">The&nbsp;scan_output&nbsp;of&nbsp;the&nbsp;operation&nbsp;is&nbsp;produced&nbsp;by&nbsp;concatenating&nbsp;the&nbsp;scan_output_element</td><td class="diff_next"></td><td class="diff_header" id="to196_33">33</td><td nowrap="nowrap">The&nbsp;scan_output&nbsp;of&nbsp;the&nbsp;operation&nbsp;is&nbsp;produced&nbsp;by&nbsp;concatenating&nbsp;the&nbsp;scan_output_element</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_34">34</td><td nowrap="nowrap">values&nbsp;produced&nbsp;by&nbsp;the&nbsp;body&nbsp;in&nbsp;each&nbsp;iteration.&nbsp;&nbsp;The&nbsp;optional&nbsp;attribute&nbsp;scan_output_directions</td><td class="diff_next"></td><td class="diff_header" id="to196_34">34</td><td nowrap="nowrap">values&nbsp;produced&nbsp;by&nbsp;the&nbsp;body&nbsp;in&nbsp;each&nbsp;iteration.&nbsp;&nbsp;The&nbsp;optional&nbsp;attribute&nbsp;scan_output_directions</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_35">35</td><td nowrap="nowrap">specifies&nbsp;the&nbsp;direction&nbsp;in&nbsp;which&nbsp;scan_output&nbsp;is&nbsp;constructed&nbsp;(by&nbsp;appending&nbsp;or&nbsp;prepending&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to196_35">35</td><td nowrap="nowrap">specifies&nbsp;the&nbsp;direction&nbsp;in&nbsp;which&nbsp;scan_output&nbsp;is&nbsp;constructed&nbsp;(by&nbsp;appending&nbsp;or&nbsp;prepending&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_36">36</td><td nowrap="nowrap">scan_output_element&nbsp;to&nbsp;scan_output&nbsp;in&nbsp;each&nbsp;iteration)&nbsp;for&nbsp;each&nbsp;scan_output.&nbsp;If&nbsp;this&nbsp;attribute</td><td class="diff_next"></td><td class="diff_header" id="to196_36">36</td><td nowrap="nowrap">scan_output_element&nbsp;to&nbsp;scan_output&nbsp;in&nbsp;each&nbsp;iteration)&nbsp;for&nbsp;each&nbsp;scan_output.&nbsp;If&nbsp;this&nbsp;attribute</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_37">37</td><td nowrap="nowrap">is&nbsp;omitted,&nbsp;the&nbsp;scan_output_element&nbsp;is&nbsp;appended&nbsp;to&nbsp;the&nbsp;scan_output&nbsp;in&nbsp;each&nbsp;iteration.</td><td class="diff_next"></td><td class="diff_header" id="to196_37">37</td><td nowrap="nowrap">is&nbsp;omitted,&nbsp;the&nbsp;scan_output_element&nbsp;is&nbsp;appended&nbsp;to&nbsp;the&nbsp;scan_output&nbsp;in&nbsp;each&nbsp;iteration.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_38">38</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_38">38</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_39">39</td><td nowrap="nowrap">The&nbsp;optional&nbsp;attribute&nbsp;scan_input_axes&nbsp;specifies&nbsp;the&nbsp;axis&nbsp;to&nbsp;be&nbsp;scanned&nbsp;for&nbsp;each&nbsp;scan_input.</td><td class="diff_next"></td><td class="diff_header" id="to196_39">39</td><td nowrap="nowrap">The&nbsp;optional&nbsp;attribute&nbsp;scan_input_axes&nbsp;specifies&nbsp;the&nbsp;axis&nbsp;to&nbsp;be&nbsp;scanned&nbsp;for&nbsp;each&nbsp;scan_input.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_40">40</td><td nowrap="nowrap">If&nbsp;omitted,&nbsp;every&nbsp;scan_input&nbsp;will&nbsp;be&nbsp;scanned&nbsp;in&nbsp;axis&nbsp;0.&nbsp;For&nbsp;example,&nbsp;if&nbsp;axis&nbsp;0&nbsp;is&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to196_40">40</td><td nowrap="nowrap">If&nbsp;omitted,&nbsp;every&nbsp;scan_input&nbsp;will&nbsp;be&nbsp;scanned&nbsp;in&nbsp;axis&nbsp;0.&nbsp;For&nbsp;example,&nbsp;if&nbsp;axis&nbsp;0&nbsp;is&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_41">41</td><td nowrap="nowrap">batch&nbsp;axis&nbsp;and&nbsp;axis&nbsp;1&nbsp;is&nbsp;the&nbsp;time&nbsp;axis&nbsp;(to&nbsp;be&nbsp;scanned),&nbsp;specify&nbsp;an&nbsp;axis&nbsp;value&nbsp;of&nbsp;1.</td><td class="diff_next"></td><td class="diff_header" id="to196_41">41</td><td nowrap="nowrap">batch&nbsp;axis&nbsp;and&nbsp;axis&nbsp;1&nbsp;is&nbsp;the&nbsp;time&nbsp;axis&nbsp;(to&nbsp;be&nbsp;scanned),&nbsp;specify&nbsp;an&nbsp;axis&nbsp;value&nbsp;of&nbsp;1.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_42">42</td><td nowrap="nowrap">Note&nbsp;that&nbsp;scanning&nbsp;a&nbsp;non-zero&nbsp;axis&nbsp;may&nbsp;be&nbsp;less&nbsp;efficient&nbsp;than&nbsp;scanning&nbsp;axis&nbsp;zero.</td><td class="diff_next"></td><td class="diff_header" id="to196_42">42</td><td nowrap="nowrap">Note&nbsp;that&nbsp;scanning&nbsp;a&nbsp;non-zero&nbsp;axis&nbsp;may&nbsp;be&nbsp;less&nbsp;efficient&nbsp;than&nbsp;scanning&nbsp;axis&nbsp;zero.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_43">43</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_43">43</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_44">44</td><td nowrap="nowrap">The&nbsp;optional&nbsp;attribute&nbsp;scan_output_axes&nbsp;specifies&nbsp;the&nbsp;axis&nbsp;along&nbsp;which&nbsp;the&nbsp;scan_outputs</td><td class="diff_next"></td><td class="diff_header" id="to196_44">44</td><td nowrap="nowrap">The&nbsp;optional&nbsp;attribute&nbsp;scan_output_axes&nbsp;specifies&nbsp;the&nbsp;axis&nbsp;along&nbsp;which&nbsp;the&nbsp;scan_outputs</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_45">45</td><td nowrap="nowrap">are&nbsp;accumulated&nbsp;for&nbsp;each&nbsp;scan_output.&nbsp;For&nbsp;example,&nbsp;if&nbsp;axis&nbsp;1&nbsp;is&nbsp;the&nbsp;time&nbsp;axis&nbsp;(to&nbsp;be</td><td class="diff_next"></td><td class="diff_header" id="to196_45">45</td><td nowrap="nowrap">are&nbsp;accumulated&nbsp;for&nbsp;each&nbsp;scan_output.&nbsp;For&nbsp;example,&nbsp;if&nbsp;axis&nbsp;1&nbsp;is&nbsp;the&nbsp;time&nbsp;axis&nbsp;(to&nbsp;be</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_46">46</td><td nowrap="nowrap">scanned)&nbsp;for&nbsp;both&nbsp;inputs&nbsp;and&nbsp;outputs,&nbsp;specify&nbsp;a&nbsp;scan_input&nbsp;axis&nbsp;and&nbsp;scan_output&nbsp;axis</td><td class="diff_next"></td><td class="diff_header" id="to196_46">46</td><td nowrap="nowrap">scanned)&nbsp;for&nbsp;both&nbsp;inputs&nbsp;and&nbsp;outputs,&nbsp;specify&nbsp;a&nbsp;scan_input&nbsp;axis&nbsp;and&nbsp;scan_output&nbsp;axis</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_47">47</td><td nowrap="nowrap">value&nbsp;of&nbsp;1.</td><td class="diff_next"></td><td class="diff_header" id="to196_47">47</td><td nowrap="nowrap">value&nbsp;of&nbsp;1.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_48">48</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_48">48</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_49">49</td><td nowrap="nowrap">Note&nbsp;that&nbsp;because&nbsp;of&nbsp;the&nbsp;ONNX&nbsp;restriction&nbsp;that&nbsp;only&nbsp;the&nbsp;last&nbsp;parameter&nbsp;of&nbsp;an&nbsp;operator&nbsp;can</td><td class="diff_next"></td><td class="diff_header" id="to196_49">49</td><td nowrap="nowrap">Note&nbsp;that&nbsp;because&nbsp;of&nbsp;the&nbsp;ONNX&nbsp;restriction&nbsp;that&nbsp;only&nbsp;the&nbsp;last&nbsp;parameter&nbsp;of&nbsp;an&nbsp;operator&nbsp;can</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_50">50</td><td nowrap="nowrap">be&nbsp;variadic,&nbsp;the&nbsp;initial-states&nbsp;and&nbsp;scan-inputs&nbsp;are&nbsp;listed&nbsp;together&nbsp;as&nbsp;one&nbsp;input&nbsp;parameter.</td><td class="diff_next"></td><td class="diff_header" id="to196_50">50</td><td nowrap="nowrap">be&nbsp;variadic,&nbsp;the&nbsp;initial-states&nbsp;and&nbsp;scan-inputs&nbsp;are&nbsp;listed&nbsp;together&nbsp;as&nbsp;one&nbsp;input&nbsp;parameter.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_51">51</td><td nowrap="nowrap">Similarly,&nbsp;the&nbsp;final-states&nbsp;and&nbsp;scan-outputs&nbsp;are&nbsp;listed&nbsp;together&nbsp;as&nbsp;one&nbsp;output&nbsp;parameter.</td><td class="diff_next"></td><td class="diff_header" id="to196_51">51</td><td nowrap="nowrap">Similarly,&nbsp;the&nbsp;final-states&nbsp;and&nbsp;scan-outputs&nbsp;are&nbsp;listed&nbsp;together&nbsp;as&nbsp;one&nbsp;output&nbsp;parameter.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_52">52</td><td nowrap="nowrap">The&nbsp;attribute&nbsp;num_scan_inputs&nbsp;indicates&nbsp;the&nbsp;number&nbsp;M&nbsp;of&nbsp;scan-inputs.</td><td class="diff_next"></td><td class="diff_header" id="to196_52">52</td><td nowrap="nowrap">The&nbsp;attribute&nbsp;num_scan_inputs&nbsp;indicates&nbsp;the&nbsp;number&nbsp;M&nbsp;of&nbsp;scan-inputs.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_53">53</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_53">53</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_54">54</td><td nowrap="nowrap">The&nbsp;behavior&nbsp;of</td><td class="diff_next"></td><td class="diff_header" id="to196_54">54</td><td nowrap="nowrap">The&nbsp;behavior&nbsp;of</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_55">55</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_55">55</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;Scan&nbsp;&lt;</td><td class="diff_next"></td><td class="diff_header" id="to196_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;Scan&nbsp;&lt;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_57">57</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num_scan_inputs&nbsp;=&nbsp;m,</td><td class="diff_next"></td><td class="diff_header" id="to196_57">57</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num_scan_inputs&nbsp;=&nbsp;m,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;body&nbsp;=&nbsp;loop-body,</td><td class="diff_next"></td><td class="diff_header" id="to196_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;body&nbsp;=&nbsp;loop-body,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_59">59</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scan_input_axes&nbsp;=&nbsp;[axis_1,&nbsp;...,&nbsp;axis_m]</td><td class="diff_next"></td><td class="diff_header" id="to196_59">59</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scan_input_axes&nbsp;=&nbsp;[axis_1,&nbsp;...,&nbsp;axis_m]</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_60">60</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;(init_1,&nbsp;...,&nbsp;init_n,&nbsp;scan_1,&nbsp;...,&nbsp;scan_m)</td><td class="diff_next"></td><td class="diff_header" id="to196_60">60</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;(init_1,&nbsp;...,&nbsp;init_n,&nbsp;scan_1,&nbsp;...,&nbsp;scan_m)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_61">61</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_61">61</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_62">62</td><td nowrap="nowrap">is&nbsp;equivalent&nbsp;to&nbsp;the&nbsp;following&nbsp;pseudo-code:</td><td class="diff_next"></td><td class="diff_header" id="to196_62">62</td><td nowrap="nowrap">is&nbsp;equivalent&nbsp;to&nbsp;the&nbsp;following&nbsp;pseudo-code:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_63">63</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_63">63</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_64">64</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;scan_i.shape[axis_i]&nbsp;denotes&nbsp;the&nbsp;(max)&nbsp;sequence-length&nbsp;of&nbsp;scan_i</td><td class="diff_next"></td><td class="diff_header" id="to196_64">64</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;scan_i.shape[axis_i]&nbsp;denotes&nbsp;the&nbsp;(max)&nbsp;sequence-length&nbsp;of&nbsp;scan_i</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_65">65</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;scan_i.shape[axis_i]&nbsp;is&nbsp;required&nbsp;to&nbsp;be&nbsp;equal&nbsp;to&nbsp;scan_j.shape[axis_j]&nbsp;for&nbsp;all&nbsp;i,j.</td><td class="diff_next"></td><td class="diff_header" id="to196_65">65</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;scan_i.shape[axis_i]&nbsp;is&nbsp;required&nbsp;to&nbsp;be&nbsp;equal&nbsp;to&nbsp;scan_j.shape[axis_j]&nbsp;for&nbsp;all&nbsp;i,j.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_66">66</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;sequence_length&nbsp;=&nbsp;scan_1.shape[axis_1];</td><td class="diff_next"></td><td class="diff_header" id="to196_66">66</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;sequence_length&nbsp;=&nbsp;scan_1.shape[axis_1];</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_67">67</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_67">67</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_68">68</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;initialize&nbsp;state-variables</td><td class="diff_next"></td><td class="diff_header" id="to196_68">68</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;initialize&nbsp;state-variables</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_69">69</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;st_1&nbsp;=&nbsp;init_1;&nbsp;...&nbsp;st_n&nbsp;=&nbsp;init_n;</td><td class="diff_next"></td><td class="diff_header" id="to196_69">69</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;st_1&nbsp;=&nbsp;init_1;&nbsp;...&nbsp;st_n&nbsp;=&nbsp;init_n;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_70">70</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;initialize&nbsp;scan-output&nbsp;variables:&nbsp;[]&nbsp;denotes&nbsp;an&nbsp;empty&nbsp;tensor</td><td class="diff_next"></td><td class="diff_header" id="to196_70">70</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;initialize&nbsp;scan-output&nbsp;variables:&nbsp;[]&nbsp;denotes&nbsp;an&nbsp;empty&nbsp;tensor</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_71">71</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;scan_out_1&nbsp;=&nbsp;[];&nbsp;...;&nbsp;scan_out_k&nbsp;=&nbsp;[];</td><td class="diff_next"></td><td class="diff_header" id="to196_71">71</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;scan_out_1&nbsp;=&nbsp;[];&nbsp;...;&nbsp;scan_out_k&nbsp;=&nbsp;[];</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_72">72</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;identify&nbsp;number&nbsp;of&nbsp;iterations:</td><td class="diff_next"></td><td class="diff_header" id="to196_72">72</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;identify&nbsp;number&nbsp;of&nbsp;iterations:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_73">73</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_73">73</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_74">74</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;execute&nbsp;loop</td><td class="diff_next"></td><td class="diff_header" id="to196_74">74</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;execute&nbsp;loop</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_75">75</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;t&nbsp;=&nbsp;0;&nbsp;t&nbsp;&lt;&nbsp;sequence_length;&nbsp;++t)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to196_75">75</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;t&nbsp;=&nbsp;0;&nbsp;t&nbsp;&lt;&nbsp;sequence_length;&nbsp;++t)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_76">76</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;generate&nbsp;the&nbsp;scan-input&nbsp;elements:&nbsp;the&nbsp;notation&nbsp;T&lt;axis=k&gt;[t]&nbsp;indicates&nbsp;the&nbsp;sub-tensor</td><td class="diff_next"></td><td class="diff_header" id="to196_76">76</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;generate&nbsp;the&nbsp;scan-input&nbsp;elements:&nbsp;the&nbsp;notation&nbsp;T&lt;axis=k&gt;[t]&nbsp;indicates&nbsp;the&nbsp;sub-tensor</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_77">77</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;of&nbsp;rank&nbsp;one&nbsp;less&nbsp;than&nbsp;T&nbsp;obtained&nbsp;by&nbsp;indexing&nbsp;T&nbsp;at&nbsp;position&nbsp;t&nbsp;along&nbsp;axis&nbsp;k.</td><td class="diff_next"></td><td class="diff_header" id="to196_77">77</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;of&nbsp;rank&nbsp;one&nbsp;less&nbsp;than&nbsp;T&nbsp;obtained&nbsp;by&nbsp;indexing&nbsp;T&nbsp;at&nbsp;position&nbsp;t&nbsp;along&nbsp;axis&nbsp;k.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_78">78</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;si_1&nbsp;=&nbsp;scan_1&lt;axis=axis_1&gt;[t];</td><td class="diff_next"></td><td class="diff_header" id="to196_78">78</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;si_1&nbsp;=&nbsp;scan_1&lt;axis=axis_1&gt;[t];</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_79">79</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...&nbsp;;</td><td class="diff_next"></td><td class="diff_header" id="to196_79">79</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...&nbsp;;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_80">80</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;si_m&nbsp;=&nbsp;scan_m&lt;axis=axis_m&gt;[t];</td><td class="diff_next"></td><td class="diff_header" id="to196_80">80</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;si_m&nbsp;=&nbsp;scan_m&lt;axis=axis_m&gt;[t];</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_81">81</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;execute&nbsp;loop-body</td><td class="diff_next"></td><td class="diff_header" id="to196_81">81</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;execute&nbsp;loop-body</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_82">82</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;st_1,&nbsp;...,&nbsp;st_n,&nbsp;so_1,&nbsp;...,&nbsp;so_k&nbsp;=&nbsp;loop-body(st_1,&nbsp;...,&nbsp;st_n,&nbsp;si_1,&nbsp;...,&nbsp;si_m)</td><td class="diff_next"></td><td class="diff_header" id="to196_82">82</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;st_1,&nbsp;...,&nbsp;st_n,&nbsp;so_1,&nbsp;...,&nbsp;so_k&nbsp;=&nbsp;loop-body(st_1,&nbsp;...,&nbsp;st_n,&nbsp;si_1,&nbsp;...,&nbsp;si_m)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_83">83</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;accumulate&nbsp;the&nbsp;scan-output&nbsp;elements</td><td class="diff_next"></td><td class="diff_header" id="to196_83">83</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;accumulate&nbsp;the&nbsp;scan-output&nbsp;elements</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_84">84</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scan_out_1&nbsp;=&nbsp;Concat&lt;axis=0&gt;(scan_out_1,&nbsp;so_1);&nbsp;...&nbsp;;&nbsp;scan_out_k&nbsp;=&nbsp;Concat&lt;axis=0&gt;(scan_out_k,&nbsp;so_k);</td><td class="diff_next"></td><td class="diff_header" id="to196_84">84</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scan_out_1&nbsp;=&nbsp;Concat&lt;axis=0&gt;(scan_out_1,&nbsp;so_1);&nbsp;...&nbsp;;&nbsp;scan_out_k&nbsp;=&nbsp;Concat&lt;axis=0&gt;(scan_out_k,&nbsp;so_k);</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_85">85</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to196_85">85</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_86">86</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_86">86</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_87">87</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;st_1,&nbsp;...,&nbsp;st_n,&nbsp;scan_out_1,&nbsp;...,&nbsp;scan_out_k;</td><td class="diff_next"></td><td class="diff_header" id="to196_87">87</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;st_1,&nbsp;...,&nbsp;st_n,&nbsp;scan_out_1,&nbsp;...,&nbsp;scan_out_k;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_88">88</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_88">88</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_89">89</td><td nowrap="nowrap">*Sample&nbsp;usage:&nbsp;Encoding&nbsp;RNN&nbsp;using&nbsp;a&nbsp;Scan*</td><td class="diff_next"></td><td class="diff_header" id="to196_89">89</td><td nowrap="nowrap">*Sample&nbsp;usage:&nbsp;Encoding&nbsp;RNN&nbsp;using&nbsp;a&nbsp;Scan*</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_90">90</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_90">90</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_91">91</td><td nowrap="nowrap">The&nbsp;following&nbsp;example&nbsp;shows&nbsp;how&nbsp;a&nbsp;simple&nbsp;RNN&nbsp;over&nbsp;an&nbsp;input&nbsp;tensor&nbsp;%X,&nbsp;with&nbsp;weight&nbsp;tensor&nbsp;%Wi,</td><td class="diff_next"></td><td class="diff_header" id="to196_91">91</td><td nowrap="nowrap">The&nbsp;following&nbsp;example&nbsp;shows&nbsp;how&nbsp;a&nbsp;simple&nbsp;RNN&nbsp;over&nbsp;an&nbsp;input&nbsp;tensor&nbsp;%X,&nbsp;with&nbsp;weight&nbsp;tensor&nbsp;%Wi,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_92">92</td><td nowrap="nowrap">recurrence&nbsp;weight&nbsp;tensor&nbsp;%Ri,&nbsp;bias&nbsp;tensors&nbsp;%Wbi&nbsp;and&nbsp;%Rbi,&nbsp;and&nbsp;initial&nbsp;hidden-state&nbsp;%H_0&nbsp;can</td><td class="diff_next"></td><td class="diff_header" id="to196_92">92</td><td nowrap="nowrap">recurrence&nbsp;weight&nbsp;tensor&nbsp;%Ri,&nbsp;bias&nbsp;tensors&nbsp;%Wbi&nbsp;and&nbsp;%Rbi,&nbsp;and&nbsp;initial&nbsp;hidden-state&nbsp;%H_0&nbsp;can</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_93">93</td><td nowrap="nowrap">be&nbsp;encoded&nbsp;as&nbsp;a&nbsp;ScanLoop.&nbsp;Note&nbsp;that&nbsp;the&nbsp;loop-body&nbsp;is&nbsp;a&nbsp;nested&nbsp;graph,&nbsp;and&nbsp;it&nbsp;directly&nbsp;computes</td><td class="diff_next"></td><td class="diff_header" id="to196_93">93</td><td nowrap="nowrap">be&nbsp;encoded&nbsp;as&nbsp;a&nbsp;ScanLoop.&nbsp;Note&nbsp;that&nbsp;the&nbsp;loop-body&nbsp;is&nbsp;a&nbsp;nested&nbsp;graph,&nbsp;and&nbsp;it&nbsp;directly&nbsp;computes</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_94">94</td><td nowrap="nowrap">%Wi,&nbsp;%Ri,&nbsp;%Wbi,&nbsp;and&nbsp;%Rbi&nbsp;(typically&nbsp;constants&nbsp;or&nbsp;initializers&nbsp;in&nbsp;the&nbsp;body&nbsp;graph).&nbsp;If&nbsp;these</td><td class="diff_next"></td><td class="diff_header" id="to196_94">94</td><td nowrap="nowrap">%Wi,&nbsp;%Ri,&nbsp;%Wbi,&nbsp;and&nbsp;%Rbi&nbsp;(typically&nbsp;constants&nbsp;or&nbsp;initializers&nbsp;in&nbsp;the&nbsp;body&nbsp;graph).&nbsp;If&nbsp;these</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_95">95</td><td nowrap="nowrap">values&nbsp;are&nbsp;computed&nbsp;in&nbsp;the&nbsp;outer&nbsp;graph,&nbsp;they&nbsp;need&nbsp;to&nbsp;be&nbsp;passed&nbsp;in&nbsp;as&nbsp;extra&nbsp;state_variables.</td><td class="diff_next"></td><td class="diff_header" id="to196_95">95</td><td nowrap="nowrap">values&nbsp;are&nbsp;computed&nbsp;in&nbsp;the&nbsp;outer&nbsp;graph,&nbsp;they&nbsp;need&nbsp;to&nbsp;be&nbsp;passed&nbsp;in&nbsp;as&nbsp;extra&nbsp;state_variables.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_96">96</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_96">96</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_97">97</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;rnn-encoding&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to196_97">97</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;rnn-encoding&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_98">98</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%H_0&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to196_98">98</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%H_0&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_99">99</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%X&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to196_99">99</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%X&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_100">100</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Y_h,&nbsp;%Y&nbsp;=&nbsp;Scan[body&nbsp;=&nbsp;&lt;graph&nbsp;rnn-cell-1&gt;,&nbsp;num_scan_inputs=1](%H_0,&nbsp;%X)</td><td class="diff_next"></td><td class="diff_header" id="to196_100">100</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Y_h,&nbsp;%Y&nbsp;=&nbsp;Scan[body&nbsp;=&nbsp;&lt;graph&nbsp;rnn-cell-1&gt;,&nbsp;num_scan_inputs=1](%H_0,&nbsp;%X)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_101">101</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;%Y,&nbsp;%Y_h</td><td class="diff_next"></td><td class="diff_header" id="to196_101">101</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;%Y,&nbsp;%Y_h</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_102">102</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to196_102">102</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_103">103</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_103">103</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_104">104</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;rnn-cell-1&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to196_104">104</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;rnn-cell-1&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_105">105</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%H_tminus1[FLOAT,&nbsp;tensor]</td><td class="diff_next"></td><td class="diff_header" id="to196_105">105</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%H_tminus1[FLOAT,&nbsp;tensor]</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_106">106</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%X_t[FLOAT,&nbsp;tensor]</td><td class="diff_next"></td><td class="diff_header" id="to196_106">106</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%X_t[FLOAT,&nbsp;tensor]</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_107">107</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to196_107">107</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_108">108</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Wi&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to196_108">108</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Wi&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_109">109</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Ri&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to196_109">109</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Ri&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_110">110</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Wbi&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to196_110">110</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Wbi&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_111">111</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Rbi&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to196_111">111</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Rbi&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_112">112</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t1&nbsp;=&nbsp;X_t&nbsp;*&nbsp;(Wi^T)</td><td class="diff_next"></td><td class="diff_header" id="to196_112">112</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t1&nbsp;=&nbsp;X_t&nbsp;*&nbsp;(Wi^T)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_113">113</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t2&nbsp;=&nbsp;H_tminus1*(Ri^T)</td><td class="diff_next"></td><td class="diff_header" id="to196_113">113</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t2&nbsp;=&nbsp;H_tminus1*(Ri^T)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_114">114</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t3&nbsp;=&nbsp;Add(%t1,&nbsp;%t2)</td><td class="diff_next"></td><td class="diff_header" id="to196_114">114</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t3&nbsp;=&nbsp;Add(%t1,&nbsp;%t2)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_115">115</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t4&nbsp;=&nbsp;Add(%t3,&nbsp;%Wbi)</td><td class="diff_next"></td><td class="diff_header" id="to196_115">115</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t4&nbsp;=&nbsp;Add(%t3,&nbsp;%Wbi)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_116">116</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t5&nbsp;=&nbsp;Add(%t4,&nbsp;%Rbi)</td><td class="diff_next"></td><td class="diff_header" id="to196_116">116</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t5&nbsp;=&nbsp;Add(%t4,&nbsp;%Rbi)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_117">117</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Ht&nbsp;=&nbsp;Tanh(%t5)</td><td class="diff_next"></td><td class="diff_header" id="to196_117">117</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Ht&nbsp;=&nbsp;Tanh(%t5)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_118">118</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Accumulate&nbsp;=&nbsp;Identity(%Ht)</td><td class="diff_next"></td><td class="diff_header" id="to196_118">118</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Accumulate&nbsp;=&nbsp;Identity(%Ht)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_119">119</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;%Ht,&nbsp;%Accumulate</td><td class="diff_next"></td><td class="diff_header" id="to196_119">119</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;%Ht,&nbsp;%Accumulate</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_120">120</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to196_120">120</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_121">121</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_121">121</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_122">122</td><td nowrap="nowrap">**Attributes**</td><td class="diff_next"></td><td class="diff_header" id="to196_122">122</td><td nowrap="nowrap">**Attributes**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_123">123</td><td nowrap="nowrap">*&nbsp;**body**&nbsp;(required):</td><td class="diff_next"></td><td class="diff_header" id="to196_123">123</td><td nowrap="nowrap">*&nbsp;**body**&nbsp;(required):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_124">124</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;graph&nbsp;run&nbsp;each&nbsp;iteration.&nbsp;It&nbsp;has&nbsp;N+M&nbsp;inputs:&nbsp;(loop&nbsp;state</td><td class="diff_next"></td><td class="diff_header" id="to196_124">124</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;graph&nbsp;run&nbsp;each&nbsp;iteration.&nbsp;It&nbsp;has&nbsp;N+M&nbsp;inputs:&nbsp;(loop&nbsp;state</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_125">125</td><td nowrap="nowrap">&nbsp;&nbsp;variables...,&nbsp;scan_input_elts...).&nbsp;It&nbsp;has&nbsp;N+K&nbsp;outputs:&nbsp;(loop&nbsp;state</td><td class="diff_next"></td><td class="diff_header" id="to196_125">125</td><td nowrap="nowrap">&nbsp;&nbsp;variables...,&nbsp;scan_input_elts...).&nbsp;It&nbsp;has&nbsp;N+K&nbsp;outputs:&nbsp;(loop&nbsp;state</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_126">126</td><td nowrap="nowrap">&nbsp;&nbsp;variables...,&nbsp;scan_output_elts...).&nbsp;Each&nbsp;scan_output&nbsp;is&nbsp;created&nbsp;by</td><td class="diff_next"></td><td class="diff_header" id="to196_126">126</td><td nowrap="nowrap">&nbsp;&nbsp;variables...,&nbsp;scan_output_elts...).&nbsp;Each&nbsp;scan_output&nbsp;is&nbsp;created&nbsp;by</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_127">127</td><td nowrap="nowrap">&nbsp;&nbsp;concatenating&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;specified&nbsp;scan_output_elt&nbsp;value&nbsp;at</td><td class="diff_next"></td><td class="diff_header" id="to196_127">127</td><td nowrap="nowrap">&nbsp;&nbsp;concatenating&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;specified&nbsp;scan_output_elt&nbsp;value&nbsp;at</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_128">128</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;end&nbsp;of&nbsp;each&nbsp;iteration&nbsp;of&nbsp;the&nbsp;loop.&nbsp;It&nbsp;is&nbsp;an&nbsp;error&nbsp;if&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to196_128">128</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;end&nbsp;of&nbsp;each&nbsp;iteration&nbsp;of&nbsp;the&nbsp;loop.&nbsp;It&nbsp;is&nbsp;an&nbsp;error&nbsp;if&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_129">129</td><td nowrap="nowrap">&nbsp;&nbsp;dimensions&nbsp;of&nbsp;these&nbsp;values&nbsp;change&nbsp;across&nbsp;loop&nbsp;iterations.</td><td class="diff_next"></td><td class="diff_header" id="to196_129">129</td><td nowrap="nowrap">&nbsp;&nbsp;dimensions&nbsp;of&nbsp;these&nbsp;values&nbsp;change&nbsp;across&nbsp;loop&nbsp;iterations.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_130">130</td><td nowrap="nowrap">*&nbsp;**num_scan_inputs**&nbsp;(required):</td><td class="diff_next"></td><td class="diff_header" id="to196_130">130</td><td nowrap="nowrap">*&nbsp;**num_scan_inputs**&nbsp;(required):</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to196__0"></td><td class="diff_header" id="from196_131">131</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;attribute&nbsp;specifying&nbsp;the&nbsp;number&nbsp;of&nbsp;scan_inputs&nbsp;M.</td><td class="diff_next"></td><td class="diff_header" id="to196_131">131</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;attribute&nbsp;specifying&nbsp;the&nbsp;number&nbsp;of&nbsp;scan_inputs&nbsp;M.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_132">132</td><td nowrap="nowrap">*&nbsp;**scan_input_axes**:</td><td class="diff_next"></td><td class="diff_header" id="to196_132">132</td><td nowrap="nowrap">*&nbsp;**scan_input_axes**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_133">133</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;M&nbsp;flags.&nbsp;The&nbsp;i-th&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies</td><td class="diff_next"></td><td class="diff_header" id="to196_133">133</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;M&nbsp;flags.&nbsp;The&nbsp;i-th&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_134">134</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;axis&nbsp;to&nbsp;be&nbsp;scanned&nbsp;(the&nbsp;sequence&nbsp;axis)&nbsp;for&nbsp;the&nbsp;i-th&nbsp;scan_input.</td><td class="diff_next"></td><td class="diff_header" id="to196_134">134</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;axis&nbsp;to&nbsp;be&nbsp;scanned&nbsp;(the&nbsp;sequence&nbsp;axis)&nbsp;for&nbsp;the&nbsp;i-th&nbsp;scan_input.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_135">135</td><td nowrap="nowrap">&nbsp;&nbsp;If&nbsp;omitted,&nbsp;0&nbsp;will&nbsp;be&nbsp;used&nbsp;as&nbsp;the&nbsp;scan&nbsp;axis&nbsp;for&nbsp;every&nbsp;scan_input.</td><td class="diff_next"></td><td class="diff_header" id="to196_135">135</td><td nowrap="nowrap">&nbsp;&nbsp;If&nbsp;omitted,&nbsp;0&nbsp;will&nbsp;be&nbsp;used&nbsp;as&nbsp;the&nbsp;scan&nbsp;axis&nbsp;for&nbsp;every&nbsp;scan_input.</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to196__1">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to196__1">n</a></td><td class="diff_header" id="to196_136">136</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;Negative&nbsp;value&nbsp;for&nbsp;an&nbsp;axis&nbsp;means&nbsp;counting&nbsp;dimensions&nbsp;from&nbsp;the&nbsp;back.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_137">137</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;Accepted&nbsp;range&nbsp;is&nbsp;[-r,&nbsp;r-1]&nbsp;where&nbsp;r&nbsp;=&nbsp;rank(input).</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_136">136</td><td nowrap="nowrap">*&nbsp;**scan_input_directions**:</td><td class="diff_next"></td><td class="diff_header" id="to196_138">138</td><td nowrap="nowrap">*&nbsp;**scan_input_directions**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_137">137</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;M&nbsp;flags.&nbsp;The&nbsp;i-th&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies</td><td class="diff_next"></td><td class="diff_header" id="to196_139">139</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;M&nbsp;flags.&nbsp;The&nbsp;i-th&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_138">138</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;direction&nbsp;to&nbsp;be&nbsp;scanned&nbsp;for&nbsp;the&nbsp;i-th&nbsp;scan_input&nbsp;tensor:&nbsp;0</td><td class="diff_next"></td><td class="diff_header" id="to196_140">140</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;direction&nbsp;to&nbsp;be&nbsp;scanned&nbsp;for&nbsp;the&nbsp;i-th&nbsp;scan_input&nbsp;tensor:&nbsp;0</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_139">139</td><td nowrap="nowrap">&nbsp;&nbsp;indicates&nbsp;forward&nbsp;direction&nbsp;and&nbsp;1&nbsp;indicates&nbsp;reverse&nbsp;direction.&nbsp;If</td><td class="diff_next"></td><td class="diff_header" id="to196_141">141</td><td nowrap="nowrap">&nbsp;&nbsp;indicates&nbsp;forward&nbsp;direction&nbsp;and&nbsp;1&nbsp;indicates&nbsp;reverse&nbsp;direction.&nbsp;If</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_140">140</td><td nowrap="nowrap">&nbsp;&nbsp;omitted,&nbsp;all&nbsp;scan_input&nbsp;tensors&nbsp;will&nbsp;be&nbsp;scanned&nbsp;in&nbsp;the&nbsp;forward</td><td class="diff_next"></td><td class="diff_header" id="to196_142">142</td><td nowrap="nowrap">&nbsp;&nbsp;omitted,&nbsp;all&nbsp;scan_input&nbsp;tensors&nbsp;will&nbsp;be&nbsp;scanned&nbsp;in&nbsp;the&nbsp;forward</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to196__1"></td><td class="diff_header" id="from196_141">141</td><td nowrap="nowrap">&nbsp;&nbsp;direction.</td><td class="diff_next"></td><td class="diff_header" id="to196_143">143</td><td nowrap="nowrap">&nbsp;&nbsp;direction.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_142">142</td><td nowrap="nowrap">*&nbsp;**scan_output_axes**:</td><td class="diff_next"></td><td class="diff_header" id="to196_144">144</td><td nowrap="nowrap">*&nbsp;**scan_output_axes**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_143">143</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;K&nbsp;flags.&nbsp;The&nbsp;i-th&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies</td><td class="diff_next"></td><td class="diff_header" id="to196_145">145</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;K&nbsp;flags.&nbsp;The&nbsp;i-th&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_144">144</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;axis&nbsp;for&nbsp;the&nbsp;i-th&nbsp;scan_output.&nbsp;The&nbsp;scan&nbsp;outputs&nbsp;are&nbsp;accumulated</td><td class="diff_next"></td><td class="diff_header" id="to196_146">146</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;axis&nbsp;for&nbsp;the&nbsp;i-th&nbsp;scan_output.&nbsp;The&nbsp;scan&nbsp;outputs&nbsp;are&nbsp;accumulated</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_145">145</td><td nowrap="nowrap">&nbsp;&nbsp;along&nbsp;the&nbsp;specified&nbsp;axis.&nbsp;If&nbsp;omitted,&nbsp;0&nbsp;will&nbsp;be&nbsp;used&nbsp;as&nbsp;the&nbsp;scan</td><td class="diff_next"></td><td class="diff_header" id="to196_147">147</td><td nowrap="nowrap">&nbsp;&nbsp;along&nbsp;the&nbsp;specified&nbsp;axis.&nbsp;If&nbsp;omitted,&nbsp;0&nbsp;will&nbsp;be&nbsp;used&nbsp;as&nbsp;the&nbsp;scan</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to196__top">t</a></td><td class="diff_header" id="from196_146">146</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;axis&nbsp;for&nbsp;every&nbsp;scan_output.</span></td><td class="diff_next"><a href="#difflib_chg_to196__top">t</a></td><td class="diff_header" id="to196_148">148</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;axis&nbsp;for&nbsp;every&nbsp;scan_output.&nbsp;Negative&nbsp;value&nbsp;for&nbsp;an&nbsp;axis&nbsp;means</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_149">149</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;counting&nbsp;dimensions&nbsp;from&nbsp;the&nbsp;back.&nbsp;Accepted&nbsp;range&nbsp;is&nbsp;[-r,&nbsp;r-1].</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_147">147</td><td nowrap="nowrap">*&nbsp;**scan_output_directions**:</td><td class="diff_next"></td><td class="diff_header" id="to196_150">150</td><td nowrap="nowrap">*&nbsp;**scan_output_directions**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_148">148</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;K&nbsp;flags,&nbsp;one&nbsp;for&nbsp;each&nbsp;scan_output.&nbsp;The&nbsp;i-th</td><td class="diff_next"></td><td class="diff_header" id="to196_151">151</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;K&nbsp;flags,&nbsp;one&nbsp;for&nbsp;each&nbsp;scan_output.&nbsp;The&nbsp;i-th</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_149">149</td><td nowrap="nowrap">&nbsp;&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies&nbsp;whether&nbsp;the&nbsp;i-th&nbsp;scan_output&nbsp;should&nbsp;be</td><td class="diff_next"></td><td class="diff_header" id="to196_152">152</td><td nowrap="nowrap">&nbsp;&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies&nbsp;whether&nbsp;the&nbsp;i-th&nbsp;scan_output&nbsp;should&nbsp;be</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_150">150</td><td nowrap="nowrap">&nbsp;&nbsp;constructed&nbsp;by&nbsp;appending&nbsp;or&nbsp;prepending&nbsp;a&nbsp;new&nbsp;value&nbsp;in&nbsp;each</td><td class="diff_next"></td><td class="diff_header" id="to196_153">153</td><td nowrap="nowrap">&nbsp;&nbsp;constructed&nbsp;by&nbsp;appending&nbsp;or&nbsp;prepending&nbsp;a&nbsp;new&nbsp;value&nbsp;in&nbsp;each</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_151">151</td><td nowrap="nowrap">&nbsp;&nbsp;iteration:&nbsp;0&nbsp;indicates&nbsp;appending&nbsp;and&nbsp;1&nbsp;indicates&nbsp;prepending.&nbsp;If</td><td class="diff_next"></td><td class="diff_header" id="to196_154">154</td><td nowrap="nowrap">&nbsp;&nbsp;iteration:&nbsp;0&nbsp;indicates&nbsp;appending&nbsp;and&nbsp;1&nbsp;indicates&nbsp;prepending.&nbsp;If</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_152">152</td><td nowrap="nowrap">&nbsp;&nbsp;omitted,&nbsp;all&nbsp;scan_output&nbsp;tensors&nbsp;will&nbsp;be&nbsp;produced&nbsp;by&nbsp;appending&nbsp;a</td><td class="diff_next"></td><td class="diff_header" id="to196_155">155</td><td nowrap="nowrap">&nbsp;&nbsp;omitted,&nbsp;all&nbsp;scan_output&nbsp;tensors&nbsp;will&nbsp;be&nbsp;produced&nbsp;by&nbsp;appending&nbsp;a</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_153">153</td><td nowrap="nowrap">&nbsp;&nbsp;value&nbsp;in&nbsp;each&nbsp;iteration.</td><td class="diff_next"></td><td class="diff_header" id="to196_156">156</td><td nowrap="nowrap">&nbsp;&nbsp;value&nbsp;in&nbsp;each&nbsp;iteration.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_154">154</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_157">157</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_155">155</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to196_158">158</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_156">156</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2147483647&nbsp;inputs.</td><td class="diff_next"></td><td class="diff_header" id="to196_159">159</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2147483647&nbsp;inputs.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_157">157</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_160">160</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_158">158</td><td nowrap="nowrap">*&nbsp;**initial_state_and_scan_inputs**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td><td class="diff_next"></td><td class="diff_header" id="to196_161">161</td><td nowrap="nowrap">*&nbsp;**initial_state_and_scan_inputs**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_159">159</td><td nowrap="nowrap">&nbsp;&nbsp;Initial&nbsp;values&nbsp;of&nbsp;the&nbsp;loop's&nbsp;N&nbsp;state&nbsp;variables&nbsp;followed&nbsp;by&nbsp;M</td><td class="diff_next"></td><td class="diff_header" id="to196_162">162</td><td nowrap="nowrap">&nbsp;&nbsp;Initial&nbsp;values&nbsp;of&nbsp;the&nbsp;loop's&nbsp;N&nbsp;state&nbsp;variables&nbsp;followed&nbsp;by&nbsp;M</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_160">160</td><td nowrap="nowrap">&nbsp;&nbsp;scan_inputs</td><td class="diff_next"></td><td class="diff_header" id="to196_163">163</td><td nowrap="nowrap">&nbsp;&nbsp;scan_inputs</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_161">161</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_164">164</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_162">162</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to196_165">165</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_163">163</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2147483647&nbsp;outputs.</td><td class="diff_next"></td><td class="diff_header" id="to196_166">166</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2147483647&nbsp;outputs.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_164">164</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_167">167</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_165">165</td><td nowrap="nowrap">*&nbsp;**final_state_and_scan_outputs**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td><td class="diff_next"></td><td class="diff_header" id="to196_168">168</td><td nowrap="nowrap">*&nbsp;**final_state_and_scan_outputs**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_166">166</td><td nowrap="nowrap">&nbsp;&nbsp;Final&nbsp;values&nbsp;of&nbsp;the&nbsp;loop's&nbsp;N&nbsp;state&nbsp;variables&nbsp;followed&nbsp;by&nbsp;K</td><td class="diff_next"></td><td class="diff_header" id="to196_169">169</td><td nowrap="nowrap">&nbsp;&nbsp;Final&nbsp;values&nbsp;of&nbsp;the&nbsp;loop's&nbsp;N&nbsp;state&nbsp;variables&nbsp;followed&nbsp;by&nbsp;K</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_167">167</td><td nowrap="nowrap">&nbsp;&nbsp;scan_outputs</td><td class="diff_next"></td><td class="diff_header" id="to196_170">170</td><td nowrap="nowrap">&nbsp;&nbsp;scan_outputs</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_168">168</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to196_171">171</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_169">169</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to196_172">172</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_170">170</td><td nowrap="nowrap">*&nbsp;**V**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to196_173">173</td><td nowrap="nowrap">*&nbsp;**V**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_171">171</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td><td class="diff_next"></td><td class="diff_header" id="to196_174">174</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_172">172</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex128),</td><td class="diff_next"></td><td class="diff_header" id="to196_175">175</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex128),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_173">173</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex64),</td><td class="diff_next"></td><td class="diff_header" id="to196_176">176</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_174">174</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to196_177">177</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_175">175</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to196_178">178</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_176">176</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td><td class="diff_next"></td><td class="diff_header" id="to196_179">179</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_177">177</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td><td class="diff_next"></td><td class="diff_header" id="to196_180">180</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_178">178</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td><td class="diff_next"></td><td class="diff_header" id="to196_181">181</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_179">179</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td><td class="diff_next"></td><td class="diff_header" id="to196_182">182</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_180">180</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td><td class="diff_next"></td><td class="diff_header" id="to196_183">183</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_181">181</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td><td class="diff_next"></td><td class="diff_header" id="to196_184">184</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_182">182</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td><td class="diff_next"></td><td class="diff_header" id="to196_185">185</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_183">183</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td><td class="diff_next"></td><td class="diff_header" id="to196_186">186</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_184">184</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td><td class="diff_next"></td><td class="diff_header" id="to196_187">187</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_185">185</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td><td class="diff_next"></td><td class="diff_header" id="to196_188">188</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_186">186</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to196_189">189</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from196_187">187</td><td nowrap="nowrap">&nbsp;&nbsp;All&nbsp;Tensor&nbsp;types</td><td class="diff_next"></td><td class="diff_header" id="to196_190">190</td><td nowrap="nowrap">&nbsp;&nbsp;All&nbsp;Tensor&nbsp;types</td></tr>
            </tbody>
        </table>

.. _l-onnx-op-scan-9:
Scan - 9
========
**Version**
* **name**: `Scan (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Scan>`_
* **domain**: **main**
* **since_version**: **9**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 9**.

**Summary**

Scan can be used to iterate over one or more scan_input tensors,
constructing zero or more scan_output tensors. It combines ideas from general recurrences,
functional programming constructs such as scan, fold, map, and zip, and is intended to enable
generalizations of RNN-like constructs for sequence-to-sequence processing.
Other tensors (referred to as state_variables here) can be used to carry a state
when iterating from one element to another (similar to hidden-state in RNNs, also referred
to as loop-carried dependences in the context of loops).
Many common usages involve a single scan_input tensor (where functionality
similar to scan, fold and map can be obtained). When more than one scan_input is used,
a behavior similar to zip is obtained.

The attribute body must be a graph, specifying the computation to be performed in
every iteration. It takes as input the current values of the state_variables and
the current iterated element of the scan_inputs. It must return the (updated) values
of the state_variables and zero or more scan_output_element tensors. The values of the
scan_output_element tensors are concatenated over all the iterations to produce the
scan_output values of the scan construct (similar to the concatenated intermediate
hidden-state values of RNN-like constructs). All the output tensors (state_variables as
well as scan_output_element tensors) are required to have the same shape in each iteration
of the loop (a restriction imposed to enable efficient memory allocation).

Note that the iterated element passed to the body subgraph does not have a sequence
axis. It will have a rank one less than the rank of the corresponding scan_input.

The scan operation returns the final values of the state_variables as well as the
scan_outputs.

The optional attribute scan_input_directions specifies the direction (forward or backward)
for each scan input. If this attribute is omitted, all sequences are scanned in the forward
direction. A bidirectional scan may be performed by specifying the same tensor input twice
in the scan_inputs, once with a forward direction, and once with a backward direction.

The scan_output of the operation is produced by concatenating the scan_output_element
values produced by the body in each iteration.  The optional attribute scan_output_directions
specifies the direction in which scan_output is constructed (by appending or prepending the
scan_output_element to scan_output in each iteration) for each scan_output. If this attribute
is omitted, the scan_output_element is appended to the scan_output in each iteration.

The optional attribute scan_input_axes specifies the axis to be scanned for each scan_input.
If omitted, every scan_input will be scanned in axis 0. For example, if axis 0 is the
batch axis and axis 1 is the time axis (to be scanned), specify an axis value of 1.
Note that scanning a non-zero axis may be less efficient than scanning axis zero.

The optional attribute scan_output_axes specifies the axis along which the scan_outputs
are accumulated for each scan_output. For example, if axis 1 is the time axis (to be
scanned) for both inputs and outputs, specify a scan_input axis and scan_output axis
value of 1.

Note that because of the ONNX restriction that only the last parameter of an operator can
be variadic, the initial-states and scan-inputs are listed together as one input parameter.
Similarly, the final-states and scan-outputs are listed together as one output parameter.
The attribute num_scan_inputs indicates the number M of scan-inputs.

The behavior of

    Scan <
        num_scan_inputs = m,
        body = loop-body,
        scan_input_axes = [axis_1, ..., axis_m]
    > (init_1, ..., init_n, scan_1, ..., scan_m)

is equivalent to the following pseudo-code:

    // scan_i.shape[axis_i] denotes the (max) sequence-length of scan_i
    // scan_i.shape[axis_i] is required to be equal to scan_j.shape[axis_j] for all i,j.
    sequence_length = scan_1.shape[axis_1];

    // initialize state-variables
    st_1 = init_1; ... st_n = init_n;
    // initialize scan-output variables: [] denotes an empty tensor
    scan_out_1 = []; ...; scan_out_k = [];
    // identify number of iterations:

    // execute loop
    for (int t = 0; t < sequence_length; ++t) {
        // generate the scan-input elements: the notation T<axis=k>[t] indicates the sub-tensor
        // of rank one less than T obtained by indexing T at position t along axis k.
        si_1 = scan_1<axis=axis_1>[t];
        ... ;
        si_m = scan_m<axis=axis_m>[t];
        // execute loop-body
        st_1, ..., st_n, so_1, ..., so_k = loop-body(st_1, ..., st_n, si_1, ..., si_m)
        // accumulate the scan-output elements
        scan_out_1 = Concat<axis=0>(scan_out_1, so_1); ... ; scan_out_k = Concat<axis=0>(scan_out_k, so_k);
    }

    return st_1, ..., st_n, scan_out_1, ..., scan_out_k;

*Sample usage: Encoding RNN using a Scan*

The following example shows how a simple RNN over an input tensor %X, with weight tensor %Wi,
recurrence weight tensor %Ri, bias tensors %Wbi and %Rbi, and initial hidden-state %H_0 can
be encoded as a ScanLoop. Note that the loop-body is a nested graph, and it directly computes
%Wi, %Ri, %Wbi, and %Rbi (typically constants or initializers in the body graph). If these
values are computed in the outer graph, they need to be passed in as extra state_variables.

    graph rnn-encoding {
      %H_0 = ...
      %X = ...
      %Y_h, %Y = Scan[body = <graph rnn-cell-1>, num_scan_inputs=1](%H_0, %X)
      return %Y, %Y_h
    }

    graph rnn-cell-1 (
      %H_tminus1[FLOAT, tensor]
      %X_t[FLOAT, tensor]
    ) {
      %Wi = ...
      %Ri = ...
      %Wbi = ...
      %Rbi = ...
      %t1 = X_t * (Wi^T)
      %t2 = H_tminus1*(Ri^T)
      %t3 = Add(%t1, %t2)
      %t4 = Add(%t3, %Wbi)
      %t5 = Add(%t4, %Rbi)
      %Ht = Tanh(%t5)
      %Accumulate = Identity(%Ht)
      return %Ht, %Accumulate
    }

**Attributes**
* **body** (required):
  The graph run each iteration. It has N+M inputs: (loop state
  variables..., scan_input_elts...). It has N+K outputs: (loop state
  variables..., scan_output_elts...). Each scan_output is created by
  concatenating the value of the specified scan_output_elt value at
  the end of each iteration of the loop. It is an error if the
  dimensions of these values change across loop iterations.
* **num_scan_inputs** (required):
  An attribute specifying the number of scan_inputs M.
* **scan_input_axes**:
  An optional list of M flags. The i-th element of the list specifies
  the axis to be scanned (the sequence axis) for the i-th scan_input.
  If omitted, 0 will be used as the scan axis for every scan_input.
* **scan_input_directions**:
  An optional list of M flags. The i-th element of the list specifies
  the direction to be scanned for the i-th scan_input tensor: 0
  indicates forward direction and 1 indicates reverse direction. If
  omitted, all scan_input tensors will be scanned in the forward
  direction.
* **scan_output_axes**:
  An optional list of K flags. The i-th element of the list specifies
  the axis for the i-th scan_output. The scan outputs are accumulated
  along the specified axis. If omitted, 0 will be used as the scan
  axis for every scan_output.
* **scan_output_directions**:
  An optional list of K flags, one for each scan_output. The i-th
  element of the list specifies whether the i-th scan_output should be
  constructed by appending or prepending a new value in each
  iteration: 0 indicates appending and 1 indicates prepending. If
  omitted, all scan_output tensors will be produced by appending a
  value in each iteration.

**Inputs**
Between 1 and 2147483647 inputs.

* **initial_state_and_scan_inputs** (variadic) - **V**:
  Initial values of the loop's N state variables followed by M
  scan_inputs

**Outputs**
Between 1 and 2147483647 outputs.

* **final_state_and_scan_outputs** (variadic) - **V**:
  Final values of the loop's N state variables followed by K
  scan_outputs

**Type Constraints**
* **V** in (
  tensor(bool),
  tensor(complex128),
  tensor(complex64),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  All Tensor types

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to197__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next"><a href="#difflib_chg_to197__0">f</a></td><td class="diff_header" id="from197_1">1</td><td nowrap="nowrap">Scan&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;iterate&nbsp;over&nbsp;one&nbsp;or&nbsp;more&nbsp;scan_input&nbsp;tensors,</td><td class="diff_next"><a href="#difflib_chg_to197__0">f</a></td><td class="diff_header" id="to197_1">1</td><td nowrap="nowrap">Scan&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;iterate&nbsp;over&nbsp;one&nbsp;or&nbsp;more&nbsp;scan_input&nbsp;tensors,</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to197__0"></td><td class="diff_header" id="from197_2">2</td><td nowrap="nowrap">constructing&nbsp;zero&nbsp;or&nbsp;more&nbsp;scan_output&nbsp;tensors.&nbsp;It&nbsp;combines&nbsp;ideas&nbsp;from&nbsp;general&nbsp;recurrences,</td><td class="diff_next"></td><td class="diff_header" id="to197_2">2</td><td nowrap="nowrap">constructing&nbsp;zero&nbsp;or&nbsp;more&nbsp;scan_output&nbsp;tensors.&nbsp;It&nbsp;combines&nbsp;ideas&nbsp;from&nbsp;general&nbsp;recurrences,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_3">3</td><td nowrap="nowrap">functional&nbsp;programming&nbsp;constructs&nbsp;such&nbsp;as&nbsp;scan,&nbsp;fold,&nbsp;map,&nbsp;and&nbsp;zip,&nbsp;and&nbsp;is&nbsp;intended&nbsp;to&nbsp;enable</td><td class="diff_next"></td><td class="diff_header" id="to197_3">3</td><td nowrap="nowrap">functional&nbsp;programming&nbsp;constructs&nbsp;such&nbsp;as&nbsp;scan,&nbsp;fold,&nbsp;map,&nbsp;and&nbsp;zip,&nbsp;and&nbsp;is&nbsp;intended&nbsp;to&nbsp;enable</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_4">4</td><td nowrap="nowrap">generalizations&nbsp;of&nbsp;RNN-like&nbsp;constructs&nbsp;for&nbsp;sequence-to-sequence&nbsp;processing.</td><td class="diff_next"></td><td class="diff_header" id="to197_4">4</td><td nowrap="nowrap">generalizations&nbsp;of&nbsp;RNN-like&nbsp;constructs&nbsp;for&nbsp;sequence-to-sequence&nbsp;processing.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_5">5</td><td nowrap="nowrap">Other&nbsp;tensors&nbsp;(referred&nbsp;to&nbsp;as&nbsp;state_variables&nbsp;here)&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;carry&nbsp;a&nbsp;state</td><td class="diff_next"></td><td class="diff_header" id="to197_5">5</td><td nowrap="nowrap">Other&nbsp;tensors&nbsp;(referred&nbsp;to&nbsp;as&nbsp;state_variables&nbsp;here)&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;carry&nbsp;a&nbsp;state</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_6">6</td><td nowrap="nowrap">when&nbsp;iterating&nbsp;from&nbsp;one&nbsp;element&nbsp;to&nbsp;another&nbsp;(similar&nbsp;to&nbsp;hidden-state&nbsp;in&nbsp;RNNs,&nbsp;also&nbsp;referred</td><td class="diff_next"></td><td class="diff_header" id="to197_6">6</td><td nowrap="nowrap">when&nbsp;iterating&nbsp;from&nbsp;one&nbsp;element&nbsp;to&nbsp;another&nbsp;(similar&nbsp;to&nbsp;hidden-state&nbsp;in&nbsp;RNNs,&nbsp;also&nbsp;referred</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to197__1">n</a></td><td class="diff_header" id="from197_7">7</td><td nowrap="nowrap">to&nbsp;as&nbsp;loop-carried&nbsp;dependences&nbsp;in&nbsp;the&nbsp;context&nbsp;of&nbsp;loops).<span class="diff_sub">&nbsp;All&nbsp;these&nbsp;tensors&nbsp;are&nbsp;required&nbsp;to</span></td><td class="diff_next"><a href="#difflib_chg_to197__1">n</a></td><td class="diff_header" id="to197_7">7</td><td nowrap="nowrap">to&nbsp;as&nbsp;loop-carried&nbsp;dependences&nbsp;in&nbsp;the&nbsp;context&nbsp;of&nbsp;loops).</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_8">8</td><td nowrap="nowrap"><span class="diff_sub">have&nbsp;the&nbsp;same&nbsp;shape&nbsp;in&nbsp;each&nbsp;iteration&nbsp;of&nbsp;the&nbsp;loop&nbsp;(a&nbsp;restriction&nbsp;imposed&nbsp;to&nbsp;enable&nbsp;efficient</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_9">9</td><td nowrap="nowrap"><span class="diff_sub">memory&nbsp;allocation).&nbsp;</span>Many&nbsp;common&nbsp;usages&nbsp;involve&nbsp;a&nbsp;single&nbsp;scan_input&nbsp;tensor&nbsp;(where&nbsp;functionality</td><td class="diff_next"></td><td class="diff_header" id="to197_8">8</td><td nowrap="nowrap">Many&nbsp;common&nbsp;usages&nbsp;involve&nbsp;a&nbsp;single&nbsp;scan_input&nbsp;tensor&nbsp;(where&nbsp;functionality</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_10">10</td><td nowrap="nowrap">similar&nbsp;to&nbsp;scan,&nbsp;fold&nbsp;and&nbsp;map&nbsp;can&nbsp;be&nbsp;obtained).&nbsp;When&nbsp;more&nbsp;than&nbsp;one&nbsp;scan_input&nbsp;is&nbsp;used,</td><td class="diff_next"></td><td class="diff_header" id="to197_9">9</td><td nowrap="nowrap">similar&nbsp;to&nbsp;scan,&nbsp;fold&nbsp;and&nbsp;map&nbsp;can&nbsp;be&nbsp;obtained).&nbsp;When&nbsp;more&nbsp;than&nbsp;one&nbsp;scan_input&nbsp;is&nbsp;used,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_11">11</td><td nowrap="nowrap">a&nbsp;behavior&nbsp;similar&nbsp;to&nbsp;zip&nbsp;is&nbsp;obtained.</td><td class="diff_next"></td><td class="diff_header" id="to197_10">10</td><td nowrap="nowrap">a&nbsp;behavior&nbsp;similar&nbsp;to&nbsp;zip&nbsp;is&nbsp;obtained.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_12">12</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_11">11</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_13">13</td><td nowrap="nowrap">The&nbsp;attribute&nbsp;body&nbsp;must&nbsp;be&nbsp;a&nbsp;graph,&nbsp;specifying&nbsp;the&nbsp;computation&nbsp;to&nbsp;be&nbsp;performed&nbsp;in</td><td class="diff_next"></td><td class="diff_header" id="to197_12">12</td><td nowrap="nowrap">The&nbsp;attribute&nbsp;body&nbsp;must&nbsp;be&nbsp;a&nbsp;graph,&nbsp;specifying&nbsp;the&nbsp;computation&nbsp;to&nbsp;be&nbsp;performed&nbsp;in</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to197__1"></td><td class="diff_header" id="from197_14">14</td><td nowrap="nowrap">every&nbsp;iteration.&nbsp;It&nbsp;takes&nbsp;as&nbsp;input&nbsp;the&nbsp;current&nbsp;values&nbsp;of&nbsp;the&nbsp;state_variables&nbsp;and</td><td class="diff_next"></td><td class="diff_header" id="to197_13">13</td><td nowrap="nowrap">every&nbsp;iteration.&nbsp;It&nbsp;takes&nbsp;as&nbsp;input&nbsp;the&nbsp;current&nbsp;values&nbsp;of&nbsp;the&nbsp;state_variables&nbsp;and</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_15">15</td><td nowrap="nowrap">the&nbsp;current&nbsp;iterated&nbsp;element&nbsp;of&nbsp;the&nbsp;scan_inputs.&nbsp;It&nbsp;must&nbsp;return&nbsp;the&nbsp;(updated)&nbsp;values</td><td class="diff_next"></td><td class="diff_header" id="to197_14">14</td><td nowrap="nowrap">the&nbsp;current&nbsp;iterated&nbsp;element&nbsp;of&nbsp;the&nbsp;scan_inputs.&nbsp;It&nbsp;must&nbsp;return&nbsp;the&nbsp;(updated)&nbsp;values</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_16">16</td><td nowrap="nowrap">of&nbsp;the&nbsp;state_variables&nbsp;and&nbsp;zero&nbsp;or&nbsp;more&nbsp;scan_output_element&nbsp;tensors.&nbsp;The&nbsp;values&nbsp;of&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to197_15">15</td><td nowrap="nowrap">of&nbsp;the&nbsp;state_variables&nbsp;and&nbsp;zero&nbsp;or&nbsp;more&nbsp;scan_output_element&nbsp;tensors.&nbsp;The&nbsp;values&nbsp;of&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_17">17</td><td nowrap="nowrap">scan_output_element&nbsp;tensors&nbsp;are&nbsp;concatenated&nbsp;over&nbsp;all&nbsp;the&nbsp;iterations&nbsp;to&nbsp;produce&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to197_16">16</td><td nowrap="nowrap">scan_output_element&nbsp;tensors&nbsp;are&nbsp;concatenated&nbsp;over&nbsp;all&nbsp;the&nbsp;iterations&nbsp;to&nbsp;produce&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_18">18</td><td nowrap="nowrap">scan_output&nbsp;values&nbsp;of&nbsp;the&nbsp;scan&nbsp;construct&nbsp;(similar&nbsp;to&nbsp;the&nbsp;concatenated&nbsp;intermediate</td><td class="diff_next"></td><td class="diff_header" id="to197_17">17</td><td nowrap="nowrap">scan_output&nbsp;values&nbsp;of&nbsp;the&nbsp;scan&nbsp;construct&nbsp;(similar&nbsp;to&nbsp;the&nbsp;concatenated&nbsp;intermediate</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to197__2">n</a></td><td class="diff_header" id="from197_19">19</td><td nowrap="nowrap"><span class="diff_sub">hidden-state&nbsp;values&nbsp;of&nbsp;RNN-like&nbsp;constructs).</span></td><td class="diff_next"><a href="#difflib_chg_to197__2">n</a></td><td class="diff_header" id="to197_18">18</td><td nowrap="nowrap"><span class="diff_add">hidden-state&nbsp;values&nbsp;of&nbsp;RNN-like&nbsp;constructs).&nbsp;All&nbsp;the&nbsp;output&nbsp;tensors&nbsp;(state_variables&nbsp;as</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_19">19</td><td nowrap="nowrap"><span class="diff_add">well&nbsp;as&nbsp;scan_output_element&nbsp;tensors)&nbsp;are&nbsp;required&nbsp;to&nbsp;have&nbsp;the&nbsp;same&nbsp;shape&nbsp;in&nbsp;each&nbsp;iteration</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_20">20</td><td nowrap="nowrap"><span class="diff_add">of&nbsp;the&nbsp;loop&nbsp;(a&nbsp;restriction&nbsp;imposed&nbsp;to&nbsp;enable&nbsp;efficient&nbsp;memory&nbsp;allocation).</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_21">21</td><td nowrap="nowrap"><span class="diff_add">&nbsp;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_22">22</td><td nowrap="nowrap"><span class="diff_add">Note&nbsp;that&nbsp;the&nbsp;iterated&nbsp;element&nbsp;passed&nbsp;to&nbsp;the&nbsp;body&nbsp;subgraph&nbsp;does&nbsp;not&nbsp;have&nbsp;a&nbsp;sequence</span></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to197__2"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_23">23</td><td nowrap="nowrap"><span class="diff_add">axis.&nbsp;It&nbsp;will&nbsp;have&nbsp;a&nbsp;rank&nbsp;one&nbsp;less&nbsp;than&nbsp;the&nbsp;rank&nbsp;of&nbsp;the&nbsp;corresponding&nbsp;scan_input.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_20">20</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_24">24</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_21">21</td><td nowrap="nowrap">The&nbsp;scan&nbsp;operation&nbsp;returns&nbsp;the&nbsp;final&nbsp;values&nbsp;of&nbsp;the&nbsp;state_variables&nbsp;as&nbsp;well&nbsp;as&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to197_25">25</td><td nowrap="nowrap">The&nbsp;scan&nbsp;operation&nbsp;returns&nbsp;the&nbsp;final&nbsp;values&nbsp;of&nbsp;the&nbsp;state_variables&nbsp;as&nbsp;well&nbsp;as&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_22">22</td><td nowrap="nowrap">scan_outputs.</td><td class="diff_next"></td><td class="diff_header" id="to197_26">26</td><td nowrap="nowrap">scan_outputs.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_23">23</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_27">27</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to197__3"><a href="#difflib_chg_to197__3">n</a></td><td class="diff_header" id="from197_24">24</td><td nowrap="nowrap"><span class="diff_sub">The&nbsp;operation&nbsp;supports&nbsp;batching,&nbsp;and&nbsp;the&nbsp;batch-axis&nbsp;is&nbsp;required&nbsp;to&nbsp;be&nbsp;0.</span></td><td class="diff_next"><a href="#difflib_chg_to197__3">n</a></td><td class="diff_header" id="to197_28">28</td><td nowrap="nowrap"><span class="diff_add">The&nbsp;optional&nbsp;attribute&nbsp;scan_input_directions&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;(forward&nbsp;or&nbsp;backward)</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_25">25</td><td nowrap="nowrap"><span class="diff_sub">When&nbsp;multiple&nbsp;scan_input&nbsp;tensors&nbsp;are&nbsp;used,&nbsp;they&nbsp;must&nbsp;all&nbsp;have&nbsp;the&nbsp;same&nbsp;batch-size,</span></td><td class="diff_next"></td><td class="diff_header" id="to197_29">29</td><td nowrap="nowrap"><span class="diff_add">for&nbsp;each&nbsp;scan&nbsp;input.&nbsp;If&nbsp;this&nbsp;attribute&nbsp;is&nbsp;omitted,&nbsp;all&nbsp;sequences&nbsp;are&nbsp;scanned&nbsp;in&nbsp;the&nbsp;forward</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_26">26</td><td nowrap="nowrap"><span class="diff_sub">and&nbsp;they&nbsp;must&nbsp;all&nbsp;have&nbsp;the&nbsp;same&nbsp;maximum-sequence-length&nbsp;(the&nbsp;dimensionality&nbsp;of&nbsp;the</span></td><td class="diff_next"></td><td class="diff_header" id="to197_30">30</td><td nowrap="nowrap"><span class="diff_add">direction.&nbsp;A&nbsp;bidirectional&nbsp;scan&nbsp;may&nbsp;be&nbsp;performed&nbsp;by&nbsp;specifying&nbsp;the&nbsp;same&nbsp;tensor&nbsp;input&nbsp;twice</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_27">27</td><td nowrap="nowrap"><span class="diff_sub">sequence&nbsp;axis&nbsp;or&nbsp;scan&nbsp;axis).&nbsp;The&nbsp;sequence&nbsp;axis&nbsp;or&nbsp;scan&nbsp;axis&nbsp;is&nbsp;required&nbsp;to&nbsp;be&nbsp;1.</span></td><td class="diff_next"></td><td class="diff_header" id="to197_31">31</td><td nowrap="nowrap"><span class="diff_add">in&nbsp;the&nbsp;scan_inputs,&nbsp;once&nbsp;with&nbsp;a&nbsp;forward&nbsp;direction,&nbsp;and&nbsp;once&nbsp;with&nbsp;a&nbsp;backward&nbsp;direction.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_28">28</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_32">32</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to197__4">n</a></td><td class="diff_header" id="from197_29">29</td><td nowrap="nowrap"><span class="diff_sub">The&nbsp;operation&nbsp;has&nbsp;an&nbsp;optional&nbsp;sequence_lens&nbsp;input&nbsp;(of&nbsp;shape&nbsp;[BATCH_SIZE])&nbsp;to</span></td><td class="diff_next"><a href="#difflib_chg_to197__4">n</a></td><td class="diff_header" id="to197_33">33</td><td nowrap="nowrap"><span class="diff_add">The&nbsp;scan_output&nbsp;of&nbsp;the&nbsp;operation&nbsp;is&nbsp;produced&nbsp;by&nbsp;concatenating&nbsp;the&nbsp;scan_output_element</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_30">30</td><td nowrap="nowrap"><span class="diff_sub">allow&nbsp;variable&nbsp;length&nbsp;sequences&nbsp;of&nbsp;length&nbsp;&lt;=&nbsp;the&nbsp;maximum-sequence-length.&nbsp;If&nbsp;this</span></td><td class="diff_next"></td><td class="diff_header" id="to197_34">34</td><td nowrap="nowrap"><span class="diff_add">values&nbsp;produced&nbsp;by&nbsp;the&nbsp;body&nbsp;in&nbsp;each&nbsp;iteration.&nbsp;&nbsp;The&nbsp;optional&nbsp;attribute&nbsp;scan_output_directions</span></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to197__4"></td><td class="diff_header" id="from197_31">31</td><td nowrap="nowrap"><span class="diff_sub">input&nbsp;is&nbsp;not&nbsp;specified,&nbsp;all&nbsp;sequences&nbsp;are&nbsp;assumed&nbsp;to&nbsp;be&nbsp;of&nbsp;length&nbsp;equal&nbsp;to</span></td><td class="diff_next"></td><td class="diff_header" id="to197_35">35</td><td nowrap="nowrap"><span class="diff_add">specifies&nbsp;the&nbsp;direction&nbsp;in&nbsp;which&nbsp;scan_output&nbsp;is&nbsp;constructed&nbsp;(by&nbsp;appending&nbsp;or&nbsp;prepending&nbsp;the</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_32">32</td><td nowrap="nowrap"><span class="diff_sub">maximum-sequence-length.&nbsp;For&nbsp;variable&nbsp;length&nbsp;input&nbsp;sequences,&nbsp;the&nbsp;scan_outputs</span></td><td class="diff_next"></td><td class="diff_header" id="to197_36">36</td><td nowrap="nowrap"><span class="diff_add">scan_output_element&nbsp;to&nbsp;scan_output&nbsp;in&nbsp;each&nbsp;iteration)&nbsp;for&nbsp;each&nbsp;scan_output.&nbsp;If&nbsp;this&nbsp;attribute</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_33">33</td><td nowrap="nowrap"><span class="diff_sub">will&nbsp;consist&nbsp;of&nbsp;a&nbsp;sequence&nbsp;of&nbsp;same&nbsp;length&nbsp;as&nbsp;the&nbsp;input,&nbsp;padded&nbsp;to&nbsp;the</span></td><td class="diff_next"></td><td class="diff_header" id="to197_37">37</td><td nowrap="nowrap"><span class="diff_add">is&nbsp;omitted,&nbsp;the&nbsp;scan_output_element&nbsp;is&nbsp;appended&nbsp;to&nbsp;the&nbsp;scan_output&nbsp;in&nbsp;each&nbsp;iteration.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_34">34</td><td nowrap="nowrap"><span class="diff_sub">maximum-sequence-length.</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_35">35</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_38">38</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to197__5">n</a></td><td class="diff_header" id="from197_36">36</td><td nowrap="nowrap"><span class="diff_sub">The&nbsp;optional&nbsp;attribute&nbsp;directions&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;scan&nbsp;a&nbsp;sequence&nbsp;in&nbsp;the&nbsp;reverse&nbsp;direction.</span></td><td class="diff_next"><a href="#difflib_chg_to197__5">n</a></td><td class="diff_header" id="to197_39">39</td><td nowrap="nowrap"><span class="diff_add">The&nbsp;optional&nbsp;attribute&nbsp;scan_input_axes&nbsp;specifies&nbsp;the&nbsp;axis&nbsp;to&nbsp;be&nbsp;scanned&nbsp;for&nbsp;each&nbsp;scan_input.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_37">37</td><td nowrap="nowrap"><span class="diff_sub">If&nbsp;this&nbsp;attribute&nbsp;is&nbsp;omitted,&nbsp;all&nbsp;sequences&nbsp;are&nbsp;scanned&nbsp;in&nbsp;the&nbsp;forward&nbsp;direction.</span></td><td class="diff_next"></td><td class="diff_header" id="to197_40">40</td><td nowrap="nowrap"><span class="diff_add">If&nbsp;omitted,&nbsp;every&nbsp;scan_input&nbsp;will&nbsp;be&nbsp;scanned&nbsp;in&nbsp;axis&nbsp;0.&nbsp;For&nbsp;example,&nbsp;if&nbsp;axis&nbsp;0&nbsp;is&nbsp;the</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_38">38</td><td nowrap="nowrap"><span class="diff_sub">A&nbsp;bidirectional&nbsp;scan&nbsp;be&nbsp;performed&nbsp;by&nbsp;specifying&nbsp;the&nbsp;same&nbsp;tensor&nbsp;input&nbsp;twice&nbsp;in&nbsp;the</span></td><td class="diff_next"></td><td class="diff_header" id="to197_41">41</td><td nowrap="nowrap"><span class="diff_add">batch&nbsp;axis&nbsp;and&nbsp;axis&nbsp;1&nbsp;is&nbsp;the&nbsp;time&nbsp;axis&nbsp;(to&nbsp;be&nbsp;scanned),&nbsp;specify&nbsp;an&nbsp;axis&nbsp;value&nbsp;of&nbsp;1.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_39">39</td><td nowrap="nowrap"><span class="diff_sub">scan_inputs,&nbsp;once&nbsp;with&nbsp;a&nbsp;forward&nbsp;direction,&nbsp;and&nbsp;once&nbsp;with&nbsp;a&nbsp;backward&nbsp;direction.</span></td><td class="diff_next"></td><td class="diff_header" id="to197_42">42</td><td nowrap="nowrap"><span class="diff_add">Note&nbsp;that&nbsp;scanning&nbsp;a&nbsp;non-zero&nbsp;axis&nbsp;may&nbsp;be&nbsp;less&nbsp;efficient&nbsp;than&nbsp;scanning&nbsp;axis&nbsp;zero.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_43">43</td><td nowrap="nowrap"><span class="diff_add">&nbsp;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_44">44</td><td nowrap="nowrap"><span class="diff_add">The&nbsp;optional&nbsp;attribute&nbsp;scan_output_axes&nbsp;specifies&nbsp;the&nbsp;axis&nbsp;along&nbsp;which&nbsp;the&nbsp;scan_outputs</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_45">45</td><td nowrap="nowrap"><span class="diff_add">are&nbsp;accumulated&nbsp;for&nbsp;each&nbsp;scan_output.&nbsp;For&nbsp;example,&nbsp;if&nbsp;axis&nbsp;1&nbsp;is&nbsp;the&nbsp;time&nbsp;axis&nbsp;(to&nbsp;be</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_46">46</td><td nowrap="nowrap"><span class="diff_add">scanned)&nbsp;for&nbsp;both&nbsp;inputs&nbsp;and&nbsp;outputs,&nbsp;specify&nbsp;a&nbsp;scan_input&nbsp;axis&nbsp;and&nbsp;scan_output&nbsp;axis</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_47">47</td><td nowrap="nowrap"><span class="diff_add">value&nbsp;of&nbsp;1.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_40">40</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_48">48</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_41">41</td><td nowrap="nowrap">Note&nbsp;that&nbsp;because&nbsp;of&nbsp;the&nbsp;ONNX&nbsp;restriction&nbsp;that&nbsp;only&nbsp;the&nbsp;last&nbsp;parameter&nbsp;of&nbsp;an&nbsp;operator&nbsp;can</td><td class="diff_next"></td><td class="diff_header" id="to197_49">49</td><td nowrap="nowrap">Note&nbsp;that&nbsp;because&nbsp;of&nbsp;the&nbsp;ONNX&nbsp;restriction&nbsp;that&nbsp;only&nbsp;the&nbsp;last&nbsp;parameter&nbsp;of&nbsp;an&nbsp;operator&nbsp;can</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_42">42</td><td nowrap="nowrap">be&nbsp;variadic,&nbsp;the&nbsp;initial-states&nbsp;and&nbsp;scan-inputs&nbsp;are&nbsp;listed&nbsp;together&nbsp;as&nbsp;one&nbsp;input&nbsp;parameter.</td><td class="diff_next"></td><td class="diff_header" id="to197_50">50</td><td nowrap="nowrap">be&nbsp;variadic,&nbsp;the&nbsp;initial-states&nbsp;and&nbsp;scan-inputs&nbsp;are&nbsp;listed&nbsp;together&nbsp;as&nbsp;one&nbsp;input&nbsp;parameter.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_43">43</td><td nowrap="nowrap">Similarly,&nbsp;the&nbsp;final-states&nbsp;and&nbsp;scan-outputs&nbsp;are&nbsp;listed&nbsp;together&nbsp;as&nbsp;one&nbsp;output&nbsp;parameter.</td><td class="diff_next"></td><td class="diff_header" id="to197_51">51</td><td nowrap="nowrap">Similarly,&nbsp;the&nbsp;final-states&nbsp;and&nbsp;scan-outputs&nbsp;are&nbsp;listed&nbsp;together&nbsp;as&nbsp;one&nbsp;output&nbsp;parameter.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_44">44</td><td nowrap="nowrap">The&nbsp;attribute&nbsp;num_scan_inputs&nbsp;indicates&nbsp;the&nbsp;number&nbsp;M&nbsp;of&nbsp;scan-inputs.</td><td class="diff_next"></td><td class="diff_header" id="to197_52">52</td><td nowrap="nowrap">The&nbsp;attribute&nbsp;num_scan_inputs&nbsp;indicates&nbsp;the&nbsp;number&nbsp;M&nbsp;of&nbsp;scan-inputs.</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to197__5"></td><td class="diff_header" id="from197_45">45</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_53">53</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_46">46</td><td nowrap="nowrap">The&nbsp;behavior&nbsp;of</td><td class="diff_next"></td><td class="diff_header" id="to197_54">54</td><td nowrap="nowrap">The&nbsp;behavior&nbsp;of</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_47">47</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_55">55</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_48">48</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;Scan&nbsp;&lt;</td><td class="diff_next"></td><td class="diff_header" id="to197_56">56</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;Scan&nbsp;&lt;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_49">49</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num_scan_inputs&nbsp;=&nbsp;m,</td><td class="diff_next"></td><td class="diff_header" id="to197_57">57</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num_scan_inputs&nbsp;=&nbsp;m,</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to197__6">n</a></td><td class="diff_header" id="from197_50">50</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;body&nbsp;=&nbsp;loop-body</td><td class="diff_next"><a href="#difflib_chg_to197__6">n</a></td><td class="diff_header" id="to197_58">58</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;body&nbsp;=&nbsp;loop-body<span class="diff_add">,</span></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to197__6"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_59">59</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scan_input_axes&nbsp;=&nbsp;[axis_1,&nbsp;...,&nbsp;axis_m]</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_51">51</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;(<span class="diff_sub">sequence_lengths,&nbsp;</span>init_1,&nbsp;...,&nbsp;init_n,&nbsp;scan_1,&nbsp;...,&nbsp;scan_m)</td><td class="diff_next"></td><td class="diff_header" id="to197_60">60</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;(init_1,&nbsp;...,&nbsp;init_n,&nbsp;scan_1,&nbsp;...,&nbsp;scan_m)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_52">52</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_61">61</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_53">53</td><td nowrap="nowrap">is&nbsp;equivalent&nbsp;to&nbsp;the&nbsp;following&nbsp;pseudo-code:</td><td class="diff_next"></td><td class="diff_header" id="to197_62">62</td><td nowrap="nowrap">is&nbsp;equivalent&nbsp;to&nbsp;the&nbsp;following&nbsp;pseudo-code:</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to197__7"></td><td class="diff_header" id="from197_54">54</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_63">63</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to197__7">n</a></td><td class="diff_header" id="from197_55">55</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;T.shape[0]&nbsp;denotes&nbsp;the&nbsp;batch-size&nbsp;of&nbsp;T</span></td><td class="diff_next"><a href="#difflib_chg_to197__7">n</a></td><td class="diff_header" id="to197_64">64</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;scan_i.shape[axis_i]&nbsp;denotes&nbsp;the&nbsp;(max)&nbsp;sequence-length&nbsp;of&nbsp;scan_i</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_56">56</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;The&nbsp;batch-size&nbsp;of&nbsp;scan_1,&nbsp;...,&nbsp;scan_m&nbsp;are&nbsp;all&nbsp;required&nbsp;to&nbsp;be&nbsp;equal</span></td><td class="diff_next"></td><td class="diff_header" id="to197_65">65</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;scan_i.shape[axis_i]&nbsp;is&nbsp;required&nbsp;to&nbsp;be&nbsp;equal&nbsp;to&nbsp;scan_j.shape[axis_j]&nbsp;for&nbsp;all&nbsp;i,j.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_57">57</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;batch_size&nbsp;=&nbsp;scan_1.shape[0];</span></td><td class="diff_next"></td><td class="diff_header" id="to197_66">66</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;sequence_length&nbsp;=&nbsp;scan_1.shape[axis_1];</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_58">58</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_67">67</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to197__8">n</a></td><td class="diff_header" id="from197_59">59</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;scan_i.shape[1]&nbsp;denotes&nbsp;the&nbsp;(max)&nbsp;sequence-length&nbsp;of&nbsp;scan_i</span></td><td class="diff_next"><a href="#difflib_chg_to197__8">n</a></td><td class="diff_header" id="to197_68">68</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;initialize&nbsp;state-variables</span></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to197__8"></td><td class="diff_header" id="from197_60">60</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;scan_i.shape[1]&nbsp;is&nbsp;required&nbsp;to&nbsp;be&nbsp;equal&nbsp;to&nbsp;scan_j.shape[1]&nbsp;for&nbsp;all&nbsp;i,j.</span></td><td class="diff_next"></td><td class="diff_header" id="to197_69">69</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;st_1&nbsp;=&nbsp;init_1;&nbsp;...&nbsp;st_n&nbsp;=&nbsp;init_n;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_61">61</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;max_sequence_length&nbsp;=&nbsp;scan_1.shape[1];</span></td><td class="diff_next"></td><td class="diff_header" id="to197_70">70</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;initialize&nbsp;scan-output&nbsp;variables:&nbsp;[]&nbsp;denotes&nbsp;an&nbsp;empty&nbsp;tensor</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_71">71</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;scan_out_1&nbsp;=&nbsp;[];&nbsp;...;&nbsp;scan_out_k&nbsp;=&nbsp;[];</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_72">72</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;identify&nbsp;number&nbsp;of&nbsp;iterations:</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_62">62</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_73">73</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to197__9">n</a></td><td class="diff_header" id="from197_63">63</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;batch&nbsp;=&nbsp;0;&nbsp;batch&nbsp;&lt;&nbsp;batch_size;&nbsp;++batch)&nbsp;{</span></td><td class="diff_next"><a href="#difflib_chg_to197__9">n</a></td><td class="diff_header" id="to197_74">74</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;execute&nbsp;loop</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_64">64</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;initialize&nbsp;state-variables</span></td><td class="diff_next"></td><td class="diff_header" id="to197_75">75</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;t&nbsp;=&nbsp;0;&nbsp;t&nbsp;&lt;&nbsp;sequence_length;&nbsp;++t)&nbsp;{</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_65">65</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;st_1&nbsp;=&nbsp;init_1;&nbsp;...&nbsp;st_n&nbsp;=&nbsp;init_n;</span></td><td class="diff_next"></td><td class="diff_header" id="to197_76">76</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;generate&nbsp;the&nbsp;scan-input&nbsp;elements:&nbsp;the&nbsp;notation&nbsp;T&lt;axis=k&gt;[t]&nbsp;indicates&nbsp;the&nbsp;sub-tensor</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_66">66</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;initialize&nbsp;scan-output&nbsp;variables:&nbsp;[]&nbsp;denotes&nbsp;an&nbsp;empty&nbsp;tensor</span></td><td class="diff_next"></td><td class="diff_header" id="to197_77">77</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;of&nbsp;rank&nbsp;one&nbsp;less&nbsp;than&nbsp;T&nbsp;obtained&nbsp;by&nbsp;indexing&nbsp;T&nbsp;at&nbsp;position&nbsp;t&nbsp;along&nbsp;axis&nbsp;k.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_67">67</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scan_out_1&nbsp;=&nbsp;[];&nbsp;...;&nbsp;scan_out_k&nbsp;=&nbsp;[];</span></td><td class="diff_next"></td><td class="diff_header" id="to197_78">78</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;si_1&nbsp;=&nbsp;scan_1&lt;axis=axis_1&gt;[t];</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_68">68</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;identify&nbsp;number&nbsp;of&nbsp;iterations:</span></td><td class="diff_next"></td><td class="diff_header" id="to197_79">79</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...&nbsp;;</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_69">69</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;N&nbsp;=&nbsp;(sequence_lengths&nbsp;specified)&nbsp;?&nbsp;sequence_lengths[batch]&nbsp;:&nbsp;max_sequence_length;</span></td><td class="diff_next"></td><td class="diff_header" id="to197_80">80</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;si_m&nbsp;=&nbsp;scan_m&lt;axis=axis_m&gt;[t];</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_81">81</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;execute&nbsp;loop-body</span></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to197__9"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_82">82</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;st_1,&nbsp;...,&nbsp;st_n,&nbsp;so_1,&nbsp;...,&nbsp;so_k&nbsp;=&nbsp;loop-body(st_1,&nbsp;...,&nbsp;st_n,&nbsp;si_1,&nbsp;...,&nbsp;si_m)</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_83">83</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;accumulate&nbsp;the&nbsp;scan-output&nbsp;elements</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_84">84</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scan_out_1&nbsp;=&nbsp;Concat&lt;axis=0&gt;(scan_out_1,&nbsp;so_1);&nbsp;...&nbsp;;&nbsp;scan_out_k&nbsp;=&nbsp;Concat&lt;axis=0&gt;(scan_out_k,&nbsp;so_k);</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_85">85</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;&nbsp;&nbsp;}</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_70">70</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_86">86</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to197__10">n</a></td><td class="diff_header" id="from197_71">71</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;execute&nbsp;loop</span></td><td class="diff_next"><a href="#difflib_chg_to197__10">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_72">72</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;t&nbsp;=&nbsp;0;&nbsp;t&nbsp;&lt;&nbsp;N;&nbsp;++t)&nbsp;{</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_73">73</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;generate&nbsp;the&nbsp;scan-input&nbsp;elements:&nbsp;the&nbsp;notation&nbsp;T&lt;axis=k&gt;[t]&nbsp;indicates&nbsp;the&nbsp;sub-tensor</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_74">74</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;of&nbsp;rank&nbsp;one&nbsp;less&nbsp;than&nbsp;T&nbsp;obtained&nbsp;by&nbsp;indexing&nbsp;T&nbsp;at&nbsp;position&nbsp;t&nbsp;along&nbsp;axis&nbsp;k.</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_75">75</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;si_1&nbsp;=&nbsp;(scan_1&lt;axis=0&gt;[batch])&lt;axis=1&gt;[t];</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_76">76</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...&nbsp;;</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_77">77</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;si_m&nbsp;=&nbsp;(scan_m&lt;axis=0&gt;[batch])&lt;axis=1&gt;[t];</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_78">78</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;execute&nbsp;loop-body</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_79">79</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;st_1,&nbsp;...,&nbsp;st_n,&nbsp;so_1,&nbsp;...,&nbsp;so_k&nbsp;=&nbsp;loop-body(st_1,&nbsp;...,&nbsp;st_n,&nbsp;si_1,&nbsp;...,&nbsp;si_m)</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_80">80</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;accumulate&nbsp;the&nbsp;scan-output&nbsp;elements</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_81">81</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scan_out_1&nbsp;=&nbsp;Concat&lt;axis=0&gt;(scan_out_1,&nbsp;so_1);&nbsp;...&nbsp;;&nbsp;scan_out_k&nbsp;=&nbsp;Concat&lt;axis=0&gt;(scan_out_k,&nbsp;so_k);</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_82">82</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_83">83</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;accumulate&nbsp;the&nbsp;outputs&nbsp;for&nbsp;this&nbsp;batch:</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_84">84</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bst_1[batch]&nbsp;=&nbsp;st_1;&nbsp;...,&nbsp;bst_n[batch]&nbsp;=&nbsp;st_n;</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_85">85</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Note&nbsp;scan-outputs&nbsp;will&nbsp;have&nbsp;size&nbsp;max_sequence_length,&nbsp;but&nbsp;only&nbsp;first&nbsp;N&nbsp;values&nbsp;will&nbsp;be&nbsp;meaningful.</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_86">86</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;The&nbsp;remaining&nbsp;values&nbsp;have&nbsp;an&nbsp;undefined&nbsp;value.</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_87">87</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b_scan_out_1[batch]&nbsp;=&nbsp;scan_out_1;&nbsp;...;&nbsp;b_scan_out_k[batch]&nbsp;=&nbsp;scan_out_k;</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_88">88</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;&nbsp;&nbsp;}</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_89">89</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;<span class="diff_sub">b</span>st_1,&nbsp;...,&nbsp;<span class="diff_sub">b</span>st_n,&nbsp;<span class="diff_sub">b_</span>scan_out_1,&nbsp;...,&nbsp;<span class="diff_sub">b_</span>scan_out_k;</td><td class="diff_next"></td><td class="diff_header" id="to197_87">87</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;st_1,&nbsp;...,&nbsp;st_n,&nbsp;scan_out_1,&nbsp;...,&nbsp;scan_out_k;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_90">90</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_88">88</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_91">91</td><td nowrap="nowrap">*Sample&nbsp;usage:&nbsp;Encoding&nbsp;RNN&nbsp;using&nbsp;a&nbsp;Scan*</td><td class="diff_next"></td><td class="diff_header" id="to197_89">89</td><td nowrap="nowrap">*Sample&nbsp;usage:&nbsp;Encoding&nbsp;RNN&nbsp;using&nbsp;a&nbsp;Scan*</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_92">92</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_90">90</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_93">93</td><td nowrap="nowrap">The&nbsp;following&nbsp;example&nbsp;shows&nbsp;how&nbsp;a&nbsp;simple&nbsp;RNN&nbsp;over&nbsp;an&nbsp;input&nbsp;tensor&nbsp;%X,&nbsp;with&nbsp;weight&nbsp;tensor&nbsp;%Wi,</td><td class="diff_next"></td><td class="diff_header" id="to197_91">91</td><td nowrap="nowrap">The&nbsp;following&nbsp;example&nbsp;shows&nbsp;how&nbsp;a&nbsp;simple&nbsp;RNN&nbsp;over&nbsp;an&nbsp;input&nbsp;tensor&nbsp;%X,&nbsp;with&nbsp;weight&nbsp;tensor&nbsp;%Wi,</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_94">94</td><td nowrap="nowrap">recurrence&nbsp;weight&nbsp;tensor&nbsp;%Ri,&nbsp;bias&nbsp;tensors&nbsp;%Wbi&nbsp;and&nbsp;%Rbi,&nbsp;and&nbsp;initial&nbsp;hidden-state&nbsp;%H_0&nbsp;can</td><td class="diff_next"></td><td class="diff_header" id="to197_92">92</td><td nowrap="nowrap">recurrence&nbsp;weight&nbsp;tensor&nbsp;%Ri,&nbsp;bias&nbsp;tensors&nbsp;%Wbi&nbsp;and&nbsp;%Rbi,&nbsp;and&nbsp;initial&nbsp;hidden-state&nbsp;%H_0&nbsp;can</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_95">95</td><td nowrap="nowrap">be&nbsp;encoded&nbsp;as&nbsp;a&nbsp;ScanLoop.&nbsp;Note&nbsp;that&nbsp;the&nbsp;loop-body&nbsp;is&nbsp;a&nbsp;nested&nbsp;graph,&nbsp;and&nbsp;it&nbsp;directly&nbsp;computes</td><td class="diff_next"></td><td class="diff_header" id="to197_93">93</td><td nowrap="nowrap">be&nbsp;encoded&nbsp;as&nbsp;a&nbsp;ScanLoop.&nbsp;Note&nbsp;that&nbsp;the&nbsp;loop-body&nbsp;is&nbsp;a&nbsp;nested&nbsp;graph,&nbsp;and&nbsp;it&nbsp;directly&nbsp;computes</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_96">96</td><td nowrap="nowrap">%Wi,&nbsp;%Ri,&nbsp;%Wbi,&nbsp;and&nbsp;%Rbi&nbsp;(typically&nbsp;constants&nbsp;or&nbsp;initializers&nbsp;in&nbsp;the&nbsp;body&nbsp;graph).&nbsp;If&nbsp;these</td><td class="diff_next"></td><td class="diff_header" id="to197_94">94</td><td nowrap="nowrap">%Wi,&nbsp;%Ri,&nbsp;%Wbi,&nbsp;and&nbsp;%Rbi&nbsp;(typically&nbsp;constants&nbsp;or&nbsp;initializers&nbsp;in&nbsp;the&nbsp;body&nbsp;graph).&nbsp;If&nbsp;these</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to197__10"></td><td class="diff_header" id="from197_97">97</td><td nowrap="nowrap">values&nbsp;are&nbsp;computed&nbsp;in&nbsp;the&nbsp;outer&nbsp;graph,&nbsp;they&nbsp;need&nbsp;to&nbsp;be&nbsp;passed&nbsp;in&nbsp;as&nbsp;extra&nbsp;state_variables.</td><td class="diff_next"></td><td class="diff_header" id="to197_95">95</td><td nowrap="nowrap">values&nbsp;are&nbsp;computed&nbsp;in&nbsp;the&nbsp;outer&nbsp;graph,&nbsp;they&nbsp;need&nbsp;to&nbsp;be&nbsp;passed&nbsp;in&nbsp;as&nbsp;extra&nbsp;state_variables.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_98">98</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_96">96</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_99">99</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;rnn-encoding&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to197_97">97</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;rnn-encoding&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_100">100</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%H_0&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to197_98">98</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%H_0&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_101">101</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%X&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to197_99">99</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%X&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to197__11">n</a></td><td class="diff_header" id="from197_102">102</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Y_h,&nbsp;%Y&nbsp;=&nbsp;Scan[body&nbsp;=&nbsp;&lt;graph&nbsp;rnn-cell-1&gt;,&nbsp;num_scan_inputs=1](<span class="diff_sub">"",&nbsp;</span>%H_0,&nbsp;%X)</td><td class="diff_next"><a href="#difflib_chg_to197__11">n</a></td><td class="diff_header" id="to197_100">100</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Y_h,&nbsp;%Y&nbsp;=&nbsp;Scan[body&nbsp;=&nbsp;&lt;graph&nbsp;rnn-cell-1&gt;,&nbsp;num_scan_inputs=1](%H_0,&nbsp;%X)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_103">103</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;%Y,&nbsp;%Y_h</td><td class="diff_next"></td><td class="diff_header" id="to197_101">101</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;%Y,&nbsp;%Y_h</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_104">104</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to197_102">102</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_105">105</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_103">103</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_106">106</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;rnn-cell-1&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to197_104">104</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;graph&nbsp;rnn-cell-1&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_107">107</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%H_tminus1[FLOAT,&nbsp;tensor]</td><td class="diff_next"></td><td class="diff_header" id="to197_105">105</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%H_tminus1[FLOAT,&nbsp;tensor]</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_108">108</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%X_t[FLOAT,&nbsp;tensor]</td><td class="diff_next"></td><td class="diff_header" id="to197_106">106</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%X_t[FLOAT,&nbsp;tensor]</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_109">109</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;{</td><td class="diff_next"></td><td class="diff_header" id="to197_107">107</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;{</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_110">110</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Wi&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to197_108">108</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Wi&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_111">111</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Ri&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to197_109">109</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Ri&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_112">112</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Wbi&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to197_110">110</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Wbi&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_113">113</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Rbi&nbsp;=&nbsp;...</td><td class="diff_next"></td><td class="diff_header" id="to197_111">111</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Rbi&nbsp;=&nbsp;...</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_114">114</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t1&nbsp;=&nbsp;X_t&nbsp;*&nbsp;(Wi^T)</td><td class="diff_next"></td><td class="diff_header" id="to197_112">112</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t1&nbsp;=&nbsp;X_t&nbsp;*&nbsp;(Wi^T)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_115">115</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t2&nbsp;=&nbsp;H_tminus1*(Ri^T)</td><td class="diff_next"></td><td class="diff_header" id="to197_113">113</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t2&nbsp;=&nbsp;H_tminus1*(Ri^T)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_116">116</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t3&nbsp;=&nbsp;Add(%t1,&nbsp;%t2)</td><td class="diff_next"></td><td class="diff_header" id="to197_114">114</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t3&nbsp;=&nbsp;Add(%t1,&nbsp;%t2)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_117">117</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t4&nbsp;=&nbsp;Add(%t3,&nbsp;%Wbi)</td><td class="diff_next"></td><td class="diff_header" id="to197_115">115</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t4&nbsp;=&nbsp;Add(%t3,&nbsp;%Wbi)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_118">118</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t5&nbsp;=&nbsp;Add(%t4,&nbsp;%Rbi)</td><td class="diff_next"></td><td class="diff_header" id="to197_116">116</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%t5&nbsp;=&nbsp;Add(%t4,&nbsp;%Rbi)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_119">119</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Ht&nbsp;=&nbsp;Tanh(%t5)</td><td class="diff_next"></td><td class="diff_header" id="to197_117">117</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Ht&nbsp;=&nbsp;Tanh(%t5)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_120">120</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Accumulate&nbsp;=&nbsp;Identity(%Ht)</td><td class="diff_next"></td><td class="diff_header" id="to197_118">118</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Accumulate&nbsp;=&nbsp;Identity(%Ht)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_121">121</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;%Ht,&nbsp;%Accumulate</td><td class="diff_next"></td><td class="diff_header" id="to197_119">119</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;%Ht,&nbsp;%Accumulate</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_122">122</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="diff_next"></td><td class="diff_header" id="to197_120">120</td><td nowrap="nowrap">&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_123">123</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_121">121</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_124">124</td><td nowrap="nowrap">**Attributes**</td><td class="diff_next"></td><td class="diff_header" id="to197_122">122</td><td nowrap="nowrap">**Attributes**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_125">125</td><td nowrap="nowrap">*&nbsp;**body**&nbsp;(required):</td><td class="diff_next"></td><td class="diff_header" id="to197_123">123</td><td nowrap="nowrap">*&nbsp;**body**&nbsp;(required):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_126">126</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;graph&nbsp;run&nbsp;each&nbsp;iteration.&nbsp;It&nbsp;has&nbsp;N+M&nbsp;inputs:&nbsp;(loop&nbsp;state</td><td class="diff_next"></td><td class="diff_header" id="to197_124">124</td><td nowrap="nowrap">&nbsp;&nbsp;The&nbsp;graph&nbsp;run&nbsp;each&nbsp;iteration.&nbsp;It&nbsp;has&nbsp;N+M&nbsp;inputs:&nbsp;(loop&nbsp;state</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to197__11"></td><td class="diff_header" id="from197_127">127</td><td nowrap="nowrap">&nbsp;&nbsp;variables...,&nbsp;scan_input_elts...).&nbsp;It&nbsp;has&nbsp;N+K&nbsp;outputs:&nbsp;(loop&nbsp;state</td><td class="diff_next"></td><td class="diff_header" id="to197_125">125</td><td nowrap="nowrap">&nbsp;&nbsp;variables...,&nbsp;scan_input_elts...).&nbsp;It&nbsp;has&nbsp;N+K&nbsp;outputs:&nbsp;(loop&nbsp;state</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_128">128</td><td nowrap="nowrap">&nbsp;&nbsp;variables...,&nbsp;scan_output_elts...).&nbsp;Each&nbsp;scan_output&nbsp;is&nbsp;created&nbsp;by</td><td class="diff_next"></td><td class="diff_header" id="to197_126">126</td><td nowrap="nowrap">&nbsp;&nbsp;variables...,&nbsp;scan_output_elts...).&nbsp;Each&nbsp;scan_output&nbsp;is&nbsp;created&nbsp;by</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_129">129</td><td nowrap="nowrap">&nbsp;&nbsp;concatenating&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;specified&nbsp;scan_output_elt&nbsp;value&nbsp;at</td><td class="diff_next"></td><td class="diff_header" id="to197_127">127</td><td nowrap="nowrap">&nbsp;&nbsp;concatenating&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;specified&nbsp;scan_output_elt&nbsp;value&nbsp;at</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_130">130</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;end&nbsp;of&nbsp;each&nbsp;iteration&nbsp;of&nbsp;the&nbsp;loop.&nbsp;It&nbsp;is&nbsp;an&nbsp;error&nbsp;if&nbsp;the</td><td class="diff_next"></td><td class="diff_header" id="to197_128">128</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;end&nbsp;of&nbsp;each&nbsp;iteration&nbsp;of&nbsp;the&nbsp;loop.&nbsp;It&nbsp;is&nbsp;an&nbsp;error&nbsp;if&nbsp;the</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_131">131</td><td nowrap="nowrap">&nbsp;&nbsp;dimensions&nbsp;of&nbsp;these&nbsp;values&nbsp;change&nbsp;across&nbsp;loop&nbsp;iterations.</td><td class="diff_next"></td><td class="diff_header" id="to197_129">129</td><td nowrap="nowrap">&nbsp;&nbsp;dimensions&nbsp;of&nbsp;these&nbsp;values&nbsp;change&nbsp;across&nbsp;loop&nbsp;iterations.</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to197__12">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to197__12">n</a></td><td class="diff_header" id="to197_130">130</td><td nowrap="nowrap"><span class="diff_add">*&nbsp;**num_scan_inputs**&nbsp;(required):</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_131">131</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;An&nbsp;attribute&nbsp;specifying&nbsp;the&nbsp;number&nbsp;of&nbsp;scan_inputs&nbsp;M.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_132">132</td><td nowrap="nowrap"><span class="diff_add">*&nbsp;**scan_input_axes**:</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_133">133</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;M&nbsp;flags.&nbsp;The&nbsp;i-th&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_134">134</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;the&nbsp;axis&nbsp;to&nbsp;be&nbsp;scanned&nbsp;(the&nbsp;sequence&nbsp;axis)&nbsp;for&nbsp;the&nbsp;i-th&nbsp;scan_input.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_135">135</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;If&nbsp;omitted,&nbsp;0&nbsp;will&nbsp;be&nbsp;used&nbsp;as&nbsp;the&nbsp;scan&nbsp;axis&nbsp;for&nbsp;every&nbsp;scan_input.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_132">132</td><td nowrap="nowrap">*&nbsp;**directions**:</td><td class="diff_next"></td><td class="diff_header" id="to197_136">136</td><td nowrap="nowrap">*&nbsp;**<span class="diff_add">scan_input_</span>directions**:</td></tr>
                <tr><td class="diff_next" id="difflib_chg_to197__12"></td><td class="diff_header" id="from197_133">133</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;M&nbsp;flags.&nbsp;The&nbsp;i-th&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies</td><td class="diff_next"></td><td class="diff_header" id="to197_137">137</td><td nowrap="nowrap">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;M&nbsp;flags.&nbsp;The&nbsp;i-th&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_134">134</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;direction&nbsp;to&nbsp;be&nbsp;scanned&nbsp;for&nbsp;the&nbsp;i-th&nbsp;scan_input&nbsp;tensor:&nbsp;0</td><td class="diff_next"></td><td class="diff_header" id="to197_138">138</td><td nowrap="nowrap">&nbsp;&nbsp;the&nbsp;direction&nbsp;to&nbsp;be&nbsp;scanned&nbsp;for&nbsp;the&nbsp;i-th&nbsp;scan_input&nbsp;tensor:&nbsp;0</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_135">135</td><td nowrap="nowrap">&nbsp;&nbsp;indicates&nbsp;forward&nbsp;direction&nbsp;and&nbsp;1&nbsp;indicates&nbsp;reverse&nbsp;direction.&nbsp;If</td><td class="diff_next"></td><td class="diff_header" id="to197_139">139</td><td nowrap="nowrap">&nbsp;&nbsp;indicates&nbsp;forward&nbsp;direction&nbsp;and&nbsp;1&nbsp;indicates&nbsp;reverse&nbsp;direction.&nbsp;If</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_136">136</td><td nowrap="nowrap">&nbsp;&nbsp;omitted,&nbsp;all&nbsp;scan_input&nbsp;tensors&nbsp;will&nbsp;be&nbsp;scanned&nbsp;in&nbsp;the&nbsp;forward</td><td class="diff_next"></td><td class="diff_header" id="to197_140">140</td><td nowrap="nowrap">&nbsp;&nbsp;omitted,&nbsp;all&nbsp;scan_input&nbsp;tensors&nbsp;will&nbsp;be&nbsp;scanned&nbsp;in&nbsp;the&nbsp;forward</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_137">137</td><td nowrap="nowrap">&nbsp;&nbsp;direction.</td><td class="diff_next"></td><td class="diff_header" id="to197_141">141</td><td nowrap="nowrap">&nbsp;&nbsp;direction.</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to197__13">n</a></td><td class="diff_header" id="from197_138">138</td><td nowrap="nowrap"><span class="diff_sub">*&nbsp;**num_scan_inputs**&nbsp;(required):</span></td><td class="diff_next"><a href="#difflib_chg_to197__13">n</a></td><td class="diff_header" id="to197_142">142</td><td nowrap="nowrap"><span class="diff_add">*&nbsp;**scan_output_axes**:</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_139">139</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;An&nbsp;attribute&nbsp;specifying&nbsp;the&nbsp;number&nbsp;of&nbsp;scan_inputs&nbsp;M.</span></td><td class="diff_next"></td><td class="diff_header" id="to197_143">143</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;K&nbsp;flags.&nbsp;The&nbsp;i-th&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_144">144</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;the&nbsp;axis&nbsp;for&nbsp;the&nbsp;i-th&nbsp;scan_output.&nbsp;The&nbsp;scan&nbsp;outputs&nbsp;are&nbsp;accumulated</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_145">145</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;along&nbsp;the&nbsp;specified&nbsp;axis.&nbsp;If&nbsp;omitted,&nbsp;0&nbsp;will&nbsp;be&nbsp;used&nbsp;as&nbsp;the&nbsp;scan</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_146">146</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;axis&nbsp;for&nbsp;every&nbsp;scan_output.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_147">147</td><td nowrap="nowrap"><span class="diff_add">*&nbsp;**scan_output_directions**:</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_148">148</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;An&nbsp;optional&nbsp;list&nbsp;of&nbsp;K&nbsp;flags,&nbsp;one&nbsp;for&nbsp;each&nbsp;scan_output.&nbsp;The&nbsp;i-th</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_149">149</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;element&nbsp;of&nbsp;the&nbsp;list&nbsp;specifies&nbsp;whether&nbsp;the&nbsp;i-th&nbsp;scan_output&nbsp;should&nbsp;be</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_150">150</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;constructed&nbsp;by&nbsp;appending&nbsp;or&nbsp;prepending&nbsp;a&nbsp;new&nbsp;value&nbsp;in&nbsp;each</span></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to197__13"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_151">151</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;iteration:&nbsp;0&nbsp;indicates&nbsp;appending&nbsp;and&nbsp;1&nbsp;indicates&nbsp;prepending.&nbsp;If</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_152">152</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;omitted,&nbsp;all&nbsp;scan_output&nbsp;tensors&nbsp;will&nbsp;be&nbsp;produced&nbsp;by&nbsp;appending&nbsp;a</span></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to197__14"></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_153">153</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;value&nbsp;in&nbsp;each&nbsp;iteration.</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_140">140</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_154">154</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_141">141</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to197_155">155</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to197__14">n</a></td><td class="diff_header" id="from197_142">142</td><td nowrap="nowrap">Between&nbsp;<span class="diff_chg">2</span>&nbsp;and&nbsp;2147483647&nbsp;inputs.</td><td class="diff_next"><a href="#difflib_chg_to197__14">n</a></td><td class="diff_header" id="to197_156">156</td><td nowrap="nowrap">Between&nbsp;<span class="diff_chg">1</span>&nbsp;and&nbsp;2147483647&nbsp;inputs.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_143">143</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_157">157</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to197__15">n</a></td><td class="diff_header" id="from197_144">144</td><td nowrap="nowrap"><span class="diff_sub">*&nbsp;**sequence_lens**&nbsp;(optional,&nbsp;heterogeneous)&nbsp;-&nbsp;**I**:</span></td><td class="diff_next"><a href="#difflib_chg_to197__15">n</a></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_145">145</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;Optional&nbsp;tensor&nbsp;specifying&nbsp;lengths&nbsp;of&nbsp;the&nbsp;sequences&nbsp;in&nbsp;a&nbsp;batch.&nbsp;If</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_146">146</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;this&nbsp;input&nbsp;is&nbsp;not&nbsp;specified,&nbsp;all&nbsp;sequences&nbsp;are&nbsp;assumed&nbsp;to&nbsp;be&nbsp;of&nbsp;the</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_147">147</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;maximum&nbsp;sequence&nbsp;length&nbsp;(the&nbsp;dimension&nbsp;of&nbsp;the&nbsp;sequence&nbsp;axis&nbsp;of&nbsp;the</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_148">148</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;scan_input&nbsp;tensors).</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_149">149</td><td nowrap="nowrap">*&nbsp;**initial_state_and_scan_inputs**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td><td class="diff_next"></td><td class="diff_header" id="to197_158">158</td><td nowrap="nowrap">*&nbsp;**initial_state_and_scan_inputs**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_150">150</td><td nowrap="nowrap">&nbsp;&nbsp;Initial&nbsp;values&nbsp;of&nbsp;the&nbsp;loop's&nbsp;N&nbsp;state&nbsp;variables&nbsp;followed&nbsp;by&nbsp;M</td><td class="diff_next"></td><td class="diff_header" id="to197_159">159</td><td nowrap="nowrap">&nbsp;&nbsp;Initial&nbsp;values&nbsp;of&nbsp;the&nbsp;loop's&nbsp;N&nbsp;state&nbsp;variables&nbsp;followed&nbsp;by&nbsp;M</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_151">151</td><td nowrap="nowrap">&nbsp;&nbsp;scan_inputs</td><td class="diff_next"></td><td class="diff_header" id="to197_160">160</td><td nowrap="nowrap">&nbsp;&nbsp;scan_inputs</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_152">152</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_161">161</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_153">153</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to197_162">162</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_154">154</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2147483647&nbsp;outputs.</td><td class="diff_next"></td><td class="diff_header" id="to197_163">163</td><td nowrap="nowrap">Between&nbsp;1&nbsp;and&nbsp;2147483647&nbsp;outputs.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_155">155</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_164">164</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to197__15"></td><td class="diff_header" id="from197_156">156</td><td nowrap="nowrap">*&nbsp;**final_state_and_scan_outputs**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td><td class="diff_next"></td><td class="diff_header" id="to197_165">165</td><td nowrap="nowrap">*&nbsp;**final_state_and_scan_outputs**&nbsp;(variadic)&nbsp;-&nbsp;**V**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_157">157</td><td nowrap="nowrap">&nbsp;&nbsp;Final&nbsp;values&nbsp;of&nbsp;the&nbsp;loop's&nbsp;N&nbsp;state&nbsp;variables&nbsp;followed&nbsp;by&nbsp;K</td><td class="diff_next"></td><td class="diff_header" id="to197_166">166</td><td nowrap="nowrap">&nbsp;&nbsp;Final&nbsp;values&nbsp;of&nbsp;the&nbsp;loop's&nbsp;N&nbsp;state&nbsp;variables&nbsp;followed&nbsp;by&nbsp;K</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_158">158</td><td nowrap="nowrap">&nbsp;&nbsp;scan_outputs</td><td class="diff_next"></td><td class="diff_header" id="to197_167">167</td><td nowrap="nowrap">&nbsp;&nbsp;scan_outputs</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_159">159</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to197_168">168</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_160">160</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to197_169">169</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to197__top">t</a></td><td class="diff_header" id="from197_161">161</td><td nowrap="nowrap"><span class="diff_sub">*&nbsp;**I**&nbsp;in&nbsp;(</span></td><td class="diff_next"><a href="#difflib_chg_to197__top">t</a></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_162">162</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;tensor(int64)</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_163">163</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;):</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_164">164</td><td nowrap="nowrap"><span class="diff_sub">&nbsp;&nbsp;Int64&nbsp;tensor</span></td><td class="diff_next"></td><td class="diff_header"></td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_165">165</td><td nowrap="nowrap">*&nbsp;**V**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to197_170">170</td><td nowrap="nowrap">*&nbsp;**V**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_166">166</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td><td class="diff_next"></td><td class="diff_header" id="to197_171">171</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(bool),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_167">167</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex128),</td><td class="diff_next"></td><td class="diff_header" id="to197_172">172</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex128),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_168">168</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex64),</td><td class="diff_next"></td><td class="diff_header" id="to197_173">173</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(complex64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_169">169</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to197_174">174</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_170">170</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to197_175">175</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_171">171</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td><td class="diff_next"></td><td class="diff_header" id="to197_176">176</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_172">172</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td><td class="diff_next"></td><td class="diff_header" id="to197_177">177</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_173">173</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td><td class="diff_next"></td><td class="diff_header" id="to197_178">178</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_174">174</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td><td class="diff_next"></td><td class="diff_header" id="to197_179">179</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_175">175</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td><td class="diff_next"></td><td class="diff_header" id="to197_180">180</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(int8),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_176">176</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td><td class="diff_next"></td><td class="diff_header" id="to197_181">181</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(string),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_177">177</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td><td class="diff_next"></td><td class="diff_header" id="to197_182">182</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint16),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_178">178</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td><td class="diff_next"></td><td class="diff_header" id="to197_183">183</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint32),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_179">179</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td><td class="diff_next"></td><td class="diff_header" id="to197_184">184</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint64),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_180">180</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td><td class="diff_next"></td><td class="diff_header" id="to197_185">185</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(uint8)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_181">181</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to197_186">186</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from197_182">182</td><td nowrap="nowrap">&nbsp;&nbsp;All&nbsp;Tensor&nbsp;types</td><td class="diff_next"></td><td class="diff_header" id="to197_187">187</td><td nowrap="nowrap">&nbsp;&nbsp;All&nbsp;Tensor&nbsp;types</td></tr>
            </tbody>
        </table>

.. _l-onnx-op-scan-8:
Scan - 8
========
**Version**
* **name**: `Scan (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#Scan>`_
* **domain**: **main**
* **since_version**: **8**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 8**.

**Summary**

Scan can be used to iterate over one or more scan_input tensors,
constructing zero or more scan_output tensors. It combines ideas from general recurrences,
functional programming constructs such as scan, fold, map, and zip, and is intended to enable
generalizations of RNN-like constructs for sequence-to-sequence processing.
Other tensors (referred to as state_variables here) can be used to carry a state
when iterating from one element to another (similar to hidden-state in RNNs, also referred
to as loop-carried dependences in the context of loops). All these tensors are required to
have the same shape in each iteration of the loop (a restriction imposed to enable efficient
memory allocation). Many common usages involve a single scan_input tensor (where functionality
similar to scan, fold and map can be obtained). When more than one scan_input is used,
a behavior similar to zip is obtained.

The attribute body must be a graph, specifying the computation to be performed in
every iteration. It takes as input the current values of the state_variables and
the current iterated element of the scan_inputs. It must return the (updated) values
of the state_variables and zero or more scan_output_element tensors. The values of the
scan_output_element tensors are concatenated over all the iterations to produce the
scan_output values of the scan construct (similar to the concatenated intermediate
hidden-state values of RNN-like constructs).

The scan operation returns the final values of the state_variables as well as the
scan_outputs.

The operation supports batching, and the batch-axis is required to be 0.
When multiple scan_input tensors are used, they must all have the same batch-size,
and they must all have the same maximum-sequence-length (the dimensionality of the
sequence axis or scan axis). The sequence axis or scan axis is required to be 1.

The operation has an optional sequence_lens input (of shape [BATCH_SIZE]) to
allow variable length sequences of length <= the maximum-sequence-length. If this
input is not specified, all sequences are assumed to be of length equal to
maximum-sequence-length. For variable length input sequences, the scan_outputs
will consist of a sequence of same length as the input, padded to the
maximum-sequence-length.

The optional attribute directions can be used to scan a sequence in the reverse direction.
If this attribute is omitted, all sequences are scanned in the forward direction.
A bidirectional scan be performed by specifying the same tensor input twice in the
scan_inputs, once with a forward direction, and once with a backward direction.

Note that because of the ONNX restriction that only the last parameter of an operator can
be variadic, the initial-states and scan-inputs are listed together as one input parameter.
Similarly, the final-states and scan-outputs are listed together as one output parameter.
The attribute num_scan_inputs indicates the number M of scan-inputs.

The behavior of

    Scan <
        num_scan_inputs = m,
        body = loop-body
    > (sequence_lengths, init_1, ..., init_n, scan_1, ..., scan_m)

is equivalent to the following pseudo-code:

    // T.shape[0] denotes the batch-size of T
    // The batch-size of scan_1, ..., scan_m are all required to be equal
    batch_size = scan_1.shape[0];

    // scan_i.shape[1] denotes the (max) sequence-length of scan_i
    // scan_i.shape[1] is required to be equal to scan_j.shape[1] for all i,j.
    max_sequence_length = scan_1.shape[1];

    for (int batch = 0; batch < batch_size; ++batch) {
        // initialize state-variables
        st_1 = init_1; ... st_n = init_n;
        // initialize scan-output variables: [] denotes an empty tensor
        scan_out_1 = []; ...; scan_out_k = [];
        // identify number of iterations:
        N = (sequence_lengths specified) ? sequence_lengths[batch] : max_sequence_length;

        // execute loop
        for (int t = 0; t < N; ++t) {
            // generate the scan-input elements: the notation T<axis=k>[t] indicates the sub-tensor
            // of rank one less than T obtained by indexing T at position t along axis k.
            si_1 = (scan_1<axis=0>[batch])<axis=1>[t];
            ... ;
            si_m = (scan_m<axis=0>[batch])<axis=1>[t];
            // execute loop-body
            st_1, ..., st_n, so_1, ..., so_k = loop-body(st_1, ..., st_n, si_1, ..., si_m)
            // accumulate the scan-output elements
            scan_out_1 = Concat<axis=0>(scan_out_1, so_1); ... ; scan_out_k = Concat<axis=0>(scan_out_k, so_k);
        }
        // accumulate the outputs for this batch:
        bst_1[batch] = st_1; ..., bst_n[batch] = st_n;
        // Note scan-outputs will have size max_sequence_length, but only first N values will be meaningful.
        // The remaining values have an undefined value.
        b_scan_out_1[batch] = scan_out_1; ...; b_scan_out_k[batch] = scan_out_k;
    }
    return bst_1, ..., bst_n, b_scan_out_1, ..., b_scan_out_k;

*Sample usage: Encoding RNN using a Scan*

The following example shows how a simple RNN over an input tensor %X, with weight tensor %Wi,
recurrence weight tensor %Ri, bias tensors %Wbi and %Rbi, and initial hidden-state %H_0 can
be encoded as a ScanLoop. Note that the loop-body is a nested graph, and it directly computes
%Wi, %Ri, %Wbi, and %Rbi (typically constants or initializers in the body graph). If these
values are computed in the outer graph, they need to be passed in as extra state_variables.

    graph rnn-encoding {
      %H_0 = ...
      %X = ...
      %Y_h, %Y = Scan[body = <graph rnn-cell-1>, num_scan_inputs=1]("", %H_0, %X)
      return %Y, %Y_h
    }

    graph rnn-cell-1 (
      %H_tminus1[FLOAT, tensor]
      %X_t[FLOAT, tensor]
    ) {
      %Wi = ...
      %Ri = ...
      %Wbi = ...
      %Rbi = ...
      %t1 = X_t * (Wi^T)
      %t2 = H_tminus1*(Ri^T)
      %t3 = Add(%t1, %t2)
      %t4 = Add(%t3, %Wbi)
      %t5 = Add(%t4, %Rbi)
      %Ht = Tanh(%t5)
      %Accumulate = Identity(%Ht)
      return %Ht, %Accumulate
    }

**Attributes**
* **body** (required):
  The graph run each iteration. It has N+M inputs: (loop state
  variables..., scan_input_elts...). It has N+K outputs: (loop state
  variables..., scan_output_elts...). Each scan_output is created by
  concatenating the value of the specified scan_output_elt value at
  the end of each iteration of the loop. It is an error if the
  dimensions of these values change across loop iterations.
* **directions**:
  An optional list of M flags. The i-th element of the list specifies
  the direction to be scanned for the i-th scan_input tensor: 0
  indicates forward direction and 1 indicates reverse direction. If
  omitted, all scan_input tensors will be scanned in the forward
  direction.
* **num_scan_inputs** (required):
  An attribute specifying the number of scan_inputs M.

**Inputs**
Between 2 and 2147483647 inputs.

* **sequence_lens** (optional, heterogeneous) - **I**:
  Optional tensor specifying lengths of the sequences in a batch. If
  this input is not specified, all sequences are assumed to be of the
  maximum sequence length (the dimension of the sequence axis of the
  scan_input tensors).
* **initial_state_and_scan_inputs** (variadic) - **V**:
  Initial values of the loop's N state variables followed by M
  scan_inputs

**Outputs**
Between 1 and 2147483647 outputs.

* **final_state_and_scan_outputs** (variadic) - **V**:
  Final values of the loop's N state variables followed by K
  scan_outputs

**Type Constraints**
* **I** in (
  tensor(int64)
  ):
  Int64 tensor
* **V** in (
  tensor(bool),
  tensor(complex128),
  tensor(complex64),
  tensor(double),
  tensor(float),
  tensor(float16),
  tensor(int16),
  tensor(int32),
  tensor(int64),
  tensor(int8),
  tensor(string),
  tensor(uint16),
  tensor(uint32),
  tensor(uint64),
  tensor(uint8)
  ):
  All Tensor types
