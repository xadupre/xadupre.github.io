Dropout - 1 vs 6
================

.. raw:: html


    <div id="div_Dropout_6"></div>
    <link rel="stylesheet" type="text/css" href="../_static/diff2html.min.css" />
    <script type="text/javascript" src="../_static/diff2html-ui.min.js"></script>
    <script>
    const diffString = `
    --- a/Dropout1
    +++ b/Dropout6
    @@ -1 +1 @@
      Dropout takes one input data (Tensor<float>) and produces two Tensor outputs,
      output (Tensor<float>) and mask (Tensor<bool>). Depending on whether it is in
      test mode or not, the output Y will either be a random dropout, or a simple
      copy of the input. Note that our implementation of Dropout does scaling in
      the training phase, so during testing nothing needs to be done.
  
      **Attributes**
  
    - * **consumed_inputs**:
    -   legacy optimization attribute.
      * **is_test**:
        (int, default 0) if nonzero, run dropout in test mode where the
        output is simply Y = X.
      * **ratio**:
        (float, default 0.5) the ratio of random dropout
  
      **Inputs**
  
      * **data** (heterogeneous) - **T**:
        The input data as Tensor.
  
      **Outputs**
  
      Between 1 and 2 outputs.
  
      * **output** (heterogeneous) - **T**:
        The output.
      * **mask** (optional, heterogeneous) - **T**:
        The output mask. If is_test is nonzero, this output is not filled.
  
      **Type Constraints**
  
      * **T** in (
        tensor(double),
        tensor(float),
        tensor(float16)
        ):
        Constrain input and output types to float tensors.
    `;

    document.addEventListener('DOMContentLoaded', function () {
    var targetElement = document.getElementById('div_Dropout_6');
    var configuration = {
        drawFileList: true,
        fileListToggle: false,
        fileListStartVisible: false,
        fileContentToggle: false,
        matching: 'lines',
        outputFormat: 'line-by-line',
        synchronisedScroll: true,
        highlight: true,
        renderNothingWhenEmpty: false,
    };
    var diff2htmlUi = new Diff2HtmlUI(targetElement, diffString, configuration);
    diff2htmlUi.draw();
    diff2htmlUi.highlightCode();
    });
    </script>