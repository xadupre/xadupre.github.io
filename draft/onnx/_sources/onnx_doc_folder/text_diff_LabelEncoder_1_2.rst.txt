LabelEncoder - 1 vs 2
=====================

Next section compares an older to a newer version of the same operator 
after both definition are converted into markdown text.
Green means an addition to the newer version, red means a deletion.
Anything else is unchanged.

.. raw:: html


    <div id="div_LabelEncoder_2"></div>
    <link rel="stylesheet" type="text/css" href="../_static/diff2html.min.css" />
    <script type="text/javascript" src="../_static/diff2html-ui.min.js"></script>
    <script>
    const diffString = `
    --- a/LabelEncoder1
    +++ b/LabelEncoder2
    @@ -1 +1 @@
    - Converts strings to integers and vice versa.
    + Maps each element in the input tensor to another value.
  
    - If the string default value is set, it will convert integers to strings.
    - If the int default value is set, it will convert strings to integers.
    + The mapping is determined by the two parallel attributes, &amp;#39;keys_*&amp;#39; and
    + &amp;#39;values_*&amp;#39; attribute. The i-th value in the specified &amp;#39;keys_*&amp;#39; attribute
    + would be mapped to the i-th value in the specified &amp;#39;values_*&amp;#39; attribute. It
    + implies that input&amp;#39;s element type and the element type of the specified
    + &amp;#39;keys_*&amp;#39; should be identical while the output type is identical to the
    + specified &amp;#39;values_*&amp;#39; attribute. If an input element can not be found in the
    + specified &amp;#39;keys_*&amp;#39; attribute, the &amp;#39;default_*&amp;#39; that matches the specified
    + &amp;#39;values_*&amp;#39; attribute may be used as its output value.
  
    - Each operator converts either integers to strings or strings to integers, depending
    - on which default value attribute is provided. Only one default value attribute
    - should be defined.
    + Let&amp;#39;s consider an example which maps a string tensor to an integer tensor.
    + Assume and &amp;#39;keys_strings&amp;#39; is [&amp;#34;Amy&amp;#34;, &amp;#34;Sally&amp;#34;], &amp;#39;values_int64s&amp;#39; is [5, 6],
    + and &amp;#39;default_int64&amp;#39; is &amp;#39;-1&amp;#39;.  The input [&amp;#34;Dori&amp;#34;, &amp;#34;Amy&amp;#34;, &amp;#34;Amy&amp;#34;, &amp;#34;Sally&amp;#34;,
    + &amp;#34;Sally&amp;#34;] would be mapped to [-1, 5, 5, 6, 6].
  
    - When converting from integers to strings, the string is fetched from the
    - &amp;#39;classes_strings&amp;#39; list, by simple indexing.
    + Since this operator is an one-to-one mapping, its input and output shapes
    + are the same. Notice that only one of &amp;#39;keys_*&amp;#39;/&amp;#39;values_*&amp;#39; can be set.
  
    - When converting from strings to integers, the string is looked up in the list
    - and the index at which it is found is used as the converted value.
    + For key look-up, bit-wise comparison is used so even a float NaN can be
    + mapped to a value in &amp;#39;values_*&amp;#39; attribute.
  
      **Attributes**
  
    - * **classes_strings**:
    -   A list of labels.
    + * **default_float**:
    +   A float.
      * **default_int64**:
    +   An integer.
    -   An integer to use when an input string value is not found in the
    -   map.&amp;lt;br&amp;gt;One and only one of the &amp;#39;default_*&amp;#39; attributes must be
    -   defined.
      * **default_string**:
    -   A string to use when an input integer value is not found in the
    -   map.&amp;lt;br&amp;gt;One and only one of the &amp;#39;default_*&amp;#39; attributes must be
    -   defined.
    +   A string.
    + * **keys_floats**:
    +   A list of floats.
    + * **keys_int64s**:
    +   A list of ints.
    + * **keys_strings**:
    +   A list of strings. One and only one of &amp;#39;keys_*&amp;#39;s should be set.
    + * **values_floats**:
    +   A list of floats.
    + * **values_int64s**:
    +   A list of ints.
    + * **values_strings**:
    +   A list of strings. One and only one of &amp;#39;value_*&amp;#39;s should be set.
  
      **Inputs**
  
      * **X** (heterogeneous) - **T1**:
    -   Input data.
    +   Input data. It can be either tensor or scalar.
  
      **Outputs**
  
      * **Y** (heterogeneous) - **T2**:
    +   Output data.
    -   Output data. If strings are input, the output values are integers,
    -   and vice versa.
  
      **Type Constraints**
  
      * **T1** in (
    +   tensor(float),
        tensor(int64),
        tensor(string)
        ):
    +   The input type is a tensor of any shape.
    -   The input type must be a tensor of integers or strings, of any
    -   shape.
      * **T2** in (
    +   tensor(float),
        tensor(int64),
        tensor(string)
        ):
    +   Output type is determined by the specified &amp;#39;values_*&amp;#39; attribute.-   The output type will be a tensor of strings or integers, and will
    -   have the same shape as the input.
    `;

    document.addEventListener('DOMContentLoaded', function () {
    var targetElement = document.getElementById('div_LabelEncoder_2');
    var configuration = {
        drawFileList: true,
        fileListToggle: false,
        fileListStartVisible: false,
        fileContentToggle: false,
        matching: 'lines',
        outputFormat: 'line-by-line',
        synchronisedScroll: true,
        highlight: true,
        renderNothingWhenEmpty: false,
    };
    var diff2htmlUi = new Diff2HtmlUI(targetElement, diffString, configuration);
    diff2htmlUi.draw();
    diff2htmlUi.highlightCode();
    });
    </script>