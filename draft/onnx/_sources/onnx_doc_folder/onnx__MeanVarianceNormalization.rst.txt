
.. _l-onnx-doc-MeanVarianceNormalization:

=========================
MeanVarianceNormalization
=========================

.. contents::
    :local:


.. _l-onnx-op-meanvariancenormalization-13:
MeanVarianceNormalization - 13
==============================
**Version**
* **name**: `MeanVarianceNormalization (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#MeanVarianceNormalization>`_
* **domain**: **main**
* **since_version**: **13**
* **function**: True
* **support_level**: SupportType.COMMON
* **shape inference**: False

This version of the operator has been available
**since version 13**.

**Summary**

A MeanVarianceNormalization Function: Perform mean variance normalization
on the input tensor X using formula: <br/> ``` (X-EX)/sqrt(E(X-EX)^2) ```

**Attributes**
* **axes**:
  A list of integers, along which to reduce. The default is to
  caculate along axes [0,2,3] for calculating mean and variance along
  each channel. Two variables with the same C-coordinate are
  associated with the same mean and variance.

**Inputs**

* **X** (heterogeneous) - **T**:
  Input tensor

**Outputs**

* **Y** (heterogeneous) - **T**:
  Output tensor

**Type Constraints**
* **T** in (
  tensor(bfloat16),
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain input and output types to all numeric tensors.

**Examples**

**default**
::
    node = onnx.helper.make_node(
        "MeanVarianceNormalization", inputs=["X"], outputs=["Y"]
    )

    input_data = np.array(
        [
            [
                [[0.8439683], [0.5665144], [0.05836735]],
                [[0.02916367], [0.12964272], [0.5060197]],
                [[0.79538304], [0.9411346], [0.9546573]],
            ],
            [
                [[0.17730942], [0.46192095], [0.26480448]],
                [[0.6746842], [0.01665257], [0.62473077]],
                [[0.9240844], [0.9722341], [0.11965699]],
            ],
            [
                [[0.41356155], [0.9129373], [0.59330076]],
                [[0.81929934], [0.7862604], [0.11799799]],
                [[0.69248444], [0.54119414], [0.07513223]],
            ],
        ],
        dtype=np.float32,
    )

    # Calculate expected output data
    data_mean = np.mean(input_data, axis=(0, 2, 3), keepdims=1)
    data_mean_squared = np.power(data_mean, 2)
    data_squared = np.power(input_data, 2)
    data_squared_mean = np.mean(data_squared, axis=(0, 2, 3), keepdims=1)
    std = np.sqrt(data_squared_mean - data_mean_squared)
    expected_output = (input_data - data_mean) / (std + 1e-9)

    expect(node, inputs=[input_data], outputs=[expected_output], name="test_mvn")

**Differences**

.. raw:: html

        <table class="diff" id="difflib_chg_to127__top"
               cellspacing="0" cellpadding="0" rules="groups" >
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>
            <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>

            <tbody>
                <tr><td class="diff_next"><a href="#difflib_chg_to127__0">f</a></td><td class="diff_header" id="from127_1">1</td><td nowrap="nowrap">A&nbsp;MeanVarianceNormalization&nbsp;Function:&nbsp;Perform&nbsp;mean&nbsp;variance&nbsp;normalization</td><td class="diff_next"><a href="#difflib_chg_to127__0">f</a></td><td class="diff_header" id="to127_1">1</td><td nowrap="nowrap">A&nbsp;MeanVarianceNormalization&nbsp;Function:&nbsp;Perform&nbsp;mean&nbsp;variance&nbsp;normalization</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_2">2</td><td nowrap="nowrap">on&nbsp;the&nbsp;input&nbsp;tensor&nbsp;X&nbsp;using&nbsp;formula:&nbsp;&lt;br/&gt;&nbsp;&nbsp;(X-EX)/sqrt(E(X-EX)^2)&nbsp;</td><td class="diff_next"></td><td class="diff_header" id="to127_2">2</td><td nowrap="nowrap">on&nbsp;the&nbsp;input&nbsp;tensor&nbsp;X&nbsp;using&nbsp;formula:&nbsp;&lt;br/&gt;&nbsp;&nbsp;(X-EX)/sqrt(E(X-EX)^2)&nbsp;</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_3">3</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to127_3">3</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_4">4</td><td nowrap="nowrap">**Attributes**</td><td class="diff_next"></td><td class="diff_header" id="to127_4">4</td><td nowrap="nowrap">**Attributes**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_5">5</td><td nowrap="nowrap">*&nbsp;**axes**:</td><td class="diff_next"></td><td class="diff_header" id="to127_5">5</td><td nowrap="nowrap">*&nbsp;**axes**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_6">6</td><td nowrap="nowrap">&nbsp;&nbsp;A&nbsp;list&nbsp;of&nbsp;integers,&nbsp;along&nbsp;which&nbsp;to&nbsp;reduce.&nbsp;The&nbsp;default&nbsp;is&nbsp;to</td><td class="diff_next"></td><td class="diff_header" id="to127_6">6</td><td nowrap="nowrap">&nbsp;&nbsp;A&nbsp;list&nbsp;of&nbsp;integers,&nbsp;along&nbsp;which&nbsp;to&nbsp;reduce.&nbsp;The&nbsp;default&nbsp;is&nbsp;to</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_7">7</td><td nowrap="nowrap">&nbsp;&nbsp;caculate&nbsp;along&nbsp;axes&nbsp;[0,2,3]&nbsp;for&nbsp;calculating&nbsp;mean&nbsp;and&nbsp;variance&nbsp;along</td><td class="diff_next"></td><td class="diff_header" id="to127_7">7</td><td nowrap="nowrap">&nbsp;&nbsp;caculate&nbsp;along&nbsp;axes&nbsp;[0,2,3]&nbsp;for&nbsp;calculating&nbsp;mean&nbsp;and&nbsp;variance&nbsp;along</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_8">8</td><td nowrap="nowrap">&nbsp;&nbsp;each&nbsp;channel.&nbsp;Two&nbsp;variables&nbsp;with&nbsp;the&nbsp;same&nbsp;C-coordinate&nbsp;are</td><td class="diff_next"></td><td class="diff_header" id="to127_8">8</td><td nowrap="nowrap">&nbsp;&nbsp;each&nbsp;channel.&nbsp;Two&nbsp;variables&nbsp;with&nbsp;the&nbsp;same&nbsp;C-coordinate&nbsp;are</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_9">9</td><td nowrap="nowrap">&nbsp;&nbsp;associated&nbsp;with&nbsp;the&nbsp;same&nbsp;mean&nbsp;and&nbsp;variance.</td><td class="diff_next"></td><td class="diff_header" id="to127_9">9</td><td nowrap="nowrap">&nbsp;&nbsp;associated&nbsp;with&nbsp;the&nbsp;same&nbsp;mean&nbsp;and&nbsp;variance.</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_10">10</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to127_10">10</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_11">11</td><td nowrap="nowrap">**Inputs**</td><td class="diff_next"></td><td class="diff_header" id="to127_11">11</td><td nowrap="nowrap">**Inputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_12">12</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to127_12">12</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_13">13</td><td nowrap="nowrap">*&nbsp;**X**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to127_13">13</td><td nowrap="nowrap">*&nbsp;**X**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_14">14</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;tensor</td><td class="diff_next"></td><td class="diff_header" id="to127_14">14</td><td nowrap="nowrap">&nbsp;&nbsp;Input&nbsp;tensor</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_15">15</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to127_15">15</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_16">16</td><td nowrap="nowrap">**Outputs**</td><td class="diff_next"></td><td class="diff_header" id="to127_16">16</td><td nowrap="nowrap">**Outputs**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_17">17</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to127_17">17</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next" id="difflib_chg_to127__0"></td><td class="diff_header" id="from127_18">18</td><td nowrap="nowrap">*&nbsp;**Y**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td><td class="diff_next"></td><td class="diff_header" id="to127_18">18</td><td nowrap="nowrap">*&nbsp;**Y**&nbsp;(heterogeneous)&nbsp;-&nbsp;**T**:</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;tensor</td><td class="diff_next"></td><td class="diff_header" id="to127_19">19</td><td nowrap="nowrap">&nbsp;&nbsp;Output&nbsp;tensor</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_20">20</td><td nowrap="nowrap"></td><td class="diff_next"></td><td class="diff_header" id="to127_20">20</td><td nowrap="nowrap"></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_21">21</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td><td class="diff_next"></td><td class="diff_header" id="to127_21">21</td><td nowrap="nowrap">**Type&nbsp;Constraints**</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_22">22</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td><td class="diff_next"></td><td class="diff_header" id="to127_22">22</td><td nowrap="nowrap">*&nbsp;**T**&nbsp;in&nbsp;(</td></tr>
                <tr><td class="diff_next"><a href="#difflib_chg_to127__top">t</a></td><td class="diff_header"></td><td nowrap="nowrap"></td><td class="diff_next"><a href="#difflib_chg_to127__top">t</a></td><td class="diff_header" id="to127_23">23</td><td nowrap="nowrap"><span class="diff_add">&nbsp;&nbsp;tensor(bfloat16),</span></td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_23">23</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td><td class="diff_next"></td><td class="diff_header" id="to127_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(double),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_24">24</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td><td class="diff_next"></td><td class="diff_header" id="to127_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float),</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_25">25</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16)</td><td class="diff_next"></td><td class="diff_header" id="to127_26">26</td><td nowrap="nowrap">&nbsp;&nbsp;tensor(float16)</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_26">26</td><td nowrap="nowrap">&nbsp;&nbsp;):</td><td class="diff_next"></td><td class="diff_header" id="to127_27">27</td><td nowrap="nowrap">&nbsp;&nbsp;):</td></tr>
                <tr><td class="diff_next"></td><td class="diff_header" id="from127_27">27</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;and&nbsp;output&nbsp;types&nbsp;to&nbsp;all&nbsp;numeric&nbsp;tensors.</td><td class="diff_next"></td><td class="diff_header" id="to127_28">28</td><td nowrap="nowrap">&nbsp;&nbsp;Constrain&nbsp;input&nbsp;and&nbsp;output&nbsp;types&nbsp;to&nbsp;all&nbsp;numeric&nbsp;tensors.</td></tr>
            </tbody>
        </table>

.. _l-onnx-op-meanvariancenormalization-9:
MeanVarianceNormalization - 9
=============================
**Version**
* **name**: `MeanVarianceNormalization (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#MeanVarianceNormalization>`_
* **domain**: **main**
* **since_version**: **9**
* **function**: True
* **support_level**: SupportType.COMMON
* **shape inference**: False

This version of the operator has been available
**since version 9**.

**Summary**

A MeanVarianceNormalization Function: Perform mean variance normalization
on the input tensor X using formula: <br/> ``` (X-EX)/sqrt(E(X-EX)^2) ```

**Attributes**
* **axes**:
  A list of integers, along which to reduce. The default is to
  caculate along axes [0,2,3] for calculating mean and variance along
  each channel. Two variables with the same C-coordinate are
  associated with the same mean and variance.

**Inputs**

* **X** (heterogeneous) - **T**:
  Input tensor

**Outputs**

* **Y** (heterogeneous) - **T**:
  Output tensor

**Type Constraints**
* **T** in (
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain input and output types to all numeric tensors.
