
.. _l-onnx-doc-InstanceNormalization:

=====================
InstanceNormalization
=====================

.. contents::
    :local:


.. _l-onnx-op-instancenormalization-6:

InstanceNormalization - 6
=========================

**Version**

* **name**: `InstanceNormalization (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#InstanceNormalization>`_
* **domain**: **main**
* **since_version**: **6**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: True

This version of the operator has been available
**since version 6**.

**Summary**

Carries out instance normalization as described in the paper
https://arxiv.org/abs/1607.08022.

y = scale * (x - mean) / sqrt(variance + epsilon) + B,
where mean and variance are computed per instance per channel.

**Attributes**

* **epsilon**:
  The epsilon value to use to avoid division by zero.

**Inputs**

* **input** (heterogeneous) - **T**:
  Input data tensor from the previous operator; dimensions for image
  case are (N x C x H x W), where N is the batch size, C is the number
  of channels, and H and W are the height and the width of the data.
  For non image case, the dimensions are in the form of (N x C x D1 x
  D2 ... Dn), where N is the batch size.
* **scale** (heterogeneous) - **T**:
  The input 1-dimensional scale tensor of size C.
* **B** (heterogeneous) - **T**:
  The input 1-dimensional bias tensor of size C.

**Outputs**

* **output** (heterogeneous) - **T**:
  The output tensor of the same shape as input.

**Type Constraints**

* **T** in (
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain input and output types to float tensors.

**Examples**

.. toctree::

    text_diff_InstanceNormalization_1_6

.. _l-onnx-op-instancenormalization-1:

InstanceNormalization - 1
=========================

**Version**

* **name**: `InstanceNormalization (GitHub) <https://github.com/onnx/onnx/blob/main/docs/Operators.md#InstanceNormalization>`_
* **domain**: **main**
* **since_version**: **1**
* **function**: False
* **support_level**: SupportType.COMMON
* **shape inference**: False

This version of the operator has been available
**since version 1**.

**Summary**

Carries out instance normalization as described in the paper
https://arxiv.org/abs/1607.08022.

y = scale * (x - mean) / sqrt(variance + epsilon) + B,
where mean and variance are computed per instance per channel.

**Attributes**

* **consumed_inputs**:
  legacy optimization attribute.
* **epsilon**:
  The epsilon value to use to avoid division by zero, default is
  1e-5f.

**Inputs**

* **input** (heterogeneous) - **T**:
  The input 4-dimensional tensor of shape NCHW.
* **scale** (heterogeneous) - **T**:
  The input 1-dimensional scale tensor of size C.
* **B** (heterogeneous) - **T**:
  The input 1-dimensional bias tensor of size C.

**Outputs**

* **output** (heterogeneous) - **T**:
  The output 4-dimensional tensor of the same shape as input.

**Type Constraints**

* **T** in (
  tensor(double),
  tensor(float),
  tensor(float16)
  ):
  Constrain input and output types to float tensors.
