CumSum - 11 vs 14
=================

Next section compares an older to a newer version of the same operator 
after both definition are converted into markdown text.
Green means an addition to the newer version, red means a deletion.
Anything else is unchanged.

.. raw:: html


    <div id="div_CumSum_2"></div>
    <link rel="stylesheet" type="text/css" href="../_static/diff2html.min.css" />
    <script type="text/javascript" src="../_static/diff2html-ui.min.js"></script>
    <script>
    const diffString = `
    --- a/CumSum11
    +++ b/CumSum14
    @@ -1 +1 @@
      Performs cumulative sum of the input elements along the given axis.
      By default, it will do the sum inclusively meaning the first element is copied as is.
      Through an exclusive attribute, this behavior can change to exclude the first element.
      It can also perform summation in the opposite direction of the axis. For that, set reverse attribute to 1.
  
      Example:
      ::
  
          input_x = [1, 2, 3]
          axis=0
          output = [1, 3, 6]
          exclusive=1
          output = [0, 1, 3]
          exclusive=0
          reverse=1
          output = [6, 5, 3]
          exclusive=1
          reverse=1
          output = [5, 3, 0]
  
      **Attributes**
  
      * **exclusive**:
        If set to 1 will return exclusive sum in which the top element is
        not included. In other terms, if set to 1, the j-th output element
        would be the sum of the first (j-1) elements. Otherwise, it would be
        the sum of the first j elements.
      * **reverse**:
        If set to 1 will perform the sums in reverse direction.
  
      **Inputs**
  
      * **x** (heterogeneous) - **T**:
        An input tensor that is to be processed.
      * **axis** (heterogeneous) - **T2**:
        A 0-D tensor. Must be in the range [-rank(x), rank(x)-1]. Negative
        value means counting dimensions from the back.
  
      **Outputs**
  
      * **y** (heterogeneous) - **T**:
        Output tensor of the same type as &amp;#39;x&amp;#39; with cumulative sums of the
        x&amp;#39;s elements
  
      **Type Constraints**
  
      * **T** in (
    +   tensor(bfloat16),
        tensor(double),
        tensor(float),
    +   tensor(float16),
        tensor(int32),
        tensor(int64),
        tensor(uint32),
        tensor(uint64)
        ):
    -   Input can be of any tensor type.
    +   Constrain input and output types to high-precision numeric tensors.
      * **T2** in (
        tensor(int32),
        tensor(int64)
        ):
        axis tensor can be int32 or int64 only
    `;

    document.addEventListener('DOMContentLoaded', function () {
    var targetElement = document.getElementById('div_CumSum_2');
    var configuration = {
        drawFileList: true,
        fileListToggle: false,
        fileListStartVisible: false,
        fileContentToggle: false,
        matching: 'lines',
        outputFormat: 'line-by-line',
        synchronisedScroll: true,
        highlight: true,
        renderNothingWhenEmpty: false,
    };
    var diff2htmlUi = new Diff2HtmlUI(targetElement, diffString, configuration);
    diff2htmlUi.draw();
    diff2htmlUi.highlightCode();
    });
    </script>