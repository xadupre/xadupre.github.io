
.. _l-classes:

Classes
=======

.. contents::
    :local:
    :depth: 1


Summary
+++++++

+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| class                                                                                                                     | class parent | truncated documentation                                                                                                                      |
+===========================================================================================================================+==============+==============================================================================================================================================+
| :class:`AbsoluteLearningLoss <onnxcustom.training.sgd_learning_loss.AbsoluteLearningLoss>`                                |              | Implements a square loss :math:`|Y - Z|` where *Y* is the output and *Z* the expected output. See :func:`_onnx_grad_loss_absolute_error` ... |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`BaseEstimator <onnxcustom.training._base_estimator.BaseEstimator>`                                                |              | Base class for optimizers. Implements common methods such `__repr__`.                                                                        |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`BaseLearningLoss <onnxcustom.training.sgd_learning_loss.BaseLearningLoss>`                                        |              | Class handling the loss for class :class:`OrtGradientForwardBackwardOptimizer`. All classes inheriting from this ...                         |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`BaseLearningOnnx <onnxcustom.training._base_onnx_function.BaseLearningOnnx>`                                      |              | Class handling ONNX function to manipulate OrtValue. Base class for :class:`BaseLearningRate` and :class:`BaseLearningLoss`. ...             |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`BaseLearningPenalty <onnxcustom.training.sgd_learning_penalty.BaseLearningPenalty>`                               |              | Class handling the penalty on the coefficients for class :class:`OrtGradientForwardBackwardOptimizer`.                                       |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`BaseLearningRate <onnxcustom.training.sgd_learning_rate.BaseLearningRate>`                                        |              | Class handling the learning rate update after every iteration of a gradient. Two methods need to be overwritten ...                          |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`BaseOnnxClass <onnxcustom.training._base.BaseOnnxClass>`                                                          |              | Bases class with common functions to handle attributes in classes owning ONNX graphs.                                                        |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`Cbids <onnxcustom.utils.nvprof2json.Cbids>`                                                                       |              | List of events.                                                                                                                              |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`ConvergenceError <onnxcustom.training.excs.ConvergenceError>`                                                     |              | Raised when a learning algorithm failed to converge.                                                                                         |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`ConvergenceWarning <onnxcustom.training.excs.ConvergenceWarning>`                                                 |              | Raised when a learning algorithm failed to converge.                                                                                         |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`DerivativeOptions <onnxcustom.training.grad_helper.DerivativeOptions>`                                            |              | Options defining how to build the onnx graph of the gradients.                                                                               |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`ElasticLearningLoss <onnxcustom.training.sgd_learning_loss.ElasticLearningLoss>`                                  |              | Implements a square loss :math:`(Y - Z)^2 \alpha + |Y - Z| * \beta` where *Y* is the output and *Z* the expected ...                         |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`ElasticLearningPenalty <onnxcustom.training.sgd_learning_penalty.ElasticLearningPenalty>`                         |              | Implements a L1 or L2 regularization on weights.                                                                                             |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`EvaluationError <onnxcustom.training.excs.EvaluationError>`                                                       |              | Raised when an evaluation failed.                                                                                                            |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`LearningRateSGD <onnxcustom.training.sgd_learning_rate.LearningRateSGD>`                                          |              | Implements the learning the same way as :class:`sklearn.linear_model.SGDRegressor`.                                                          |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`LearningRateSGDNesterov <onnxcustom.training.sgd_learning_rate.LearningRateSGDNesterov>`                          |              | Implements the learning the same way as :class:`sklearn.linear_model.SGDRegressor`.                                                          |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`NegLogLearningLoss <onnxcustom.training.sgd_learning_loss.NegLogLearningLoss>`                                    |              | Implements a negative log loss `'log(yt, yp) = -(1-yt)\log(1-yp) - yt\log(yp)`, this only works for a binary classification ...              |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`NoLearningPenalty <onnxcustom.training.sgd_learning_penalty.NoLearningPenalty>`                                   |              | No regularization.                                                                                                                           |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`OrtDataLoader <onnxcustom.training.data_loader.OrtDataLoader>`                                                    |              | Draws consecutive random observations from a dataset by batch. It iterates over the datasets by drawing *batch_size* ...                     |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`OrtGradientForwardBackward <onnxcustom.training.ortgradient.OrtGradientForwardBackward>`                          |              | Implements forward backward mechanism assuming the function to train is defined by an ONNX graph.                                            |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`OrtGradientForwardBackwardFunction <onnxcustom.training.ortgradient.OrtGradientForwardBackwardFunction>`          |              | Ancestor for a class implementing forward and backward and dynamically created by :class:`OrtGradientForwardBackward`. ...                   |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`OrtGradientForwardBackwardOptimizer <onnxcustom.training.optimizers_partial.OrtGradientForwardBackwardOptimizer>` |              | Implements a simple :epkg:`Stochastic Gradient Descent` with :epkg:`onnxruntime-training`. It leverages class @see ...                       |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`OrtGradientOptimizer <onnxcustom.training.optimizers.OrtGradientOptimizer>`                                       |              | Implements a simple :epkg:`Stochastic Gradient Descent` with :epkg:`onnxruntime-training`.                                                   |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`ProviderError <onnxcustom.training.excs.ProviderError>`                                                           |              | Raised when an input is not on the expected device (CPU, GPU).                                                                               |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :class:`SquareLearningLoss <onnxcustom.training.sgd_learning_loss.SquareLearningLoss>`                                    |              | Implements a square loss :math:`(Y - Z)^2` where *Y* is the output and *Z* the expected output. See :func:`_onnx_grad_loss_square_error` ... |
+---------------------------------------------------------------------------------------------------------------------------+--------------+----------------------------------------------------------------------------------------------------------------------------------------------+
