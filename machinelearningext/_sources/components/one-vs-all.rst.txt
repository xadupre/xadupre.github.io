

.. _l-one-vs-all:

One-vs-All
==========

.. only:: not md

    
    The documentation is generated based on the sources available at
    :epkg:`dotnet/machinelearning` and released under :epkg:`MIT License`.
    
    

.. only:: md

    **Type:** multiclassclassifiertrainer
    **Aliases:** *OVA*
    **Namespace:** Microsoft.ML.Trainers
    **Assembly:** Microsoft.ML.StandardLearners.dll

.. only:: not md

    **Type:** multiclassclassifiertrainer
    **Aliases:** *OVA*
    **Namespace:** Microsoft.ML.Trainers
    **Assembly:** Microsoft.ML.StandardLearners.dll
    **Microsoft Documentation:** `One-vs-All <https://docs.microsoft.com/dotnet/api/microsoft.ml.trainers.one-vs-all>`_

**Description**

In this strategy, a binary classification algorithm is used to train one classifier for each class, which distinguishes that class from all other classes. Prediction is then performed by running these binary classifiers, and choosing the prediction with the highest confidence score.


**Parameters**

.. list-table::
    :widths: 5 5 5 20
    :header-rows: 1

    * - Name
      - Short name
      - Default
      - Description
    * - calibrator
      - cali
      - Microsoft. ML. Runtime. Internal. Calibration. PlattCalibratorTrainerFactory
      - Output calibrator
    * - imputeMissingLabelsAsNegative
      - missNeg
      - False
      - Whether to treat missing labels as having negative labels, instead of keeping them missing
    * - maxCalibrationExamples
      - numcali
      - 1000000000
      - Number of instances to train the calibrator
    * - predictorType
      - p
      - 
      - Base predictor
    * - useProbabilities
      - useprob
      - True
      - Use probability or margins to determine max
