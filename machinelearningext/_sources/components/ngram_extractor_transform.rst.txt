

.. _l-ngram-extractor-transform:

Ngram Extractor Transform
=========================

.. only:: not md

    
    The documentation is generated based on the sources available at
    :epkg:`dotnet/machinelearning` and released under :epkg:`MIT License`.
    
    

.. only:: md

    **Type:** ngramextractorfactory
    **Aliases:** *NgramExtractorTransform, Ngram, NgramExtractor*
    **Namespace:** Microsoft.ML.Transforms.Text
    **Assembly:** Microsoft.ML.Transforms.dll

.. only:: not md

    **Type:** ngramextractorfactory
    **Aliases:** *NgramExtractorTransform, Ngram, NgramExtractor*
    **Namespace:** Microsoft.ML.Transforms.Text
    **Assembly:** Microsoft.ML.Transforms.dll
    **Microsoft Documentation:** `Ngram Extractor Transform <https://docs.microsoft.com/dotnet/api/microsoft.ml.transforms.text.ngram extractor transform>`_

**Description**

A transform that turns a collection of tokenized text ReadOnlyMemory, or vectors of keys into numerical feature vectors. The feature vectors are counts of ngrams (sequences of consecutive *tokens* -words or keys- of length 1-n).


**Parameters**

.. list-table::
    :widths: 5 5 5 20
    :header-rows: 1

    * - Name
      - Short name
      - Default
      - Description
    * - allLengths
      - all
      - True
      - Whether to include all ngram lengths up to NgramLength or only NgramLength
    * - maxNumTerms
      - max
      - System.Int32[]
      - Maximum number of ngrams to store in the dictionary
    * - ngramLength
      - ngram
      - 1
      - Ngram length
    * - skipLength
      - skips
      - 0
      - Maximum number of tokens to skip when constructing an ngram
    * - weighting
      - 
      - Tf
      - The weighting criteria
