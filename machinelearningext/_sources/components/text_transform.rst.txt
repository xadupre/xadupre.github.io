

.. _l-text-transform:

Text Transform
==============

.. only:: not md

    
    The documentation is generated based on the sources available at
    :epkg:`dotnet/machinelearning` and released under :epkg:`MIT License`.
    
    

.. only:: md

    **Type:** datatransform
    **Aliases:** *TextTransform, Text*
    **Namespace:** Microsoft.ML.Runtime.Data
    **Assembly:** Microsoft.ML.Transforms.dll

.. only:: not md

    **Type:** datatransform
    **Aliases:** *TextTransform, Text*
    **Namespace:** Microsoft.ML.Runtime.Data
    **Assembly:** Microsoft.ML.Transforms.dll
    **Microsoft Documentation:** `Text Transform <https://docs.microsoft.com/dotnet/api/microsoft.ml.runtime.data.text transform>`_

**Description**

A transform that turns a collection of text documents into numerical feature vectors. The feature vectors are normalized counts of (word and/or character) ngrams in a given tokenized text.


**Parameters**

.. list-table::
    :widths: 5 5 5 20
    :header-rows: 1

    * - Name
      - Short name
      - Default
      - Description
    * - charFeatureExtractor
      - charExtractor
      - :ref:`l-ngramextractortransform-ngramextractorarguments`
      - Ngram feature extractor to use for characters (WordBag/WordHashBag).
    * - column
      - col
      - 
      - New column definition (optional form: name:srcs).
    * - dictionary
      - dict
      - 
      - A dictionary of whitelisted terms.
    * - keepDiacritics
      - diac
      - False
      - Whether to keep diacritical marks or remove them.
    * - keepNumbers
      - num
      - True
      - Whether to keep numbers or remove them.
    * - keepPunctuations
      - punc
      - True
      - Whether to keep punctuation marks or remove them.
    * - language
      - lang
      - English
      - Dataset language or 'AutoDetect' to detect language per row.
    * - outputTokens
      - tokens
      - False
      - Whether to output the transformed text tokens as an additional column.
    * - textCase
      - case
      - Lower
      - Casing text using the rules of the invariant culture.
    * - usePredefinedStopWordRemover
      - remover
      - False
      - Use stop remover or not.
    * - vectorNormalizer
      - norm
      - L2
      - Normalize vectors (rows) individually by rescaling them to unit norm.
    * - wordFeatureExtractor
      - wordExtractor
      - :ref:`l-ngramextractortransform-ngramextractorarguments`
      - Ngram feature extractor to use for words (WordBag/WordHashBag).
