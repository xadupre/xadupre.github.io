.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_dl_keras.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_plot_dl_keras.py:


.. _l-example-backend-api-tensorflow:

ONNX Runtime for Keras
======================

The following demonstrates how to compute the predictions
of a pretrained deep learning model obtained from 
`keras <https://keras.io/>`_
with *onnxruntime*. The conversion requires
`keras <https://keras.io/>`_,
`tensorflow <https://www.tensorflow.org/>`_,
`keras-onnx <https://github.com/onnx/keras-onnx/>`_,
`onnxmltools <https://pypi.org/project/onnxmltools/>`_
but then only *onnxruntime* is required
to compute the predictions.


.. code-block:: default

    import os
    if not os.path.exists('dense121.onnx'):
        from keras.applications.densenet import DenseNet121
        model = DenseNet121(include_top=True, weights='imagenet')

        from keras2onnx import convert_keras
        onx = convert_keras(model, 'dense121.onnx')
        onx.ir_version = 6
        with open("dense121.onnx", "wb") as f:
            f.write(onx.SerializeToString())



.. rst-class:: sphx-glr-script-out


.. code-block:: pytb

    Traceback (most recent call last):
      File "C:\xadupre\microsoft_xadupre\onnxruntime\docs\python\examples\plot_dl_keras.py", line 25, in <module>
        model = DenseNet121(include_top=True, weights='imagenet')
      File "C:\Python372_x64\lib\site-packages\keras\applications\__init__.py", line 20, in wrapper
        return base_fun(*args, **kwargs)
      File "C:\Python372_x64\lib\site-packages\keras\applications\densenet.py", line 11, in DenseNet121
        return densenet.DenseNet121(*args, **kwargs)
      File "C:\Python372_x64\lib\site-packages\keras_applications\densenet.py", line 311, in DenseNet121
        **kwargs)
      File "C:\Python372_x64\lib\site-packages\keras_applications\densenet.py", line 207, in DenseNet
        x = layers.ZeroPadding2D(padding=((3, 3), (3, 3)))(img_input)
      File "C:\Python372_x64\lib\site-packages\keras\backend\tensorflow_backend.py", line 75, in symbolic_fn_wrapper
        return func(*args, **kwargs)
      File "C:\Python372_x64\lib\site-packages\keras\engine\base_layer.py", line 446, in __call__
        self.assert_input_compatibility(inputs)
      File "C:\Python372_x64\lib\site-packages\keras\engine\base_layer.py", line 310, in assert_input_compatibility
        K.is_keras_tensor(x)
      File "C:\Python372_x64\lib\site-packages\keras\backend\tensorflow_backend.py", line 695, in is_keras_tensor
        if not is_tensor(x):
      File "C:\Python372_x64\lib\site-packages\keras\backend\tensorflow_backend.py", line 703, in is_tensor
        return isinstance(x, tf_ops._TensorLike) or tf_ops.is_dense_tensor_like(x)
    AttributeError: module 'tensorflow.python.framework.ops' has no attribute '_TensorLike'




Let's load an image (source: wikipedia).


.. code-block:: default


    from keras.preprocessing.image import array_to_img, img_to_array, load_img
    img = load_img('Sannosawa1.jpg')
    ximg = img_to_array(img)

    import matplotlib.pyplot as plt
    plt.imshow(ximg / 255)
    plt.axis('off')


Let's load the model with onnxruntime.


.. code-block:: default

    import onnxruntime as rt
    from onnxruntime.capi.onnxruntime_pybind11_state import InvalidGraph

    try:
        sess = rt.InferenceSession('dense121.onnx')
        ok = True
    except (InvalidGraph, TypeError, RuntimeError) as e:
        # Probably a mismatch between onnxruntime and onnx version.
        print(e)
        ok = False

    if ok:
        print("The model expects input shape:", sess.get_inputs()[0].shape)
        print("image shape:", ximg.shape)


Let's resize the image.


.. code-block:: default


    if ok:
        from skimage.transform import resize
        import numpy

        ximg224 = resize(ximg / 255, (224, 224, 3), anti_aliasing=True)
        ximg = ximg224[numpy.newaxis, :, :, :]
        ximg = ximg.astype(numpy.float32)

        print("new shape:", ximg.shape)


Let's compute the output.


.. code-block:: default


    if ok:
        input_name = sess.get_inputs()[0].name
        res = sess.run(None, {input_name: ximg})
        prob = res[0]
        print(prob.ravel()[:10])  # Too big to be displayed.



Let's get more comprehensive results.


.. code-block:: default


    if ok:
        from keras.applications.densenet import decode_predictions
        decoded = decode_predictions(prob)

        import pandas
        df = pandas.DataFrame(decoded[0], columns=["class_id", "name", "P"])
        print(df)




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  8.212 seconds)


.. _sphx_glr_download_auto_examples_plot_dl_keras.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_dl_keras.py <plot_dl_keras.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_dl_keras.ipynb <plot_dl_keras.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
